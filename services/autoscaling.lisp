;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/autoscaling
  (:use)
  (:nicknames #:aws/autoscaling)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/autoscaling)

(common-lisp:progn
 (common-lisp:deftype activities () '(trivial-types:proper-list activity))
 (common-lisp:defun |make-activities|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list activity))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (activities-type (:copier common-lisp:nil))
   (activities
    (common-lisp:error
     #A((23) common-lisp:base-char . ":activities is required"))
    :type (common-lisp:or activities common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'activities-type 'make-activities-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape activities-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Activities"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activities)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (activity (:copier common-lisp:nil))
   (activity-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":activity-id is required"))
    :type (common-lisp:or xml-string common-lisp:null))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or xml-string-max-len255 common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (cause
    (common-lisp:error #A((18) common-lisp:base-char . ":cause is required"))
    :type (common-lisp:or xml-string-max-len1023 common-lisp:null))
   (start-time
    (common-lisp:error
     #A((23) common-lisp:base-char . ":start-time is required"))
    :type (common-lisp:or timestamp-type common-lisp:null))
   (end-time common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (status-code
    (common-lisp:error
     #A((24) common-lisp:base-char . ":status-code is required"))
    :type (common-lisp:or scaling-activity-status-code common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (progress common-lisp:nil :type (common-lisp:or progress common-lisp:null))
   (details common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'activity 'make-activity))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape activity))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ActivityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-id)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause)))
    (aws-sdk/generator/shape::to-query-params "StartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "EndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time)))
    (aws-sdk/generator/shape::to-query-params "StatusCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-code)))
    (aws-sdk/generator/shape::to-query-params "StatusMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-message)))
    (aws-sdk/generator/shape::to-query-params "Progress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'progress)))
    (aws-sdk/generator/shape::to-query-params "Details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details))))))
(common-lisp:progn
 (common-lisp:deftype activity-ids () '(trivial-types:proper-list xml-string))
 (common-lisp:defun |make-activity-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list xml-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (activity-type (:copier common-lisp:nil))
   (activity common-lisp:nil :type (common-lisp:or activity common-lisp:null)))
 (common-lisp:export (common-lisp:list 'activity-type 'make-activity-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape activity-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Activity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity))))))
(common-lisp:progn
 (common-lisp:defstruct (adjustment-type (:copier common-lisp:nil))
   (adjustment-type common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null)))
 (common-lisp:export (common-lisp:list 'adjustment-type 'make-adjustment-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape adjustment-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AdjustmentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'adjustment-type))))))
(common-lisp:progn
 (common-lisp:deftype adjustment-types ()
   '(trivial-types:proper-list adjustment-type))
 (common-lisp:defun |make-adjustment-types|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list adjustment-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (alarm (:copier common-lisp:nil))
   (alarm-name common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (alarm-arn common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'alarm 'make-alarm))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape alarm))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AlarmName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alarm-name)))
    (aws-sdk/generator/shape::to-query-params "AlarmARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alarm-arn))))))
(common-lisp:progn
 (common-lisp:deftype alarms () '(trivial-types:proper-list alarm))
 (common-lisp:defun |make-alarms|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list alarm))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (already-exists-fault (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'already-exists-fault 'make-already-exists-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape already-exists-fault))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype ascii-string-max-len255 () 'common-lisp:string)
(common-lisp:deftype associate-public-ip-address () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (attach-instances-query (:copier common-lisp:nil))
   (instance-ids common-lisp:nil :type
    (common-lisp:or instance-ids common-lisp:null))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attach-instances-query 'make-attach-instances-query))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attach-instances-query))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-ids)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (attach-load-balancer-target-groups-result-type
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'attach-load-balancer-target-groups-result-type
                    'make-attach-load-balancer-target-groups-result-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attach-load-balancer-target-groups-result-type))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (attach-load-balancer-target-groups-type (:copier common-lisp:nil))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (target-group-arns
    (common-lisp:error
     #A((30) common-lisp:base-char . ":target-group-arns is required"))
    :type (common-lisp:or target-group-arns common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attach-load-balancer-target-groups-type
                    'make-attach-load-balancer-target-groups-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attach-load-balancer-target-groups-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "TargetGroupARNs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-group-arns))))))
(common-lisp:progn
 (common-lisp:defstruct
     (attach-load-balancers-result-type (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'attach-load-balancers-result-type
                    'make-attach-load-balancers-result-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attach-load-balancers-result-type))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (attach-load-balancers-type (:copier common-lisp:nil))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (load-balancer-names
    (common-lisp:error
     #A((32) common-lisp:base-char . ":load-balancer-names is required"))
    :type (common-lisp:or load-balancer-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attach-load-balancers-type
                    'make-attach-load-balancers-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attach-load-balancers-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "LoadBalancerNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-names))))))
(common-lisp:progn
 (common-lisp:defstruct (auto-scaling-group (:copier common-lisp:nil))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or xml-string-max-len255 common-lisp:null))
   (auto-scaling-group-arn common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (launch-configuration-name common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (min-size
    (common-lisp:error
     #A((21) common-lisp:base-char . ":min-size is required"))
    :type (common-lisp:or auto-scaling-group-min-size common-lisp:null))
   (max-size
    (common-lisp:error
     #A((21) common-lisp:base-char . ":max-size is required"))
    :type (common-lisp:or auto-scaling-group-max-size common-lisp:null))
   (desired-capacity
    (common-lisp:error
     #A((29) common-lisp:base-char . ":desired-capacity is required"))
    :type
    (common-lisp:or auto-scaling-group-desired-capacity common-lisp:null))
   (default-cooldown
    (common-lisp:error
     #A((29) common-lisp:base-char . ":default-cooldown is required"))
    :type (common-lisp:or cooldown common-lisp:null))
   (availability-zones
    (common-lisp:error
     #A((31) common-lisp:base-char . ":availability-zones is required"))
    :type (common-lisp:or availability-zones common-lisp:null))
   (load-balancer-names common-lisp:nil :type
    (common-lisp:or load-balancer-names common-lisp:null))
   (target-group-arns common-lisp:nil :type
    (common-lisp:or target-group-arns common-lisp:null))
   (health-check-type
    (common-lisp:error
     #A((30) common-lisp:base-char . ":health-check-type is required"))
    :type (common-lisp:or xml-string-max-len32 common-lisp:null))
   (health-check-grace-period common-lisp:nil :type
    (common-lisp:or health-check-grace-period common-lisp:null))
   (instances common-lisp:nil :type
    (common-lisp:or instances common-lisp:null))
   (created-time
    (common-lisp:error
     #A((25) common-lisp:base-char . ":created-time is required"))
    :type (common-lisp:or timestamp-type common-lisp:null))
   (suspended-processes common-lisp:nil :type
    (common-lisp:or suspended-processes common-lisp:null))
   (placement-group common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (vpczone-identifier common-lisp:nil :type
    (common-lisp:or xml-string-max-len2047 common-lisp:null))
   (enabled-metrics common-lisp:nil :type
    (common-lisp:or enabled-metrics common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (tags common-lisp:nil :type
    (common-lisp:or tag-description-list common-lisp:null))
   (termination-policies common-lisp:nil :type
    (common-lisp:or termination-policies common-lisp:null))
   (new-instances-protected-from-scale-in common-lisp:nil :type
    (common-lisp:or instance-protected common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-group 'make-auto-scaling-group))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape auto-scaling-group))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-arn)))
    (aws-sdk/generator/shape::to-query-params "LaunchConfigurationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'launch-configuration-name)))
    (aws-sdk/generator/shape::to-query-params "MinSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'min-size)))
    (aws-sdk/generator/shape::to-query-params "MaxSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-size)))
    (aws-sdk/generator/shape::to-query-params "DesiredCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'desired-capacity)))
    (aws-sdk/generator/shape::to-query-params "DefaultCooldown"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-cooldown)))
    (aws-sdk/generator/shape::to-query-params "AvailabilityZones"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zones)))
    (aws-sdk/generator/shape::to-query-params "LoadBalancerNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-names)))
    (aws-sdk/generator/shape::to-query-params "TargetGroupARNs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-group-arns)))
    (aws-sdk/generator/shape::to-query-params "HealthCheckType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check-type)))
    (aws-sdk/generator/shape::to-query-params "HealthCheckGracePeriod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check-grace-period)))
    (aws-sdk/generator/shape::to-query-params "Instances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances)))
    (aws-sdk/generator/shape::to-query-params "CreatedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-time)))
    (aws-sdk/generator/shape::to-query-params "SuspendedProcesses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'suspended-processes)))
    (aws-sdk/generator/shape::to-query-params "PlacementGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'placement-group)))
    (aws-sdk/generator/shape::to-query-params "VPCZoneIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vpczone-identifier)))
    (aws-sdk/generator/shape::to-query-params "EnabledMetrics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled-metrics)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "TerminationPolicies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'termination-policies)))
    (aws-sdk/generator/shape::to-query-params
     "NewInstancesProtectedFromScaleIn"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'new-instances-protected-from-scale-in))))))
(common-lisp:deftype auto-scaling-group-desired-capacity ()
  'common-lisp:integer)
(common-lisp:deftype auto-scaling-group-max-size () 'common-lisp:integer)
(common-lisp:deftype auto-scaling-group-min-size () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype auto-scaling-group-names ()
   '(trivial-types:proper-list resource-name))
 (common-lisp:defun |make-auto-scaling-group-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (auto-scaling-group-names-type (:copier common-lisp:nil))
   (auto-scaling-group-names common-lisp:nil :type
    (common-lisp:or auto-scaling-group-names common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or max-records common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-group-names-type
                    'make-auto-scaling-group-names-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          auto-scaling-group-names-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-names)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxRecords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-records))))))
(common-lisp:progn
 (common-lisp:deftype auto-scaling-groups ()
   '(trivial-types:proper-list auto-scaling-group))
 (common-lisp:defun |make-auto-scaling-groups|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list auto-scaling-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (auto-scaling-groups-type (:copier common-lisp:nil))
   (auto-scaling-groups
    (common-lisp:error
     #A((32) common-lisp:base-char . ":auto-scaling-groups is required"))
    :type (common-lisp:or auto-scaling-groups common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-groups-type 'make-auto-scaling-groups-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          auto-scaling-groups-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-groups)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (auto-scaling-instance-details (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or xml-string-max-len19 common-lisp:null))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or xml-string-max-len255 common-lisp:null))
   (availability-zone
    (common-lisp:error
     #A((30) common-lisp:base-char . ":availability-zone is required"))
    :type (common-lisp:or xml-string-max-len255 common-lisp:null))
   (lifecycle-state
    (common-lisp:error
     #A((28) common-lisp:base-char . ":lifecycle-state is required"))
    :type (common-lisp:or xml-string-max-len32 common-lisp:null))
   (health-status
    (common-lisp:error
     #A((26) common-lisp:base-char . ":health-status is required"))
    :type (common-lisp:or xml-string-max-len32 common-lisp:null))
   (launch-configuration-name
    (common-lisp:error
     #A((38) common-lisp:base-char . ":launch-configuration-name is required"))
    :type (common-lisp:or xml-string-max-len255 common-lisp:null))
   (protected-from-scale-in
    (common-lisp:error
     #A((36) common-lisp:base-char . ":protected-from-scale-in is required"))
    :type (common-lisp:or instance-protected common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-instance-details
                    'make-auto-scaling-instance-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          auto-scaling-instance-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "AvailabilityZone"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zone)))
    (aws-sdk/generator/shape::to-query-params "LifecycleState"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifecycle-state)))
    (aws-sdk/generator/shape::to-query-params "HealthStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-status)))
    (aws-sdk/generator/shape::to-query-params "LaunchConfigurationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'launch-configuration-name)))
    (aws-sdk/generator/shape::to-query-params "ProtectedFromScaleIn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'protected-from-scale-in))))))
(common-lisp:progn
 (common-lisp:deftype auto-scaling-instances ()
   '(trivial-types:proper-list auto-scaling-instance-details))
 (common-lisp:defun |make-auto-scaling-instances|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            auto-scaling-instance-details))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (auto-scaling-instances-type (:copier common-lisp:nil))
   (auto-scaling-instances common-lisp:nil :type
    (common-lisp:or auto-scaling-instances common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-instances-type
                    'make-auto-scaling-instances-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          auto-scaling-instances-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingInstances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-instances)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:deftype auto-scaling-notification-types ()
   '(trivial-types:proper-list xml-string-max-len255))
 (common-lisp:defun |make-auto-scaling-notification-types|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list xml-string-max-len255))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype availability-zones ()
   '(trivial-types:proper-list xml-string-max-len255))
 (common-lisp:defun |make-availability-zones|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list xml-string-max-len255))
   aws-sdk/generator/shape::members))
(common-lisp:deftype block-device-ebs-delete-on-termination ()
  'common-lisp:boolean)
(common-lisp:deftype block-device-ebs-encrypted () 'common-lisp:boolean)
(common-lisp:deftype block-device-ebs-iops () 'common-lisp:integer)
(common-lisp:deftype block-device-ebs-volume-size () 'common-lisp:integer)
(common-lisp:deftype block-device-ebs-volume-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (block-device-mapping (:copier common-lisp:nil))
   (virtual-name common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (device-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":device-name is required"))
    :type (common-lisp:or xml-string-max-len255 common-lisp:null))
   (ebs common-lisp:nil :type (common-lisp:or ebs common-lisp:null))
   (no-device common-lisp:nil :type
    (common-lisp:or no-device common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'block-device-mapping 'make-block-device-mapping))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape block-device-mapping))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "VirtualName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'virtual-name)))
    (aws-sdk/generator/shape::to-query-params "DeviceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-name)))
    (aws-sdk/generator/shape::to-query-params "Ebs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebs)))
    (aws-sdk/generator/shape::to-query-params "NoDevice"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'no-device))))))
(common-lisp:progn
 (common-lisp:deftype block-device-mappings ()
   '(trivial-types:proper-list block-device-mapping))
 (common-lisp:defun |make-block-device-mappings|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list block-device-mapping))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype classic-link-vpcsecurity-groups ()
   '(trivial-types:proper-list xml-string-max-len255))
 (common-lisp:defun |make-classic-link-vpcsecurity-groups|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list xml-string-max-len255))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (complete-lifecycle-action-answer (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'complete-lifecycle-action-answer
                    'make-complete-lifecycle-action-answer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          complete-lifecycle-action-answer))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (complete-lifecycle-action-type (:copier common-lisp:nil))
   (lifecycle-hook-name
    (common-lisp:error
     #A((32) common-lisp:base-char . ":lifecycle-hook-name is required"))
    :type (common-lisp:or ascii-string-max-len255 common-lisp:null))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (lifecycle-action-token common-lisp:nil :type
    (common-lisp:or lifecycle-action-token common-lisp:null))
   (lifecycle-action-result
    (common-lisp:error
     #A((36) common-lisp:base-char . ":lifecycle-action-result is required"))
    :type (common-lisp:or lifecycle-action-result common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or xml-string-max-len19 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'complete-lifecycle-action-type
                    'make-complete-lifecycle-action-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          complete-lifecycle-action-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LifecycleHookName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifecycle-hook-name)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "LifecycleActionToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifecycle-action-token)))
    (aws-sdk/generator/shape::to-query-params "LifecycleActionResult"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifecycle-action-result)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id))))))
(common-lisp:deftype cooldown () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (create-auto-scaling-group-type (:copier common-lisp:nil))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or xml-string-max-len255 common-lisp:null))
   (launch-configuration-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or xml-string-max-len19 common-lisp:null))
   (min-size
    (common-lisp:error
     #A((21) common-lisp:base-char . ":min-size is required"))
    :type (common-lisp:or auto-scaling-group-min-size common-lisp:null))
   (max-size
    (common-lisp:error
     #A((21) common-lisp:base-char . ":max-size is required"))
    :type (common-lisp:or auto-scaling-group-max-size common-lisp:null))
   (desired-capacity common-lisp:nil :type
    (common-lisp:or auto-scaling-group-desired-capacity common-lisp:null))
   (default-cooldown common-lisp:nil :type
    (common-lisp:or cooldown common-lisp:null))
   (availability-zones common-lisp:nil :type
    (common-lisp:or availability-zones common-lisp:null))
   (load-balancer-names common-lisp:nil :type
    (common-lisp:or load-balancer-names common-lisp:null))
   (target-group-arns common-lisp:nil :type
    (common-lisp:or target-group-arns common-lisp:null))
   (health-check-type common-lisp:nil :type
    (common-lisp:or xml-string-max-len32 common-lisp:null))
   (health-check-grace-period common-lisp:nil :type
    (common-lisp:or health-check-grace-period common-lisp:null))
   (placement-group common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (vpczone-identifier common-lisp:nil :type
    (common-lisp:or xml-string-max-len2047 common-lisp:null))
   (termination-policies common-lisp:nil :type
    (common-lisp:or termination-policies common-lisp:null))
   (new-instances-protected-from-scale-in common-lisp:nil :type
    (common-lisp:or instance-protected common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-auto-scaling-group-type
                    'make-create-auto-scaling-group-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-auto-scaling-group-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "LaunchConfigurationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'launch-configuration-name)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "MinSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'min-size)))
    (aws-sdk/generator/shape::to-query-params "MaxSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-size)))
    (aws-sdk/generator/shape::to-query-params "DesiredCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'desired-capacity)))
    (aws-sdk/generator/shape::to-query-params "DefaultCooldown"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-cooldown)))
    (aws-sdk/generator/shape::to-query-params "AvailabilityZones"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zones)))
    (aws-sdk/generator/shape::to-query-params "LoadBalancerNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-names)))
    (aws-sdk/generator/shape::to-query-params "TargetGroupARNs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-group-arns)))
    (aws-sdk/generator/shape::to-query-params "HealthCheckType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check-type)))
    (aws-sdk/generator/shape::to-query-params "HealthCheckGracePeriod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check-grace-period)))
    (aws-sdk/generator/shape::to-query-params "PlacementGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'placement-group)))
    (aws-sdk/generator/shape::to-query-params "VPCZoneIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vpczone-identifier)))
    (aws-sdk/generator/shape::to-query-params "TerminationPolicies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'termination-policies)))
    (aws-sdk/generator/shape::to-query-params
     "NewInstancesProtectedFromScaleIn"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'new-instances-protected-from-scale-in)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-launch-configuration-type (:copier common-lisp:nil))
   (launch-configuration-name
    (common-lisp:error
     #A((38) common-lisp:base-char . ":launch-configuration-name is required"))
    :type (common-lisp:or xml-string-max-len255 common-lisp:null))
   (image-id common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (key-name common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (security-groups common-lisp:nil :type
    (common-lisp:or security-groups common-lisp:null))
   (classic-link-vpcid common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (classic-link-vpcsecurity-groups common-lisp:nil :type
    (common-lisp:or classic-link-vpcsecurity-groups common-lisp:null))
   (user-data common-lisp:nil :type
    (common-lisp:or xml-string-user-data common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or xml-string-max-len19 common-lisp:null))
   (instance-type common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (kernel-id common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (ramdisk-id common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (block-device-mappings common-lisp:nil :type
    (common-lisp:or block-device-mappings common-lisp:null))
   (instance-monitoring common-lisp:nil :type
    (common-lisp:or instance-monitoring common-lisp:null))
   (spot-price common-lisp:nil :type
    (common-lisp:or spot-price common-lisp:null))
   (iam-instance-profile common-lisp:nil :type
    (common-lisp:or xml-string-max-len1600 common-lisp:null))
   (ebs-optimized common-lisp:nil :type
    (common-lisp:or ebs-optimized common-lisp:null))
   (associate-public-ip-address common-lisp:nil :type
    (common-lisp:or associate-public-ip-address common-lisp:null))
   (placement-tenancy common-lisp:nil :type
    (common-lisp:or xml-string-max-len64 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-launch-configuration-type
                    'make-create-launch-configuration-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-launch-configuration-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LaunchConfigurationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'launch-configuration-name)))
    (aws-sdk/generator/shape::to-query-params "ImageId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-id)))
    (aws-sdk/generator/shape::to-query-params "KeyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-name)))
    (aws-sdk/generator/shape::to-query-params "SecurityGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-groups)))
    (aws-sdk/generator/shape::to-query-params "ClassicLinkVPCId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'classic-link-vpcid)))
    (aws-sdk/generator/shape::to-query-params "ClassicLinkVPCSecurityGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'classic-link-vpcsecurity-groups)))
    (aws-sdk/generator/shape::to-query-params "UserData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-data)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type)))
    (aws-sdk/generator/shape::to-query-params "KernelId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kernel-id)))
    (aws-sdk/generator/shape::to-query-params "RamdiskId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ramdisk-id)))
    (aws-sdk/generator/shape::to-query-params "BlockDeviceMappings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'block-device-mappings)))
    (aws-sdk/generator/shape::to-query-params "InstanceMonitoring"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-monitoring)))
    (aws-sdk/generator/shape::to-query-params "SpotPrice"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'spot-price)))
    (aws-sdk/generator/shape::to-query-params "IamInstanceProfile"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-instance-profile)))
    (aws-sdk/generator/shape::to-query-params "EbsOptimized"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebs-optimized)))
    (aws-sdk/generator/shape::to-query-params "AssociatePublicIpAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'associate-public-ip-address)))
    (aws-sdk/generator/shape::to-query-params "PlacementTenancy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'placement-tenancy))))))
(common-lisp:progn
 (common-lisp:defstruct (create-or-update-tags-type (:copier common-lisp:nil))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-or-update-tags-type
                    'make-create-or-update-tags-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-or-update-tags-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct
     (customized-metric-specification (:copier common-lisp:nil))
   (metric-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":metric-name is required"))
    :type (common-lisp:or metric-name common-lisp:null))
   (namespace
    (common-lisp:error
     #A((22) common-lisp:base-char . ":namespace is required"))
    :type (common-lisp:or metric-namespace common-lisp:null))
   (dimensions common-lisp:nil :type
    (common-lisp:or metric-dimensions common-lisp:null))
   (statistic
    (common-lisp:error
     #A((22) common-lisp:base-char . ":statistic is required"))
    :type (common-lisp:or metric-statistic common-lisp:null))
   (unit common-lisp:nil :type (common-lisp:or metric-unit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'customized-metric-specification
                    'make-customized-metric-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          customized-metric-specification))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MetricName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-name)))
    (aws-sdk/generator/shape::to-query-params "Namespace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'namespace)))
    (aws-sdk/generator/shape::to-query-params "Dimensions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dimensions)))
    (aws-sdk/generator/shape::to-query-params "Statistic"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'statistic)))
    (aws-sdk/generator/shape::to-query-params "Unit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-auto-scaling-group-type (:copier common-lisp:nil))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (force-delete common-lisp:nil :type
    (common-lisp:or force-delete common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-auto-scaling-group-type
                    'make-delete-auto-scaling-group-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-auto-scaling-group-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "ForceDelete"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'force-delete))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-lifecycle-hook-answer (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-lifecycle-hook-answer
                    'make-delete-lifecycle-hook-answer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-lifecycle-hook-answer))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-lifecycle-hook-type (:copier common-lisp:nil))
   (lifecycle-hook-name
    (common-lisp:error
     #A((32) common-lisp:base-char . ":lifecycle-hook-name is required"))
    :type (common-lisp:or ascii-string-max-len255 common-lisp:null))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-lifecycle-hook-type
                    'make-delete-lifecycle-hook-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-lifecycle-hook-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LifecycleHookName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifecycle-hook-name)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-notification-configuration-type (:copier common-lisp:nil))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (topic-arn
    (common-lisp:error
     #A((22) common-lisp:base-char . ":topic-arn is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-notification-configuration-type
                    'make-delete-notification-configuration-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-notification-configuration-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "TopicARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'topic-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-policy-type (:copier common-lisp:nil))
   (auto-scaling-group-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (policy-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":policy-name is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-policy-type 'make-delete-policy-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-policy-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "PolicyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-scheduled-action-type (:copier common-lisp:nil))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (scheduled-action-name
    (common-lisp:error
     #A((34) common-lisp:base-char . ":scheduled-action-name is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-scheduled-action-type
                    'make-delete-scheduled-action-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-scheduled-action-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "ScheduledActionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheduled-action-name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-tags-type (:copier common-lisp:nil))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-tags-type 'make-delete-tags-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-tags-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-account-limits-answer (:copier common-lisp:nil))
   (max-number-of-auto-scaling-groups common-lisp:nil :type
    (common-lisp:or max-number-of-auto-scaling-groups common-lisp:null))
   (max-number-of-launch-configurations common-lisp:nil :type
    (common-lisp:or max-number-of-launch-configurations common-lisp:null))
   (number-of-auto-scaling-groups common-lisp:nil :type
    (common-lisp:or number-of-auto-scaling-groups common-lisp:null))
   (number-of-launch-configurations common-lisp:nil :type
    (common-lisp:or number-of-launch-configurations common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-account-limits-answer
                    'make-describe-account-limits-answer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-account-limits-answer))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MaxNumberOfAutoScalingGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-number-of-auto-scaling-groups)))
    (aws-sdk/generator/shape::to-query-params "MaxNumberOfLaunchConfigurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-number-of-launch-configurations)))
    (aws-sdk/generator/shape::to-query-params "NumberOfAutoScalingGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'number-of-auto-scaling-groups)))
    (aws-sdk/generator/shape::to-query-params "NumberOfLaunchConfigurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'number-of-launch-configurations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-adjustment-types-answer (:copier common-lisp:nil))
   (adjustment-types common-lisp:nil :type
    (common-lisp:or adjustment-types common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-adjustment-types-answer
                    'make-describe-adjustment-types-answer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-adjustment-types-answer))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AdjustmentTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'adjustment-types))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-auto-scaling-instances-type (:copier common-lisp:nil))
   (instance-ids common-lisp:nil :type
    (common-lisp:or instance-ids common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or max-records common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-auto-scaling-instances-type
                    'make-describe-auto-scaling-instances-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-auto-scaling-instances-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-ids)))
    (aws-sdk/generator/shape::to-query-params "MaxRecords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-records)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-auto-scaling-notification-types-answer
      (:copier common-lisp:nil))
   (auto-scaling-notification-types common-lisp:nil :type
    (common-lisp:or auto-scaling-notification-types common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-auto-scaling-notification-types-answer
                    'make-describe-auto-scaling-notification-types-answer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-auto-scaling-notification-types-answer))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingNotificationTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-notification-types))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-lifecycle-hook-types-answer (:copier common-lisp:nil))
   (lifecycle-hook-types common-lisp:nil :type
    (common-lisp:or auto-scaling-notification-types common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-lifecycle-hook-types-answer
                    'make-describe-lifecycle-hook-types-answer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-lifecycle-hook-types-answer))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LifecycleHookTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifecycle-hook-types))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-lifecycle-hooks-answer (:copier common-lisp:nil))
   (lifecycle-hooks common-lisp:nil :type
    (common-lisp:or lifecycle-hooks common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-lifecycle-hooks-answer
                    'make-describe-lifecycle-hooks-answer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-lifecycle-hooks-answer))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LifecycleHooks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifecycle-hooks))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-lifecycle-hooks-type (:copier common-lisp:nil))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (lifecycle-hook-names common-lisp:nil :type
    (common-lisp:or lifecycle-hook-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-lifecycle-hooks-type
                    'make-describe-lifecycle-hooks-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-lifecycle-hooks-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "LifecycleHookNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifecycle-hook-names))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-load-balancer-target-groups-request (:copier common-lisp:nil))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or max-records common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-load-balancer-target-groups-request
                    'make-describe-load-balancer-target-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-load-balancer-target-groups-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxRecords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-records))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-load-balancer-target-groups-response (:copier common-lisp:nil))
   (load-balancer-target-groups common-lisp:nil :type
    (common-lisp:or load-balancer-target-group-states common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-load-balancer-target-groups-response
                    'make-describe-load-balancer-target-groups-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-load-balancer-target-groups-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerTargetGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-target-groups)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-load-balancers-request (:copier common-lisp:nil))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or max-records common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-load-balancers-request
                    'make-describe-load-balancers-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-load-balancers-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxRecords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-records))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-load-balancers-response (:copier common-lisp:nil))
   (load-balancers common-lisp:nil :type
    (common-lisp:or load-balancer-states common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-load-balancers-response
                    'make-describe-load-balancers-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-load-balancers-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancers)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-metric-collection-types-answer (:copier common-lisp:nil))
   (metrics common-lisp:nil :type
    (common-lisp:or metric-collection-types common-lisp:null))
   (granularities common-lisp:nil :type
    (common-lisp:or metric-granularity-types common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-metric-collection-types-answer
                    'make-describe-metric-collection-types-answer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-metric-collection-types-answer))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Metrics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metrics)))
    (aws-sdk/generator/shape::to-query-params "Granularities"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'granularities))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-notification-configurations-answer (:copier common-lisp:nil))
   (notification-configurations
    (common-lisp:error
     #A((40) common-lisp:base-char
        . ":notification-configurations is required"))
    :type (common-lisp:or notification-configurations common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-notification-configurations-answer
                    'make-describe-notification-configurations-answer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-notification-configurations-answer))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NotificationConfigurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-configurations)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-notification-configurations-type (:copier common-lisp:nil))
   (auto-scaling-group-names common-lisp:nil :type
    (common-lisp:or auto-scaling-group-names common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or max-records common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-notification-configurations-type
                    'make-describe-notification-configurations-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-notification-configurations-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-names)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxRecords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-records))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-policies-type (:copier common-lisp:nil))
   (auto-scaling-group-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (policy-names common-lisp:nil :type
    (common-lisp:or policy-names common-lisp:null))
   (policy-types common-lisp:nil :type
    (common-lisp:or policy-types common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or max-records common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-policies-type 'make-describe-policies-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-policies-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "PolicyNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-names)))
    (aws-sdk/generator/shape::to-query-params "PolicyTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-types)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxRecords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-records))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-scaling-activities-type (:copier common-lisp:nil))
   (activity-ids common-lisp:nil :type
    (common-lisp:or activity-ids common-lisp:null))
   (auto-scaling-group-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or max-records common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-scaling-activities-type
                    'make-describe-scaling-activities-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-scaling-activities-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ActivityIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-ids)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "MaxRecords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-records)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-scheduled-actions-type (:copier common-lisp:nil))
   (auto-scaling-group-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (scheduled-action-names common-lisp:nil :type
    (common-lisp:or scheduled-action-names common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (end-time common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or max-records common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-scheduled-actions-type
                    'make-describe-scheduled-actions-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-scheduled-actions-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "ScheduledActionNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheduled-action-names)))
    (aws-sdk/generator/shape::to-query-params "StartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "EndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxRecords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-records))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-tags-type (:copier common-lisp:nil))
   (filters common-lisp:nil :type (common-lisp:or filters common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or max-records common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tags-type 'make-describe-tags-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape describe-tags-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxRecords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-records))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-termination-policy-types-answer (:copier common-lisp:nil))
   (termination-policy-types common-lisp:nil :type
    (common-lisp:or termination-policies common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-termination-policy-types-answer
                    'make-describe-termination-policy-types-answer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-termination-policy-types-answer))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TerminationPolicyTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'termination-policy-types))))))
(common-lisp:progn
 (common-lisp:defstruct (detach-instances-answer (:copier common-lisp:nil))
   (activities common-lisp:nil :type
    (common-lisp:or activities common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detach-instances-answer 'make-detach-instances-answer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          detach-instances-answer))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Activities"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activities))))))
(common-lisp:progn
 (common-lisp:defstruct (detach-instances-query (:copier common-lisp:nil))
   (instance-ids common-lisp:nil :type
    (common-lisp:or instance-ids common-lisp:null))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (should-decrement-desired-capacity
    (common-lisp:error
     #A((46) common-lisp:base-char
        . ":should-decrement-desired-capacity is required"))
    :type (common-lisp:or should-decrement-desired-capacity common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detach-instances-query 'make-detach-instances-query))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          detach-instances-query))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-ids)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "ShouldDecrementDesiredCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'should-decrement-desired-capacity))))))
(common-lisp:progn
 (common-lisp:defstruct
     (detach-load-balancer-target-groups-result-type
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'detach-load-balancer-target-groups-result-type
                    'make-detach-load-balancer-target-groups-result-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          detach-load-balancer-target-groups-result-type))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (detach-load-balancer-target-groups-type (:copier common-lisp:nil))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (target-group-arns
    (common-lisp:error
     #A((30) common-lisp:base-char . ":target-group-arns is required"))
    :type (common-lisp:or target-group-arns common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detach-load-balancer-target-groups-type
                    'make-detach-load-balancer-target-groups-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          detach-load-balancer-target-groups-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "TargetGroupARNs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-group-arns))))))
(common-lisp:progn
 (common-lisp:defstruct
     (detach-load-balancers-result-type (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'detach-load-balancers-result-type
                    'make-detach-load-balancers-result-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          detach-load-balancers-result-type))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (detach-load-balancers-type (:copier common-lisp:nil))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (load-balancer-names
    (common-lisp:error
     #A((32) common-lisp:base-char . ":load-balancer-names is required"))
    :type (common-lisp:or load-balancer-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detach-load-balancers-type
                    'make-detach-load-balancers-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          detach-load-balancers-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "LoadBalancerNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-names))))))
(common-lisp:progn
 (common-lisp:defstruct
     (disable-metrics-collection-query (:copier common-lisp:nil))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (metrics common-lisp:nil :type (common-lisp:or metrics common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disable-metrics-collection-query
                    'make-disable-metrics-collection-query))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disable-metrics-collection-query))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "Metrics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metrics))))))
(common-lisp:deftype disable-scale-in () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (ebs (:copier common-lisp:nil))
   (snapshot-id common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (volume-size common-lisp:nil :type
    (common-lisp:or block-device-ebs-volume-size common-lisp:null))
   (volume-type common-lisp:nil :type
    (common-lisp:or block-device-ebs-volume-type common-lisp:null))
   (delete-on-termination common-lisp:nil :type
    (common-lisp:or block-device-ebs-delete-on-termination common-lisp:null))
   (iops common-lisp:nil :type
    (common-lisp:or block-device-ebs-iops common-lisp:null))
   (encrypted common-lisp:nil :type
    (common-lisp:or block-device-ebs-encrypted common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ebs 'make-ebs))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape ebs))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SnapshotId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snapshot-id)))
    (aws-sdk/generator/shape::to-query-params "VolumeSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-size)))
    (aws-sdk/generator/shape::to-query-params "VolumeType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-type)))
    (aws-sdk/generator/shape::to-query-params "DeleteOnTermination"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete-on-termination)))
    (aws-sdk/generator/shape::to-query-params "Iops"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iops)))
    (aws-sdk/generator/shape::to-query-params "Encrypted"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encrypted))))))
(common-lisp:deftype ebs-optimized () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (enable-metrics-collection-query (:copier common-lisp:nil))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (metrics common-lisp:nil :type (common-lisp:or metrics common-lisp:null))
   (granularity
    (common-lisp:error
     #A((24) common-lisp:base-char . ":granularity is required"))
    :type (common-lisp:or xml-string-max-len255 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enable-metrics-collection-query
                    'make-enable-metrics-collection-query))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          enable-metrics-collection-query))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "Metrics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metrics)))
    (aws-sdk/generator/shape::to-query-params "Granularity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'granularity))))))
(common-lisp:progn
 (common-lisp:defstruct (enabled-metric (:copier common-lisp:nil))
   (metric common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (granularity common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null)))
 (common-lisp:export (common-lisp:list 'enabled-metric 'make-enabled-metric))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape enabled-metric))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Metric"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric)))
    (aws-sdk/generator/shape::to-query-params "Granularity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'granularity))))))
(common-lisp:progn
 (common-lisp:deftype enabled-metrics ()
   '(trivial-types:proper-list enabled-metric))
 (common-lisp:defun |make-enabled-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list enabled-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (enter-standby-answer (:copier common-lisp:nil))
   (activities common-lisp:nil :type
    (common-lisp:or activities common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enter-standby-answer 'make-enter-standby-answer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape enter-standby-answer))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Activities"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activities))))))
(common-lisp:progn
 (common-lisp:defstruct (enter-standby-query (:copier common-lisp:nil))
   (instance-ids common-lisp:nil :type
    (common-lisp:or instance-ids common-lisp:null))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (should-decrement-desired-capacity
    (common-lisp:error
     #A((46) common-lisp:base-char
        . ":should-decrement-desired-capacity is required"))
    :type (common-lisp:or should-decrement-desired-capacity common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enter-standby-query 'make-enter-standby-query))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape enter-standby-query))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-ids)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "ShouldDecrementDesiredCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'should-decrement-desired-capacity))))))
(common-lisp:deftype estimated-instance-warmup () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (execute-policy-type (:copier common-lisp:nil))
   (auto-scaling-group-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (policy-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":policy-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (honor-cooldown common-lisp:nil :type
    (common-lisp:or honor-cooldown common-lisp:null))
   (metric-value common-lisp:nil :type
    (common-lisp:or metric-scale common-lisp:null))
   (breach-threshold common-lisp:nil :type
    (common-lisp:or metric-scale common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'execute-policy-type 'make-execute-policy-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape execute-policy-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "PolicyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-name)))
    (aws-sdk/generator/shape::to-query-params "HonorCooldown"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'honor-cooldown)))
    (aws-sdk/generator/shape::to-query-params "MetricValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-value)))
    (aws-sdk/generator/shape::to-query-params "BreachThreshold"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'breach-threshold))))))
(common-lisp:progn
 (common-lisp:defstruct (exit-standby-answer (:copier common-lisp:nil))
   (activities common-lisp:nil :type
    (common-lisp:or activities common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'exit-standby-answer 'make-exit-standby-answer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape exit-standby-answer))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Activities"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activities))))))
(common-lisp:progn
 (common-lisp:defstruct (exit-standby-query (:copier common-lisp:nil))
   (instance-ids common-lisp:nil :type
    (common-lisp:or instance-ids common-lisp:null))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'exit-standby-query 'make-exit-standby-query))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape exit-standby-query))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-ids)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name))))))
(common-lisp:progn
 (common-lisp:defstruct (filter (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or xml-string common-lisp:null))
   (values common-lisp:nil :type (common-lisp:or values common-lisp:null)))
 (common-lisp:export (common-lisp:list 'filter 'make-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values))))))
(common-lisp:progn
 (common-lisp:deftype filters () '(trivial-types:proper-list filter))
 (common-lisp:defun |make-filters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype force-delete () 'common-lisp:boolean)
(common-lisp:deftype global-timeout () 'common-lisp:integer)
(common-lisp:deftype health-check-grace-period () 'common-lisp:integer)
(common-lisp:deftype heartbeat-timeout () 'common-lisp:integer)
(common-lisp:deftype honor-cooldown () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (instance (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or xml-string-max-len19 common-lisp:null))
   (availability-zone
    (common-lisp:error
     #A((30) common-lisp:base-char . ":availability-zone is required"))
    :type (common-lisp:or xml-string-max-len255 common-lisp:null))
   (lifecycle-state
    (common-lisp:error
     #A((28) common-lisp:base-char . ":lifecycle-state is required"))
    :type (common-lisp:or lifecycle-state common-lisp:null))
   (health-status
    (common-lisp:error
     #A((26) common-lisp:base-char . ":health-status is required"))
    :type (common-lisp:or xml-string-max-len32 common-lisp:null))
   (launch-configuration-name
    (common-lisp:error
     #A((38) common-lisp:base-char . ":launch-configuration-name is required"))
    :type (common-lisp:or xml-string-max-len255 common-lisp:null))
   (protected-from-scale-in
    (common-lisp:error
     #A((36) common-lisp:base-char . ":protected-from-scale-in is required"))
    :type (common-lisp:or instance-protected common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance 'make-instance))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "AvailabilityZone"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zone)))
    (aws-sdk/generator/shape::to-query-params "LifecycleState"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifecycle-state)))
    (aws-sdk/generator/shape::to-query-params "HealthStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-status)))
    (aws-sdk/generator/shape::to-query-params "LaunchConfigurationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'launch-configuration-name)))
    (aws-sdk/generator/shape::to-query-params "ProtectedFromScaleIn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'protected-from-scale-in))))))
(common-lisp:progn
 (common-lisp:deftype instance-ids ()
   '(trivial-types:proper-list xml-string-max-len19))
 (common-lisp:defun |make-instance-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list xml-string-max-len19))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instance-monitoring (:copier common-lisp:nil))
   (enabled common-lisp:nil :type
    (common-lisp:or monitoring-enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-monitoring 'make-instance-monitoring))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance-monitoring))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled))))))
(common-lisp:deftype instance-protected () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:deftype instances () '(trivial-types:proper-list instance))
 (common-lisp:defun |make-instances|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (invalid-next-token (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-next-token 'make-invalid-next-token))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-next-token))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (launch-configuration (:copier common-lisp:nil))
   (launch-configuration-name
    (common-lisp:error
     #A((38) common-lisp:base-char . ":launch-configuration-name is required"))
    :type (common-lisp:or xml-string-max-len255 common-lisp:null))
   (launch-configuration-arn common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (image-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":image-id is required"))
    :type (common-lisp:or xml-string-max-len255 common-lisp:null))
   (key-name common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (security-groups common-lisp:nil :type
    (common-lisp:or security-groups common-lisp:null))
   (classic-link-vpcid common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (classic-link-vpcsecurity-groups common-lisp:nil :type
    (common-lisp:or classic-link-vpcsecurity-groups common-lisp:null))
   (user-data common-lisp:nil :type
    (common-lisp:or xml-string-user-data common-lisp:null))
   (instance-type
    (common-lisp:error
     #A((26) common-lisp:base-char . ":instance-type is required"))
    :type (common-lisp:or xml-string-max-len255 common-lisp:null))
   (kernel-id common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (ramdisk-id common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (block-device-mappings common-lisp:nil :type
    (common-lisp:or block-device-mappings common-lisp:null))
   (instance-monitoring common-lisp:nil :type
    (common-lisp:or instance-monitoring common-lisp:null))
   (spot-price common-lisp:nil :type
    (common-lisp:or spot-price common-lisp:null))
   (iam-instance-profile common-lisp:nil :type
    (common-lisp:or xml-string-max-len1600 common-lisp:null))
   (created-time
    (common-lisp:error
     #A((25) common-lisp:base-char . ":created-time is required"))
    :type (common-lisp:or timestamp-type common-lisp:null))
   (ebs-optimized common-lisp:nil :type
    (common-lisp:or ebs-optimized common-lisp:null))
   (associate-public-ip-address common-lisp:nil :type
    (common-lisp:or associate-public-ip-address common-lisp:null))
   (placement-tenancy common-lisp:nil :type
    (common-lisp:or xml-string-max-len64 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'launch-configuration 'make-launch-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape launch-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LaunchConfigurationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'launch-configuration-name)))
    (aws-sdk/generator/shape::to-query-params "LaunchConfigurationARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'launch-configuration-arn)))
    (aws-sdk/generator/shape::to-query-params "ImageId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-id)))
    (aws-sdk/generator/shape::to-query-params "KeyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-name)))
    (aws-sdk/generator/shape::to-query-params "SecurityGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-groups)))
    (aws-sdk/generator/shape::to-query-params "ClassicLinkVPCId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'classic-link-vpcid)))
    (aws-sdk/generator/shape::to-query-params "ClassicLinkVPCSecurityGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'classic-link-vpcsecurity-groups)))
    (aws-sdk/generator/shape::to-query-params "UserData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-data)))
    (aws-sdk/generator/shape::to-query-params "InstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type)))
    (aws-sdk/generator/shape::to-query-params "KernelId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kernel-id)))
    (aws-sdk/generator/shape::to-query-params "RamdiskId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ramdisk-id)))
    (aws-sdk/generator/shape::to-query-params "BlockDeviceMappings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'block-device-mappings)))
    (aws-sdk/generator/shape::to-query-params "InstanceMonitoring"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-monitoring)))
    (aws-sdk/generator/shape::to-query-params "SpotPrice"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'spot-price)))
    (aws-sdk/generator/shape::to-query-params "IamInstanceProfile"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-instance-profile)))
    (aws-sdk/generator/shape::to-query-params "CreatedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-time)))
    (aws-sdk/generator/shape::to-query-params "EbsOptimized"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebs-optimized)))
    (aws-sdk/generator/shape::to-query-params "AssociatePublicIpAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'associate-public-ip-address)))
    (aws-sdk/generator/shape::to-query-params "PlacementTenancy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'placement-tenancy))))))
(common-lisp:progn
 (common-lisp:defstruct
     (launch-configuration-name-type (:copier common-lisp:nil))
   (launch-configuration-name
    (common-lisp:error
     #A((38) common-lisp:base-char . ":launch-configuration-name is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'launch-configuration-name-type
                    'make-launch-configuration-name-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          launch-configuration-name-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LaunchConfigurationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'launch-configuration-name))))))
(common-lisp:progn
 (common-lisp:deftype launch-configuration-names ()
   '(trivial-types:proper-list resource-name))
 (common-lisp:defun |make-launch-configuration-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (launch-configuration-names-type (:copier common-lisp:nil))
   (launch-configuration-names common-lisp:nil :type
    (common-lisp:or launch-configuration-names common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (max-records common-lisp:nil :type
    (common-lisp:or max-records common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'launch-configuration-names-type
                    'make-launch-configuration-names-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          launch-configuration-names-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LaunchConfigurationNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'launch-configuration-names)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxRecords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-records))))))
(common-lisp:progn
 (common-lisp:deftype launch-configurations ()
   '(trivial-types:proper-list launch-configuration))
 (common-lisp:defun |make-launch-configurations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list launch-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (launch-configurations-type (:copier common-lisp:nil))
   (launch-configurations
    (common-lisp:error
     #A((34) common-lisp:base-char . ":launch-configurations is required"))
    :type (common-lisp:or launch-configurations common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'launch-configurations-type
                    'make-launch-configurations-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          launch-configurations-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LaunchConfigurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'launch-configurations)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype lifecycle-action-result () 'common-lisp:string)
(common-lisp:deftype lifecycle-action-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (lifecycle-hook (:copier common-lisp:nil))
   (lifecycle-hook-name common-lisp:nil :type
    (common-lisp:or ascii-string-max-len255 common-lisp:null))
   (auto-scaling-group-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (lifecycle-transition common-lisp:nil :type
    (common-lisp:or lifecycle-transition common-lisp:null))
   (notification-target-arn common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (notification-metadata common-lisp:nil :type
    (common-lisp:or xml-string-max-len1023 common-lisp:null))
   (heartbeat-timeout common-lisp:nil :type
    (common-lisp:or heartbeat-timeout common-lisp:null))
   (global-timeout common-lisp:nil :type
    (common-lisp:or global-timeout common-lisp:null))
   (default-result common-lisp:nil :type
    (common-lisp:or lifecycle-action-result common-lisp:null)))
 (common-lisp:export (common-lisp:list 'lifecycle-hook 'make-lifecycle-hook))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape lifecycle-hook))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LifecycleHookName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifecycle-hook-name)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "LifecycleTransition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifecycle-transition)))
    (aws-sdk/generator/shape::to-query-params "NotificationTargetARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-target-arn)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "NotificationMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-metadata)))
    (aws-sdk/generator/shape::to-query-params "HeartbeatTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'heartbeat-timeout)))
    (aws-sdk/generator/shape::to-query-params "GlobalTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'global-timeout)))
    (aws-sdk/generator/shape::to-query-params "DefaultResult"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-result))))))
(common-lisp:progn
 (common-lisp:deftype lifecycle-hook-names ()
   '(trivial-types:proper-list ascii-string-max-len255))
 (common-lisp:defun |make-lifecycle-hook-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ascii-string-max-len255))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype lifecycle-hooks ()
   '(trivial-types:proper-list lifecycle-hook))
 (common-lisp:defun |make-lifecycle-hooks|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list lifecycle-hook))
   aws-sdk/generator/shape::members))
(common-lisp:deftype lifecycle-state () 'common-lisp:string)
(common-lisp:deftype lifecycle-transition () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-fault (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-fault 'make-limit-exceeded-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape limit-exceeded-fault))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype load-balancer-names ()
   '(trivial-types:proper-list xml-string-max-len255))
 (common-lisp:defun |make-load-balancer-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list xml-string-max-len255))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (load-balancer-state (:copier common-lisp:nil))
   (load-balancer-name common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'load-balancer-state 'make-load-balancer-state))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape load-balancer-state))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state))))))
(common-lisp:progn
 (common-lisp:deftype load-balancer-states ()
   '(trivial-types:proper-list load-balancer-state))
 (common-lisp:defun |make-load-balancer-states|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list load-balancer-state))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (load-balancer-target-group-state (:copier common-lisp:nil))
   (load-balancer-target-group-arn common-lisp:nil :type
    (common-lisp:or xml-string-max-len511 common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'load-balancer-target-group-state
                    'make-load-balancer-target-group-state))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          load-balancer-target-group-state))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerTargetGroupARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-target-group-arn)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state))))))
(common-lisp:progn
 (common-lisp:deftype load-balancer-target-group-states ()
   '(trivial-types:proper-list load-balancer-target-group-state))
 (common-lisp:defun |make-load-balancer-target-group-states|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            load-balancer-target-group-state))
   aws-sdk/generator/shape::members))
(common-lisp:deftype max-number-of-auto-scaling-groups () 'common-lisp:integer)
(common-lisp:deftype max-number-of-launch-configurations ()
  'common-lisp:integer)
(common-lisp:deftype max-records () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (metric-collection-type (:copier common-lisp:nil))
   (metric common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'metric-collection-type 'make-metric-collection-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          metric-collection-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Metric"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric))))))
(common-lisp:progn
 (common-lisp:deftype metric-collection-types ()
   '(trivial-types:proper-list metric-collection-type))
 (common-lisp:defun |make-metric-collection-types|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-collection-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (metric-dimension (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or metric-dimension-name common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or metric-dimension-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'metric-dimension 'make-metric-dimension))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape metric-dimension))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype metric-dimension-name () 'common-lisp:string)
(common-lisp:deftype metric-dimension-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype metric-dimensions ()
   '(trivial-types:proper-list metric-dimension))
 (common-lisp:defun |make-metric-dimensions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-dimension))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (metric-granularity-type (:copier common-lisp:nil))
   (granularity common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'metric-granularity-type 'make-metric-granularity-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          metric-granularity-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Granularity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'granularity))))))
(common-lisp:progn
 (common-lisp:deftype metric-granularity-types ()
   '(trivial-types:proper-list metric-granularity-type))
 (common-lisp:defun |make-metric-granularity-types|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-granularity-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype metric-name () 'common-lisp:string)
(common-lisp:deftype metric-namespace () 'common-lisp:string)
(common-lisp:deftype metric-scale () 'common-lisp:double-float)
(common-lisp:deftype metric-statistic () 'common-lisp:string)
(common-lisp:deftype metric-type () 'common-lisp:string)
(common-lisp:deftype metric-unit () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype metrics ()
   '(trivial-types:proper-list xml-string-max-len255))
 (common-lisp:defun |make-metrics|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list xml-string-max-len255))
   aws-sdk/generator/shape::members))
(common-lisp:deftype min-adjustment-magnitude () 'common-lisp:integer)
(common-lisp:deftype min-adjustment-step () 'common-lisp:integer)
(common-lisp:deftype monitoring-enabled () 'common-lisp:boolean)
(common-lisp:deftype no-device () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (notification-configuration (:copier common-lisp:nil))
   (auto-scaling-group-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (topic-arn common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (notification-type common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'notification-configuration
                    'make-notification-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          notification-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "TopicARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'topic-arn)))
    (aws-sdk/generator/shape::to-query-params "NotificationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-type))))))
(common-lisp:progn
 (common-lisp:deftype notification-configurations ()
   '(trivial-types:proper-list notification-configuration))
 (common-lisp:defun |make-notification-configurations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            notification-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype notification-target-resource-name () 'common-lisp:string)
(common-lisp:deftype number-of-auto-scaling-groups () 'common-lisp:integer)
(common-lisp:deftype number-of-launch-configurations () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (policies-type (:copier common-lisp:nil))
   (scaling-policies common-lisp:nil :type
    (common-lisp:or scaling-policies common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'policies-type 'make-policies-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape policies-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ScalingPolicies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scaling-policies)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (policy-arntype (:copier common-lisp:nil))
   (policy-arn common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (alarms common-lisp:nil :type (common-lisp:or alarms common-lisp:null)))
 (common-lisp:export (common-lisp:list 'policy-arntype 'make-policy-arntype))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape policy-arntype))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-arn)))
    (aws-sdk/generator/shape::to-query-params "Alarms"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alarms))))))
(common-lisp:deftype policy-increment () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype policy-names ()
   '(trivial-types:proper-list resource-name))
 (common-lisp:defun |make-policy-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype policy-types ()
   '(trivial-types:proper-list xml-string-max-len64))
 (common-lisp:defun |make-policy-types|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list xml-string-max-len64))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (predefined-metric-specification (:copier common-lisp:nil))
   (predefined-metric-type
    (common-lisp:error
     #A((35) common-lisp:base-char . ":predefined-metric-type is required"))
    :type (common-lisp:or metric-type common-lisp:null))
   (resource-label common-lisp:nil :type
    (common-lisp:or xml-string-max-len1023 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'predefined-metric-specification
                    'make-predefined-metric-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          predefined-metric-specification))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PredefinedMetricType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'predefined-metric-type)))
    (aws-sdk/generator/shape::to-query-params "ResourceLabel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-label))))))
(common-lisp:progn
 (common-lisp:deftype process-names ()
   '(trivial-types:proper-list xml-string-max-len255))
 (common-lisp:defun |make-process-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list xml-string-max-len255))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (process-type (:copier common-lisp:nil))
   (process-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":process-name is required"))
    :type (common-lisp:or xml-string-max-len255 common-lisp:null)))
 (common-lisp:export (common-lisp:list 'process-type 'make-process-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape process-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProcessName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'process-name))))))
(common-lisp:progn
 (common-lisp:deftype processes () '(trivial-types:proper-list process-type))
 (common-lisp:defun |make-processes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list process-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (processes-type (:copier common-lisp:nil))
   (processes common-lisp:nil :type
    (common-lisp:or processes common-lisp:null)))
 (common-lisp:export (common-lisp:list 'processes-type 'make-processes-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape processes-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Processes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'processes))))))
(common-lisp:deftype progress () 'common-lisp:integer)
(common-lisp:deftype propagate-at-launch () 'common-lisp:boolean)
(common-lisp:deftype protected-from-scale-in () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (put-lifecycle-hook-answer (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'put-lifecycle-hook-answer
                    'make-put-lifecycle-hook-answer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-lifecycle-hook-answer))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (put-lifecycle-hook-type (:copier common-lisp:nil))
   (lifecycle-hook-name
    (common-lisp:error
     #A((32) common-lisp:base-char . ":lifecycle-hook-name is required"))
    :type (common-lisp:or ascii-string-max-len255 common-lisp:null))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (lifecycle-transition common-lisp:nil :type
    (common-lisp:or lifecycle-transition common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (notification-target-arn common-lisp:nil :type
    (common-lisp:or notification-target-resource-name common-lisp:null))
   (notification-metadata common-lisp:nil :type
    (common-lisp:or xml-string-max-len1023 common-lisp:null))
   (heartbeat-timeout common-lisp:nil :type
    (common-lisp:or heartbeat-timeout common-lisp:null))
   (default-result common-lisp:nil :type
    (common-lisp:or lifecycle-action-result common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-lifecycle-hook-type 'make-put-lifecycle-hook-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-lifecycle-hook-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LifecycleHookName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifecycle-hook-name)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "LifecycleTransition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifecycle-transition)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "NotificationTargetARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-target-arn)))
    (aws-sdk/generator/shape::to-query-params "NotificationMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-metadata)))
    (aws-sdk/generator/shape::to-query-params "HeartbeatTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'heartbeat-timeout)))
    (aws-sdk/generator/shape::to-query-params "DefaultResult"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-result))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-notification-configuration-type (:copier common-lisp:nil))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (topic-arn
    (common-lisp:error
     #A((22) common-lisp:base-char . ":topic-arn is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (notification-types
    (common-lisp:error
     #A((31) common-lisp:base-char . ":notification-types is required"))
    :type (common-lisp:or auto-scaling-notification-types common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-notification-configuration-type
                    'make-put-notification-configuration-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-notification-configuration-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "TopicARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'topic-arn)))
    (aws-sdk/generator/shape::to-query-params "NotificationTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-types))))))
(common-lisp:progn
 (common-lisp:defstruct (put-scaling-policy-type (:copier common-lisp:nil))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (policy-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":policy-name is required"))
    :type (common-lisp:or xml-string-max-len255 common-lisp:null))
   (policy-type common-lisp:nil :type
    (common-lisp:or xml-string-max-len64 common-lisp:null))
   (adjustment-type common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (min-adjustment-step common-lisp:nil :type
    (common-lisp:or min-adjustment-step common-lisp:null))
   (min-adjustment-magnitude common-lisp:nil :type
    (common-lisp:or min-adjustment-magnitude common-lisp:null))
   (scaling-adjustment common-lisp:nil :type
    (common-lisp:or policy-increment common-lisp:null))
   (cooldown common-lisp:nil :type (common-lisp:or cooldown common-lisp:null))
   (metric-aggregation-type common-lisp:nil :type
    (common-lisp:or xml-string-max-len32 common-lisp:null))
   (step-adjustments common-lisp:nil :type
    (common-lisp:or step-adjustments common-lisp:null))
   (estimated-instance-warmup common-lisp:nil :type
    (common-lisp:or estimated-instance-warmup common-lisp:null))
   (target-tracking-configuration common-lisp:nil :type
    (common-lisp:or target-tracking-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-scaling-policy-type 'make-put-scaling-policy-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-scaling-policy-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "PolicyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-name)))
    (aws-sdk/generator/shape::to-query-params "PolicyType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-type)))
    (aws-sdk/generator/shape::to-query-params "AdjustmentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'adjustment-type)))
    (aws-sdk/generator/shape::to-query-params "MinAdjustmentStep"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'min-adjustment-step)))
    (aws-sdk/generator/shape::to-query-params "MinAdjustmentMagnitude"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'min-adjustment-magnitude)))
    (aws-sdk/generator/shape::to-query-params "ScalingAdjustment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scaling-adjustment)))
    (aws-sdk/generator/shape::to-query-params "Cooldown"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cooldown)))
    (aws-sdk/generator/shape::to-query-params "MetricAggregationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-aggregation-type)))
    (aws-sdk/generator/shape::to-query-params "StepAdjustments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'step-adjustments)))
    (aws-sdk/generator/shape::to-query-params "EstimatedInstanceWarmup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'estimated-instance-warmup)))
    (aws-sdk/generator/shape::to-query-params "TargetTrackingConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-tracking-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-scheduled-update-group-action-type (:copier common-lisp:nil))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (scheduled-action-name
    (common-lisp:error
     #A((34) common-lisp:base-char . ":scheduled-action-name is required"))
    :type (common-lisp:or xml-string-max-len255 common-lisp:null))
   (time common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (end-time common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (recurrence common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (min-size common-lisp:nil :type
    (common-lisp:or auto-scaling-group-min-size common-lisp:null))
   (max-size common-lisp:nil :type
    (common-lisp:or auto-scaling-group-max-size common-lisp:null))
   (desired-capacity common-lisp:nil :type
    (common-lisp:or auto-scaling-group-desired-capacity common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-scheduled-update-group-action-type
                    'make-put-scheduled-update-group-action-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-scheduled-update-group-action-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "ScheduledActionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheduled-action-name)))
    (aws-sdk/generator/shape::to-query-params "Time"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'time)))
    (aws-sdk/generator/shape::to-query-params "StartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "EndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time)))
    (aws-sdk/generator/shape::to-query-params "Recurrence"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'recurrence)))
    (aws-sdk/generator/shape::to-query-params "MinSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'min-size)))
    (aws-sdk/generator/shape::to-query-params "MaxSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-size)))
    (aws-sdk/generator/shape::to-query-params "DesiredCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'desired-capacity))))))
(common-lisp:progn
 (common-lisp:defstruct
     (record-lifecycle-action-heartbeat-answer (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'record-lifecycle-action-heartbeat-answer
                    'make-record-lifecycle-action-heartbeat-answer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          record-lifecycle-action-heartbeat-answer))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (record-lifecycle-action-heartbeat-type (:copier common-lisp:nil))
   (lifecycle-hook-name
    (common-lisp:error
     #A((32) common-lisp:base-char . ":lifecycle-hook-name is required"))
    :type (common-lisp:or ascii-string-max-len255 common-lisp:null))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (lifecycle-action-token common-lisp:nil :type
    (common-lisp:or lifecycle-action-token common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or xml-string-max-len19 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'record-lifecycle-action-heartbeat-type
                    'make-record-lifecycle-action-heartbeat-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          record-lifecycle-action-heartbeat-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LifecycleHookName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifecycle-hook-name)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "LifecycleActionToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifecycle-action-token)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id))))))
(common-lisp:progn
 (common-lisp:defstruct (resource-contention-fault (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-contention-fault
                    'make-resource-contention-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-contention-fault))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (resource-in-use-fault (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-in-use-fault 'make-resource-in-use-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-in-use-fault))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype resource-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (scaling-activity-in-progress-fault (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'scaling-activity-in-progress-fault
                    'make-scaling-activity-in-progress-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          scaling-activity-in-progress-fault))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype scaling-activity-status-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype scaling-policies ()
   '(trivial-types:proper-list scaling-policy))
 (common-lisp:defun |make-scaling-policies|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list scaling-policy))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (scaling-policy (:copier common-lisp:nil))
   (auto-scaling-group-name common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (policy-name common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (policy-arn common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (policy-type common-lisp:nil :type
    (common-lisp:or xml-string-max-len64 common-lisp:null))
   (adjustment-type common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (min-adjustment-step common-lisp:nil :type
    (common-lisp:or min-adjustment-step common-lisp:null))
   (min-adjustment-magnitude common-lisp:nil :type
    (common-lisp:or min-adjustment-magnitude common-lisp:null))
   (scaling-adjustment common-lisp:nil :type
    (common-lisp:or policy-increment common-lisp:null))
   (cooldown common-lisp:nil :type (common-lisp:or cooldown common-lisp:null))
   (step-adjustments common-lisp:nil :type
    (common-lisp:or step-adjustments common-lisp:null))
   (metric-aggregation-type common-lisp:nil :type
    (common-lisp:or xml-string-max-len32 common-lisp:null))
   (estimated-instance-warmup common-lisp:nil :type
    (common-lisp:or estimated-instance-warmup common-lisp:null))
   (alarms common-lisp:nil :type (common-lisp:or alarms common-lisp:null))
   (target-tracking-configuration common-lisp:nil :type
    (common-lisp:or target-tracking-configuration common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scaling-policy 'make-scaling-policy))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape scaling-policy))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "PolicyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-name)))
    (aws-sdk/generator/shape::to-query-params "PolicyARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-arn)))
    (aws-sdk/generator/shape::to-query-params "PolicyType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-type)))
    (aws-sdk/generator/shape::to-query-params "AdjustmentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'adjustment-type)))
    (aws-sdk/generator/shape::to-query-params "MinAdjustmentStep"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'min-adjustment-step)))
    (aws-sdk/generator/shape::to-query-params "MinAdjustmentMagnitude"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'min-adjustment-magnitude)))
    (aws-sdk/generator/shape::to-query-params "ScalingAdjustment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scaling-adjustment)))
    (aws-sdk/generator/shape::to-query-params "Cooldown"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cooldown)))
    (aws-sdk/generator/shape::to-query-params "StepAdjustments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'step-adjustments)))
    (aws-sdk/generator/shape::to-query-params "MetricAggregationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-aggregation-type)))
    (aws-sdk/generator/shape::to-query-params "EstimatedInstanceWarmup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'estimated-instance-warmup)))
    (aws-sdk/generator/shape::to-query-params "Alarms"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alarms)))
    (aws-sdk/generator/shape::to-query-params "TargetTrackingConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-tracking-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct (scaling-process-query (:copier common-lisp:nil))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (scaling-processes common-lisp:nil :type
    (common-lisp:or process-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'scaling-process-query 'make-scaling-process-query))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          scaling-process-query))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "ScalingProcesses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scaling-processes))))))
(common-lisp:progn
 (common-lisp:deftype scheduled-action-names ()
   '(trivial-types:proper-list resource-name))
 (common-lisp:defun |make-scheduled-action-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (scheduled-actions-type (:copier common-lisp:nil))
   (scheduled-update-group-actions common-lisp:nil :type
    (common-lisp:or scheduled-update-group-actions common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'scheduled-actions-type 'make-scheduled-actions-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          scheduled-actions-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ScheduledUpdateGroupActions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheduled-update-group-actions)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (scheduled-update-group-action (:copier common-lisp:nil))
   (auto-scaling-group-name common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (scheduled-action-name common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (scheduled-action-arn common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (time common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (end-time common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (recurrence common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (min-size common-lisp:nil :type
    (common-lisp:or auto-scaling-group-min-size common-lisp:null))
   (max-size common-lisp:nil :type
    (common-lisp:or auto-scaling-group-max-size common-lisp:null))
   (desired-capacity common-lisp:nil :type
    (common-lisp:or auto-scaling-group-desired-capacity common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'scheduled-update-group-action
                    'make-scheduled-update-group-action))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          scheduled-update-group-action))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "ScheduledActionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheduled-action-name)))
    (aws-sdk/generator/shape::to-query-params "ScheduledActionARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheduled-action-arn)))
    (aws-sdk/generator/shape::to-query-params "Time"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'time)))
    (aws-sdk/generator/shape::to-query-params "StartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "EndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time)))
    (aws-sdk/generator/shape::to-query-params "Recurrence"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'recurrence)))
    (aws-sdk/generator/shape::to-query-params "MinSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'min-size)))
    (aws-sdk/generator/shape::to-query-params "MaxSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-size)))
    (aws-sdk/generator/shape::to-query-params "DesiredCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'desired-capacity))))))
(common-lisp:progn
 (common-lisp:deftype scheduled-update-group-actions ()
   '(trivial-types:proper-list scheduled-update-group-action))
 (common-lisp:defun |make-scheduled-update-group-actions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            scheduled-update-group-action))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype security-groups ()
   '(trivial-types:proper-list xml-string))
 (common-lisp:defun |make-security-groups|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list xml-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (set-desired-capacity-type (:copier common-lisp:nil))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (desired-capacity
    (common-lisp:error
     #A((29) common-lisp:base-char . ":desired-capacity is required"))
    :type
    (common-lisp:or auto-scaling-group-desired-capacity common-lisp:null))
   (honor-cooldown common-lisp:nil :type
    (common-lisp:or honor-cooldown common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-desired-capacity-type
                    'make-set-desired-capacity-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-desired-capacity-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "DesiredCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'desired-capacity)))
    (aws-sdk/generator/shape::to-query-params "HonorCooldown"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'honor-cooldown))))))
(common-lisp:progn
 (common-lisp:defstruct (set-instance-health-query (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or xml-string-max-len19 common-lisp:null))
   (health-status
    (common-lisp:error
     #A((26) common-lisp:base-char . ":health-status is required"))
    :type (common-lisp:or xml-string-max-len32 common-lisp:null))
   (should-respect-grace-period common-lisp:nil :type
    (common-lisp:or should-respect-grace-period common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-instance-health-query
                    'make-set-instance-health-query))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-instance-health-query))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "HealthStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-status)))
    (aws-sdk/generator/shape::to-query-params "ShouldRespectGracePeriod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'should-respect-grace-period))))))
(common-lisp:progn
 (common-lisp:defstruct
     (set-instance-protection-answer (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'set-instance-protection-answer
                    'make-set-instance-protection-answer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-instance-protection-answer))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (set-instance-protection-query (:copier common-lisp:nil))
   (instance-ids
    (common-lisp:error
     #A((25) common-lisp:base-char . ":instance-ids is required"))
    :type (common-lisp:or instance-ids common-lisp:null))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (protected-from-scale-in
    (common-lisp:error
     #A((36) common-lisp:base-char . ":protected-from-scale-in is required"))
    :type (common-lisp:or protected-from-scale-in common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-instance-protection-query
                    'make-set-instance-protection-query))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-instance-protection-query))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-ids)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "ProtectedFromScaleIn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'protected-from-scale-in))))))
(common-lisp:deftype should-decrement-desired-capacity () 'common-lisp:boolean)
(common-lisp:deftype should-respect-grace-period () 'common-lisp:boolean)
(common-lisp:deftype spot-price () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (step-adjustment (:copier common-lisp:nil))
   (metric-interval-lower-bound common-lisp:nil :type
    (common-lisp:or metric-scale common-lisp:null))
   (metric-interval-upper-bound common-lisp:nil :type
    (common-lisp:or metric-scale common-lisp:null))
   (scaling-adjustment
    (common-lisp:error
     #A((31) common-lisp:base-char . ":scaling-adjustment is required"))
    :type (common-lisp:or policy-increment common-lisp:null)))
 (common-lisp:export (common-lisp:list 'step-adjustment 'make-step-adjustment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape step-adjustment))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MetricIntervalLowerBound"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-interval-lower-bound)))
    (aws-sdk/generator/shape::to-query-params "MetricIntervalUpperBound"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-interval-upper-bound)))
    (aws-sdk/generator/shape::to-query-params "ScalingAdjustment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scaling-adjustment))))))
(common-lisp:progn
 (common-lisp:deftype step-adjustments ()
   '(trivial-types:proper-list step-adjustment))
 (common-lisp:defun |make-step-adjustments|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list step-adjustment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (suspended-process (:copier common-lisp:nil))
   (process-name common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (suspension-reason common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'suspended-process 'make-suspended-process))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape suspended-process))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProcessName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'process-name)))
    (aws-sdk/generator/shape::to-query-params "SuspensionReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'suspension-reason))))))
(common-lisp:progn
 (common-lisp:deftype suspended-processes ()
   '(trivial-types:proper-list suspended-process))
 (common-lisp:defun |make-suspended-processes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list suspended-process))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (tag (:copier common-lisp:nil))
   (resource-id common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or tag-key common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or tag-value common-lisp:null))
   (propagate-at-launch common-lisp:nil :type
    (common-lisp:or propagate-at-launch common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "PropagateAtLaunch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'propagate-at-launch))))))
(common-lisp:progn
 (common-lisp:defstruct (tag-description (:copier common-lisp:nil))
   (resource-id common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (key common-lisp:nil :type (common-lisp:or tag-key common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or tag-value common-lisp:null))
   (propagate-at-launch common-lisp:nil :type
    (common-lisp:or propagate-at-launch common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag-description 'make-tag-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "PropagateAtLaunch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'propagate-at-launch))))))
(common-lisp:progn
 (common-lisp:deftype tag-description-list ()
   '(trivial-types:proper-list tag-description))
 (common-lisp:defun |make-tag-description-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-description))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tags () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tags|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (tags-type (:copier common-lisp:nil))
   (tags common-lisp:nil :type
    (common-lisp:or tag-description-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tags-type 'make-tags-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tags-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:deftype target-group-arns ()
   '(trivial-types:proper-list xml-string-max-len511))
 (common-lisp:defun |make-target-group-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list xml-string-max-len511))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (target-tracking-configuration (:copier common-lisp:nil))
   (predefined-metric-specification common-lisp:nil :type
    (common-lisp:or predefined-metric-specification common-lisp:null))
   (customized-metric-specification common-lisp:nil :type
    (common-lisp:or customized-metric-specification common-lisp:null))
   (target-value
    (common-lisp:error
     #A((25) common-lisp:base-char . ":target-value is required"))
    :type (common-lisp:or metric-scale common-lisp:null))
   (disable-scale-in common-lisp:nil :type
    (common-lisp:or disable-scale-in common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'target-tracking-configuration
                    'make-target-tracking-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          target-tracking-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PredefinedMetricSpecification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'predefined-metric-specification)))
    (aws-sdk/generator/shape::to-query-params "CustomizedMetricSpecification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'customized-metric-specification)))
    (aws-sdk/generator/shape::to-query-params "TargetValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-value)))
    (aws-sdk/generator/shape::to-query-params "DisableScaleIn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'disable-scale-in))))))
(common-lisp:progn
 (common-lisp:defstruct
     (terminate-instance-in-auto-scaling-group-type (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or xml-string-max-len19 common-lisp:null))
   (should-decrement-desired-capacity
    (common-lisp:error
     #A((46) common-lisp:base-char
        . ":should-decrement-desired-capacity is required"))
    :type (common-lisp:or should-decrement-desired-capacity common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'terminate-instance-in-auto-scaling-group-type
                    'make-terminate-instance-in-auto-scaling-group-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          terminate-instance-in-auto-scaling-group-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "ShouldDecrementDesiredCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'should-decrement-desired-capacity))))))
(common-lisp:progn
 (common-lisp:deftype termination-policies ()
   '(trivial-types:proper-list xml-string-max-len1600))
 (common-lisp:defun |make-termination-policies|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list xml-string-max-len1600))
   aws-sdk/generator/shape::members))
(common-lisp:deftype timestamp-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (update-auto-scaling-group-type (:copier common-lisp:nil))
   (auto-scaling-group-name
    (common-lisp:error
     #A((36) common-lisp:base-char . ":auto-scaling-group-name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (launch-configuration-name common-lisp:nil :type
    (common-lisp:or resource-name common-lisp:null))
   (min-size common-lisp:nil :type
    (common-lisp:or auto-scaling-group-min-size common-lisp:null))
   (max-size common-lisp:nil :type
    (common-lisp:or auto-scaling-group-max-size common-lisp:null))
   (desired-capacity common-lisp:nil :type
    (common-lisp:or auto-scaling-group-desired-capacity common-lisp:null))
   (default-cooldown common-lisp:nil :type
    (common-lisp:or cooldown common-lisp:null))
   (availability-zones common-lisp:nil :type
    (common-lisp:or availability-zones common-lisp:null))
   (health-check-type common-lisp:nil :type
    (common-lisp:or xml-string-max-len32 common-lisp:null))
   (health-check-grace-period common-lisp:nil :type
    (common-lisp:or health-check-grace-period common-lisp:null))
   (placement-group common-lisp:nil :type
    (common-lisp:or xml-string-max-len255 common-lisp:null))
   (vpczone-identifier common-lisp:nil :type
    (common-lisp:or xml-string-max-len2047 common-lisp:null))
   (termination-policies common-lisp:nil :type
    (common-lisp:or termination-policies common-lisp:null))
   (new-instances-protected-from-scale-in common-lisp:nil :type
    (common-lisp:or instance-protected common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-auto-scaling-group-type
                    'make-update-auto-scaling-group-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-auto-scaling-group-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoScalingGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group-name)))
    (aws-sdk/generator/shape::to-query-params "LaunchConfigurationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'launch-configuration-name)))
    (aws-sdk/generator/shape::to-query-params "MinSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'min-size)))
    (aws-sdk/generator/shape::to-query-params "MaxSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-size)))
    (aws-sdk/generator/shape::to-query-params "DesiredCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'desired-capacity)))
    (aws-sdk/generator/shape::to-query-params "DefaultCooldown"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-cooldown)))
    (aws-sdk/generator/shape::to-query-params "AvailabilityZones"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zones)))
    (aws-sdk/generator/shape::to-query-params "HealthCheckType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check-type)))
    (aws-sdk/generator/shape::to-query-params "HealthCheckGracePeriod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check-grace-period)))
    (aws-sdk/generator/shape::to-query-params "PlacementGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'placement-group)))
    (aws-sdk/generator/shape::to-query-params "VPCZoneIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vpczone-identifier)))
    (aws-sdk/generator/shape::to-query-params "TerminationPolicies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'termination-policies)))
    (aws-sdk/generator/shape::to-query-params
     "NewInstancesProtectedFromScaleIn"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'new-instances-protected-from-scale-in))))))
(common-lisp:progn
 (common-lisp:deftype values () '(trivial-types:proper-list xml-string))
 (common-lisp:defun |make-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list xml-string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype xml-string () 'common-lisp:string)
(common-lisp:deftype xml-string-max-len1023 () 'common-lisp:string)
(common-lisp:deftype xml-string-max-len1600 () 'common-lisp:string)
(common-lisp:deftype xml-string-max-len19 () 'common-lisp:string)
(common-lisp:deftype xml-string-max-len2047 () 'common-lisp:string)
(common-lisp:deftype xml-string-max-len255 () 'common-lisp:string)
(common-lisp:deftype xml-string-max-len32 () 'common-lisp:string)
(common-lisp:deftype xml-string-max-len511 () 'common-lisp:string)
(common-lisp:deftype xml-string-max-len64 () 'common-lisp:string)
(common-lisp:deftype xml-string-user-data () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun attach-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-ids auto-scaling-group-name)
   (common-lisp:declare
    (common-lisp:ignorable instance-ids auto-scaling-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-attach-instances-query
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AttachInstances")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'attach-instances))
(common-lisp:progn
 (common-lisp:defun attach-load-balancer-target-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name
                     target-group-arns)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name target-group-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-attach-load-balancer-target-groups-type
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AttachLoadBalancerTargetGroups")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AttachLoadBalancerTargetGroupsResultType"
      "AttachLoadBalancerTargetGroupsResult")))
 (common-lisp:export 'attach-load-balancer-target-groups))
(common-lisp:progn
 (common-lisp:defun attach-load-balancers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name
                     load-balancer-names)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name load-balancer-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-attach-load-balancers-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AttachLoadBalancers")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AttachLoadBalancersResultType" "AttachLoadBalancersResult")))
 (common-lisp:export 'attach-load-balancers))
(common-lisp:progn
 (common-lisp:defun complete-lifecycle-action
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key lifecycle-hook-name
                     auto-scaling-group-name lifecycle-action-token
                     lifecycle-action-result instance-id)
   (common-lisp:declare
    (common-lisp:ignorable lifecycle-hook-name auto-scaling-group-name
     lifecycle-action-token lifecycle-action-result instance-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-complete-lifecycle-action-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CompleteLifecycleAction")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CompleteLifecycleActionAnswer" "CompleteLifecycleActionResult")))
 (common-lisp:export 'complete-lifecycle-action))
(common-lisp:progn
 (common-lisp:defun create-auto-scaling-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name
                     launch-configuration-name instance-id min-size max-size
                     desired-capacity default-cooldown availability-zones
                     load-balancer-names target-group-arns health-check-type
                     health-check-grace-period placement-group
                     vpczone-identifier termination-policies
                     new-instances-protected-from-scale-in tags)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name launch-configuration-name
     instance-id min-size max-size desired-capacity default-cooldown
     availability-zones load-balancer-names target-group-arns health-check-type
     health-check-grace-period placement-group vpczone-identifier
     termination-policies new-instances-protected-from-scale-in tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-auto-scaling-group-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateAutoScalingGroup")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'create-auto-scaling-group))
(common-lisp:progn
 (common-lisp:defun create-launch-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key launch-configuration-name image-id
                     key-name security-groups classic-link-vpcid
                     classic-link-vpcsecurity-groups user-data instance-id
                     instance-type kernel-id ramdisk-id block-device-mappings
                     instance-monitoring spot-price iam-instance-profile
                     ebs-optimized associate-public-ip-address
                     placement-tenancy)
   (common-lisp:declare
    (common-lisp:ignorable launch-configuration-name image-id key-name
     security-groups classic-link-vpcid classic-link-vpcsecurity-groups
     user-data instance-id instance-type kernel-id ramdisk-id
     block-device-mappings instance-monitoring spot-price iam-instance-profile
     ebs-optimized associate-public-ip-address placement-tenancy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-launch-configuration-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateLaunchConfiguration")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'create-launch-configuration))
(common-lisp:progn
 (common-lisp:defun create-or-update-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tags)
   (common-lisp:declare (common-lisp:ignorable tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-or-update-tags-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateOrUpdateTags")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'create-or-update-tags))
(common-lisp:progn
 (common-lisp:defun delete-auto-scaling-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name force-delete)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name force-delete))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-auto-scaling-group-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteAutoScalingGroup")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-auto-scaling-group))
(common-lisp:progn
 (common-lisp:defun delete-launch-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key launch-configuration-name)
   (common-lisp:declare (common-lisp:ignorable launch-configuration-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-launch-configuration-name-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteLaunchConfiguration")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-launch-configuration))
(common-lisp:progn
 (common-lisp:defun delete-lifecycle-hook
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key lifecycle-hook-name
                     auto-scaling-group-name)
   (common-lisp:declare
    (common-lisp:ignorable lifecycle-hook-name auto-scaling-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-lifecycle-hook-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteLifecycleHook")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteLifecycleHookAnswer" "DeleteLifecycleHookResult")))
 (common-lisp:export 'delete-lifecycle-hook))
(common-lisp:progn
 (common-lisp:defun delete-notification-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name topic-arn)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name topic-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-notification-configuration-type
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DeleteNotificationConfiguration")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-notification-configuration))
(common-lisp:progn
 (common-lisp:defun delete-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name policy-name)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name policy-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-policy-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeletePolicy")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-policy))
(common-lisp:progn
 (common-lisp:defun delete-scheduled-action
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name
                     scheduled-action-name)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name scheduled-action-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-scheduled-action-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteScheduledAction")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-scheduled-action))
(common-lisp:progn
 (common-lisp:defun delete-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tags)
   (common-lisp:declare (common-lisp:ignorable tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-tags-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteTags")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-tags))
(common-lisp:progn
 (common-lisp:defun describe-account-limits ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((11) common-lisp:base-char . "autoscaling")
                             :method :post :params
                             (common-lisp:cons "Action"
                                               "DescribeAccountLimits"))
    "DescribeAccountLimitsAnswer" "DescribeAccountLimitsResult"))
 (common-lisp:export 'describe-account-limits))
(common-lisp:progn
 (common-lisp:defun describe-adjustment-types ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((11) common-lisp:base-char . "autoscaling")
                             :method :post :params
                             (common-lisp:cons "Action"
                                               "DescribeAdjustmentTypes"))
    "DescribeAdjustmentTypesAnswer" "DescribeAdjustmentTypesResult"))
 (common-lisp:export 'describe-adjustment-types))
(common-lisp:progn
 (common-lisp:defun describe-auto-scaling-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-names next-token
                     max-records)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-names next-token max-records))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-auto-scaling-group-names-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeAutoScalingGroups")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AutoScalingGroupsType" "DescribeAutoScalingGroupsResult")))
 (common-lisp:export 'describe-auto-scaling-groups))
(common-lisp:progn
 (common-lisp:defun describe-auto-scaling-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-ids max-records next-token)
   (common-lisp:declare
    (common-lisp:ignorable instance-ids max-records next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-auto-scaling-instances-type
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeAutoScalingInstances")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AutoScalingInstancesType" "DescribeAutoScalingInstancesResult")))
 (common-lisp:export 'describe-auto-scaling-instances))
(common-lisp:progn
 (common-lisp:defun describe-auto-scaling-notification-types ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((11) common-lisp:base-char . "autoscaling")
                             :method :post :params
                             (common-lisp:cons "Action"
                                               "DescribeAutoScalingNotificationTypes"))
    "DescribeAutoScalingNotificationTypesAnswer"
    "DescribeAutoScalingNotificationTypesResult"))
 (common-lisp:export 'describe-auto-scaling-notification-types))
(common-lisp:progn
 (common-lisp:defun describe-launch-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key launch-configuration-names next-token
                     max-records)
   (common-lisp:declare
    (common-lisp:ignorable launch-configuration-names next-token max-records))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-launch-configuration-names-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeLaunchConfigurations")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "LaunchConfigurationsType" "DescribeLaunchConfigurationsResult")))
 (common-lisp:export 'describe-launch-configurations))
(common-lisp:progn
 (common-lisp:defun describe-lifecycle-hook-types ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((11) common-lisp:base-char . "autoscaling")
                             :method :post :params
                             (common-lisp:cons "Action"
                                               "DescribeLifecycleHookTypes"))
    "DescribeLifecycleHookTypesAnswer" "DescribeLifecycleHookTypesResult"))
 (common-lisp:export 'describe-lifecycle-hook-types))
(common-lisp:progn
 (common-lisp:defun describe-lifecycle-hooks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name
                     lifecycle-hook-names)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name lifecycle-hook-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-lifecycle-hooks-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeLifecycleHooks")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeLifecycleHooksAnswer" "DescribeLifecycleHooksResult")))
 (common-lisp:export 'describe-lifecycle-hooks))
(common-lisp:progn
 (common-lisp:defun describe-load-balancer-target-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name next-token
                     max-records)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name next-token max-records))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-load-balancer-target-groups-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeLoadBalancerTargetGroups")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeLoadBalancerTargetGroupsResponse"
      "DescribeLoadBalancerTargetGroupsResult")))
 (common-lisp:export 'describe-load-balancer-target-groups))
(common-lisp:progn
 (common-lisp:defun describe-load-balancers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name next-token
                     max-records)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name next-token max-records))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-load-balancers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeLoadBalancers")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeLoadBalancersResponse" "DescribeLoadBalancersResult")))
 (common-lisp:export 'describe-load-balancers))
(common-lisp:progn
 (common-lisp:defun describe-metric-collection-types ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((11) common-lisp:base-char . "autoscaling")
                             :method :post :params
                             (common-lisp:cons "Action"
                                               "DescribeMetricCollectionTypes"))
    "DescribeMetricCollectionTypesAnswer"
    "DescribeMetricCollectionTypesResult"))
 (common-lisp:export 'describe-metric-collection-types))
(common-lisp:progn
 (common-lisp:defun describe-notification-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-names next-token
                     max-records)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-names next-token max-records))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-notification-configurations-type
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeNotificationConfigurations")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeNotificationConfigurationsAnswer"
      "DescribeNotificationConfigurationsResult")))
 (common-lisp:export 'describe-notification-configurations))
(common-lisp:progn
 (common-lisp:defun describe-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name policy-names
                     policy-types next-token max-records)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name policy-names policy-types
     next-token max-records))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-policies-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribePolicies")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PoliciesType" "DescribePoliciesResult")))
 (common-lisp:export 'describe-policies))
(common-lisp:progn
 (common-lisp:defun describe-scaling-activities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key activity-ids auto-scaling-group-name
                     max-records next-token)
   (common-lisp:declare
    (common-lisp:ignorable activity-ids auto-scaling-group-name max-records
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-scaling-activities-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeScalingActivities")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ActivitiesType" "DescribeScalingActivitiesResult")))
 (common-lisp:export 'describe-scaling-activities))
(common-lisp:progn
 (common-lisp:defun describe-scaling-process-types ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((11) common-lisp:base-char . "autoscaling")
                             :method :post :params
                             (common-lisp:cons "Action"
                                               "DescribeScalingProcessTypes"))
    "ProcessesType" "DescribeScalingProcessTypesResult"))
 (common-lisp:export 'describe-scaling-process-types))
(common-lisp:progn
 (common-lisp:defun describe-scheduled-actions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name
                     scheduled-action-names start-time end-time next-token
                     max-records)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name scheduled-action-names
     start-time end-time next-token max-records))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-scheduled-actions-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeScheduledActions")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ScheduledActionsType" "DescribeScheduledActionsResult")))
 (common-lisp:export 'describe-scheduled-actions))
(common-lisp:progn
 (common-lisp:defun describe-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filters next-token max-records)
   (common-lisp:declare (common-lisp:ignorable filters next-token max-records))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-tags-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeTags")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "TagsType" "DescribeTagsResult")))
 (common-lisp:export 'describe-tags))
(common-lisp:progn
 (common-lisp:defun describe-termination-policy-types ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((11) common-lisp:base-char . "autoscaling")
                             :method :post :params
                             (common-lisp:cons "Action"
                                               "DescribeTerminationPolicyTypes"))
    "DescribeTerminationPolicyTypesAnswer"
    "DescribeTerminationPolicyTypesResult"))
 (common-lisp:export 'describe-termination-policy-types))
(common-lisp:progn
 (common-lisp:defun detach-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-ids auto-scaling-group-name
                     should-decrement-desired-capacity)
   (common-lisp:declare
    (common-lisp:ignorable instance-ids auto-scaling-group-name
     should-decrement-desired-capacity))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detach-instances-query
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DetachInstances")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DetachInstancesAnswer" "DetachInstancesResult")))
 (common-lisp:export 'detach-instances))
(common-lisp:progn
 (common-lisp:defun detach-load-balancer-target-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name
                     target-group-arns)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name target-group-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-detach-load-balancer-target-groups-type
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DetachLoadBalancerTargetGroups")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DetachLoadBalancerTargetGroupsResultType"
      "DetachLoadBalancerTargetGroupsResult")))
 (common-lisp:export 'detach-load-balancer-target-groups))
(common-lisp:progn
 (common-lisp:defun detach-load-balancers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name
                     load-balancer-names)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name load-balancer-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detach-load-balancers-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DetachLoadBalancers")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DetachLoadBalancersResultType" "DetachLoadBalancersResult")))
 (common-lisp:export 'detach-load-balancers))
(common-lisp:progn
 (common-lisp:defun disable-metrics-collection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name metrics)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name metrics))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disable-metrics-collection-query
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DisableMetricsCollection")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'disable-metrics-collection))
(common-lisp:progn
 (common-lisp:defun enable-metrics-collection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name metrics
                     granularity)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name metrics granularity))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-enable-metrics-collection-query
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"EnableMetricsCollection")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'enable-metrics-collection))
(common-lisp:progn
 (common-lisp:defun enter-standby
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-ids auto-scaling-group-name
                     should-decrement-desired-capacity)
   (common-lisp:declare
    (common-lisp:ignorable instance-ids auto-scaling-group-name
     should-decrement-desired-capacity))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-enter-standby-query
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"EnterStandby")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "EnterStandbyAnswer" "EnterStandbyResult")))
 (common-lisp:export 'enter-standby))
(common-lisp:progn
 (common-lisp:defun execute-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name policy-name
                     honor-cooldown metric-value breach-threshold)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name policy-name honor-cooldown
     metric-value breach-threshold))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-execute-policy-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ExecutePolicy")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'execute-policy))
(common-lisp:progn
 (common-lisp:defun exit-standby
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-ids auto-scaling-group-name)
   (common-lisp:declare
    (common-lisp:ignorable instance-ids auto-scaling-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-exit-standby-query
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ExitStandby")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ExitStandbyAnswer" "ExitStandbyResult")))
 (common-lisp:export 'exit-standby))
(common-lisp:progn
 (common-lisp:defun put-lifecycle-hook
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key lifecycle-hook-name
                     auto-scaling-group-name lifecycle-transition role-arn
                     notification-target-arn notification-metadata
                     heartbeat-timeout default-result)
   (common-lisp:declare
    (common-lisp:ignorable lifecycle-hook-name auto-scaling-group-name
     lifecycle-transition role-arn notification-target-arn
     notification-metadata heartbeat-timeout default-result))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-lifecycle-hook-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutLifecycleHook")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutLifecycleHookAnswer" "PutLifecycleHookResult")))
 (common-lisp:export 'put-lifecycle-hook))
(common-lisp:progn
 (common-lisp:defun put-notification-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name topic-arn
                     notification-types)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name topic-arn
     notification-types))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-notification-configuration-type
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutNotificationConfiguration")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-notification-configuration))
(common-lisp:progn
 (common-lisp:defun put-scaling-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name policy-name
                     policy-type adjustment-type min-adjustment-step
                     min-adjustment-magnitude scaling-adjustment cooldown
                     metric-aggregation-type step-adjustments
                     estimated-instance-warmup target-tracking-configuration)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name policy-name policy-type
     adjustment-type min-adjustment-step min-adjustment-magnitude
     scaling-adjustment cooldown metric-aggregation-type step-adjustments
     estimated-instance-warmup target-tracking-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-scaling-policy-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutScalingPolicy")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PolicyARNType" "PutScalingPolicyResult")))
 (common-lisp:export 'put-scaling-policy))
(common-lisp:progn
 (common-lisp:defun put-scheduled-update-group-action
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name
                     scheduled-action-name time start-time end-time recurrence
                     min-size max-size desired-capacity)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name scheduled-action-name time
     start-time end-time recurrence min-size max-size desired-capacity))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-scheduled-update-group-action-type
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutScheduledUpdateGroupAction")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-scheduled-update-group-action))
(common-lisp:progn
 (common-lisp:defun record-lifecycle-action-heartbeat
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key lifecycle-hook-name
                     auto-scaling-group-name lifecycle-action-token
                     instance-id)
   (common-lisp:declare
    (common-lisp:ignorable lifecycle-hook-name auto-scaling-group-name
     lifecycle-action-token instance-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-record-lifecycle-action-heartbeat-type
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RecordLifecycleActionHeartbeat")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RecordLifecycleActionHeartbeatAnswer"
      "RecordLifecycleActionHeartbeatResult")))
 (common-lisp:export 'record-lifecycle-action-heartbeat))
(common-lisp:progn
 (common-lisp:defun resume-processes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name
                     scaling-processes)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name scaling-processes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-scaling-process-query
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ResumeProcesses")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'resume-processes))
(common-lisp:progn
 (common-lisp:defun set-desired-capacity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name desired-capacity
                     honor-cooldown)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name desired-capacity
     honor-cooldown))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-desired-capacity-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SetDesiredCapacity")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'set-desired-capacity))
(common-lisp:progn
 (common-lisp:defun set-instance-health
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id health-status
                     should-respect-grace-period)
   (common-lisp:declare
    (common-lisp:ignorable instance-id health-status
     should-respect-grace-period))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-instance-health-query
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SetInstanceHealth")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'set-instance-health))
(common-lisp:progn
 (common-lisp:defun set-instance-protection
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-ids auto-scaling-group-name
                     protected-from-scale-in)
   (common-lisp:declare
    (common-lisp:ignorable instance-ids auto-scaling-group-name
     protected-from-scale-in))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-instance-protection-query
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SetInstanceProtection")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SetInstanceProtectionAnswer" "SetInstanceProtectionResult")))
 (common-lisp:export 'set-instance-protection))
(common-lisp:progn
 (common-lisp:defun suspend-processes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name
                     scaling-processes)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name scaling-processes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-scaling-process-query
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SuspendProcesses")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'suspend-processes))
(common-lisp:progn
 (common-lisp:defun terminate-instance-in-auto-scaling-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id
                     should-decrement-desired-capacity)
   (common-lisp:declare
    (common-lisp:ignorable instance-id should-decrement-desired-capacity))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-terminate-instance-in-auto-scaling-group-type
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"TerminateInstanceInAutoScalingGroup")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ActivityType" "TerminateInstanceInAutoScalingGroupResult")))
 (common-lisp:export 'terminate-instance-in-auto-scaling-group))
(common-lisp:progn
 (common-lisp:defun update-auto-scaling-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-scaling-group-name
                     launch-configuration-name min-size max-size
                     desired-capacity default-cooldown availability-zones
                     health-check-type health-check-grace-period
                     placement-group vpczone-identifier termination-policies
                     new-instances-protected-from-scale-in)
   (common-lisp:declare
    (common-lisp:ignorable auto-scaling-group-name launch-configuration-name
     min-size max-size desired-capacity default-cooldown availability-zones
     health-check-type health-check-grace-period placement-group
     vpczone-identifier termination-policies
     new-instances-protected-from-scale-in))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-auto-scaling-group-type
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((11) common-lisp:base-char . "autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateAutoScalingGroup")
                                  ("Version" ,@"2011-01-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-auto-scaling-group))