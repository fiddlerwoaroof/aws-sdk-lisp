;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/application-autoscaling
  (:use)
  (:nicknames #:aws/application-autoscaling)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/application-autoscaling)

(common-lisp:deftype adjustment-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (alarm (:copier common-lisp:nil))
   (alarm-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":alarm-name is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (alarm-arn
    (common-lisp:error
     #A((22) common-lisp:base-char . ":alarm-arn is required"))
    :type (common-lisp:or resource-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'alarm 'make-alarm))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape alarm))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AlarmName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alarm-name)))
    (aws-sdk/generator/shape::to-query-params "AlarmARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alarm-arn))))))
(common-lisp:progn
 (common-lisp:deftype alarms () '(trivial-types:proper-list alarm))
 (common-lisp:defun |make-alarms|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list alarm))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (concurrent-update-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'concurrent-update-exception
                    'make-concurrent-update-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          concurrent-update-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype cooldown () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (customized-metric-specification (:copier common-lisp:nil))
   (metric-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":metric-name is required"))
    :type (common-lisp:or metric-name common-lisp:null))
   (namespace
    (common-lisp:error
     #A((22) common-lisp:base-char . ":namespace is required"))
    :type (common-lisp:or metric-namespace common-lisp:null))
   (dimensions common-lisp:nil :type
    (common-lisp:or metric-dimensions common-lisp:null))
   (statistic
    (common-lisp:error
     #A((22) common-lisp:base-char . ":statistic is required"))
    :type (common-lisp:or metric-statistic common-lisp:null))
   (unit common-lisp:nil :type (common-lisp:or metric-unit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'customized-metric-specification
                    'make-customized-metric-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          customized-metric-specification))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MetricName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-name)))
    (aws-sdk/generator/shape::to-query-params "Namespace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'namespace)))
    (aws-sdk/generator/shape::to-query-params "Dimensions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dimensions)))
    (aws-sdk/generator/shape::to-query-params "Statistic"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'statistic)))
    (aws-sdk/generator/shape::to-query-params "Unit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-scaling-policy-request (:copier common-lisp:nil))
   (policy-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":policy-name is required"))
    :type (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (service-namespace
    (common-lisp:error
     #A((30) common-lisp:base-char . ":service-namespace is required"))
    :type (common-lisp:or service-namespace common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (scalable-dimension
    (common-lisp:error
     #A((31) common-lisp:base-char . ":scalable-dimension is required"))
    :type (common-lisp:or scalable-dimension common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-scaling-policy-request
                    'make-delete-scaling-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-scaling-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-name)))
    (aws-sdk/generator/shape::to-query-params "ServiceNamespace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-namespace)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ScalableDimension"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scalable-dimension))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-scaling-policy-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-scaling-policy-response
                    'make-delete-scaling-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-scaling-policy-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-scalable-target-request (:copier common-lisp:nil))
   (service-namespace
    (common-lisp:error
     #A((30) common-lisp:base-char . ":service-namespace is required"))
    :type (common-lisp:or service-namespace common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (scalable-dimension
    (common-lisp:error
     #A((31) common-lisp:base-char . ":scalable-dimension is required"))
    :type (common-lisp:or scalable-dimension common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-scalable-target-request
                    'make-deregister-scalable-target-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deregister-scalable-target-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ServiceNamespace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-namespace)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ScalableDimension"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scalable-dimension))))))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-scalable-target-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'deregister-scalable-target-response
                    'make-deregister-scalable-target-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deregister-scalable-target-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-scalable-targets-request (:copier common-lisp:nil))
   (service-namespace
    (common-lisp:error
     #A((30) common-lisp:base-char . ":service-namespace is required"))
    :type (common-lisp:or service-namespace common-lisp:null))
   (resource-ids common-lisp:nil :type
    (common-lisp:or resource-ids-max-len1600 common-lisp:null))
   (scalable-dimension common-lisp:nil :type
    (common-lisp:or scalable-dimension common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-scalable-targets-request
                    'make-describe-scalable-targets-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-scalable-targets-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ServiceNamespace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-namespace)))
    (aws-sdk/generator/shape::to-query-params "ResourceIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-ids)))
    (aws-sdk/generator/shape::to-query-params "ScalableDimension"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scalable-dimension)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-scalable-targets-response (:copier common-lisp:nil))
   (scalable-targets common-lisp:nil :type
    (common-lisp:or scalable-targets common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-scalable-targets-response
                    'make-describe-scalable-targets-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-scalable-targets-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ScalableTargets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scalable-targets)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-scaling-activities-request (:copier common-lisp:nil))
   (service-namespace
    (common-lisp:error
     #A((30) common-lisp:base-char . ":service-namespace is required"))
    :type (common-lisp:or service-namespace common-lisp:null))
   (resource-id common-lisp:nil :type
    (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (scalable-dimension common-lisp:nil :type
    (common-lisp:or scalable-dimension common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-scaling-activities-request
                    'make-describe-scaling-activities-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-scaling-activities-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ServiceNamespace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-namespace)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ScalableDimension"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scalable-dimension)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-scaling-activities-response (:copier common-lisp:nil))
   (scaling-activities common-lisp:nil :type
    (common-lisp:or scaling-activities common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-scaling-activities-response
                    'make-describe-scaling-activities-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-scaling-activities-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ScalingActivities"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scaling-activities)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-scaling-policies-request (:copier common-lisp:nil))
   (policy-names common-lisp:nil :type
    (common-lisp:or resource-ids-max-len1600 common-lisp:null))
   (service-namespace
    (common-lisp:error
     #A((30) common-lisp:base-char . ":service-namespace is required"))
    :type (common-lisp:or service-namespace common-lisp:null))
   (resource-id common-lisp:nil :type
    (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (scalable-dimension common-lisp:nil :type
    (common-lisp:or scalable-dimension common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-scaling-policies-request
                    'make-describe-scaling-policies-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-scaling-policies-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-names)))
    (aws-sdk/generator/shape::to-query-params "ServiceNamespace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-namespace)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ScalableDimension"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scalable-dimension)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-scaling-policies-response (:copier common-lisp:nil))
   (scaling-policies common-lisp:nil :type
    (common-lisp:or scaling-policies common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-scaling-policies-response
                    'make-describe-scaling-policies-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-scaling-policies-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ScalingPolicies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scaling-policies)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (failed-resource-access-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'failed-resource-access-exception
                    'make-failed-resource-access-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          failed-resource-access-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (internal-service-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'internal-service-exception
                    'make-internal-service-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          internal-service-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-next-token-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-next-token-exception
                    'make-invalid-next-token-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-next-token-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype metric-aggregation-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (metric-dimension (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or metric-dimension-name common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or metric-dimension-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'metric-dimension 'make-metric-dimension))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape metric-dimension))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype metric-dimension-name () 'common-lisp:string)
(common-lisp:deftype metric-dimension-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype metric-dimensions ()
   '(trivial-types:proper-list metric-dimension))
 (common-lisp:defun |make-metric-dimensions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-dimension))
   aws-sdk/generator/shape::members))
(common-lisp:deftype metric-name () 'common-lisp:string)
(common-lisp:deftype metric-namespace () 'common-lisp:string)
(common-lisp:deftype metric-scale () 'common-lisp:double-float)
(common-lisp:deftype metric-statistic () 'common-lisp:string)
(common-lisp:deftype metric-type () 'common-lisp:string)
(common-lisp:deftype metric-unit () 'common-lisp:string)
(common-lisp:deftype min-adjustment-magnitude () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (object-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'object-not-found-exception
                    'make-object-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          object-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype policy-name () 'common-lisp:string)
(common-lisp:deftype policy-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (predefined-metric-specification (:copier common-lisp:nil))
   (predefined-metric-type
    (common-lisp:error
     #A((35) common-lisp:base-char . ":predefined-metric-type is required"))
    :type (common-lisp:or metric-type common-lisp:null))
   (resource-label common-lisp:nil :type
    (common-lisp:or resource-label common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'predefined-metric-specification
                    'make-predefined-metric-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          predefined-metric-specification))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PredefinedMetricType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'predefined-metric-type)))
    (aws-sdk/generator/shape::to-query-params "ResourceLabel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-label))))))
(common-lisp:progn
 (common-lisp:defstruct (put-scaling-policy-request (:copier common-lisp:nil))
   (policy-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":policy-name is required"))
    :type (common-lisp:or policy-name common-lisp:null))
   (service-namespace
    (common-lisp:error
     #A((30) common-lisp:base-char . ":service-namespace is required"))
    :type (common-lisp:or service-namespace common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (scalable-dimension
    (common-lisp:error
     #A((31) common-lisp:base-char . ":scalable-dimension is required"))
    :type (common-lisp:or scalable-dimension common-lisp:null))
   (policy-type common-lisp:nil :type
    (common-lisp:or policy-type common-lisp:null))
   (step-scaling-policy-configuration common-lisp:nil :type
    (common-lisp:or step-scaling-policy-configuration common-lisp:null))
   (target-tracking-scaling-policy-configuration common-lisp:nil :type
    (common-lisp:or target-tracking-scaling-policy-configuration
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-scaling-policy-request
                    'make-put-scaling-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-scaling-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-name)))
    (aws-sdk/generator/shape::to-query-params "ServiceNamespace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-namespace)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ScalableDimension"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scalable-dimension)))
    (aws-sdk/generator/shape::to-query-params "PolicyType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-type)))
    (aws-sdk/generator/shape::to-query-params "StepScalingPolicyConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'step-scaling-policy-configuration)))
    (aws-sdk/generator/shape::to-query-params
     "TargetTrackingScalingPolicyConfiguration"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'target-tracking-scaling-policy-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct (put-scaling-policy-response (:copier common-lisp:nil))
   (policy-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":policy-arn is required"))
    :type (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (alarms common-lisp:nil :type (common-lisp:or alarms common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-scaling-policy-response
                    'make-put-scaling-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-scaling-policy-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-arn)))
    (aws-sdk/generator/shape::to-query-params "Alarms"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alarms))))))
(common-lisp:progn
 (common-lisp:defstruct
     (register-scalable-target-request (:copier common-lisp:nil))
   (service-namespace
    (common-lisp:error
     #A((30) common-lisp:base-char . ":service-namespace is required"))
    :type (common-lisp:or service-namespace common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (scalable-dimension
    (common-lisp:error
     #A((31) common-lisp:base-char . ":scalable-dimension is required"))
    :type (common-lisp:or scalable-dimension common-lisp:null))
   (min-capacity common-lisp:nil :type
    (common-lisp:or resource-capacity common-lisp:null))
   (max-capacity common-lisp:nil :type
    (common-lisp:or resource-capacity common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or resource-id-max-len1600 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-scalable-target-request
                    'make-register-scalable-target-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-scalable-target-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ServiceNamespace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-namespace)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ScalableDimension"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scalable-dimension)))
    (aws-sdk/generator/shape::to-query-params "MinCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'min-capacity)))
    (aws-sdk/generator/shape::to-query-params "MaxCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-capacity)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (register-scalable-target-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'register-scalable-target-response
                    'make-register-scalable-target-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-scalable-target-response))
   (common-lisp:append)))
(common-lisp:deftype resource-capacity () 'common-lisp:integer)
(common-lisp:deftype resource-id () 'common-lisp:string)
(common-lisp:deftype resource-id-max-len1600 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype resource-ids-max-len1600 ()
   '(trivial-types:proper-list resource-id-max-len1600))
 (common-lisp:defun |make-resource-ids-max-len1600|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-id-max-len1600))
   aws-sdk/generator/shape::members))
(common-lisp:deftype resource-label () 'common-lisp:string)
(common-lisp:deftype scalable-dimension () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (scalable-target (:copier common-lisp:nil))
   (service-namespace
    (common-lisp:error
     #A((30) common-lisp:base-char . ":service-namespace is required"))
    :type (common-lisp:or service-namespace common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (scalable-dimension
    (common-lisp:error
     #A((31) common-lisp:base-char . ":scalable-dimension is required"))
    :type (common-lisp:or scalable-dimension common-lisp:null))
   (min-capacity
    (common-lisp:error
     #A((25) common-lisp:base-char . ":min-capacity is required"))
    :type (common-lisp:or resource-capacity common-lisp:null))
   (max-capacity
    (common-lisp:error
     #A((25) common-lisp:base-char . ":max-capacity is required"))
    :type (common-lisp:or resource-capacity common-lisp:null))
   (role-arn
    (common-lisp:error
     #A((21) common-lisp:base-char . ":role-arn is required"))
    :type (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (creation-time
    (common-lisp:error
     #A((26) common-lisp:base-char . ":creation-time is required"))
    :type (common-lisp:or timestamp-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scalable-target 'make-scalable-target))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape scalable-target))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ServiceNamespace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-namespace)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ScalableDimension"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scalable-dimension)))
    (aws-sdk/generator/shape::to-query-params "MinCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'min-capacity)))
    (aws-sdk/generator/shape::to-query-params "MaxCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-capacity)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "CreationTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-time))))))
(common-lisp:progn
 (common-lisp:deftype scalable-targets ()
   '(trivial-types:proper-list scalable-target))
 (common-lisp:defun |make-scalable-targets|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list scalable-target))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype scaling-activities ()
   '(trivial-types:proper-list scaling-activity))
 (common-lisp:defun |make-scaling-activities|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list scaling-activity))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (scaling-activity (:copier common-lisp:nil))
   (activity-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":activity-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (service-namespace
    (common-lisp:error
     #A((30) common-lisp:base-char . ":service-namespace is required"))
    :type (common-lisp:or service-namespace common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (scalable-dimension
    (common-lisp:error
     #A((31) common-lisp:base-char . ":scalable-dimension is required"))
    :type (common-lisp:or scalable-dimension common-lisp:null))
   (description
    (common-lisp:error
     #A((24) common-lisp:base-char . ":description is required"))
    :type (common-lisp:or xml-string common-lisp:null))
   (cause
    (common-lisp:error #A((18) common-lisp:base-char . ":cause is required"))
    :type (common-lisp:or xml-string common-lisp:null))
   (start-time
    (common-lisp:error
     #A((23) common-lisp:base-char . ":start-time is required"))
    :type (common-lisp:or timestamp-type common-lisp:null))
   (end-time common-lisp:nil :type
    (common-lisp:or timestamp-type common-lisp:null))
   (status-code
    (common-lisp:error
     #A((24) common-lisp:base-char . ":status-code is required"))
    :type (common-lisp:or scaling-activity-status-code common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null))
   (details common-lisp:nil :type
    (common-lisp:or xml-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'scaling-activity 'make-scaling-activity))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape scaling-activity))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ActivityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-id)))
    (aws-sdk/generator/shape::to-query-params "ServiceNamespace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-namespace)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ScalableDimension"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scalable-dimension)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause)))
    (aws-sdk/generator/shape::to-query-params "StartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "EndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time)))
    (aws-sdk/generator/shape::to-query-params "StatusCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-code)))
    (aws-sdk/generator/shape::to-query-params "StatusMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-message)))
    (aws-sdk/generator/shape::to-query-params "Details"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'details))))))
(common-lisp:deftype scaling-activity-status-code () 'common-lisp:string)
(common-lisp:deftype scaling-adjustment () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype scaling-policies ()
   '(trivial-types:proper-list scaling-policy))
 (common-lisp:defun |make-scaling-policies|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list scaling-policy))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (scaling-policy (:copier common-lisp:nil))
   (policy-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":policy-arn is required"))
    :type (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (policy-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":policy-name is required"))
    :type (common-lisp:or policy-name common-lisp:null))
   (service-namespace
    (common-lisp:error
     #A((30) common-lisp:base-char . ":service-namespace is required"))
    :type (common-lisp:or service-namespace common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or resource-id-max-len1600 common-lisp:null))
   (scalable-dimension
    (common-lisp:error
     #A((31) common-lisp:base-char . ":scalable-dimension is required"))
    :type (common-lisp:or scalable-dimension common-lisp:null))
   (policy-type
    (common-lisp:error
     #A((24) common-lisp:base-char . ":policy-type is required"))
    :type (common-lisp:or policy-type common-lisp:null))
   (step-scaling-policy-configuration common-lisp:nil :type
    (common-lisp:or step-scaling-policy-configuration common-lisp:null))
   (target-tracking-scaling-policy-configuration common-lisp:nil :type
    (common-lisp:or target-tracking-scaling-policy-configuration
                    common-lisp:null))
   (alarms common-lisp:nil :type (common-lisp:or alarms common-lisp:null))
   (creation-time
    (common-lisp:error
     #A((26) common-lisp:base-char . ":creation-time is required"))
    :type (common-lisp:or timestamp-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scaling-policy 'make-scaling-policy))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape scaling-policy))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-arn)))
    (aws-sdk/generator/shape::to-query-params "PolicyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-name)))
    (aws-sdk/generator/shape::to-query-params "ServiceNamespace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-namespace)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "ScalableDimension"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scalable-dimension)))
    (aws-sdk/generator/shape::to-query-params "PolicyType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-type)))
    (aws-sdk/generator/shape::to-query-params "StepScalingPolicyConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'step-scaling-policy-configuration)))
    (aws-sdk/generator/shape::to-query-params
     "TargetTrackingScalingPolicyConfiguration"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'target-tracking-scaling-policy-configuration)))
    (aws-sdk/generator/shape::to-query-params "Alarms"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alarms)))
    (aws-sdk/generator/shape::to-query-params "CreationTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-time))))))
(common-lisp:deftype service-namespace () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (step-adjustment (:copier common-lisp:nil))
   (metric-interval-lower-bound common-lisp:nil :type
    (common-lisp:or metric-scale common-lisp:null))
   (metric-interval-upper-bound common-lisp:nil :type
    (common-lisp:or metric-scale common-lisp:null))
   (scaling-adjustment
    (common-lisp:error
     #A((31) common-lisp:base-char . ":scaling-adjustment is required"))
    :type (common-lisp:or scaling-adjustment common-lisp:null)))
 (common-lisp:export (common-lisp:list 'step-adjustment 'make-step-adjustment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape step-adjustment))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MetricIntervalLowerBound"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-interval-lower-bound)))
    (aws-sdk/generator/shape::to-query-params "MetricIntervalUpperBound"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-interval-upper-bound)))
    (aws-sdk/generator/shape::to-query-params "ScalingAdjustment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scaling-adjustment))))))
(common-lisp:progn
 (common-lisp:deftype step-adjustments ()
   '(trivial-types:proper-list step-adjustment))
 (common-lisp:defun |make-step-adjustments|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list step-adjustment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (step-scaling-policy-configuration (:copier common-lisp:nil))
   (adjustment-type common-lisp:nil :type
    (common-lisp:or adjustment-type common-lisp:null))
   (step-adjustments common-lisp:nil :type
    (common-lisp:or step-adjustments common-lisp:null))
   (min-adjustment-magnitude common-lisp:nil :type
    (common-lisp:or min-adjustment-magnitude common-lisp:null))
   (cooldown common-lisp:nil :type (common-lisp:or cooldown common-lisp:null))
   (metric-aggregation-type common-lisp:nil :type
    (common-lisp:or metric-aggregation-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'step-scaling-policy-configuration
                    'make-step-scaling-policy-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          step-scaling-policy-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AdjustmentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'adjustment-type)))
    (aws-sdk/generator/shape::to-query-params "StepAdjustments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'step-adjustments)))
    (aws-sdk/generator/shape::to-query-params "MinAdjustmentMagnitude"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'min-adjustment-magnitude)))
    (aws-sdk/generator/shape::to-query-params "Cooldown"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cooldown)))
    (aws-sdk/generator/shape::to-query-params "MetricAggregationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-aggregation-type))))))
(common-lisp:progn
 (common-lisp:defstruct
     (target-tracking-scaling-policy-configuration (:copier common-lisp:nil))
   (target-value
    (common-lisp:error
     #A((25) common-lisp:base-char . ":target-value is required"))
    :type (common-lisp:or metric-scale common-lisp:null))
   (predefined-metric-specification common-lisp:nil :type
    (common-lisp:or predefined-metric-specification common-lisp:null))
   (customized-metric-specification common-lisp:nil :type
    (common-lisp:or customized-metric-specification common-lisp:null))
   (scale-out-cooldown common-lisp:nil :type
    (common-lisp:or cooldown common-lisp:null))
   (scale-in-cooldown common-lisp:nil :type
    (common-lisp:or cooldown common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'target-tracking-scaling-policy-configuration
                    'make-target-tracking-scaling-policy-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          target-tracking-scaling-policy-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-value)))
    (aws-sdk/generator/shape::to-query-params "PredefinedMetricSpecification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'predefined-metric-specification)))
    (aws-sdk/generator/shape::to-query-params "CustomizedMetricSpecification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'customized-metric-specification)))
    (aws-sdk/generator/shape::to-query-params "ScaleOutCooldown"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scale-out-cooldown)))
    (aws-sdk/generator/shape::to-query-params "ScaleInCooldown"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scale-in-cooldown))))))
(common-lisp:deftype timestamp-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (validation-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'make-validation-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape validation-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype xml-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun delete-scaling-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key policy-name service-namespace resource-id
                     scalable-dimension)
   (common-lisp:declare
    (common-lisp:ignorable policy-name service-namespace resource-id
     scalable-dimension))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-scaling-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((23) common-lisp:base-char
                                  . "application-autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteScalingPolicy")
                                  ("Version" ,@"2016-02-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteScalingPolicyResponse" common-lisp:nil)))
 (common-lisp:export 'delete-scaling-policy))
(common-lisp:progn
 (common-lisp:defun deregister-scalable-target
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-namespace resource-id
                     scalable-dimension)
   (common-lisp:declare
    (common-lisp:ignorable service-namespace resource-id scalable-dimension))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-deregister-scalable-target-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((23) common-lisp:base-char
                                  . "application-autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeregisterScalableTarget")
                                  ("Version" ,@"2016-02-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeregisterScalableTargetResponse" common-lisp:nil)))
 (common-lisp:export 'deregister-scalable-target))
(common-lisp:progn
 (common-lisp:defun describe-scalable-targets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-namespace resource-ids
                     scalable-dimension max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable service-namespace resource-ids scalable-dimension
     max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-scalable-targets-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((23) common-lisp:base-char
                                  . "application-autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeScalableTargets")
                                  ("Version" ,@"2016-02-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeScalableTargetsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-scalable-targets))
(common-lisp:progn
 (common-lisp:defun describe-scaling-activities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-namespace resource-id
                     scalable-dimension max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable service-namespace resource-id scalable-dimension
     max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-scaling-activities-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((23) common-lisp:base-char
                                  . "application-autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeScalingActivities")
                                  ("Version" ,@"2016-02-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeScalingActivitiesResponse" common-lisp:nil)))
 (common-lisp:export 'describe-scaling-activities))
(common-lisp:progn
 (common-lisp:defun describe-scaling-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key policy-names service-namespace
                     resource-id scalable-dimension max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable policy-names service-namespace resource-id
     scalable-dimension max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-scaling-policies-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((23) common-lisp:base-char
                                  . "application-autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeScalingPolicies")
                                  ("Version" ,@"2016-02-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeScalingPoliciesResponse" common-lisp:nil)))
 (common-lisp:export 'describe-scaling-policies))
(common-lisp:progn
 (common-lisp:defun put-scaling-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key policy-name service-namespace resource-id
                     scalable-dimension policy-type
                     step-scaling-policy-configuration
                     target-tracking-scaling-policy-configuration)
   (common-lisp:declare
    (common-lisp:ignorable policy-name service-namespace resource-id
     scalable-dimension policy-type step-scaling-policy-configuration
     target-tracking-scaling-policy-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-scaling-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((23) common-lisp:base-char
                                  . "application-autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutScalingPolicy")
                                  ("Version" ,@"2016-02-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutScalingPolicyResponse" common-lisp:nil)))
 (common-lisp:export 'put-scaling-policy))
(common-lisp:progn
 (common-lisp:defun register-scalable-target
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-namespace resource-id
                     scalable-dimension min-capacity max-capacity role-arn)
   (common-lisp:declare
    (common-lisp:ignorable service-namespace resource-id scalable-dimension
     min-capacity max-capacity role-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-register-scalable-target-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((23) common-lisp:base-char
                                  . "application-autoscaling")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RegisterScalableTarget")
                                  ("Version" ,@"2016-02-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RegisterScalableTargetResponse" common-lisp:nil)))
 (common-lisp:export 'register-scalable-target))