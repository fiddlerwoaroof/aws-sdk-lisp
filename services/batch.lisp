;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/batch
  (:use)
  (:nicknames #:aws/batch)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/batch)

(common-lisp:progn
 (common-lisp:defstruct (attempt-container-detail (:copier common-lisp:nil))
   (container-instance-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (task-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (exit-code common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (reason common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (log-stream-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attempt-container-detail 'make-attempt-container-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attempt-container-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "containerInstanceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'container-instance-arn)))
    (aws-sdk/generator/shape::to-query-params "taskArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-arn)))
    (aws-sdk/generator/shape::to-query-params "exitCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'exit-code)))
    (aws-sdk/generator/shape::to-query-params "reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason)))
    (aws-sdk/generator/shape::to-query-params "logStreamName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-stream-name))))))
(common-lisp:progn
 (common-lisp:defstruct (attempt-detail (:copier common-lisp:nil))
   (container common-lisp:nil :type
    (common-lisp:or attempt-container-detail common-lisp:null))
   (started-at common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (stopped-at common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (status-reason common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attempt-detail 'make-attempt-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape attempt-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "container"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'container)))
    (aws-sdk/generator/shape::to-query-params "startedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-at)))
    (aws-sdk/generator/shape::to-query-params "stoppedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stopped-at)))
    (aws-sdk/generator/shape::to-query-params "statusReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-reason))))))
(common-lisp:progn
 (common-lisp:deftype attempt-details ()
   '(trivial-types:proper-list attempt-detail))
 (common-lisp:defun |make-attempt-details|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attempt-detail))
   aws-sdk/generator/shape::members))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype cestate () 'common-lisp:string)
(common-lisp:deftype cestatus () 'common-lisp:string)
(common-lisp:deftype cetype () 'common-lisp:string)
(common-lisp:deftype crtype () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (cancel-job-request (:copier common-lisp:nil))
   (job-id
    (common-lisp:error #A((18) common-lisp:base-char . ":jobid is required"))
    :type (common-lisp:or string common-lisp:null))
   (reason
    (common-lisp:error #A((19) common-lisp:base-char . ":reason is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cancel-job-request 'make-cancel-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cancel-job-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id)))
    (aws-sdk/generator/shape::to-query-params "reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason))))))
(common-lisp:progn
 (common-lisp:defstruct (cancel-job-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'cancel-job-response 'make-cancel-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cancel-job-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (client-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'client-exception 'make-client-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape client-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (compute-environment-detail (:copier common-lisp:nil))
   (compute-environment-name
    (common-lisp:error
     #A((35) common-lisp:base-char . ":computeenvironmentname is required"))
    :type (common-lisp:or string common-lisp:null))
   (compute-environment-arn
    (common-lisp:error
     #A((34) common-lisp:base-char . ":computeenvironmentarn is required"))
    :type (common-lisp:or string common-lisp:null))
   (ecs-cluster-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":ecsclusterarn is required"))
    :type (common-lisp:or string common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or cetype common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or cestate common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or cestatus common-lisp:null))
   (status-reason common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (compute-resources common-lisp:nil :type
    (common-lisp:or compute-resource common-lisp:null))
   (service-role common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'compute-environment-detail
                    'make-compute-environment-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          compute-environment-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "computeEnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-environment-name)))
    (aws-sdk/generator/shape::to-query-params "computeEnvironmentArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-environment-arn)))
    (aws-sdk/generator/shape::to-query-params "ecsClusterArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ecs-cluster-arn)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "state"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "statusReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-reason)))
    (aws-sdk/generator/shape::to-query-params "computeResources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-resources)))
    (aws-sdk/generator/shape::to-query-params "serviceRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role))))))
(common-lisp:progn
 (common-lisp:deftype compute-environment-detail-list ()
   '(trivial-types:proper-list compute-environment-detail))
 (common-lisp:defun |make-compute-environment-detail-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            compute-environment-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (compute-environment-order (:copier common-lisp:nil))
   (order
    (common-lisp:error #A((18) common-lisp:base-char . ":order is required"))
    :type (common-lisp:or integer common-lisp:null))
   (compute-environment
    (common-lisp:error
     #A((31) common-lisp:base-char . ":computeenvironment is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'compute-environment-order
                    'make-compute-environment-order))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          compute-environment-order))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "order"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'order)))
    (aws-sdk/generator/shape::to-query-params "computeEnvironment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-environment))))))
(common-lisp:progn
 (common-lisp:deftype compute-environment-orders ()
   '(trivial-types:proper-list compute-environment-order))
 (common-lisp:defun |make-compute-environment-orders|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            compute-environment-order))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (compute-resource (:copier common-lisp:nil))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or crtype common-lisp:null))
   (minv-cpus
    (common-lisp:error
     #A((21) common-lisp:base-char . ":minvcpus is required"))
    :type (common-lisp:or integer common-lisp:null))
   (maxv-cpus
    (common-lisp:error
     #A((21) common-lisp:base-char . ":maxvcpus is required"))
    :type (common-lisp:or integer common-lisp:null))
   (desiredv-cpus common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (instance-types
    (common-lisp:error
     #A((26) common-lisp:base-char . ":instancetypes is required"))
    :type (common-lisp:or string-list common-lisp:null))
   (image-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (subnets
    (common-lisp:error #A((20) common-lisp:base-char . ":subnets is required"))
    :type (common-lisp:or string-list common-lisp:null))
   (security-group-ids
    (common-lisp:error
     #A((29) common-lisp:base-char . ":securitygroupids is required"))
    :type (common-lisp:or string-list common-lisp:null))
   (ec2key-pair common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-role
    (common-lisp:error
     #A((25) common-lisp:base-char . ":instancerole is required"))
    :type (common-lisp:or string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags-map common-lisp:null))
   (bid-percentage common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (spot-iam-fleet-role common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'compute-resource 'make-compute-resource))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape compute-resource))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "minvCpus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'minv-cpus)))
    (aws-sdk/generator/shape::to-query-params "maxvCpus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'maxv-cpus)))
    (aws-sdk/generator/shape::to-query-params "desiredvCpus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'desiredv-cpus)))
    (aws-sdk/generator/shape::to-query-params "instanceTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-types)))
    (aws-sdk/generator/shape::to-query-params "imageId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-id)))
    (aws-sdk/generator/shape::to-query-params "subnets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnets)))
    (aws-sdk/generator/shape::to-query-params "securityGroupIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-group-ids)))
    (aws-sdk/generator/shape::to-query-params "ec2KeyPair"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2key-pair)))
    (aws-sdk/generator/shape::to-query-params "instanceRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-role)))
    (aws-sdk/generator/shape::to-query-params "tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "bidPercentage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bid-percentage)))
    (aws-sdk/generator/shape::to-query-params "spotIamFleetRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'spot-iam-fleet-role))))))
(common-lisp:progn
 (common-lisp:defstruct (compute-resource-update (:copier common-lisp:nil))
   (minv-cpus common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (maxv-cpus common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (desiredv-cpus common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'compute-resource-update 'make-compute-resource-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          compute-resource-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "minvCpus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'minv-cpus)))
    (aws-sdk/generator/shape::to-query-params "maxvCpus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'maxv-cpus)))
    (aws-sdk/generator/shape::to-query-params "desiredvCpus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'desiredv-cpus))))))
(common-lisp:progn
 (common-lisp:defstruct (container-detail (:copier common-lisp:nil))
   (image common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vcpus common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (memory common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (command common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (job-role-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (volumes common-lisp:nil :type (common-lisp:or volumes common-lisp:null))
   (environment common-lisp:nil :type
    (common-lisp:or environment-variables common-lisp:null))
   (mount-points common-lisp:nil :type
    (common-lisp:or mount-points common-lisp:null))
   (readonly-root-filesystem common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (ulimits common-lisp:nil :type (common-lisp:or ulimits common-lisp:null))
   (privileged common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (user common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (exit-code common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (reason common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (container-instance-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (task-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (log-stream-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'container-detail 'make-container-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape container-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "image"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image)))
    (aws-sdk/generator/shape::to-query-params "vcpus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vcpus)))
    (aws-sdk/generator/shape::to-query-params "memory"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'memory)))
    (aws-sdk/generator/shape::to-query-params "command"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'command)))
    (aws-sdk/generator/shape::to-query-params "jobRoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-role-arn)))
    (aws-sdk/generator/shape::to-query-params "volumes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volumes)))
    (aws-sdk/generator/shape::to-query-params "environment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment)))
    (aws-sdk/generator/shape::to-query-params "mountPoints"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mount-points)))
    (aws-sdk/generator/shape::to-query-params "readonlyRootFilesystem"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'readonly-root-filesystem)))
    (aws-sdk/generator/shape::to-query-params "ulimits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ulimits)))
    (aws-sdk/generator/shape::to-query-params "privileged"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'privileged)))
    (aws-sdk/generator/shape::to-query-params "user"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user)))
    (aws-sdk/generator/shape::to-query-params "exitCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'exit-code)))
    (aws-sdk/generator/shape::to-query-params "reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason)))
    (aws-sdk/generator/shape::to-query-params "containerInstanceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'container-instance-arn)))
    (aws-sdk/generator/shape::to-query-params "taskArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-arn)))
    (aws-sdk/generator/shape::to-query-params "logStreamName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-stream-name))))))
(common-lisp:progn
 (common-lisp:defstruct (container-overrides (:copier common-lisp:nil))
   (vcpus common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (memory common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (command common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (environment common-lisp:nil :type
    (common-lisp:or environment-variables common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'container-overrides 'make-container-overrides))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape container-overrides))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "vcpus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vcpus)))
    (aws-sdk/generator/shape::to-query-params "memory"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'memory)))
    (aws-sdk/generator/shape::to-query-params "command"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'command)))
    (aws-sdk/generator/shape::to-query-params "environment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment))))))
(common-lisp:progn
 (common-lisp:defstruct (container-properties (:copier common-lisp:nil))
   (image
    (common-lisp:error #A((18) common-lisp:base-char . ":image is required"))
    :type (common-lisp:or string common-lisp:null))
   (vcpus
    (common-lisp:error #A((18) common-lisp:base-char . ":vcpus is required"))
    :type (common-lisp:or integer common-lisp:null))
   (memory
    (common-lisp:error #A((19) common-lisp:base-char . ":memory is required"))
    :type (common-lisp:or integer common-lisp:null))
   (command common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (job-role-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (volumes common-lisp:nil :type (common-lisp:or volumes common-lisp:null))
   (environment common-lisp:nil :type
    (common-lisp:or environment-variables common-lisp:null))
   (mount-points common-lisp:nil :type
    (common-lisp:or mount-points common-lisp:null))
   (readonly-root-filesystem common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (privileged common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (ulimits common-lisp:nil :type (common-lisp:or ulimits common-lisp:null))
   (user common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'container-properties 'make-container-properties))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape container-properties))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "image"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image)))
    (aws-sdk/generator/shape::to-query-params "vcpus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vcpus)))
    (aws-sdk/generator/shape::to-query-params "memory"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'memory)))
    (aws-sdk/generator/shape::to-query-params "command"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'command)))
    (aws-sdk/generator/shape::to-query-params "jobRoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-role-arn)))
    (aws-sdk/generator/shape::to-query-params "volumes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volumes)))
    (aws-sdk/generator/shape::to-query-params "environment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment)))
    (aws-sdk/generator/shape::to-query-params "mountPoints"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mount-points)))
    (aws-sdk/generator/shape::to-query-params "readonlyRootFilesystem"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'readonly-root-filesystem)))
    (aws-sdk/generator/shape::to-query-params "privileged"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'privileged)))
    (aws-sdk/generator/shape::to-query-params "ulimits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ulimits)))
    (aws-sdk/generator/shape::to-query-params "user"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-compute-environment-request (:copier common-lisp:nil))
   (compute-environment-name
    (common-lisp:error
     #A((35) common-lisp:base-char . ":computeenvironmentname is required"))
    :type (common-lisp:or string common-lisp:null))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or cetype common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or cestate common-lisp:null))
   (compute-resources common-lisp:nil :type
    (common-lisp:or compute-resource common-lisp:null))
   (service-role
    (common-lisp:error
     #A((24) common-lisp:base-char . ":servicerole is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-compute-environment-request
                    'make-create-compute-environment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-compute-environment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "computeEnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-environment-name)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "state"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "computeResources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-resources)))
    (aws-sdk/generator/shape::to-query-params "serviceRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-compute-environment-response (:copier common-lisp:nil))
   (compute-environment-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (compute-environment-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-compute-environment-response
                    'make-create-compute-environment-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-compute-environment-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "computeEnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-environment-name)))
    (aws-sdk/generator/shape::to-query-params "computeEnvironmentArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-environment-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (create-job-queue-request (:copier common-lisp:nil))
   (job-queue-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":jobqueuename is required"))
    :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or jqstate common-lisp:null))
   (priority
    (common-lisp:error
     #A((21) common-lisp:base-char . ":priority is required"))
    :type (common-lisp:or integer common-lisp:null))
   (compute-environment-order
    (common-lisp:error
     #A((36) common-lisp:base-char . ":computeenvironmentorder is required"))
    :type (common-lisp:or compute-environment-orders common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-job-queue-request 'make-create-job-queue-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-job-queue-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobQueueName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-queue-name)))
    (aws-sdk/generator/shape::to-query-params "state"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "priority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'priority)))
    (aws-sdk/generator/shape::to-query-params "computeEnvironmentOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-environment-order))))))
(common-lisp:progn
 (common-lisp:defstruct (create-job-queue-response (:copier common-lisp:nil))
   (job-queue-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":jobqueuename is required"))
    :type (common-lisp:or string common-lisp:null))
   (job-queue-arn
    (common-lisp:error
     #A((24) common-lisp:base-char . ":jobqueuearn is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-job-queue-response
                    'make-create-job-queue-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-job-queue-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobQueueName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-queue-name)))
    (aws-sdk/generator/shape::to-query-params "jobQueueArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-queue-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-compute-environment-request (:copier common-lisp:nil))
   (compute-environment
    (common-lisp:error
     #A((31) common-lisp:base-char . ":computeenvironment is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-compute-environment-request
                    'make-delete-compute-environment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-compute-environment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "computeEnvironment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-environment))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-compute-environment-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-compute-environment-response
                    'make-delete-compute-environment-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-compute-environment-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-job-queue-request (:copier common-lisp:nil))
   (job-queue
    (common-lisp:error
     #A((21) common-lisp:base-char . ":jobqueue is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-job-queue-request 'make-delete-job-queue-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-job-queue-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobQueue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-queue))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-job-queue-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-job-queue-response
                    'make-delete-job-queue-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-job-queue-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-job-definition-request (:copier common-lisp:nil))
   (job-definition
    (common-lisp:error
     #A((26) common-lisp:base-char . ":jobdefinition is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-job-definition-request
                    'make-deregister-job-definition-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deregister-job-definition-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobDefinition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-definition))))))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-job-definition-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'deregister-job-definition-response
                    'make-deregister-job-definition-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deregister-job-definition-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-compute-environments-request (:copier common-lisp:nil))
   (compute-environments common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-compute-environments-request
                    'make-describe-compute-environments-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-compute-environments-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "computeEnvironments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-environments)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-compute-environments-response (:copier common-lisp:nil))
   (compute-environments common-lisp:nil :type
    (common-lisp:or compute-environment-detail-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-compute-environments-response
                    'make-describe-compute-environments-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-compute-environments-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "computeEnvironments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-environments)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-job-definitions-request (:copier common-lisp:nil))
   (job-definitions common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (job-definition-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-job-definitions-request
                    'make-describe-job-definitions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-job-definitions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobDefinitions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-definitions)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "jobDefinitionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-definition-name)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-job-definitions-response (:copier common-lisp:nil))
   (job-definitions common-lisp:nil :type
    (common-lisp:or job-definition-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-job-definitions-response
                    'make-describe-job-definitions-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-job-definitions-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobDefinitions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-definitions)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-job-queues-request (:copier common-lisp:nil))
   (job-queues common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-job-queues-request
                    'make-describe-job-queues-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-job-queues-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobQueues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-queues)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-job-queues-response (:copier common-lisp:nil))
   (job-queues common-lisp:nil :type
    (common-lisp:or job-queue-detail-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-job-queues-response
                    'make-describe-job-queues-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-job-queues-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobQueues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-queues)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-jobs-request (:copier common-lisp:nil))
   (jobs
    (common-lisp:error #A((17) common-lisp:base-char . ":jobs is required"))
    :type (common-lisp:or string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-jobs-request 'make-describe-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-jobs-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'jobs))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-jobs-response (:copier common-lisp:nil))
   (jobs common-lisp:nil :type
    (common-lisp:or job-detail-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-jobs-response 'make-describe-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-jobs-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'jobs))))))
(common-lisp:progn
 (common-lisp:deftype environment-variables ()
   '(trivial-types:proper-list key-value-pair))
 (common-lisp:defun |make-environment-variables|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list key-value-pair))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (host (:copier common-lisp:nil))
   (source-path common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'host 'make-host))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape host))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "sourcePath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-path))))))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:deftype jqstate () 'common-lisp:string)
(common-lisp:deftype jqstatus () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (job-definition (:copier common-lisp:nil))
   (job-definition-name
    (common-lisp:error
     #A((30) common-lisp:base-char . ":jobdefinitionname is required"))
    :type (common-lisp:or string common-lisp:null))
   (job-definition-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":jobdefinitionarn is required"))
    :type (common-lisp:or string common-lisp:null))
   (revision
    (common-lisp:error
     #A((21) common-lisp:base-char . ":revision is required"))
    :type (common-lisp:or integer common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or string common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or parameters-map common-lisp:null))
   (retry-strategy common-lisp:nil :type
    (common-lisp:or retry-strategy common-lisp:null))
   (container-properties common-lisp:nil :type
    (common-lisp:or container-properties common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job-definition 'make-job-definition))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape job-definition))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobDefinitionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-definition-name)))
    (aws-sdk/generator/shape::to-query-params "jobDefinitionArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-definition-arn)))
    (aws-sdk/generator/shape::to-query-params "revision"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'revision)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "retryStrategy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'retry-strategy)))
    (aws-sdk/generator/shape::to-query-params "containerProperties"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'container-properties))))))
(common-lisp:progn
 (common-lisp:deftype job-definition-list ()
   '(trivial-types:proper-list job-definition))
 (common-lisp:defun |make-job-definition-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-definition))
   aws-sdk/generator/shape::members))
(common-lisp:deftype job-definition-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (job-dependency (:copier common-lisp:nil))
   (job-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job-dependency 'make-job-dependency))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape job-dependency))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id))))))
(common-lisp:progn
 (common-lisp:deftype job-dependency-list ()
   '(trivial-types:proper-list job-dependency))
 (common-lisp:defun |make-job-dependency-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-dependency))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (job-detail (:copier common-lisp:nil))
   (job-name
    (common-lisp:error #A((20) common-lisp:base-char . ":jobname is required"))
    :type (common-lisp:or string common-lisp:null))
   (job-id
    (common-lisp:error #A((18) common-lisp:base-char . ":jobid is required"))
    :type (common-lisp:or string common-lisp:null))
   (job-queue
    (common-lisp:error
     #A((21) common-lisp:base-char . ":jobqueue is required"))
    :type (common-lisp:or string common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or job-status common-lisp:null))
   (attempts common-lisp:nil :type
    (common-lisp:or attempt-details common-lisp:null))
   (status-reason common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (created-at common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (retry-strategy common-lisp:nil :type
    (common-lisp:or retry-strategy common-lisp:null))
   (started-at
    (common-lisp:error
     #A((22) common-lisp:base-char . ":startedat is required"))
    :type (common-lisp:or long common-lisp:null))
   (stopped-at common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (depends-on common-lisp:nil :type
    (common-lisp:or job-dependency-list common-lisp:null))
   (job-definition
    (common-lisp:error
     #A((26) common-lisp:base-char . ":jobdefinition is required"))
    :type (common-lisp:or string common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or parameters-map common-lisp:null))
   (container common-lisp:nil :type
    (common-lisp:or container-detail common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job-detail 'make-job-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape job-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-name)))
    (aws-sdk/generator/shape::to-query-params "jobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id)))
    (aws-sdk/generator/shape::to-query-params "jobQueue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-queue)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "attempts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attempts)))
    (aws-sdk/generator/shape::to-query-params "statusReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-reason)))
    (aws-sdk/generator/shape::to-query-params "createdAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "retryStrategy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'retry-strategy)))
    (aws-sdk/generator/shape::to-query-params "startedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-at)))
    (aws-sdk/generator/shape::to-query-params "stoppedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stopped-at)))
    (aws-sdk/generator/shape::to-query-params "dependsOn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'depends-on)))
    (aws-sdk/generator/shape::to-query-params "jobDefinition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-definition)))
    (aws-sdk/generator/shape::to-query-params "parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "container"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'container))))))
(common-lisp:progn
 (common-lisp:deftype job-detail-list ()
   '(trivial-types:proper-list job-detail))
 (common-lisp:defun |make-job-detail-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (job-queue-detail (:copier common-lisp:nil))
   (job-queue-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":jobqueuename is required"))
    :type (common-lisp:or string common-lisp:null))
   (job-queue-arn
    (common-lisp:error
     #A((24) common-lisp:base-char . ":jobqueuearn is required"))
    :type (common-lisp:or string common-lisp:null))
   (state
    (common-lisp:error #A((18) common-lisp:base-char . ":state is required"))
    :type (common-lisp:or jqstate common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or jqstatus common-lisp:null))
   (status-reason common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (priority
    (common-lisp:error
     #A((21) common-lisp:base-char . ":priority is required"))
    :type (common-lisp:or integer common-lisp:null))
   (compute-environment-order
    (common-lisp:error
     #A((36) common-lisp:base-char . ":computeenvironmentorder is required"))
    :type (common-lisp:or compute-environment-orders common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'job-queue-detail 'make-job-queue-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape job-queue-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobQueueName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-queue-name)))
    (aws-sdk/generator/shape::to-query-params "jobQueueArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-queue-arn)))
    (aws-sdk/generator/shape::to-query-params "state"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "statusReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-reason)))
    (aws-sdk/generator/shape::to-query-params "priority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'priority)))
    (aws-sdk/generator/shape::to-query-params "computeEnvironmentOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-environment-order))))))
(common-lisp:progn
 (common-lisp:deftype job-queue-detail-list ()
   '(trivial-types:proper-list job-queue-detail))
 (common-lisp:defun |make-job-queue-detail-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-queue-detail))
   aws-sdk/generator/shape::members))
(common-lisp:deftype job-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (job-summary (:copier common-lisp:nil))
   (job-id
    (common-lisp:error #A((18) common-lisp:base-char . ":jobid is required"))
    :type (common-lisp:or string common-lisp:null))
   (job-name
    (common-lisp:error #A((20) common-lisp:base-char . ":jobname is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job-summary 'make-job-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape job-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id)))
    (aws-sdk/generator/shape::to-query-params "jobName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-name))))))
(common-lisp:progn
 (common-lisp:deftype job-summary-list ()
   '(trivial-types:proper-list job-summary))
 (common-lisp:defun |make-job-summary-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (key-value-pair (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'key-value-pair 'make-key-value-pair))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape key-value-pair))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:defstruct (list-jobs-request (:copier common-lisp:nil))
   (job-queue
    (common-lisp:error
     #A((21) common-lisp:base-char . ":jobqueue is required"))
    :type (common-lisp:or string common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-jobs-request 'make-list-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-jobs-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobQueue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-queue)))
    (aws-sdk/generator/shape::to-query-params "jobStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-status)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-jobs-response (:copier common-lisp:nil))
   (job-summary-list
    (common-lisp:error
     #A((27) common-lisp:base-char . ":jobsummarylist is required"))
    :type (common-lisp:or job-summary-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-jobs-response 'make-list-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-jobs-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobSummaryList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-summary-list)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (mount-point (:copier common-lisp:nil))
   (container-path common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (read-only common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (source-volume common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'mount-point 'make-mount-point))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape mount-point))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "containerPath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'container-path)))
    (aws-sdk/generator/shape::to-query-params "readOnly"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'read-only)))
    (aws-sdk/generator/shape::to-query-params "sourceVolume"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-volume))))))
(common-lisp:progn
 (common-lisp:deftype mount-points () '(trivial-types:proper-list mount-point))
 (common-lisp:defun |make-mount-points|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list mount-point))
   aws-sdk/generator/shape::members))
(common-lisp:defstruct
    (parameters-map
     (:constructor |make-parameters-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct
     (register-job-definition-request (:copier common-lisp:nil))
   (job-definition-name
    (common-lisp:error
     #A((30) common-lisp:base-char . ":jobdefinitionname is required"))
    :type (common-lisp:or string common-lisp:null))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or job-definition-type common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or parameters-map common-lisp:null))
   (container-properties common-lisp:nil :type
    (common-lisp:or container-properties common-lisp:null))
   (retry-strategy common-lisp:nil :type
    (common-lisp:or retry-strategy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-job-definition-request
                    'make-register-job-definition-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-job-definition-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobDefinitionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-definition-name)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "containerProperties"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'container-properties)))
    (aws-sdk/generator/shape::to-query-params "retryStrategy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'retry-strategy))))))
(common-lisp:progn
 (common-lisp:defstruct
     (register-job-definition-response (:copier common-lisp:nil))
   (job-definition-name
    (common-lisp:error
     #A((30) common-lisp:base-char . ":jobdefinitionname is required"))
    :type (common-lisp:or string common-lisp:null))
   (job-definition-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":jobdefinitionarn is required"))
    :type (common-lisp:or string common-lisp:null))
   (revision
    (common-lisp:error
     #A((21) common-lisp:base-char . ":revision is required"))
    :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-job-definition-response
                    'make-register-job-definition-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-job-definition-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobDefinitionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-definition-name)))
    (aws-sdk/generator/shape::to-query-params "jobDefinitionArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-definition-arn)))
    (aws-sdk/generator/shape::to-query-params "revision"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'revision))))))
(common-lisp:progn
 (common-lisp:defstruct (retry-strategy (:copier common-lisp:nil))
   (attempts common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'retry-strategy 'make-retry-strategy))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape retry-strategy))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "attempts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attempts))))))
(common-lisp:progn
 (common-lisp:defstruct (server-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'server-exception 'make-server-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape server-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-string-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (submit-job-request (:copier common-lisp:nil))
   (job-name
    (common-lisp:error #A((20) common-lisp:base-char . ":jobname is required"))
    :type (common-lisp:or string common-lisp:null))
   (job-queue
    (common-lisp:error
     #A((21) common-lisp:base-char . ":jobqueue is required"))
    :type (common-lisp:or string common-lisp:null))
   (depends-on common-lisp:nil :type
    (common-lisp:or job-dependency-list common-lisp:null))
   (job-definition
    (common-lisp:error
     #A((26) common-lisp:base-char . ":jobdefinition is required"))
    :type (common-lisp:or string common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or parameters-map common-lisp:null))
   (container-overrides common-lisp:nil :type
    (common-lisp:or container-overrides common-lisp:null))
   (retry-strategy common-lisp:nil :type
    (common-lisp:or retry-strategy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'submit-job-request 'make-submit-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape submit-job-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-name)))
    (aws-sdk/generator/shape::to-query-params "jobQueue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-queue)))
    (aws-sdk/generator/shape::to-query-params "dependsOn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'depends-on)))
    (aws-sdk/generator/shape::to-query-params "jobDefinition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-definition)))
    (aws-sdk/generator/shape::to-query-params "parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "containerOverrides"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'container-overrides)))
    (aws-sdk/generator/shape::to-query-params "retryStrategy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'retry-strategy))))))
(common-lisp:progn
 (common-lisp:defstruct (submit-job-response (:copier common-lisp:nil))
   (job-name
    (common-lisp:error #A((20) common-lisp:base-char . ":jobname is required"))
    :type (common-lisp:or string common-lisp:null))
   (job-id
    (common-lisp:error #A((18) common-lisp:base-char . ":jobid is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'submit-job-response 'make-submit-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape submit-job-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-name)))
    (aws-sdk/generator/shape::to-query-params "jobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id))))))
(common-lisp:defstruct
    (tags-map
     (:constructor |make-tags-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (terminate-job-request (:copier common-lisp:nil))
   (job-id
    (common-lisp:error #A((18) common-lisp:base-char . ":jobid is required"))
    :type (common-lisp:or string common-lisp:null))
   (reason
    (common-lisp:error #A((19) common-lisp:base-char . ":reason is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'terminate-job-request 'make-terminate-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          terminate-job-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id)))
    (aws-sdk/generator/shape::to-query-params "reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason))))))
(common-lisp:progn
 (common-lisp:defstruct (terminate-job-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'terminate-job-response 'make-terminate-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          terminate-job-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (ulimit (:copier common-lisp:nil))
   (hard-limit
    (common-lisp:error
     #A((22) common-lisp:base-char . ":hardlimit is required"))
    :type (common-lisp:or integer common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (soft-limit
    (common-lisp:error
     #A((22) common-lisp:base-char . ":softlimit is required"))
    :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ulimit 'make-ulimit))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape ulimit))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "hardLimit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hard-limit)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "softLimit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'soft-limit))))))
(common-lisp:progn
 (common-lisp:deftype ulimits () '(trivial-types:proper-list ulimit))
 (common-lisp:defun |make-ulimits|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ulimit))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (update-compute-environment-request (:copier common-lisp:nil))
   (compute-environment
    (common-lisp:error
     #A((31) common-lisp:base-char . ":computeenvironment is required"))
    :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or cestate common-lisp:null))
   (compute-resources common-lisp:nil :type
    (common-lisp:or compute-resource-update common-lisp:null))
   (service-role common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-compute-environment-request
                    'make-update-compute-environment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-compute-environment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "computeEnvironment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-environment)))
    (aws-sdk/generator/shape::to-query-params "state"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "computeResources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-resources)))
    (aws-sdk/generator/shape::to-query-params "serviceRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-compute-environment-response (:copier common-lisp:nil))
   (compute-environment-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (compute-environment-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-compute-environment-response
                    'make-update-compute-environment-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-compute-environment-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "computeEnvironmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-environment-name)))
    (aws-sdk/generator/shape::to-query-params "computeEnvironmentArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-environment-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (update-job-queue-request (:copier common-lisp:nil))
   (job-queue
    (common-lisp:error
     #A((21) common-lisp:base-char . ":jobqueue is required"))
    :type (common-lisp:or string common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or jqstate common-lisp:null))
   (priority common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (compute-environment-order common-lisp:nil :type
    (common-lisp:or compute-environment-orders common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-job-queue-request 'make-update-job-queue-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-job-queue-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobQueue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-queue)))
    (aws-sdk/generator/shape::to-query-params "state"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "priority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'priority)))
    (aws-sdk/generator/shape::to-query-params "computeEnvironmentOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-environment-order))))))
(common-lisp:progn
 (common-lisp:defstruct (update-job-queue-response (:copier common-lisp:nil))
   (job-queue-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (job-queue-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-job-queue-response
                    'make-update-job-queue-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-job-queue-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "jobQueueName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-queue-name)))
    (aws-sdk/generator/shape::to-query-params "jobQueueArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-queue-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (volume (:copier common-lisp:nil))
   (host common-lisp:nil :type (common-lisp:or host common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'volume 'make-volume))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape volume))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "host"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'host)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:deftype volumes () '(trivial-types:proper-list volume))
 (common-lisp:defun |make-volumes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list volume))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defun cancel-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id reason)
   (common-lisp:declare (common-lisp:ignorable job-id reason))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "batch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CancelJob")
                                  ("Version" ,@"2016-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CancelJobResponse" common-lisp:nil)))
 (common-lisp:export 'cancel-job))
(common-lisp:progn
 (common-lisp:defun create-compute-environment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key compute-environment-name type state
                     compute-resources service-role)
   (common-lisp:declare
    (common-lisp:ignorable compute-environment-name type state
     compute-resources service-role))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-compute-environment-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "batch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateComputeEnvironment")
                                  ("Version" ,@"2016-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateComputeEnvironmentResponse" common-lisp:nil)))
 (common-lisp:export 'create-compute-environment))
(common-lisp:progn
 (common-lisp:defun create-job-queue
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-queue-name state priority
                     compute-environment-order)
   (common-lisp:declare
    (common-lisp:ignorable job-queue-name state priority
     compute-environment-order))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-job-queue-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "batch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateJobQueue")
                                  ("Version" ,@"2016-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateJobQueueResponse" common-lisp:nil)))
 (common-lisp:export 'create-job-queue))
(common-lisp:progn
 (common-lisp:defun delete-compute-environment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key compute-environment)
   (common-lisp:declare (common-lisp:ignorable compute-environment))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-compute-environment-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "batch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteComputeEnvironment")
                                  ("Version" ,@"2016-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteComputeEnvironmentResponse" common-lisp:nil)))
 (common-lisp:export 'delete-compute-environment))
(common-lisp:progn
 (common-lisp:defun delete-job-queue
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-queue)
   (common-lisp:declare (common-lisp:ignorable job-queue))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-job-queue-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "batch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteJobQueue")
                                  ("Version" ,@"2016-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteJobQueueResponse" common-lisp:nil)))
 (common-lisp:export 'delete-job-queue))
(common-lisp:progn
 (common-lisp:defun deregister-job-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-definition)
   (common-lisp:declare (common-lisp:ignorable job-definition))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-deregister-job-definition-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "batch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeregisterJobDefinition")
                                  ("Version" ,@"2016-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeregisterJobDefinitionResponse" common-lisp:nil)))
 (common-lisp:export 'deregister-job-definition))
(common-lisp:progn
 (common-lisp:defun describe-compute-environments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key compute-environments max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable compute-environments max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-compute-environments-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "batch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeComputeEnvironments")
                                  ("Version" ,@"2016-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeComputeEnvironmentsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-compute-environments))
(common-lisp:progn
 (common-lisp:defun describe-job-definitions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-definitions max-results
                     job-definition-name status next-token)
   (common-lisp:declare
    (common-lisp:ignorable job-definitions max-results job-definition-name
     status next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-job-definitions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "batch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeJobDefinitions")
                                  ("Version" ,@"2016-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeJobDefinitionsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-job-definitions))
(common-lisp:progn
 (common-lisp:defun describe-job-queues
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-queues max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable job-queues max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-job-queues-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "batch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeJobQueues")
                                  ("Version" ,@"2016-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeJobQueuesResponse" common-lisp:nil)))
 (common-lisp:export 'describe-job-queues))
(common-lisp:progn
 (common-lisp:defun describe-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key jobs)
   (common-lisp:declare (common-lisp:ignorable jobs))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "batch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeJobs")
                                  ("Version" ,@"2016-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeJobsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-jobs))
(common-lisp:progn
 (common-lisp:defun list-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-queue job-status max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable job-queue job-status max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "batch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListJobs")
                                  ("Version" ,@"2016-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListJobsResponse" common-lisp:nil)))
 (common-lisp:export 'list-jobs))
(common-lisp:progn
 (common-lisp:defun register-job-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-definition-name type parameters
                     container-properties retry-strategy)
   (common-lisp:declare
    (common-lisp:ignorable job-definition-name type parameters
     container-properties retry-strategy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-register-job-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "batch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RegisterJobDefinition")
                                  ("Version" ,@"2016-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RegisterJobDefinitionResponse" common-lisp:nil)))
 (common-lisp:export 'register-job-definition))
(common-lisp:progn
 (common-lisp:defun submit-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-name job-queue depends-on
                     job-definition parameters container-overrides
                     retry-strategy)
   (common-lisp:declare
    (common-lisp:ignorable job-name job-queue depends-on job-definition
     parameters container-overrides retry-strategy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-submit-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "batch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SubmitJob")
                                  ("Version" ,@"2016-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SubmitJobResponse" common-lisp:nil)))
 (common-lisp:export 'submit-job))
(common-lisp:progn
 (common-lisp:defun terminate-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-id reason)
   (common-lisp:declare (common-lisp:ignorable job-id reason))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-terminate-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "batch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"TerminateJob")
                                  ("Version" ,@"2016-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "TerminateJobResponse" common-lisp:nil)))
 (common-lisp:export 'terminate-job))
(common-lisp:progn
 (common-lisp:defun update-compute-environment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key compute-environment state
                     compute-resources service-role)
   (common-lisp:declare
    (common-lisp:ignorable compute-environment state compute-resources
     service-role))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-compute-environment-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "batch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateComputeEnvironment")
                                  ("Version" ,@"2016-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateComputeEnvironmentResponse" common-lisp:nil)))
 (common-lisp:export 'update-compute-environment))
(common-lisp:progn
 (common-lisp:defun update-job-queue
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-queue state priority
                     compute-environment-order)
   (common-lisp:declare
    (common-lisp:ignorable job-queue state priority compute-environment-order))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-job-queue-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((5) common-lisp:base-char . "batch")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateJobQueue")
                                  ("Version" ,@"2016-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateJobQueueResponse" common-lisp:nil)))
 (common-lisp:export 'update-job-queue))