;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/clouddirectory
  (:use)
  (:nicknames #:aws/clouddirectory)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/clouddirectory)

(common-lisp:progn
 (common-lisp:defstruct (access-denied-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'make-access-denied-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          access-denied-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (add-facet-to-object-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (schema-facet
    (common-lisp:error
     #A((25) common-lisp:base-char . ":schema-facet is required"))
    :type (common-lisp:or schema-facet common-lisp:null))
   (object-attribute-list common-lisp:nil :type
    (common-lisp:or attribute-key-and-value-list common-lisp:null))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-facet-to-object-request
                    'make-add-facet-to-object-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-facet-to-object-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "SchemaFacet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-facet)))
    (aws-sdk/generator/shape::to-query-params "ObjectAttributeList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-attribute-list)))
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference))))))
(common-lisp:progn
 (common-lisp:defstruct
     (add-facet-to-object-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'add-facet-to-object-response
                    'make-add-facet-to-object-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-facet-to-object-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (apply-schema-request (:copier common-lisp:nil))
   (published-schema-arn
    (common-lisp:error
     #A((33) common-lisp:base-char . ":published-schema-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'apply-schema-request 'make-apply-schema-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape apply-schema-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PublishedSchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'published-schema-arn)))
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (apply-schema-response (:copier common-lisp:nil))
   (applied-schema-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (directory-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'apply-schema-response 'make-apply-schema-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          apply-schema-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AppliedSchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'applied-schema-arn)))
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn))))))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype arns () '(trivial-types:proper-list arn))
 (common-lisp:defun |make-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (attach-object-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (parent-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":parent-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (child-reference
    (common-lisp:error
     #A((28) common-lisp:base-char . ":child-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (link-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":link-name is required"))
    :type (common-lisp:or link-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attach-object-request 'make-attach-object-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attach-object-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "ParentReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-reference)))
    (aws-sdk/generator/shape::to-query-params "ChildReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'child-reference)))
    (aws-sdk/generator/shape::to-query-params "LinkName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'link-name))))))
(common-lisp:progn
 (common-lisp:defstruct (attach-object-response (:copier common-lisp:nil))
   (attached-object-identifier common-lisp:nil :type
    (common-lisp:or object-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attach-object-response 'make-attach-object-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attach-object-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AttachedObjectIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attached-object-identifier))))))
(common-lisp:progn
 (common-lisp:defstruct (attach-policy-request (:copier common-lisp:nil))
   (directory-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (policy-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":policy-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attach-policy-request 'make-attach-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attach-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "PolicyReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-reference)))
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference))))))
(common-lisp:progn
 (common-lisp:defstruct (attach-policy-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'attach-policy-response 'make-attach-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attach-policy-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (attach-to-index-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (index-reference
    (common-lisp:error
     #A((28) common-lisp:base-char . ":index-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (target-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":target-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attach-to-index-request 'make-attach-to-index-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attach-to-index-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "IndexReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-reference)))
    (aws-sdk/generator/shape::to-query-params "TargetReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-reference))))))
(common-lisp:progn
 (common-lisp:defstruct (attach-to-index-response (:copier common-lisp:nil))
   (attached-object-identifier common-lisp:nil :type
    (common-lisp:or object-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attach-to-index-response 'make-attach-to-index-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attach-to-index-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AttachedObjectIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attached-object-identifier))))))
(common-lisp:progn
 (common-lisp:defstruct (attach-typed-link-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (source-object-reference
    (common-lisp:error
     #A((36) common-lisp:base-char . ":source-object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (target-object-reference
    (common-lisp:error
     #A((36) common-lisp:base-char . ":target-object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (typed-link-facet
    (common-lisp:error
     #A((29) common-lisp:base-char . ":typed-link-facet is required"))
    :type (common-lisp:or typed-link-schema-and-facet-name common-lisp:null))
   (attributes
    (common-lisp:error
     #A((23) common-lisp:base-char . ":attributes is required"))
    :type (common-lisp:or attribute-name-and-value-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attach-typed-link-request
                    'make-attach-typed-link-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attach-typed-link-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "SourceObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-object-reference)))
    (aws-sdk/generator/shape::to-query-params "TargetObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-object-reference)))
    (aws-sdk/generator/shape::to-query-params "TypedLinkFacet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'typed-link-facet)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes))))))
(common-lisp:progn
 (common-lisp:defstruct (attach-typed-link-response (:copier common-lisp:nil))
   (typed-link-specifier common-lisp:nil :type
    (common-lisp:or typed-link-specifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attach-typed-link-response
                    'make-attach-typed-link-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attach-typed-link-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TypedLinkSpecifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'typed-link-specifier))))))
(common-lisp:progn
 (common-lisp:defstruct (attribute-key (:copier common-lisp:nil))
   (schema-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":schema-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (facet-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":facet-name is required"))
    :type (common-lisp:or facet-name common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or attribute-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attribute-key 'make-attribute-key))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape attribute-key))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn)))
    (aws-sdk/generator/shape::to-query-params "FacetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'facet-name)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (attribute-key-and-value (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or attribute-key common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or typed-attribute-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attribute-key-and-value 'make-attribute-key-and-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attribute-key-and-value))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:deftype attribute-key-and-value-list ()
   '(trivial-types:proper-list attribute-key-and-value))
 (common-lisp:defun |make-attribute-key-and-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute-key-and-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype attribute-key-list ()
   '(trivial-types:proper-list attribute-key))
 (common-lisp:defun |make-attribute-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute-key))
   aws-sdk/generator/shape::members))
(common-lisp:deftype attribute-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (attribute-name-and-value (:copier common-lisp:nil))
   (attribute-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":attribute-name is required"))
    :type (common-lisp:or attribute-name common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or typed-attribute-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attribute-name-and-value 'make-attribute-name-and-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attribute-name-and-value))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AttributeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-name)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:deftype attribute-name-and-value-list ()
   '(trivial-types:proper-list attribute-name-and-value))
 (common-lisp:defun |make-attribute-name-and-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            attribute-name-and-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype attribute-name-list ()
   '(trivial-types:proper-list attribute-name))
 (common-lisp:defun |make-attribute-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (batch-add-facet-to-object (:copier common-lisp:nil))
   (schema-facet
    (common-lisp:error
     #A((25) common-lisp:base-char . ":schema-facet is required"))
    :type (common-lisp:or schema-facet common-lisp:null))
   (object-attribute-list
    (common-lisp:error
     #A((34) common-lisp:base-char . ":object-attribute-list is required"))
    :type (common-lisp:or attribute-key-and-value-list common-lisp:null))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-add-facet-to-object
                    'make-batch-add-facet-to-object))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-add-facet-to-object))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaFacet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-facet)))
    (aws-sdk/generator/shape::to-query-params "ObjectAttributeList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-attribute-list)))
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-add-facet-to-object-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'batch-add-facet-to-object-response
                    'make-batch-add-facet-to-object-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-add-facet-to-object-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (batch-attach-object (:copier common-lisp:nil))
   (parent-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":parent-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (child-reference
    (common-lisp:error
     #A((28) common-lisp:base-char . ":child-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (link-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":link-name is required"))
    :type (common-lisp:or link-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-attach-object 'make-batch-attach-object))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape batch-attach-object))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ParentReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-reference)))
    (aws-sdk/generator/shape::to-query-params "ChildReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'child-reference)))
    (aws-sdk/generator/shape::to-query-params "LinkName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'link-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-attach-object-response (:copier common-lisp:nil))
   (attached-object-identifier common-lisp:nil :type
    (common-lisp:or object-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-attach-object-response
                    'make-batch-attach-object-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-attach-object-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "attachedObjectIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attached-object-identifier))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-attach-policy (:copier common-lisp:nil))
   (policy-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":policy-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-attach-policy 'make-batch-attach-policy))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape batch-attach-policy))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-reference)))
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-attach-policy-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'batch-attach-policy-response
                    'make-batch-attach-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-attach-policy-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (batch-attach-to-index (:copier common-lisp:nil))
   (index-reference
    (common-lisp:error
     #A((28) common-lisp:base-char . ":index-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (target-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":target-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-attach-to-index 'make-batch-attach-to-index))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-attach-to-index))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IndexReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-reference)))
    (aws-sdk/generator/shape::to-query-params "TargetReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-reference))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-attach-to-index-response (:copier common-lisp:nil))
   (attached-object-identifier common-lisp:nil :type
    (common-lisp:or object-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-attach-to-index-response
                    'make-batch-attach-to-index-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-attach-to-index-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AttachedObjectIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attached-object-identifier))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-attach-typed-link (:copier common-lisp:nil))
   (source-object-reference
    (common-lisp:error
     #A((36) common-lisp:base-char . ":source-object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (target-object-reference
    (common-lisp:error
     #A((36) common-lisp:base-char . ":target-object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (typed-link-facet
    (common-lisp:error
     #A((29) common-lisp:base-char . ":typed-link-facet is required"))
    :type (common-lisp:or typed-link-schema-and-facet-name common-lisp:null))
   (attributes
    (common-lisp:error
     #A((23) common-lisp:base-char . ":attributes is required"))
    :type (common-lisp:or attribute-name-and-value-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-attach-typed-link 'make-batch-attach-typed-link))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-attach-typed-link))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SourceObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-object-reference)))
    (aws-sdk/generator/shape::to-query-params "TargetObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-object-reference)))
    (aws-sdk/generator/shape::to-query-params "TypedLinkFacet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'typed-link-facet)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-attach-typed-link-response (:copier common-lisp:nil))
   (typed-link-specifier common-lisp:nil :type
    (common-lisp:or typed-link-specifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-attach-typed-link-response
                    'make-batch-attach-typed-link-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-attach-typed-link-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TypedLinkSpecifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'typed-link-specifier))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-create-index (:copier common-lisp:nil))
   (ordered-indexed-attribute-list
    (common-lisp:error
     #A((43) common-lisp:base-char
        . ":ordered-indexed-attribute-list is required"))
    :type (common-lisp:or attribute-key-list common-lisp:null))
   (is-unique
    (common-lisp:error
     #A((22) common-lisp:base-char . ":is-unique is required"))
    :type (common-lisp:or bool common-lisp:null))
   (parent-reference common-lisp:nil :type
    (common-lisp:or object-reference common-lisp:null))
   (link-name common-lisp:nil :type
    (common-lisp:or link-name common-lisp:null))
   (batch-reference-name common-lisp:nil :type
    (common-lisp:or batch-reference-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-create-index 'make-batch-create-index))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape batch-create-index))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OrderedIndexedAttributeList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ordered-indexed-attribute-list)))
    (aws-sdk/generator/shape::to-query-params "IsUnique"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-unique)))
    (aws-sdk/generator/shape::to-query-params "ParentReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-reference)))
    (aws-sdk/generator/shape::to-query-params "LinkName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'link-name)))
    (aws-sdk/generator/shape::to-query-params "BatchReferenceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'batch-reference-name))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-create-index-response (:copier common-lisp:nil))
   (object-identifier common-lisp:nil :type
    (common-lisp:or object-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-create-index-response
                    'make-batch-create-index-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-create-index-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ObjectIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-identifier))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-create-object (:copier common-lisp:nil))
   (schema-facet
    (common-lisp:error
     #A((25) common-lisp:base-char . ":schema-facet is required"))
    :type (common-lisp:or schema-facet-list common-lisp:null))
   (object-attribute-list
    (common-lisp:error
     #A((34) common-lisp:base-char . ":object-attribute-list is required"))
    :type (common-lisp:or attribute-key-and-value-list common-lisp:null))
   (parent-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":parent-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (link-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":link-name is required"))
    :type (common-lisp:or link-name common-lisp:null))
   (batch-reference-name
    (common-lisp:error
     #A((33) common-lisp:base-char . ":batch-reference-name is required"))
    :type (common-lisp:or batch-reference-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-create-object 'make-batch-create-object))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape batch-create-object))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaFacet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-facet)))
    (aws-sdk/generator/shape::to-query-params "ObjectAttributeList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-attribute-list)))
    (aws-sdk/generator/shape::to-query-params "ParentReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-reference)))
    (aws-sdk/generator/shape::to-query-params "LinkName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'link-name)))
    (aws-sdk/generator/shape::to-query-params "BatchReferenceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'batch-reference-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-create-object-response (:copier common-lisp:nil))
   (object-identifier common-lisp:nil :type
    (common-lisp:or object-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-create-object-response
                    'make-batch-create-object-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-create-object-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ObjectIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-identifier))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-delete-object (:copier common-lisp:nil))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-delete-object 'make-batch-delete-object))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape batch-delete-object))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-delete-object-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'batch-delete-object-response
                    'make-batch-delete-object-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-delete-object-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (batch-detach-from-index (:copier common-lisp:nil))
   (index-reference
    (common-lisp:error
     #A((28) common-lisp:base-char . ":index-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (target-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":target-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detach-from-index 'make-batch-detach-from-index))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-detach-from-index))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IndexReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-reference)))
    (aws-sdk/generator/shape::to-query-params "TargetReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-reference))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-detach-from-index-response (:copier common-lisp:nil))
   (detached-object-identifier common-lisp:nil :type
    (common-lisp:or object-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detach-from-index-response
                    'make-batch-detach-from-index-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-detach-from-index-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DetachedObjectIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'detached-object-identifier))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-detach-object (:copier common-lisp:nil))
   (parent-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":parent-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (link-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":link-name is required"))
    :type (common-lisp:or link-name common-lisp:null))
   (batch-reference-name
    (common-lisp:error
     #A((33) common-lisp:base-char . ":batch-reference-name is required"))
    :type (common-lisp:or batch-reference-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detach-object 'make-batch-detach-object))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape batch-detach-object))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ParentReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-reference)))
    (aws-sdk/generator/shape::to-query-params "LinkName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'link-name)))
    (aws-sdk/generator/shape::to-query-params "BatchReferenceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'batch-reference-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-detach-object-response (:copier common-lisp:nil))
   (detached-object-identifier common-lisp:nil :type
    (common-lisp:or object-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detach-object-response
                    'make-batch-detach-object-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-detach-object-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "detachedObjectIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'detached-object-identifier))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-detach-policy (:copier common-lisp:nil))
   (policy-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":policy-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detach-policy 'make-batch-detach-policy))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape batch-detach-policy))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-reference)))
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-detach-policy-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'batch-detach-policy-response
                    'make-batch-detach-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-detach-policy-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (batch-detach-typed-link (:copier common-lisp:nil))
   (typed-link-specifier
    (common-lisp:error
     #A((33) common-lisp:base-char . ":typed-link-specifier is required"))
    :type (common-lisp:or typed-link-specifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-detach-typed-link 'make-batch-detach-typed-link))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-detach-typed-link))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TypedLinkSpecifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'typed-link-specifier))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-detach-typed-link-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'batch-detach-typed-link-response
                    'make-batch-detach-typed-link-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-detach-typed-link-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-object-information (:copier common-lisp:nil))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-object-information
                    'make-batch-get-object-information))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-object-information))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-object-information-response (:copier common-lisp:nil))
   (schema-facets common-lisp:nil :type
    (common-lisp:or schema-facet-list common-lisp:null))
   (object-identifier common-lisp:nil :type
    (common-lisp:or object-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-object-information-response
                    'make-batch-get-object-information-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-object-information-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaFacets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-facets)))
    (aws-sdk/generator/shape::to-query-params "ObjectIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-identifier))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-list-attached-indices (:copier common-lisp:nil))
   (target-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":target-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-list-attached-indices
                    'make-batch-list-attached-indices))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-list-attached-indices))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-reference)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-list-attached-indices-response (:copier common-lisp:nil))
   (index-attachments common-lisp:nil :type
    (common-lisp:or index-attachment-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-list-attached-indices-response
                    'make-batch-list-attached-indices-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-list-attached-indices-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IndexAttachments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-attachments)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-list-incoming-typed-links (:copier common-lisp:nil))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (filter-attribute-ranges common-lisp:nil :type
    (common-lisp:or typed-link-attribute-range-list common-lisp:null))
   (filter-typed-link common-lisp:nil :type
    (common-lisp:or typed-link-schema-and-facet-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-list-incoming-typed-links
                    'make-batch-list-incoming-typed-links))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-list-incoming-typed-links))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference)))
    (aws-sdk/generator/shape::to-query-params "FilterAttributeRanges"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-attribute-ranges)))
    (aws-sdk/generator/shape::to-query-params "FilterTypedLink"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-typed-link)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-list-incoming-typed-links-response (:copier common-lisp:nil))
   (link-specifiers common-lisp:nil :type
    (common-lisp:or typed-link-specifier-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-list-incoming-typed-links-response
                    'make-batch-list-incoming-typed-links-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-list-incoming-typed-links-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LinkSpecifiers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'link-specifiers)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-list-index (:copier common-lisp:nil))
   (ranges-on-indexed-values common-lisp:nil :type
    (common-lisp:or object-attribute-range-list common-lisp:null))
   (index-reference
    (common-lisp:error
     #A((28) common-lisp:base-char . ":index-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-list-index 'make-batch-list-index))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape batch-list-index))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RangesOnIndexedValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ranges-on-indexed-values)))
    (aws-sdk/generator/shape::to-query-params "IndexReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-reference)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-list-index-response (:copier common-lisp:nil))
   (index-attachments common-lisp:nil :type
    (common-lisp:or index-attachment-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-list-index-response
                    'make-batch-list-index-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-list-index-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IndexAttachments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-attachments)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-list-object-attributes (:copier common-lisp:nil))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null))
   (facet-filter common-lisp:nil :type
    (common-lisp:or schema-facet common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-list-object-attributes
                    'make-batch-list-object-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-list-object-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "FacetFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'facet-filter))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-list-object-attributes-response (:copier common-lisp:nil))
   (attributes common-lisp:nil :type
    (common-lisp:or attribute-key-and-value-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-list-object-attributes-response
                    'make-batch-list-object-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-list-object-attributes-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-list-object-children (:copier common-lisp:nil))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-list-object-children
                    'make-batch-list-object-children))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-list-object-children))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-list-object-children-response (:copier common-lisp:nil))
   (children common-lisp:nil :type
    (common-lisp:or link-name-to-object-identifier-map common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-list-object-children-response
                    'make-batch-list-object-children-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-list-object-children-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Children"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'children)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-list-object-parent-paths (:copier common-lisp:nil))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-list-object-parent-paths
                    'make-batch-list-object-parent-paths))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-list-object-parent-paths))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-list-object-parent-paths-response (:copier common-lisp:nil))
   (path-to-object-identifiers-list common-lisp:nil :type
    (common-lisp:or path-to-object-identifiers-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-list-object-parent-paths-response
                    'make-batch-list-object-parent-paths-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-list-object-parent-paths-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PathToObjectIdentifiersList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path-to-object-identifiers-list)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-list-object-policies (:copier common-lisp:nil))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-list-object-policies
                    'make-batch-list-object-policies))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-list-object-policies))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-list-object-policies-response (:copier common-lisp:nil))
   (attached-policy-ids common-lisp:nil :type
    (common-lisp:or object-identifier-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-list-object-policies-response
                    'make-batch-list-object-policies-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-list-object-policies-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AttachedPolicyIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attached-policy-ids)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-list-outgoing-typed-links (:copier common-lisp:nil))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (filter-attribute-ranges common-lisp:nil :type
    (common-lisp:or typed-link-attribute-range-list common-lisp:null))
   (filter-typed-link common-lisp:nil :type
    (common-lisp:or typed-link-schema-and-facet-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-list-outgoing-typed-links
                    'make-batch-list-outgoing-typed-links))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-list-outgoing-typed-links))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference)))
    (aws-sdk/generator/shape::to-query-params "FilterAttributeRanges"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-attribute-ranges)))
    (aws-sdk/generator/shape::to-query-params "FilterTypedLink"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-typed-link)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-list-outgoing-typed-links-response (:copier common-lisp:nil))
   (typed-link-specifiers common-lisp:nil :type
    (common-lisp:or typed-link-specifier-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-list-outgoing-typed-links-response
                    'make-batch-list-outgoing-typed-links-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-list-outgoing-typed-links-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TypedLinkSpecifiers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'typed-link-specifiers)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-list-policy-attachments (:copier common-lisp:nil))
   (policy-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":policy-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-list-policy-attachments
                    'make-batch-list-policy-attachments))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-list-policy-attachments))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-reference)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-list-policy-attachments-response (:copier common-lisp:nil))
   (object-identifiers common-lisp:nil :type
    (common-lisp:or object-identifier-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-list-policy-attachments-response
                    'make-batch-list-policy-attachments-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-list-policy-attachments-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ObjectIdentifiers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-identifiers)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-lookup-policy (:copier common-lisp:nil))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-lookup-policy 'make-batch-lookup-policy))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape batch-lookup-policy))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-lookup-policy-response (:copier common-lisp:nil))
   (policy-to-path-list common-lisp:nil :type
    (common-lisp:or policy-to-path-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-lookup-policy-response
                    'make-batch-lookup-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-lookup-policy-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyToPathList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-to-path-list)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype batch-operation-index () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (batch-read-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type
    (common-lisp:or batch-read-exception-type common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-read-exception 'make-batch-read-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape batch-read-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype batch-read-exception-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (batch-read-operation (:copier common-lisp:nil))
   (list-object-attributes common-lisp:nil :type
    (common-lisp:or batch-list-object-attributes common-lisp:null))
   (list-object-children common-lisp:nil :type
    (common-lisp:or batch-list-object-children common-lisp:null))
   (list-attached-indices common-lisp:nil :type
    (common-lisp:or batch-list-attached-indices common-lisp:null))
   (list-object-parent-paths common-lisp:nil :type
    (common-lisp:or batch-list-object-parent-paths common-lisp:null))
   (get-object-information common-lisp:nil :type
    (common-lisp:or batch-get-object-information common-lisp:null))
   (list-object-policies common-lisp:nil :type
    (common-lisp:or batch-list-object-policies common-lisp:null))
   (list-policy-attachments common-lisp:nil :type
    (common-lisp:or batch-list-policy-attachments common-lisp:null))
   (lookup-policy common-lisp:nil :type
    (common-lisp:or batch-lookup-policy common-lisp:null))
   (list-index common-lisp:nil :type
    (common-lisp:or batch-list-index common-lisp:null))
   (list-outgoing-typed-links common-lisp:nil :type
    (common-lisp:or batch-list-outgoing-typed-links common-lisp:null))
   (list-incoming-typed-links common-lisp:nil :type
    (common-lisp:or batch-list-incoming-typed-links common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-read-operation 'make-batch-read-operation))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape batch-read-operation))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ListObjectAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'list-object-attributes)))
    (aws-sdk/generator/shape::to-query-params "ListObjectChildren"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'list-object-children)))
    (aws-sdk/generator/shape::to-query-params "ListAttachedIndices"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'list-attached-indices)))
    (aws-sdk/generator/shape::to-query-params "ListObjectParentPaths"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'list-object-parent-paths)))
    (aws-sdk/generator/shape::to-query-params "GetObjectInformation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'get-object-information)))
    (aws-sdk/generator/shape::to-query-params "ListObjectPolicies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'list-object-policies)))
    (aws-sdk/generator/shape::to-query-params "ListPolicyAttachments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'list-policy-attachments)))
    (aws-sdk/generator/shape::to-query-params "LookupPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lookup-policy)))
    (aws-sdk/generator/shape::to-query-params "ListIndex"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'list-index)))
    (aws-sdk/generator/shape::to-query-params "ListOutgoingTypedLinks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'list-outgoing-typed-links)))
    (aws-sdk/generator/shape::to-query-params "ListIncomingTypedLinks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'list-incoming-typed-links))))))
(common-lisp:progn
 (common-lisp:deftype batch-read-operation-list ()
   '(trivial-types:proper-list batch-read-operation))
 (common-lisp:defun |make-batch-read-operation-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list batch-read-operation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-read-operation-response (:copier common-lisp:nil))
   (successful-response common-lisp:nil :type
    (common-lisp:or batch-read-successful-response common-lisp:null))
   (exception-response common-lisp:nil :type
    (common-lisp:or batch-read-exception common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-read-operation-response
                    'make-batch-read-operation-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-read-operation-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SuccessfulResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'successful-response)))
    (aws-sdk/generator/shape::to-query-params "ExceptionResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'exception-response))))))
(common-lisp:progn
 (common-lisp:deftype batch-read-operation-response-list ()
   '(trivial-types:proper-list batch-read-operation-response))
 (common-lisp:defun |make-batch-read-operation-response-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-read-operation-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (batch-read-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (operations
    (common-lisp:error
     #A((23) common-lisp:base-char . ":operations is required"))
    :type (common-lisp:or batch-read-operation-list common-lisp:null))
   (consistency-level common-lisp:nil :type
    (common-lisp:or consistency-level common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-read-request 'make-batch-read-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape batch-read-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "Operations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operations)))
    (aws-sdk/generator/shape::to-query-params "ConsistencyLevel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consistency-level))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-read-response (:copier common-lisp:nil))
   (responses common-lisp:nil :type
    (common-lisp:or batch-read-operation-response-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-read-response 'make-batch-read-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape batch-read-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Responses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'responses))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-read-successful-response (:copier common-lisp:nil))
   (list-object-attributes common-lisp:nil :type
    (common-lisp:or batch-list-object-attributes-response common-lisp:null))
   (list-object-children common-lisp:nil :type
    (common-lisp:or batch-list-object-children-response common-lisp:null))
   (get-object-information common-lisp:nil :type
    (common-lisp:or batch-get-object-information-response common-lisp:null))
   (list-attached-indices common-lisp:nil :type
    (common-lisp:or batch-list-attached-indices-response common-lisp:null))
   (list-object-parent-paths common-lisp:nil :type
    (common-lisp:or batch-list-object-parent-paths-response common-lisp:null))
   (list-object-policies common-lisp:nil :type
    (common-lisp:or batch-list-object-policies-response common-lisp:null))
   (list-policy-attachments common-lisp:nil :type
    (common-lisp:or batch-list-policy-attachments-response common-lisp:null))
   (lookup-policy common-lisp:nil :type
    (common-lisp:or batch-lookup-policy-response common-lisp:null))
   (list-index common-lisp:nil :type
    (common-lisp:or batch-list-index-response common-lisp:null))
   (list-outgoing-typed-links common-lisp:nil :type
    (common-lisp:or batch-list-outgoing-typed-links-response common-lisp:null))
   (list-incoming-typed-links common-lisp:nil :type
    (common-lisp:or batch-list-incoming-typed-links-response
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-read-successful-response
                    'make-batch-read-successful-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-read-successful-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ListObjectAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'list-object-attributes)))
    (aws-sdk/generator/shape::to-query-params "ListObjectChildren"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'list-object-children)))
    (aws-sdk/generator/shape::to-query-params "GetObjectInformation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'get-object-information)))
    (aws-sdk/generator/shape::to-query-params "ListAttachedIndices"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'list-attached-indices)))
    (aws-sdk/generator/shape::to-query-params "ListObjectParentPaths"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'list-object-parent-paths)))
    (aws-sdk/generator/shape::to-query-params "ListObjectPolicies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'list-object-policies)))
    (aws-sdk/generator/shape::to-query-params "ListPolicyAttachments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'list-policy-attachments)))
    (aws-sdk/generator/shape::to-query-params "LookupPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lookup-policy)))
    (aws-sdk/generator/shape::to-query-params "ListIndex"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'list-index)))
    (aws-sdk/generator/shape::to-query-params "ListOutgoingTypedLinks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'list-outgoing-typed-links)))
    (aws-sdk/generator/shape::to-query-params "ListIncomingTypedLinks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'list-incoming-typed-links))))))
(common-lisp:deftype batch-reference-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (batch-remove-facet-from-object (:copier common-lisp:nil))
   (schema-facet
    (common-lisp:error
     #A((25) common-lisp:base-char . ":schema-facet is required"))
    :type (common-lisp:or schema-facet common-lisp:null))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-remove-facet-from-object
                    'make-batch-remove-facet-from-object))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-remove-facet-from-object))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaFacet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-facet)))
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-remove-facet-from-object-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'batch-remove-facet-from-object-response
                    'make-batch-remove-facet-from-object-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-remove-facet-from-object-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-update-object-attributes (:copier common-lisp:nil))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (attribute-updates
    (common-lisp:error
     #A((30) common-lisp:base-char . ":attribute-updates is required"))
    :type (common-lisp:or object-attribute-update-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-update-object-attributes
                    'make-batch-update-object-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-update-object-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference)))
    (aws-sdk/generator/shape::to-query-params "AttributeUpdates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-updates))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-update-object-attributes-response (:copier common-lisp:nil))
   (object-identifier common-lisp:nil :type
    (common-lisp:or object-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-update-object-attributes-response
                    'make-batch-update-object-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-update-object-attributes-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ObjectIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-identifier))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-write-exception (:copier common-lisp:nil))
   (index common-lisp:nil :type
    (common-lisp:or batch-operation-index common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or batch-write-exception-type common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-write-exception 'make-batch-write-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-write-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Index"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype batch-write-exception-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (batch-write-operation (:copier common-lisp:nil))
   (create-object common-lisp:nil :type
    (common-lisp:or batch-create-object common-lisp:null))
   (attach-object common-lisp:nil :type
    (common-lisp:or batch-attach-object common-lisp:null))
   (detach-object common-lisp:nil :type
    (common-lisp:or batch-detach-object common-lisp:null))
   (update-object-attributes common-lisp:nil :type
    (common-lisp:or batch-update-object-attributes common-lisp:null))
   (delete-object common-lisp:nil :type
    (common-lisp:or batch-delete-object common-lisp:null))
   (add-facet-to-object common-lisp:nil :type
    (common-lisp:or batch-add-facet-to-object common-lisp:null))
   (remove-facet-from-object common-lisp:nil :type
    (common-lisp:or batch-remove-facet-from-object common-lisp:null))
   (attach-policy common-lisp:nil :type
    (common-lisp:or batch-attach-policy common-lisp:null))
   (detach-policy common-lisp:nil :type
    (common-lisp:or batch-detach-policy common-lisp:null))
   (create-index common-lisp:nil :type
    (common-lisp:or batch-create-index common-lisp:null))
   (attach-to-index common-lisp:nil :type
    (common-lisp:or batch-attach-to-index common-lisp:null))
   (detach-from-index common-lisp:nil :type
    (common-lisp:or batch-detach-from-index common-lisp:null))
   (attach-typed-link common-lisp:nil :type
    (common-lisp:or batch-attach-typed-link common-lisp:null))
   (detach-typed-link common-lisp:nil :type
    (common-lisp:or batch-detach-typed-link common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-write-operation 'make-batch-write-operation))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-write-operation))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CreateObject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'create-object)))
    (aws-sdk/generator/shape::to-query-params "AttachObject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attach-object)))
    (aws-sdk/generator/shape::to-query-params "DetachObject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'detach-object)))
    (aws-sdk/generator/shape::to-query-params "UpdateObjectAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'update-object-attributes)))
    (aws-sdk/generator/shape::to-query-params "DeleteObject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete-object)))
    (aws-sdk/generator/shape::to-query-params "AddFacetToObject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'add-facet-to-object)))
    (aws-sdk/generator/shape::to-query-params "RemoveFacetFromObject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'remove-facet-from-object)))
    (aws-sdk/generator/shape::to-query-params "AttachPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attach-policy)))
    (aws-sdk/generator/shape::to-query-params "DetachPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'detach-policy)))
    (aws-sdk/generator/shape::to-query-params "CreateIndex"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'create-index)))
    (aws-sdk/generator/shape::to-query-params "AttachToIndex"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attach-to-index)))
    (aws-sdk/generator/shape::to-query-params "DetachFromIndex"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'detach-from-index)))
    (aws-sdk/generator/shape::to-query-params "AttachTypedLink"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attach-typed-link)))
    (aws-sdk/generator/shape::to-query-params "DetachTypedLink"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'detach-typed-link))))))
(common-lisp:progn
 (common-lisp:deftype batch-write-operation-list ()
   '(trivial-types:proper-list batch-write-operation))
 (common-lisp:defun |make-batch-write-operation-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list batch-write-operation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-write-operation-response (:copier common-lisp:nil))
   (create-object common-lisp:nil :type
    (common-lisp:or batch-create-object-response common-lisp:null))
   (attach-object common-lisp:nil :type
    (common-lisp:or batch-attach-object-response common-lisp:null))
   (detach-object common-lisp:nil :type
    (common-lisp:or batch-detach-object-response common-lisp:null))
   (update-object-attributes common-lisp:nil :type
    (common-lisp:or batch-update-object-attributes-response common-lisp:null))
   (delete-object common-lisp:nil :type
    (common-lisp:or batch-delete-object-response common-lisp:null))
   (add-facet-to-object common-lisp:nil :type
    (common-lisp:or batch-add-facet-to-object-response common-lisp:null))
   (remove-facet-from-object common-lisp:nil :type
    (common-lisp:or batch-remove-facet-from-object-response common-lisp:null))
   (attach-policy common-lisp:nil :type
    (common-lisp:or batch-attach-policy-response common-lisp:null))
   (detach-policy common-lisp:nil :type
    (common-lisp:or batch-detach-policy-response common-lisp:null))
   (create-index common-lisp:nil :type
    (common-lisp:or batch-create-index-response common-lisp:null))
   (attach-to-index common-lisp:nil :type
    (common-lisp:or batch-attach-to-index-response common-lisp:null))
   (detach-from-index common-lisp:nil :type
    (common-lisp:or batch-detach-from-index-response common-lisp:null))
   (attach-typed-link common-lisp:nil :type
    (common-lisp:or batch-attach-typed-link-response common-lisp:null))
   (detach-typed-link common-lisp:nil :type
    (common-lisp:or batch-detach-typed-link-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-write-operation-response
                    'make-batch-write-operation-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-write-operation-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CreateObject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'create-object)))
    (aws-sdk/generator/shape::to-query-params "AttachObject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attach-object)))
    (aws-sdk/generator/shape::to-query-params "DetachObject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'detach-object)))
    (aws-sdk/generator/shape::to-query-params "UpdateObjectAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'update-object-attributes)))
    (aws-sdk/generator/shape::to-query-params "DeleteObject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete-object)))
    (aws-sdk/generator/shape::to-query-params "AddFacetToObject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'add-facet-to-object)))
    (aws-sdk/generator/shape::to-query-params "RemoveFacetFromObject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'remove-facet-from-object)))
    (aws-sdk/generator/shape::to-query-params "AttachPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attach-policy)))
    (aws-sdk/generator/shape::to-query-params "DetachPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'detach-policy)))
    (aws-sdk/generator/shape::to-query-params "CreateIndex"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'create-index)))
    (aws-sdk/generator/shape::to-query-params "AttachToIndex"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attach-to-index)))
    (aws-sdk/generator/shape::to-query-params "DetachFromIndex"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'detach-from-index)))
    (aws-sdk/generator/shape::to-query-params "AttachTypedLink"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attach-typed-link)))
    (aws-sdk/generator/shape::to-query-params "DetachTypedLink"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'detach-typed-link))))))
(common-lisp:progn
 (common-lisp:deftype batch-write-operation-response-list ()
   '(trivial-types:proper-list batch-write-operation-response))
 (common-lisp:defun |make-batch-write-operation-response-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-write-operation-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (batch-write-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (operations
    (common-lisp:error
     #A((23) common-lisp:base-char . ":operations is required"))
    :type (common-lisp:or batch-write-operation-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-write-request 'make-batch-write-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape batch-write-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "Operations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operations))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-write-response (:copier common-lisp:nil))
   (responses common-lisp:nil :type
    (common-lisp:or batch-write-operation-response-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-write-response 'make-batch-write-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape batch-write-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Responses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'responses))))))
(common-lisp:deftype binary-attribute-value ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype bool () 'common-lisp:boolean)
(common-lisp:deftype boolean-attribute-value () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (cannot-list-parent-of-root-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cannot-list-parent-of-root-exception
                    'make-cannot-list-parent-of-root-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cannot-list-parent-of-root-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype consistency-level () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (create-directory-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or directory-name common-lisp:null))
   (schema-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":schema-arn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-directory-request 'make-create-directory-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-directory-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (create-directory-response (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or directory-arn common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or directory-name common-lisp:null))
   (object-identifier
    (common-lisp:error
     #A((30) common-lisp:base-char . ":object-identifier is required"))
    :type (common-lisp:or object-identifier common-lisp:null))
   (applied-schema-arn
    (common-lisp:error
     #A((31) common-lisp:base-char . ":applied-schema-arn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-directory-response
                    'make-create-directory-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-directory-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "ObjectIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-identifier)))
    (aws-sdk/generator/shape::to-query-params "AppliedSchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'applied-schema-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (create-facet-request (:copier common-lisp:nil))
   (schema-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":schema-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or facet-name common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or facet-attribute-list common-lisp:null))
   (object-type
    (common-lisp:error
     #A((24) common-lisp:base-char . ":object-type is required"))
    :type (common-lisp:or object-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-facet-request 'make-create-facet-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-facet-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "ObjectType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-type))))))
(common-lisp:progn
 (common-lisp:defstruct (create-facet-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-facet-response 'make-create-facet-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-facet-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (create-index-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (ordered-indexed-attribute-list
    (common-lisp:error
     #A((43) common-lisp:base-char
        . ":ordered-indexed-attribute-list is required"))
    :type (common-lisp:or attribute-key-list common-lisp:null))
   (is-unique
    (common-lisp:error
     #A((22) common-lisp:base-char . ":is-unique is required"))
    :type (common-lisp:or bool common-lisp:null))
   (parent-reference common-lisp:nil :type
    (common-lisp:or object-reference common-lisp:null))
   (link-name common-lisp:nil :type
    (common-lisp:or link-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-index-request 'make-create-index-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-index-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "OrderedIndexedAttributeList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ordered-indexed-attribute-list)))
    (aws-sdk/generator/shape::to-query-params "IsUnique"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-unique)))
    (aws-sdk/generator/shape::to-query-params "ParentReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-reference)))
    (aws-sdk/generator/shape::to-query-params "LinkName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'link-name))))))
(common-lisp:progn
 (common-lisp:defstruct (create-index-response (:copier common-lisp:nil))
   (object-identifier common-lisp:nil :type
    (common-lisp:or object-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-index-response 'make-create-index-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-index-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ObjectIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-identifier))))))
(common-lisp:progn
 (common-lisp:defstruct (create-object-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (schema-facets
    (common-lisp:error
     #A((26) common-lisp:base-char . ":schema-facets is required"))
    :type (common-lisp:or schema-facet-list common-lisp:null))
   (object-attribute-list common-lisp:nil :type
    (common-lisp:or attribute-key-and-value-list common-lisp:null))
   (parent-reference common-lisp:nil :type
    (common-lisp:or object-reference common-lisp:null))
   (link-name common-lisp:nil :type
    (common-lisp:or link-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-object-request 'make-create-object-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-object-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "SchemaFacets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-facets)))
    (aws-sdk/generator/shape::to-query-params "ObjectAttributeList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-attribute-list)))
    (aws-sdk/generator/shape::to-query-params "ParentReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-reference)))
    (aws-sdk/generator/shape::to-query-params "LinkName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'link-name))))))
(common-lisp:progn
 (common-lisp:defstruct (create-object-response (:copier common-lisp:nil))
   (object-identifier common-lisp:nil :type
    (common-lisp:or object-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-object-response 'make-create-object-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-object-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ObjectIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-identifier))))))
(common-lisp:progn
 (common-lisp:defstruct (create-schema-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or schema-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-schema-request 'make-create-schema-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-schema-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (create-schema-response (:copier common-lisp:nil))
   (schema-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-schema-response 'make-create-schema-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-schema-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-typed-link-facet-request (:copier common-lisp:nil))
   (schema-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":schema-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (facet
    (common-lisp:error #A((18) common-lisp:base-char . ":facet is required"))
    :type (common-lisp:or typed-link-facet common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-typed-link-facet-request
                    'make-create-typed-link-facet-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-typed-link-facet-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn)))
    (aws-sdk/generator/shape::to-query-params "Facet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'facet))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-typed-link-facet-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-typed-link-facet-response
                    'make-create-typed-link-facet-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-typed-link-facet-response))
   (common-lisp:append)))
(common-lisp:deftype date () 'common-lisp:string)
(common-lisp:deftype datetime-attribute-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (delete-directory-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-directory-request 'make-delete-directory-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-directory-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-directory-response (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-directory-response
                    'make-delete-directory-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-directory-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-facet-request (:copier common-lisp:nil))
   (schema-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":schema-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or facet-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-facet-request 'make-delete-facet-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-facet-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-facet-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-facet-response 'make-delete-facet-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-facet-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-object-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-object-request 'make-delete-object-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-object-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-object-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-object-response 'make-delete-object-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-object-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-schema-request (:copier common-lisp:nil))
   (schema-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":schema-arn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-schema-request 'make-delete-schema-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-schema-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-schema-response (:copier common-lisp:nil))
   (schema-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-schema-response 'make-delete-schema-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-schema-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-typed-link-facet-request (:copier common-lisp:nil))
   (schema-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":schema-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or typed-link-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-typed-link-facet-request
                    'make-delete-typed-link-facet-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-typed-link-facet-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-typed-link-facet-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-typed-link-facet-response
                    'make-delete-typed-link-facet-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-typed-link-facet-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (detach-from-index-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (index-reference
    (common-lisp:error
     #A((28) common-lisp:base-char . ":index-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (target-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":target-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detach-from-index-request
                    'make-detach-from-index-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          detach-from-index-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "IndexReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-reference)))
    (aws-sdk/generator/shape::to-query-params "TargetReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-reference))))))
(common-lisp:progn
 (common-lisp:defstruct (detach-from-index-response (:copier common-lisp:nil))
   (detached-object-identifier common-lisp:nil :type
    (common-lisp:or object-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detach-from-index-response
                    'make-detach-from-index-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          detach-from-index-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DetachedObjectIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'detached-object-identifier))))))
(common-lisp:progn
 (common-lisp:defstruct (detach-object-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (parent-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":parent-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (link-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":link-name is required"))
    :type (common-lisp:or link-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detach-object-request 'make-detach-object-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          detach-object-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "ParentReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-reference)))
    (aws-sdk/generator/shape::to-query-params "LinkName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'link-name))))))
(common-lisp:progn
 (common-lisp:defstruct (detach-object-response (:copier common-lisp:nil))
   (detached-object-identifier common-lisp:nil :type
    (common-lisp:or object-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detach-object-response 'make-detach-object-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          detach-object-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DetachedObjectIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'detached-object-identifier))))))
(common-lisp:progn
 (common-lisp:defstruct (detach-policy-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (policy-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":policy-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detach-policy-request 'make-detach-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          detach-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "PolicyReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-reference)))
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference))))))
(common-lisp:progn
 (common-lisp:defstruct (detach-policy-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'detach-policy-response 'make-detach-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          detach-policy-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (detach-typed-link-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (typed-link-specifier
    (common-lisp:error
     #A((33) common-lisp:base-char . ":typed-link-specifier is required"))
    :type (common-lisp:or typed-link-specifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detach-typed-link-request
                    'make-detach-typed-link-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          detach-typed-link-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "TypedLinkSpecifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'typed-link-specifier))))))
(common-lisp:progn
 (common-lisp:defstruct (directory (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or directory-name common-lisp:null))
   (directory-arn common-lisp:nil :type
    (common-lisp:or directory-arn common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or directory-state common-lisp:null))
   (creation-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null)))
 (common-lisp:export (common-lisp:list 'directory 'make-directory))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape directory))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "CreationDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date-time))))))
(common-lisp:progn
 (common-lisp:defstruct
     (directory-already-exists-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'directory-already-exists-exception
                    'make-directory-already-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          directory-already-exists-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype directory-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (directory-deleted-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'directory-deleted-exception
                    'make-directory-deleted-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          directory-deleted-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype directory-list () '(trivial-types:proper-list directory))
 (common-lisp:defun |make-directory-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list directory))
   aws-sdk/generator/shape::members))
(common-lisp:deftype directory-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (directory-not-disabled-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'directory-not-disabled-exception
                    'make-directory-not-disabled-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          directory-not-disabled-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (directory-not-enabled-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'directory-not-enabled-exception
                    'make-directory-not-enabled-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          directory-not-enabled-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype directory-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (disable-directory-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disable-directory-request
                    'make-disable-directory-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disable-directory-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (disable-directory-response (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disable-directory-response
                    'make-disable-directory-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disable-directory-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (enable-directory-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enable-directory-request 'make-enable-directory-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          enable-directory-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (enable-directory-response (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enable-directory-response
                    'make-enable-directory-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          enable-directory-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn))))))
(common-lisp:deftype exception-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (facet (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or facet-name common-lisp:null))
   (object-type common-lisp:nil :type
    (common-lisp:or object-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'facet 'make-facet))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape facet))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "ObjectType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-type))))))
(common-lisp:progn
 (common-lisp:defstruct
     (facet-already-exists-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'facet-already-exists-exception
                    'make-facet-already-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          facet-already-exists-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (facet-attribute (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or attribute-name common-lisp:null))
   (attribute-definition common-lisp:nil :type
    (common-lisp:or facet-attribute-definition common-lisp:null))
   (attribute-reference common-lisp:nil :type
    (common-lisp:or facet-attribute-reference common-lisp:null))
   (required-behavior common-lisp:nil :type
    (common-lisp:or required-attribute-behavior common-lisp:null)))
 (common-lisp:export (common-lisp:list 'facet-attribute 'make-facet-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape facet-attribute))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "AttributeDefinition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-definition)))
    (aws-sdk/generator/shape::to-query-params "AttributeReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-reference)))
    (aws-sdk/generator/shape::to-query-params "RequiredBehavior"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'required-behavior))))))
(common-lisp:progn
 (common-lisp:defstruct (facet-attribute-definition (:copier common-lisp:nil))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or facet-attribute-type common-lisp:null))
   (default-value common-lisp:nil :type
    (common-lisp:or typed-attribute-value common-lisp:null))
   (is-immutable common-lisp:nil :type (common-lisp:or bool common-lisp:null))
   (rules common-lisp:nil :type (common-lisp:or rule-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'facet-attribute-definition
                    'make-facet-attribute-definition))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          facet-attribute-definition))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "DefaultValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-value)))
    (aws-sdk/generator/shape::to-query-params "IsImmutable"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-immutable)))
    (aws-sdk/generator/shape::to-query-params "Rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules))))))
(common-lisp:progn
 (common-lisp:deftype facet-attribute-list ()
   '(trivial-types:proper-list facet-attribute))
 (common-lisp:defun |make-facet-attribute-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list facet-attribute))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (facet-attribute-reference (:copier common-lisp:nil))
   (target-facet-name
    (common-lisp:error
     #A((30) common-lisp:base-char . ":target-facet-name is required"))
    :type (common-lisp:or facet-name common-lisp:null))
   (target-attribute-name
    (common-lisp:error
     #A((34) common-lisp:base-char . ":target-attribute-name is required"))
    :type (common-lisp:or attribute-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'facet-attribute-reference
                    'make-facet-attribute-reference))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          facet-attribute-reference))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetFacetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-facet-name)))
    (aws-sdk/generator/shape::to-query-params "TargetAttributeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-attribute-name))))))
(common-lisp:deftype facet-attribute-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (facet-attribute-update (:copier common-lisp:nil))
   (attribute common-lisp:nil :type
    (common-lisp:or facet-attribute common-lisp:null))
   (action common-lisp:nil :type
    (common-lisp:or update-action-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'facet-attribute-update 'make-facet-attribute-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          facet-attribute-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Attribute"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute)))
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action))))))
(common-lisp:progn
 (common-lisp:deftype facet-attribute-update-list ()
   '(trivial-types:proper-list facet-attribute-update))
 (common-lisp:defun |make-facet-attribute-update-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list facet-attribute-update))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (facet-in-use-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'facet-in-use-exception 'make-facet-in-use-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          facet-in-use-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype facet-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype facet-name-list ()
   '(trivial-types:proper-list facet-name))
 (common-lisp:defun |make-facet-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list facet-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (facet-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'facet-not-found-exception
                    'make-facet-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          facet-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (facet-validation-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'facet-validation-exception
                    'make-facet-validation-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          facet-validation-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (get-directory-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or directory-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-directory-request 'make-get-directory-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-directory-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (get-directory-response (:copier common-lisp:nil))
   (directory
    (common-lisp:error
     #A((22) common-lisp:base-char . ":directory is required"))
    :type (common-lisp:or directory common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-directory-response 'make-get-directory-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-directory-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Directory"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory))))))
(common-lisp:progn
 (common-lisp:defstruct (get-facet-request (:copier common-lisp:nil))
   (schema-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":schema-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or facet-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-facet-request 'make-get-facet-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-facet-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (get-facet-response (:copier common-lisp:nil))
   (facet common-lisp:nil :type (common-lisp:or facet common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-facet-response 'make-get-facet-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-facet-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Facet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'facet))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-object-information-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (consistency-level common-lisp:nil :type
    (common-lisp:or consistency-level common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-object-information-request
                    'make-get-object-information-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-object-information-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference)))
    (aws-sdk/generator/shape::to-query-params "ConsistencyLevel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consistency-level))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-object-information-response (:copier common-lisp:nil))
   (schema-facets common-lisp:nil :type
    (common-lisp:or schema-facet-list common-lisp:null))
   (object-identifier common-lisp:nil :type
    (common-lisp:or object-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-object-information-response
                    'make-get-object-information-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-object-information-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaFacets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-facets)))
    (aws-sdk/generator/shape::to-query-params "ObjectIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-identifier))))))
(common-lisp:progn
 (common-lisp:defstruct (get-schema-as-json-request (:copier common-lisp:nil))
   (schema-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":schema-arn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-schema-as-json-request
                    'make-get-schema-as-json-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-schema-as-json-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (get-schema-as-json-response (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or schema-name common-lisp:null))
   (document common-lisp:nil :type
    (common-lisp:or schema-json-document common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-schema-as-json-response
                    'make-get-schema-as-json-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-schema-as-json-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Document"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-typed-link-facet-information-request (:copier common-lisp:nil))
   (schema-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":schema-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or typed-link-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-typed-link-facet-information-request
                    'make-get-typed-link-facet-information-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-typed-link-facet-information-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-typed-link-facet-information-response (:copier common-lisp:nil))
   (identity-attribute-order common-lisp:nil :type
    (common-lisp:or attribute-name-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-typed-link-facet-information-response
                    'make-get-typed-link-facet-information-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-typed-link-facet-information-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityAttributeOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-attribute-order))))))
(common-lisp:progn
 (common-lisp:defstruct (index-attachment (:copier common-lisp:nil))
   (indexed-attributes common-lisp:nil :type
    (common-lisp:or attribute-key-and-value-list common-lisp:null))
   (object-identifier common-lisp:nil :type
    (common-lisp:or object-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'index-attachment 'make-index-attachment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape index-attachment))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IndexedAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'indexed-attributes)))
    (aws-sdk/generator/shape::to-query-params "ObjectIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-identifier))))))
(common-lisp:progn
 (common-lisp:deftype index-attachment-list ()
   '(trivial-types:proper-list index-attachment))
 (common-lisp:defun |make-index-attachment-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list index-attachment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (indexed-attribute-missing-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'indexed-attribute-missing-exception
                    'make-indexed-attribute-missing-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          indexed-attribute-missing-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (internal-service-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'internal-service-exception
                    'make-internal-service-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          internal-service-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-arn-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-arn-exception 'make-invalid-arn-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-arn-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-attachment-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-attachment-exception
                    'make-invalid-attachment-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-attachment-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-facet-update-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-facet-update-exception
                    'make-invalid-facet-update-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-facet-update-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-next-token-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-next-token-exception
                    'make-invalid-next-token-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-next-token-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-rule-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-rule-exception 'make-invalid-rule-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-rule-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-schema-doc-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-schema-doc-exception
                    'make-invalid-schema-doc-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-schema-doc-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-tagging-request-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-tagging-request-exception
                    'make-invalid-tagging-request-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-tagging-request-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype link-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (link-name-already-in-use-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'link-name-already-in-use-exception
                    'make-link-name-already-in-use-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          link-name-already-in-use-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:defstruct
    (link-name-to-object-identifier-map
     (:constructor |make-link-name-to-object-identifier-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct
     (list-applied-schema-arns-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-applied-schema-arns-request
                    'make-list-applied-schema-arns-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-applied-schema-arns-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-applied-schema-arns-response (:copier common-lisp:nil))
   (schema-arns common-lisp:nil :type (common-lisp:or arns common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-applied-schema-arns-response
                    'make-list-applied-schema-arns-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-applied-schema-arns-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arns)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-attached-indices-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (target-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":target-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null))
   (consistency-level common-lisp:nil :type
    (common-lisp:or consistency-level common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-attached-indices-request
                    'make-list-attached-indices-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-attached-indices-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "TargetReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-reference)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "ConsistencyLevel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consistency-level))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-attached-indices-response (:copier common-lisp:nil))
   (index-attachments common-lisp:nil :type
    (common-lisp:or index-attachment-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-attached-indices-response
                    'make-list-attached-indices-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-attached-indices-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IndexAttachments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-attachments)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-development-schema-arns-request (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-development-schema-arns-request
                    'make-list-development-schema-arns-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-development-schema-arns-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-development-schema-arns-response (:copier common-lisp:nil))
   (schema-arns common-lisp:nil :type (common-lisp:or arns common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-development-schema-arns-response
                    'make-list-development-schema-arns-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-development-schema-arns-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arns)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-directories-request (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or directory-state common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-directories-request 'make-list-directories-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-directories-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "state"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state))))))
(common-lisp:progn
 (common-lisp:defstruct (list-directories-response (:copier common-lisp:nil))
   (directories
    (common-lisp:error
     #A((24) common-lisp:base-char . ":directories is required"))
    :type (common-lisp:or directory-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-directories-response
                    'make-list-directories-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-directories-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Directories"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directories)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-facet-attributes-request (:copier common-lisp:nil))
   (schema-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":schema-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or facet-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-facet-attributes-request
                    'make-list-facet-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-facet-attributes-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-facet-attributes-response (:copier common-lisp:nil))
   (attributes common-lisp:nil :type
    (common-lisp:or facet-attribute-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-facet-attributes-response
                    'make-list-facet-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-facet-attributes-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-facet-names-request (:copier common-lisp:nil))
   (schema-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":schema-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-facet-names-request 'make-list-facet-names-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-facet-names-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (list-facet-names-response (:copier common-lisp:nil))
   (facet-names common-lisp:nil :type
    (common-lisp:or facet-name-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-facet-names-response
                    'make-list-facet-names-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-facet-names-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FacetNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'facet-names)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-incoming-typed-links-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (filter-attribute-ranges common-lisp:nil :type
    (common-lisp:or typed-link-attribute-range-list common-lisp:null))
   (filter-typed-link common-lisp:nil :type
    (common-lisp:or typed-link-schema-and-facet-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null))
   (consistency-level common-lisp:nil :type
    (common-lisp:or consistency-level common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-incoming-typed-links-request
                    'make-list-incoming-typed-links-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-incoming-typed-links-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference)))
    (aws-sdk/generator/shape::to-query-params "FilterAttributeRanges"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-attribute-ranges)))
    (aws-sdk/generator/shape::to-query-params "FilterTypedLink"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-typed-link)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "ConsistencyLevel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consistency-level))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-incoming-typed-links-response (:copier common-lisp:nil))
   (link-specifiers common-lisp:nil :type
    (common-lisp:or typed-link-specifier-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-incoming-typed-links-response
                    'make-list-incoming-typed-links-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-incoming-typed-links-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LinkSpecifiers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'link-specifiers)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-index-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (ranges-on-indexed-values common-lisp:nil :type
    (common-lisp:or object-attribute-range-list common-lisp:null))
   (index-reference
    (common-lisp:error
     #A((28) common-lisp:base-char . ":index-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (consistency-level common-lisp:nil :type
    (common-lisp:or consistency-level common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-index-request 'make-list-index-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-index-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "RangesOnIndexedValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ranges-on-indexed-values)))
    (aws-sdk/generator/shape::to-query-params "IndexReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-reference)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "ConsistencyLevel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consistency-level))))))
(common-lisp:progn
 (common-lisp:defstruct (list-index-response (:copier common-lisp:nil))
   (index-attachments common-lisp:nil :type
    (common-lisp:or index-attachment-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-index-response 'make-list-index-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-index-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IndexAttachments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-attachments)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-object-attributes-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null))
   (consistency-level common-lisp:nil :type
    (common-lisp:or consistency-level common-lisp:null))
   (facet-filter common-lisp:nil :type
    (common-lisp:or schema-facet common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-object-attributes-request
                    'make-list-object-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-object-attributes-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "ConsistencyLevel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consistency-level)))
    (aws-sdk/generator/shape::to-query-params "FacetFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'facet-filter))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-object-attributes-response (:copier common-lisp:nil))
   (attributes common-lisp:nil :type
    (common-lisp:or attribute-key-and-value-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-object-attributes-response
                    'make-list-object-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-object-attributes-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-object-children-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null))
   (consistency-level common-lisp:nil :type
    (common-lisp:or consistency-level common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-object-children-request
                    'make-list-object-children-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-object-children-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "ConsistencyLevel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consistency-level))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-object-children-response (:copier common-lisp:nil))
   (children common-lisp:nil :type
    (common-lisp:or link-name-to-object-identifier-map common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-object-children-response
                    'make-list-object-children-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-object-children-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Children"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'children)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-object-parent-paths-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-object-parent-paths-request
                    'make-list-object-parent-paths-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-object-parent-paths-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-object-parent-paths-response (:copier common-lisp:nil))
   (path-to-object-identifiers-list common-lisp:nil :type
    (common-lisp:or path-to-object-identifiers-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-object-parent-paths-response
                    'make-list-object-parent-paths-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-object-parent-paths-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PathToObjectIdentifiersList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path-to-object-identifiers-list)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-object-parents-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null))
   (consistency-level common-lisp:nil :type
    (common-lisp:or consistency-level common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-object-parents-request
                    'make-list-object-parents-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-object-parents-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "ConsistencyLevel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consistency-level))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-object-parents-response (:copier common-lisp:nil))
   (parents common-lisp:nil :type
    (common-lisp:or object-identifier-to-link-name-map common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-object-parents-response
                    'make-list-object-parents-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-object-parents-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Parents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parents)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-object-policies-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null))
   (consistency-level common-lisp:nil :type
    (common-lisp:or consistency-level common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-object-policies-request
                    'make-list-object-policies-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-object-policies-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "ConsistencyLevel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consistency-level))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-object-policies-response (:copier common-lisp:nil))
   (attached-policy-ids common-lisp:nil :type
    (common-lisp:or object-identifier-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-object-policies-response
                    'make-list-object-policies-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-object-policies-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AttachedPolicyIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attached-policy-ids)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-outgoing-typed-links-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (filter-attribute-ranges common-lisp:nil :type
    (common-lisp:or typed-link-attribute-range-list common-lisp:null))
   (filter-typed-link common-lisp:nil :type
    (common-lisp:or typed-link-schema-and-facet-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null))
   (consistency-level common-lisp:nil :type
    (common-lisp:or consistency-level common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-outgoing-typed-links-request
                    'make-list-outgoing-typed-links-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-outgoing-typed-links-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference)))
    (aws-sdk/generator/shape::to-query-params "FilterAttributeRanges"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-attribute-ranges)))
    (aws-sdk/generator/shape::to-query-params "FilterTypedLink"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-typed-link)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "ConsistencyLevel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consistency-level))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-outgoing-typed-links-response (:copier common-lisp:nil))
   (typed-link-specifiers common-lisp:nil :type
    (common-lisp:or typed-link-specifier-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-outgoing-typed-links-response
                    'make-list-outgoing-typed-links-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-outgoing-typed-links-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TypedLinkSpecifiers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'typed-link-specifiers)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-policy-attachments-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (policy-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":policy-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null))
   (consistency-level common-lisp:nil :type
    (common-lisp:or consistency-level common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-policy-attachments-request
                    'make-list-policy-attachments-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-policy-attachments-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "PolicyReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-reference)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "ConsistencyLevel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consistency-level))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-policy-attachments-response (:copier common-lisp:nil))
   (object-identifiers common-lisp:nil :type
    (common-lisp:or object-identifier-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-policy-attachments-response
                    'make-list-policy-attachments-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-policy-attachments-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ObjectIdentifiers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-identifiers)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-published-schema-arns-request (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-published-schema-arns-request
                    'make-list-published-schema-arns-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-published-schema-arns-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-published-schema-arns-response (:copier common-lisp:nil))
   (schema-arns common-lisp:nil :type (common-lisp:or arns common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-published-schema-arns-response
                    'make-list-published-schema-arns-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-published-schema-arns-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arns)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil))
   (resource-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":resource-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or tags-number-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-tags-for-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-tags-for-resource-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-typed-link-facet-attributes-request (:copier common-lisp:nil))
   (schema-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":schema-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or typed-link-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-typed-link-facet-attributes-request
                    'make-list-typed-link-facet-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-typed-link-facet-attributes-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-typed-link-facet-attributes-response (:copier common-lisp:nil))
   (attributes common-lisp:nil :type
    (common-lisp:or typed-link-attribute-definition-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-typed-link-facet-attributes-response
                    'make-list-typed-link-facet-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-typed-link-facet-attributes-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-typed-link-facet-names-request (:copier common-lisp:nil))
   (schema-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":schema-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-typed-link-facet-names-request
                    'make-list-typed-link-facet-names-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-typed-link-facet-names-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-typed-link-facet-names-response (:copier common-lisp:nil))
   (facet-names common-lisp:nil :type
    (common-lisp:or typed-link-name-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-typed-link-facet-names-response
                    'make-list-typed-link-facet-names-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-typed-link-facet-names-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FacetNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'facet-names)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (lookup-policy-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or number-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lookup-policy-request 'make-lookup-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lookup-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (lookup-policy-response (:copier common-lisp:nil))
   (policy-to-path-list common-lisp:nil :type
    (common-lisp:or policy-to-path-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lookup-policy-response 'make-lookup-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lookup-policy-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyToPathList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-to-path-list)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (not-index-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'not-index-exception 'make-not-index-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape not-index-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (not-node-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'not-node-exception 'make-not-node-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape not-node-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (not-policy-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'not-policy-exception 'make-not-policy-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape not-policy-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype number-attribute-value () 'common-lisp:string)
(common-lisp:deftype number-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (object-already-detached-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'object-already-detached-exception
                    'make-object-already-detached-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          object-already-detached-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (object-attribute-action (:copier common-lisp:nil))
   (object-attribute-action-type common-lisp:nil :type
    (common-lisp:or update-action-type common-lisp:null))
   (object-attribute-update-value common-lisp:nil :type
    (common-lisp:or typed-attribute-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'object-attribute-action 'make-object-attribute-action))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          object-attribute-action))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ObjectAttributeActionType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-attribute-action-type)))
    (aws-sdk/generator/shape::to-query-params "ObjectAttributeUpdateValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-attribute-update-value))))))
(common-lisp:progn
 (common-lisp:defstruct (object-attribute-range (:copier common-lisp:nil))
   (attribute-key common-lisp:nil :type
    (common-lisp:or attribute-key common-lisp:null))
   (range common-lisp:nil :type
    (common-lisp:or typed-attribute-value-range common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'object-attribute-range 'make-object-attribute-range))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          object-attribute-range))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AttributeKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-key)))
    (aws-sdk/generator/shape::to-query-params "Range"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'range))))))
(common-lisp:progn
 (common-lisp:deftype object-attribute-range-list ()
   '(trivial-types:proper-list object-attribute-range))
 (common-lisp:defun |make-object-attribute-range-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list object-attribute-range))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (object-attribute-update (:copier common-lisp:nil))
   (object-attribute-key common-lisp:nil :type
    (common-lisp:or attribute-key common-lisp:null))
   (object-attribute-action common-lisp:nil :type
    (common-lisp:or object-attribute-action common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'object-attribute-update 'make-object-attribute-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          object-attribute-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ObjectAttributeKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-attribute-key)))
    (aws-sdk/generator/shape::to-query-params "ObjectAttributeAction"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-attribute-action))))))
(common-lisp:progn
 (common-lisp:deftype object-attribute-update-list ()
   '(trivial-types:proper-list object-attribute-update))
 (common-lisp:defun |make-object-attribute-update-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list object-attribute-update))
   aws-sdk/generator/shape::members))
(common-lisp:deftype object-identifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype object-identifier-list ()
   '(trivial-types:proper-list object-identifier))
 (common-lisp:defun |make-object-identifier-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list object-identifier))
   aws-sdk/generator/shape::members))
(common-lisp:defstruct
    (object-identifier-to-link-name-map
     (:constructor |make-object-identifier-to-link-name-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct
     (object-not-detached-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'object-not-detached-exception
                    'make-object-not-detached-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          object-not-detached-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (object-reference (:copier common-lisp:nil))
   (selector common-lisp:nil :type
    (common-lisp:or selector-object-reference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'object-reference 'make-object-reference))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape object-reference))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Selector"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'selector))))))
(common-lisp:deftype object-type () 'common-lisp:string)
(common-lisp:deftype path-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (path-to-object-identifiers (:copier common-lisp:nil))
   (path common-lisp:nil :type (common-lisp:or path-string common-lisp:null))
   (object-identifiers common-lisp:nil :type
    (common-lisp:or object-identifier-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'path-to-object-identifiers
                    'make-path-to-object-identifiers))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          path-to-object-identifiers))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Path"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path)))
    (aws-sdk/generator/shape::to-query-params "ObjectIdentifiers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-identifiers))))))
(common-lisp:progn
 (common-lisp:deftype path-to-object-identifiers-list ()
   '(trivial-types:proper-list path-to-object-identifiers))
 (common-lisp:defun |make-path-to-object-identifiers-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            path-to-object-identifiers))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (policy-attachment (:copier common-lisp:nil))
   (policy-id common-lisp:nil :type
    (common-lisp:or object-identifier common-lisp:null))
   (object-identifier common-lisp:nil :type
    (common-lisp:or object-identifier common-lisp:null))
   (policy-type common-lisp:nil :type
    (common-lisp:or policy-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'policy-attachment 'make-policy-attachment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape policy-attachment))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-id)))
    (aws-sdk/generator/shape::to-query-params "ObjectIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-identifier)))
    (aws-sdk/generator/shape::to-query-params "PolicyType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-type))))))
(common-lisp:progn
 (common-lisp:deftype policy-attachment-list ()
   '(trivial-types:proper-list policy-attachment))
 (common-lisp:defun |make-policy-attachment-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list policy-attachment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (policy-to-path (:copier common-lisp:nil))
   (path common-lisp:nil :type (common-lisp:or path-string common-lisp:null))
   (policies common-lisp:nil :type
    (common-lisp:or policy-attachment-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'policy-to-path 'make-policy-to-path))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape policy-to-path))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Path"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path)))
    (aws-sdk/generator/shape::to-query-params "Policies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policies))))))
(common-lisp:progn
 (common-lisp:deftype policy-to-path-list ()
   '(trivial-types:proper-list policy-to-path))
 (common-lisp:defun |make-policy-to-path-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list policy-to-path))
   aws-sdk/generator/shape::members))
(common-lisp:deftype policy-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (publish-schema-request (:copier common-lisp:nil))
   (development-schema-arn
    (common-lisp:error
     #A((35) common-lisp:base-char . ":development-schema-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (version
    (common-lisp:error #A((20) common-lisp:base-char . ":version is required"))
    :type (common-lisp:or version common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or schema-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'publish-schema-request 'make-publish-schema-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          publish-schema-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DevelopmentSchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'development-schema-arn)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (publish-schema-response (:copier common-lisp:nil))
   (published-schema-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'publish-schema-response 'make-publish-schema-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          publish-schema-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PublishedSchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'published-schema-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-schema-from-json-request (:copier common-lisp:nil))
   (schema-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":schema-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (document
    (common-lisp:error
     #A((21) common-lisp:base-char . ":document is required"))
    :type (common-lisp:or schema-json-document common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-schema-from-json-request
                    'make-put-schema-from-json-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-schema-from-json-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn)))
    (aws-sdk/generator/shape::to-query-params "Document"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-schema-from-json-response (:copier common-lisp:nil))
   (arn common-lisp:nil :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-schema-from-json-response
                    'make-put-schema-from-json-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-schema-from-json-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:deftype range-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (remove-facet-from-object-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (schema-facet
    (common-lisp:error
     #A((25) common-lisp:base-char . ":schema-facet is required"))
    :type (common-lisp:or schema-facet common-lisp:null))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-facet-from-object-request
                    'make-remove-facet-from-object-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          remove-facet-from-object-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "SchemaFacet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-facet)))
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference))))))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-facet-from-object-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'remove-facet-from-object-response
                    'make-remove-facet-from-object-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          remove-facet-from-object-response))
   (common-lisp:append)))
(common-lisp:deftype required-attribute-behavior () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (resource-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'make-resource-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (retryable-conflict-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'retryable-conflict-exception
                    'make-retryable-conflict-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          retryable-conflict-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (rule (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or rule-type common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or rule-parameter-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rule 'make-rule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape rule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters))))))
(common-lisp:deftype rule-key () 'common-lisp:string)
(common-lisp:defstruct
    (rule-map
     (:constructor |make-rule-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype rule-parameter-key () 'common-lisp:string)
(common-lisp:defstruct
    (rule-parameter-map
     (:constructor |make-rule-parameter-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype rule-parameter-value () 'common-lisp:string)
(common-lisp:deftype rule-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (schema-already-exists-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'schema-already-exists-exception
                    'make-schema-already-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          schema-already-exists-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (schema-already-published-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'schema-already-published-exception
                    'make-schema-already-published-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          schema-already-published-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (schema-facet (:copier common-lisp:nil))
   (schema-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (facet-name common-lisp:nil :type
    (common-lisp:or facet-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'schema-facet 'make-schema-facet))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape schema-facet))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn)))
    (aws-sdk/generator/shape::to-query-params "FacetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'facet-name))))))
(common-lisp:progn
 (common-lisp:deftype schema-facet-list ()
   '(trivial-types:proper-list schema-facet))
 (common-lisp:defun |make-schema-facet-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list schema-facet))
   aws-sdk/generator/shape::members))
(common-lisp:deftype schema-json-document () 'common-lisp:string)
(common-lisp:deftype schema-name () 'common-lisp:string)
(common-lisp:deftype selector-object-reference () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (still-contains-links-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'still-contains-links-exception
                    'make-still-contains-links-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          still-contains-links-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype string-attribute-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (tag (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or tag-key common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (tag-resource-request (:copier common-lisp:nil))
   (resource-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":resource-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (tag-resource-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          tag-resource-response))
   (common-lisp:append)))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype tags-number-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (typed-attribute-value (:copier common-lisp:nil))
   (string-value common-lisp:nil :type
    (common-lisp:or string-attribute-value common-lisp:null))
   (binary-value common-lisp:nil :type
    (common-lisp:or binary-attribute-value common-lisp:null))
   (boolean-value common-lisp:nil :type
    (common-lisp:or boolean-attribute-value common-lisp:null))
   (number-value common-lisp:nil :type
    (common-lisp:or number-attribute-value common-lisp:null))
   (datetime-value common-lisp:nil :type
    (common-lisp:or datetime-attribute-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'typed-attribute-value 'make-typed-attribute-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          typed-attribute-value))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StringValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'string-value)))
    (aws-sdk/generator/shape::to-query-params "BinaryValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'binary-value)))
    (aws-sdk/generator/shape::to-query-params "BooleanValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'boolean-value)))
    (aws-sdk/generator/shape::to-query-params "NumberValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'number-value)))
    (aws-sdk/generator/shape::to-query-params "DatetimeValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'datetime-value))))))
(common-lisp:progn
 (common-lisp:defstruct (typed-attribute-value-range (:copier common-lisp:nil))
   (start-mode
    (common-lisp:error
     #A((23) common-lisp:base-char . ":start-mode is required"))
    :type (common-lisp:or range-mode common-lisp:null))
   (start-value common-lisp:nil :type
    (common-lisp:or typed-attribute-value common-lisp:null))
   (end-mode
    (common-lisp:error
     #A((21) common-lisp:base-char . ":end-mode is required"))
    :type (common-lisp:or range-mode common-lisp:null))
   (end-value common-lisp:nil :type
    (common-lisp:or typed-attribute-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'typed-attribute-value-range
                    'make-typed-attribute-value-range))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          typed-attribute-value-range))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StartMode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-mode)))
    (aws-sdk/generator/shape::to-query-params "StartValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-value)))
    (aws-sdk/generator/shape::to-query-params "EndMode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-mode)))
    (aws-sdk/generator/shape::to-query-params "EndValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-value))))))
(common-lisp:progn
 (common-lisp:defstruct
     (typed-link-attribute-definition (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or attribute-name common-lisp:null))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or facet-attribute-type common-lisp:null))
   (default-value common-lisp:nil :type
    (common-lisp:or typed-attribute-value common-lisp:null))
   (is-immutable common-lisp:nil :type (common-lisp:or bool common-lisp:null))
   (rules common-lisp:nil :type (common-lisp:or rule-map common-lisp:null))
   (required-behavior
    (common-lisp:error
     #A((30) common-lisp:base-char . ":required-behavior is required"))
    :type (common-lisp:or required-attribute-behavior common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'typed-link-attribute-definition
                    'make-typed-link-attribute-definition))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          typed-link-attribute-definition))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "DefaultValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-value)))
    (aws-sdk/generator/shape::to-query-params "IsImmutable"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-immutable)))
    (aws-sdk/generator/shape::to-query-params "Rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules)))
    (aws-sdk/generator/shape::to-query-params "RequiredBehavior"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'required-behavior))))))
(common-lisp:progn
 (common-lisp:deftype typed-link-attribute-definition-list ()
   '(trivial-types:proper-list typed-link-attribute-definition))
 (common-lisp:defun |make-typed-link-attribute-definition-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            typed-link-attribute-definition))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (typed-link-attribute-range (:copier common-lisp:nil))
   (attribute-name common-lisp:nil :type
    (common-lisp:or attribute-name common-lisp:null))
   (range
    (common-lisp:error #A((18) common-lisp:base-char . ":range is required"))
    :type (common-lisp:or typed-attribute-value-range common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'typed-link-attribute-range
                    'make-typed-link-attribute-range))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          typed-link-attribute-range))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AttributeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-name)))
    (aws-sdk/generator/shape::to-query-params "Range"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'range))))))
(common-lisp:progn
 (common-lisp:deftype typed-link-attribute-range-list ()
   '(trivial-types:proper-list typed-link-attribute-range))
 (common-lisp:defun |make-typed-link-attribute-range-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            typed-link-attribute-range))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (typed-link-facet (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or typed-link-name common-lisp:null))
   (attributes
    (common-lisp:error
     #A((23) common-lisp:base-char . ":attributes is required"))
    :type
    (common-lisp:or typed-link-attribute-definition-list common-lisp:null))
   (identity-attribute-order
    (common-lisp:error
     #A((37) common-lisp:base-char . ":identity-attribute-order is required"))
    :type (common-lisp:or attribute-name-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'typed-link-facet 'make-typed-link-facet))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape typed-link-facet))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "IdentityAttributeOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-attribute-order))))))
(common-lisp:progn
 (common-lisp:defstruct
     (typed-link-facet-attribute-update (:copier common-lisp:nil))
   (attribute
    (common-lisp:error
     #A((22) common-lisp:base-char . ":attribute is required"))
    :type (common-lisp:or typed-link-attribute-definition common-lisp:null))
   (action
    (common-lisp:error #A((19) common-lisp:base-char . ":action is required"))
    :type (common-lisp:or update-action-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'typed-link-facet-attribute-update
                    'make-typed-link-facet-attribute-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          typed-link-facet-attribute-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Attribute"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute)))
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action))))))
(common-lisp:progn
 (common-lisp:deftype typed-link-facet-attribute-update-list ()
   '(trivial-types:proper-list typed-link-facet-attribute-update))
 (common-lisp:defun |make-typed-link-facet-attribute-update-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            typed-link-facet-attribute-update))
   aws-sdk/generator/shape::members))
(common-lisp:deftype typed-link-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype typed-link-name-list ()
   '(trivial-types:proper-list typed-link-name))
 (common-lisp:defun |make-typed-link-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list typed-link-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (typed-link-schema-and-facet-name (:copier common-lisp:nil))
   (schema-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":schema-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (typed-link-name
    (common-lisp:error
     #A((28) common-lisp:base-char . ":typed-link-name is required"))
    :type (common-lisp:or typed-link-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'typed-link-schema-and-facet-name
                    'make-typed-link-schema-and-facet-name))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          typed-link-schema-and-facet-name))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn)))
    (aws-sdk/generator/shape::to-query-params "TypedLinkName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'typed-link-name))))))
(common-lisp:progn
 (common-lisp:defstruct (typed-link-specifier (:copier common-lisp:nil))
   (typed-link-facet
    (common-lisp:error
     #A((29) common-lisp:base-char . ":typed-link-facet is required"))
    :type (common-lisp:or typed-link-schema-and-facet-name common-lisp:null))
   (source-object-reference
    (common-lisp:error
     #A((36) common-lisp:base-char . ":source-object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (target-object-reference
    (common-lisp:error
     #A((36) common-lisp:base-char . ":target-object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (identity-attribute-values
    (common-lisp:error
     #A((38) common-lisp:base-char . ":identity-attribute-values is required"))
    :type (common-lisp:or attribute-name-and-value-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'typed-link-specifier 'make-typed-link-specifier))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape typed-link-specifier))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TypedLinkFacet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'typed-link-facet)))
    (aws-sdk/generator/shape::to-query-params "SourceObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-object-reference)))
    (aws-sdk/generator/shape::to-query-params "TargetObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-object-reference)))
    (aws-sdk/generator/shape::to-query-params "IdentityAttributeValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-attribute-values))))))
(common-lisp:progn
 (common-lisp:deftype typed-link-specifier-list ()
   '(trivial-types:proper-list typed-link-specifier))
 (common-lisp:defun |make-typed-link-specifier-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list typed-link-specifier))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (unsupported-index-type-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unsupported-index-type-exception
                    'make-unsupported-index-type-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unsupported-index-type-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (untag-resource-request (:copier common-lisp:nil))
   (resource-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":resource-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (tag-keys
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tag-keys is required"))
    :type (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          untag-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "TagKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-keys))))))
(common-lisp:progn
 (common-lisp:defstruct (untag-resource-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          untag-resource-response))
   (common-lisp:append)))
(common-lisp:deftype update-action-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (update-facet-request (:copier common-lisp:nil))
   (schema-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":schema-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or facet-name common-lisp:null))
   (attribute-updates common-lisp:nil :type
    (common-lisp:or facet-attribute-update-list common-lisp:null))
   (object-type common-lisp:nil :type
    (common-lisp:or object-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-facet-request 'make-update-facet-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-facet-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "AttributeUpdates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-updates)))
    (aws-sdk/generator/shape::to-query-params "ObjectType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-type))))))
(common-lisp:progn
 (common-lisp:defstruct (update-facet-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-facet-response 'make-update-facet-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-facet-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-object-attributes-request (:copier common-lisp:nil))
   (directory-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":directory-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (object-reference
    (common-lisp:error
     #A((29) common-lisp:base-char . ":object-reference is required"))
    :type (common-lisp:or object-reference common-lisp:null))
   (attribute-updates
    (common-lisp:error
     #A((30) common-lisp:base-char . ":attribute-updates is required"))
    :type (common-lisp:or object-attribute-update-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-object-attributes-request
                    'make-update-object-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-object-attributes-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-arn)))
    (aws-sdk/generator/shape::to-query-params "ObjectReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-reference)))
    (aws-sdk/generator/shape::to-query-params "AttributeUpdates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-updates))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-object-attributes-response (:copier common-lisp:nil))
   (object-identifier common-lisp:nil :type
    (common-lisp:or object-identifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-object-attributes-response
                    'make-update-object-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-object-attributes-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ObjectIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'object-identifier))))))
(common-lisp:progn
 (common-lisp:defstruct (update-schema-request (:copier common-lisp:nil))
   (schema-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":schema-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or schema-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-schema-request 'make-update-schema-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-schema-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (update-schema-response (:copier common-lisp:nil))
   (schema-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-schema-response 'make-update-schema-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-schema-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-typed-link-facet-request (:copier common-lisp:nil))
   (schema-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":schema-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or typed-link-name common-lisp:null))
   (attribute-updates
    (common-lisp:error
     #A((30) common-lisp:base-char . ":attribute-updates is required"))
    :type
    (common-lisp:or typed-link-facet-attribute-update-list common-lisp:null))
   (identity-attribute-order
    (common-lisp:error
     #A((37) common-lisp:base-char . ":identity-attribute-order is required"))
    :type (common-lisp:or attribute-name-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-typed-link-facet-request
                    'make-update-typed-link-facet-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-typed-link-facet-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SchemaArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "AttributeUpdates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-updates)))
    (aws-sdk/generator/shape::to-query-params "IdentityAttributeOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-attribute-order))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-typed-link-facet-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-typed-link-facet-response
                    'make-update-typed-link-facet-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-typed-link-facet-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (validation-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'make-validation-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape validation-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun add-facet-to-object
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn schema-facet
                     object-attribute-list object-reference)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn schema-facet object-attribute-list
     object-reference))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-facet-to-object-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"AddFacetToObject")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AddFacetToObjectResponse" common-lisp:nil)))
 (common-lisp:export 'add-facet-to-object))
(common-lisp:progn
 (common-lisp:defun apply-schema
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key published-schema-arn directory-arn)
   (common-lisp:declare
    (common-lisp:ignorable published-schema-arn directory-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-apply-schema-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"ApplySchema")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ApplySchemaResponse" common-lisp:nil)))
 (common-lisp:export 'apply-schema))
(common-lisp:progn
 (common-lisp:defun attach-object
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn parent-reference
                     child-reference link-name)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn parent-reference child-reference
     link-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-attach-object-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"AttachObject")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AttachObjectResponse" common-lisp:nil)))
 (common-lisp:export 'attach-object))
(common-lisp:progn
 (common-lisp:defun attach-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn policy-reference
                     object-reference)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn policy-reference object-reference))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-attach-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"AttachPolicy")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AttachPolicyResponse" common-lisp:nil)))
 (common-lisp:export 'attach-policy))
(common-lisp:progn
 (common-lisp:defun attach-to-index
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn index-reference
                     target-reference)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn index-reference target-reference))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-attach-to-index-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"AttachToIndex")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AttachToIndexResponse" common-lisp:nil)))
 (common-lisp:export 'attach-to-index))
(common-lisp:progn
 (common-lisp:defun attach-typed-link
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn source-object-reference
                     target-object-reference typed-link-facet attributes)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn source-object-reference
     target-object-reference typed-link-facet attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-attach-typed-link-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"AttachTypedLink")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AttachTypedLinkResponse" common-lisp:nil)))
 (common-lisp:export 'attach-typed-link))
(common-lisp:progn
 (common-lisp:defun batch-read
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn operations
                     consistency-level)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn operations consistency-level))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-read-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"BatchRead")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BatchReadResponse" common-lisp:nil)))
 (common-lisp:export 'batch-read))
(common-lisp:progn
 (common-lisp:defun batch-write
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn operations)
   (common-lisp:declare (common-lisp:ignorable directory-arn operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-write-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"BatchWrite")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BatchWriteResponse" common-lisp:nil)))
 (common-lisp:export 'batch-write))
(common-lisp:progn
 (common-lisp:defun create-directory
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name schema-arn)
   (common-lisp:declare (common-lisp:ignorable name schema-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-directory-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"CreateDirectory")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateDirectoryResponse" common-lisp:nil)))
 (common-lisp:export 'create-directory))
(common-lisp:progn
 (common-lisp:defun create-facet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key schema-arn name attributes object-type)
   (common-lisp:declare
    (common-lisp:ignorable schema-arn name attributes object-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-facet-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"CreateFacet")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateFacetResponse" common-lisp:nil)))
 (common-lisp:export 'create-facet))
(common-lisp:progn
 (common-lisp:defun create-index
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn
                     ordered-indexed-attribute-list is-unique parent-reference
                     link-name)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn ordered-indexed-attribute-list
     is-unique parent-reference link-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-index-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"CreateIndex")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateIndexResponse" common-lisp:nil)))
 (common-lisp:export 'create-index))
(common-lisp:progn
 (common-lisp:defun create-object
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn schema-facets
                     object-attribute-list parent-reference link-name)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn schema-facets object-attribute-list
     parent-reference link-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-object-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"CreateObject")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateObjectResponse" common-lisp:nil)))
 (common-lisp:export 'create-object))
(common-lisp:progn
 (common-lisp:defun create-schema
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-schema-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"CreateSchema")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateSchemaResponse" common-lisp:nil)))
 (common-lisp:export 'create-schema))
(common-lisp:progn
 (common-lisp:defun create-typed-link-facet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key schema-arn facet)
   (common-lisp:declare (common-lisp:ignorable schema-arn facet))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-typed-link-facet-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"CreateTypedLinkFacet")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateTypedLinkFacetResponse" common-lisp:nil)))
 (common-lisp:export 'create-typed-link-facet))
(common-lisp:progn
 (common-lisp:defun delete-directory
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn)
   (common-lisp:declare (common-lisp:ignorable directory-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-directory-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteDirectory")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteDirectoryResponse" common-lisp:nil)))
 (common-lisp:export 'delete-directory))
(common-lisp:progn
 (common-lisp:defun delete-facet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key schema-arn name)
   (common-lisp:declare (common-lisp:ignorable schema-arn name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-facet-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteFacet")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteFacetResponse" common-lisp:nil)))
 (common-lisp:export 'delete-facet))
(common-lisp:progn
 (common-lisp:defun delete-object
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn object-reference)
   (common-lisp:declare (common-lisp:ignorable directory-arn object-reference))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-object-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteObject")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteObjectResponse" common-lisp:nil)))
 (common-lisp:export 'delete-object))
(common-lisp:progn
 (common-lisp:defun delete-schema
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key schema-arn)
   (common-lisp:declare (common-lisp:ignorable schema-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-schema-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteSchema")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteSchemaResponse" common-lisp:nil)))
 (common-lisp:export 'delete-schema))
(common-lisp:progn
 (common-lisp:defun delete-typed-link-facet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key schema-arn name)
   (common-lisp:declare (common-lisp:ignorable schema-arn name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-typed-link-facet-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteTypedLinkFacet")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteTypedLinkFacetResponse" common-lisp:nil)))
 (common-lisp:export 'delete-typed-link-facet))
(common-lisp:progn
 (common-lisp:defun detach-from-index
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn index-reference
                     target-reference)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn index-reference target-reference))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detach-from-index-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"DetachFromIndex")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DetachFromIndexResponse" common-lisp:nil)))
 (common-lisp:export 'detach-from-index))
(common-lisp:progn
 (common-lisp:defun detach-object
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn parent-reference link-name)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn parent-reference link-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detach-object-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"DetachObject")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DetachObjectResponse" common-lisp:nil)))
 (common-lisp:export 'detach-object))
(common-lisp:progn
 (common-lisp:defun detach-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn policy-reference
                     object-reference)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn policy-reference object-reference))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detach-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"DetachPolicy")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DetachPolicyResponse" common-lisp:nil)))
 (common-lisp:export 'detach-policy))
(common-lisp:progn
 (common-lisp:defun detach-typed-link
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn typed-link-specifier)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn typed-link-specifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detach-typed-link-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"DetachTypedLink")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'detach-typed-link))
(common-lisp:progn
 (common-lisp:defun disable-directory
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn)
   (common-lisp:declare (common-lisp:ignorable directory-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disable-directory-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"DisableDirectory")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DisableDirectoryResponse" common-lisp:nil)))
 (common-lisp:export 'disable-directory))
(common-lisp:progn
 (common-lisp:defun enable-directory
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn)
   (common-lisp:declare (common-lisp:ignorable directory-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-enable-directory-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"EnableDirectory")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "EnableDirectoryResponse" common-lisp:nil)))
 (common-lisp:export 'enable-directory))
(common-lisp:progn
 (common-lisp:defun get-directory
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn)
   (common-lisp:declare (common-lisp:ignorable directory-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-directory-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetDirectory")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDirectoryResponse" common-lisp:nil)))
 (common-lisp:export 'get-directory))
(common-lisp:progn
 (common-lisp:defun get-facet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key schema-arn name)
   (common-lisp:declare (common-lisp:ignorable schema-arn name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-facet-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetFacet")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetFacetResponse" common-lisp:nil)))
 (common-lisp:export 'get-facet))
(common-lisp:progn
 (common-lisp:defun get-object-information
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn object-reference
                     consistency-level)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn object-reference consistency-level))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-object-information-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetObjectInformation")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetObjectInformationResponse" common-lisp:nil)))
 (common-lisp:export 'get-object-information))
(common-lisp:progn
 (common-lisp:defun get-schema-as-json
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key schema-arn)
   (common-lisp:declare (common-lisp:ignorable schema-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-schema-as-json-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetSchemaAsJson")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetSchemaAsJsonResponse" common-lisp:nil)))
 (common-lisp:export 'get-schema-as-json))
(common-lisp:progn
 (common-lisp:defun get-typed-link-facet-information
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key schema-arn name)
   (common-lisp:declare (common-lisp:ignorable schema-arn name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-typed-link-facet-information-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetTypedLinkFacetInformation")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetTypedLinkFacetInformationResponse" common-lisp:nil)))
 (common-lisp:export 'get-typed-link-facet-information))
(common-lisp:progn
 (common-lisp:defun list-applied-schema-arns
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-applied-schema-arns-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListAppliedSchemaArns")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListAppliedSchemaArnsResponse" common-lisp:nil)))
 (common-lisp:export 'list-applied-schema-arns))
(common-lisp:progn
 (common-lisp:defun list-attached-indices
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn target-reference next-token
                     max-results consistency-level)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn target-reference next-token
     max-results consistency-level))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-attached-indices-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListAttachedIndices")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListAttachedIndicesResponse" common-lisp:nil)))
 (common-lisp:export 'list-attached-indices))
(common-lisp:progn
 (common-lisp:defun list-development-schema-arns
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-development-schema-arns-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListDevelopmentSchemaArns")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListDevelopmentSchemaArnsResponse" common-lisp:nil)))
 (common-lisp:export 'list-development-schema-arns))
(common-lisp:progn
 (common-lisp:defun list-directories
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results state)
   (common-lisp:declare (common-lisp:ignorable next-token max-results state))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-directories-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListDirectories")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListDirectoriesResponse" common-lisp:nil)))
 (common-lisp:export 'list-directories))
(common-lisp:progn
 (common-lisp:defun list-facet-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key schema-arn name next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable schema-arn name next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-facet-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListFacetAttributes")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListFacetAttributesResponse" common-lisp:nil)))
 (common-lisp:export 'list-facet-attributes))
(common-lisp:progn
 (common-lisp:defun list-facet-names
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key schema-arn next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable schema-arn next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-facet-names-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListFacetNames")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListFacetNamesResponse" common-lisp:nil)))
 (common-lisp:export 'list-facet-names))
(common-lisp:progn
 (common-lisp:defun list-incoming-typed-links
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn object-reference
                     filter-attribute-ranges filter-typed-link next-token
                     max-results consistency-level)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn object-reference
     filter-attribute-ranges filter-typed-link next-token max-results
     consistency-level))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-incoming-typed-links-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListIncomingTypedLinks")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListIncomingTypedLinksResponse" common-lisp:nil)))
 (common-lisp:export 'list-incoming-typed-links))
(common-lisp:progn
 (common-lisp:defun list-index
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn ranges-on-indexed-values
                     index-reference max-results next-token consistency-level)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn ranges-on-indexed-values
     index-reference max-results next-token consistency-level))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-index-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListIndex")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListIndexResponse" common-lisp:nil)))
 (common-lisp:export 'list-index))
(common-lisp:progn
 (common-lisp:defun list-object-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn object-reference next-token
                     max-results consistency-level facet-filter)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn object-reference next-token
     max-results consistency-level facet-filter))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-object-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListObjectAttributes")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListObjectAttributesResponse" common-lisp:nil)))
 (common-lisp:export 'list-object-attributes))
(common-lisp:progn
 (common-lisp:defun list-object-children
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn object-reference next-token
                     max-results consistency-level)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn object-reference next-token
     max-results consistency-level))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-object-children-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListObjectChildren")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListObjectChildrenResponse" common-lisp:nil)))
 (common-lisp:export 'list-object-children))
(common-lisp:progn
 (common-lisp:defun list-object-parent-paths
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn object-reference next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn object-reference next-token
     max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-object-parent-paths-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListObjectParentPaths")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListObjectParentPathsResponse" common-lisp:nil)))
 (common-lisp:export 'list-object-parent-paths))
(common-lisp:progn
 (common-lisp:defun list-object-parents
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn object-reference next-token
                     max-results consistency-level)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn object-reference next-token
     max-results consistency-level))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-object-parents-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListObjectParents")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListObjectParentsResponse" common-lisp:nil)))
 (common-lisp:export 'list-object-parents))
(common-lisp:progn
 (common-lisp:defun list-object-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn object-reference next-token
                     max-results consistency-level)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn object-reference next-token
     max-results consistency-level))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-object-policies-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListObjectPolicies")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListObjectPoliciesResponse" common-lisp:nil)))
 (common-lisp:export 'list-object-policies))
(common-lisp:progn
 (common-lisp:defun list-outgoing-typed-links
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn object-reference
                     filter-attribute-ranges filter-typed-link next-token
                     max-results consistency-level)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn object-reference
     filter-attribute-ranges filter-typed-link next-token max-results
     consistency-level))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-outgoing-typed-links-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListOutgoingTypedLinks")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListOutgoingTypedLinksResponse" common-lisp:nil)))
 (common-lisp:export 'list-outgoing-typed-links))
(common-lisp:progn
 (common-lisp:defun list-policy-attachments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn policy-reference next-token
                     max-results consistency-level)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn policy-reference next-token
     max-results consistency-level))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-policy-attachments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListPolicyAttachments")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListPolicyAttachmentsResponse" common-lisp:nil)))
 (common-lisp:export 'list-policy-attachments))
(common-lisp:progn
 (common-lisp:defun list-published-schema-arns
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-published-schema-arns-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListPublishedSchemaArns")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListPublishedSchemaArnsResponse" common-lisp:nil)))
 (common-lisp:export 'list-published-schema-arns))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable resource-arn next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListTagsForResource")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListTagsForResourceResponse" common-lisp:nil)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-typed-link-facet-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key schema-arn name next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable schema-arn name next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-typed-link-facet-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListTypedLinkFacetAttributes")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListTypedLinkFacetAttributesResponse" common-lisp:nil)))
 (common-lisp:export 'list-typed-link-facet-attributes))
(common-lisp:progn
 (common-lisp:defun list-typed-link-facet-names
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key schema-arn next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable schema-arn next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-typed-link-facet-names-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListTypedLinkFacetNames")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListTypedLinkFacetNamesResponse" common-lisp:nil)))
 (common-lisp:export 'list-typed-link-facet-names))
(common-lisp:progn
 (common-lisp:defun lookup-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn object-reference next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn object-reference next-token
     max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-lookup-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"LookupPolicy")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "LookupPolicyResponse" common-lisp:nil)))
 (common-lisp:export 'lookup-policy))
(common-lisp:progn
 (common-lisp:defun publish-schema
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key development-schema-arn version name)
   (common-lisp:declare
    (common-lisp:ignorable development-schema-arn version name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-publish-schema-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"PublishSchema")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PublishSchemaResponse" common-lisp:nil)))
 (common-lisp:export 'publish-schema))
(common-lisp:progn
 (common-lisp:defun put-schema-from-json
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key schema-arn document)
   (common-lisp:declare (common-lisp:ignorable schema-arn document))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-schema-from-json-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"PutSchemaFromJson")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutSchemaFromJsonResponse" common-lisp:nil)))
 (common-lisp:export 'put-schema-from-json))
(common-lisp:progn
 (common-lisp:defun remove-facet-from-object
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn schema-facet
                     object-reference)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn schema-facet object-reference))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-facet-from-object-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"RemoveFacetFromObject")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RemoveFacetFromObjectResponse" common-lisp:nil)))
 (common-lisp:export 'remove-facet-from-object))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"TagResource")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "TagResourceResponse" common-lisp:nil)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"UntagResource")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UntagResourceResponse" common-lisp:nil)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-facet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key schema-arn name attribute-updates
                     object-type)
   (common-lisp:declare
    (common-lisp:ignorable schema-arn name attribute-updates object-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-facet-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateFacet")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateFacetResponse" common-lisp:nil)))
 (common-lisp:export 'update-facet))
(common-lisp:progn
 (common-lisp:defun update-object-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-arn object-reference
                     attribute-updates)
   (common-lisp:declare
    (common-lisp:ignorable directory-arn object-reference attribute-updates))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-object-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateObjectAttributes")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateObjectAttributesResponse" common-lisp:nil)))
 (common-lisp:export 'update-object-attributes))
(common-lisp:progn
 (common-lisp:defun update-schema
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key schema-arn name)
   (common-lisp:declare (common-lisp:ignorable schema-arn name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-schema-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateSchema")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateSchemaResponse" common-lisp:nil)))
 (common-lisp:export 'update-schema))
(common-lisp:progn
 (common-lisp:defun update-typed-link-facet
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key schema-arn name attribute-updates
                     identity-attribute-order)
   (common-lisp:declare
    (common-lisp:ignorable schema-arn name attribute-updates
     identity-attribute-order))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-typed-link-facet-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "clouddirectory")
                               :method :put :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateTypedLinkFacet")
                                  ("Version" ,@"2016-05-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateTypedLinkFacetResponse" common-lisp:nil)))
 (common-lisp:export 'update-typed-link-facet))