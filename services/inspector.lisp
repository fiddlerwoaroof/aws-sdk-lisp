;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/inspector
  (:use)
  (:nicknames #:aws/inspector)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/inspector)

(common-lisp:deftype access-denied-error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (access-denied-exception (:copier common-lisp:nil))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or error-message common-lisp:null))
   (error-code
    (common-lisp:error
     #A((22) common-lisp:base-char . ":errorcode is required"))
    :type (common-lisp:or access-denied-error-code common-lisp:null))
   (can-retry
    (common-lisp:error
     #A((21) common-lisp:base-char . ":canretry is required"))
    :type (common-lisp:or bool common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'make-access-denied-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          access-denied-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "errorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code)))
    (aws-sdk/generator/shape::to-query-params "canRetry"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'can-retry))))))
(common-lisp:progn
 (common-lisp:defstruct
     (add-attributes-to-findings-request (:copier common-lisp:nil))
   (finding-arns
    (common-lisp:error
     #A((24) common-lisp:base-char . ":findingarns is required"))
    :type
    (common-lisp:or add-remove-attributes-finding-arn-list common-lisp:null))
   (attributes
    (common-lisp:error
     #A((23) common-lisp:base-char . ":attributes is required"))
    :type (common-lisp:or user-attribute-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-attributes-to-findings-request
                    'make-add-attributes-to-findings-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-attributes-to-findings-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "findingArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'finding-arns)))
    (aws-sdk/generator/shape::to-query-params "attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes))))))
(common-lisp:progn
 (common-lisp:defstruct
     (add-attributes-to-findings-response (:copier common-lisp:nil))
   (failed-items
    (common-lisp:error
     #A((24) common-lisp:base-char . ":faileditems is required"))
    :type (common-lisp:or failed-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-attributes-to-findings-response
                    'make-add-attributes-to-findings-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-attributes-to-findings-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "failedItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-items))))))
(common-lisp:progn
 (common-lisp:deftype add-remove-attributes-finding-arn-list ()
   '(trivial-types:proper-list arn))
 (common-lisp:defun |make-add-remove-attributes-finding-arn-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (agent-already-running-assessment (:copier common-lisp:nil))
   (agent-id
    (common-lisp:error #A((20) common-lisp:base-char . ":agentid is required"))
    :type (common-lisp:or agent-id common-lisp:null))
   (assessment-run-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":assessmentrunarn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'agent-already-running-assessment
                    'make-agent-already-running-assessment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          agent-already-running-assessment))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "agentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-id)))
    (aws-sdk/generator/shape::to-query-params "assessmentRunArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-run-arn))))))
(common-lisp:progn
 (common-lisp:deftype agent-already-running-assessment-list ()
   '(trivial-types:proper-list agent-already-running-assessment))
 (common-lisp:defun |make-agent-already-running-assessment-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            agent-already-running-assessment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (agent-filter (:copier common-lisp:nil))
   (agent-healths
    (common-lisp:error
     #A((25) common-lisp:base-char . ":agenthealths is required"))
    :type (common-lisp:or agent-health-list common-lisp:null))
   (agent-health-codes
    (common-lisp:error
     #A((29) common-lisp:base-char . ":agenthealthcodes is required"))
    :type (common-lisp:or agent-health-code-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'agent-filter 'make-agent-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape agent-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "agentHealths"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-healths)))
    (aws-sdk/generator/shape::to-query-params "agentHealthCodes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-health-codes))))))
(common-lisp:deftype agent-health () 'common-lisp:string)
(common-lisp:deftype agent-health-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype agent-health-code-list ()
   '(trivial-types:proper-list agent-health-code))
 (common-lisp:defun |make-agent-health-code-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list agent-health-code))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype agent-health-list ()
   '(trivial-types:proper-list agent-health))
 (common-lisp:defun |make-agent-health-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list agent-health))
   aws-sdk/generator/shape::members))
(common-lisp:deftype agent-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype agent-id-list () '(trivial-types:proper-list agent-id))
 (common-lisp:defun |make-agent-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list agent-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (agent-preview (:copier common-lisp:nil))
   (agent-id
    (common-lisp:error #A((20) common-lisp:base-char . ":agentid is required"))
    :type (common-lisp:or agent-id common-lisp:null))
   (auto-scaling-group common-lisp:nil :type
    (common-lisp:or auto-scaling-group common-lisp:null)))
 (common-lisp:export (common-lisp:list 'agent-preview 'make-agent-preview))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape agent-preview))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "agentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-id)))
    (aws-sdk/generator/shape::to-query-params "autoScalingGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group))))))
(common-lisp:progn
 (common-lisp:deftype agent-preview-list ()
   '(trivial-types:proper-list agent-preview))
 (common-lisp:defun |make-agent-preview-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list agent-preview))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (agents-already-running-assessment-exception (:copier common-lisp:nil))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or error-message common-lisp:null))
   (agents
    (common-lisp:error #A((19) common-lisp:base-char . ":agents is required"))
    :type
    (common-lisp:or agent-already-running-assessment-list common-lisp:null))
   (agents-truncated
    (common-lisp:error
     #A((28) common-lisp:base-char . ":agentstruncated is required"))
    :type (common-lisp:or bool common-lisp:null))
   (can-retry
    (common-lisp:error
     #A((21) common-lisp:base-char . ":canretry is required"))
    :type (common-lisp:or bool common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'agents-already-running-assessment-exception
                    'make-agents-already-running-assessment-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          agents-already-running-assessment-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "agents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agents)))
    (aws-sdk/generator/shape::to-query-params "agentsTruncated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agents-truncated)))
    (aws-sdk/generator/shape::to-query-params "canRetry"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'can-retry))))))
(common-lisp:deftype ami-id () 'common-lisp:string)
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype assessment-rules-package-arn-list ()
   '(trivial-types:proper-list arn))
 (common-lisp:defun |make-assessment-rules-package-arn-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (assessment-run (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or assessment-run-name common-lisp:null))
   (assessment-template-arn
    (common-lisp:error
     #A((34) common-lisp:base-char . ":assessmenttemplatearn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (state
    (common-lisp:error #A((18) common-lisp:base-char . ":state is required"))
    :type (common-lisp:or assessment-run-state common-lisp:null))
   (duration-in-seconds
    (common-lisp:error
     #A((30) common-lisp:base-char . ":durationinseconds is required"))
    :type (common-lisp:or assessment-run-duration common-lisp:null))
   (rules-package-arns
    (common-lisp:error
     #A((29) common-lisp:base-char . ":rulespackagearns is required"))
    :type (common-lisp:or assessment-rules-package-arn-list common-lisp:null))
   (user-attributes-for-findings
    (common-lisp:error
     #A((38) common-lisp:base-char . ":userattributesforfindings is required"))
    :type (common-lisp:or user-attribute-list common-lisp:null))
   (created-at
    (common-lisp:error
     #A((22) common-lisp:base-char . ":createdat is required"))
    :type (common-lisp:or timestamp common-lisp:null))
   (started-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (completed-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (state-changed-at
    (common-lisp:error
     #A((27) common-lisp:base-char . ":statechangedat is required"))
    :type (common-lisp:or timestamp common-lisp:null))
   (data-collected
    (common-lisp:error
     #A((26) common-lisp:base-char . ":datacollected is required"))
    :type (common-lisp:or bool common-lisp:null))
   (state-changes
    (common-lisp:error
     #A((25) common-lisp:base-char . ":statechanges is required"))
    :type (common-lisp:or assessment-run-state-change-list common-lisp:null))
   (notifications
    (common-lisp:error
     #A((26) common-lisp:base-char . ":notifications is required"))
    :type (common-lisp:or assessment-run-notification-list common-lisp:null))
   (finding-counts
    (common-lisp:error
     #A((26) common-lisp:base-char . ":findingcounts is required"))
    :type (common-lisp:or assessment-run-finding-counts common-lisp:null)))
 (common-lisp:export (common-lisp:list 'assessment-run 'make-assessment-run))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape assessment-run))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "assessmentTemplateArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-template-arn)))
    (aws-sdk/generator/shape::to-query-params "state"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "durationInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "rulesPackageArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules-package-arns)))
    (aws-sdk/generator/shape::to-query-params "userAttributesForFindings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-attributes-for-findings)))
    (aws-sdk/generator/shape::to-query-params "createdAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "startedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'started-at)))
    (aws-sdk/generator/shape::to-query-params "completedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'completed-at)))
    (aws-sdk/generator/shape::to-query-params "stateChangedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-changed-at)))
    (aws-sdk/generator/shape::to-query-params "dataCollected"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-collected)))
    (aws-sdk/generator/shape::to-query-params "stateChanges"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-changes)))
    (aws-sdk/generator/shape::to-query-params "notifications"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notifications)))
    (aws-sdk/generator/shape::to-query-params "findingCounts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'finding-counts))))))
(common-lisp:progn
 (common-lisp:defstruct (assessment-run-agent (:copier common-lisp:nil))
   (agent-id
    (common-lisp:error #A((20) common-lisp:base-char . ":agentid is required"))
    :type (common-lisp:or agent-id common-lisp:null))
   (assessment-run-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":assessmentrunarn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (agent-health
    (common-lisp:error
     #A((24) common-lisp:base-char . ":agenthealth is required"))
    :type (common-lisp:or agent-health common-lisp:null))
   (agent-health-code
    (common-lisp:error
     #A((28) common-lisp:base-char . ":agenthealthcode is required"))
    :type (common-lisp:or agent-health-code common-lisp:null))
   (agent-health-details common-lisp:nil :type
    (common-lisp:or message common-lisp:null))
   (auto-scaling-group common-lisp:nil :type
    (common-lisp:or auto-scaling-group common-lisp:null))
   (telemetry-metadata
    (common-lisp:error
     #A((30) common-lisp:base-char . ":telemetrymetadata is required"))
    :type (common-lisp:or telemetry-metadata-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'assessment-run-agent 'make-assessment-run-agent))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape assessment-run-agent))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "agentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-id)))
    (aws-sdk/generator/shape::to-query-params "assessmentRunArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-run-arn)))
    (aws-sdk/generator/shape::to-query-params "agentHealth"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-health)))
    (aws-sdk/generator/shape::to-query-params "agentHealthCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-health-code)))
    (aws-sdk/generator/shape::to-query-params "agentHealthDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-health-details)))
    (aws-sdk/generator/shape::to-query-params "autoScalingGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group)))
    (aws-sdk/generator/shape::to-query-params "telemetryMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'telemetry-metadata))))))
(common-lisp:progn
 (common-lisp:deftype assessment-run-agent-list ()
   '(trivial-types:proper-list assessment-run-agent))
 (common-lisp:defun |make-assessment-run-agent-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list assessment-run-agent))
   aws-sdk/generator/shape::members))
(common-lisp:deftype assessment-run-duration () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (assessment-run-filter (:copier common-lisp:nil))
   (name-pattern common-lisp:nil :type
    (common-lisp:or name-pattern common-lisp:null))
   (states common-lisp:nil :type
    (common-lisp:or assessment-run-state-list common-lisp:null))
   (duration-range common-lisp:nil :type
    (common-lisp:or duration-range common-lisp:null))
   (rules-package-arns common-lisp:nil :type
    (common-lisp:or filter-rules-package-arn-list common-lisp:null))
   (start-time-range common-lisp:nil :type
    (common-lisp:or timestamp-range common-lisp:null))
   (completion-time-range common-lisp:nil :type
    (common-lisp:or timestamp-range common-lisp:null))
   (state-change-time-range common-lisp:nil :type
    (common-lisp:or timestamp-range common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'assessment-run-filter 'make-assessment-run-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          assessment-run-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "namePattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name-pattern)))
    (aws-sdk/generator/shape::to-query-params "states"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'states)))
    (aws-sdk/generator/shape::to-query-params "durationRange"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration-range)))
    (aws-sdk/generator/shape::to-query-params "rulesPackageArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules-package-arns)))
    (aws-sdk/generator/shape::to-query-params "startTimeRange"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time-range)))
    (aws-sdk/generator/shape::to-query-params "completionTimeRange"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'completion-time-range)))
    (aws-sdk/generator/shape::to-query-params "stateChangeTimeRange"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-change-time-range))))))
(common-lisp:defstruct
    (assessment-run-finding-counts
     (:constructor |make-assessment-run-finding-counts|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:deftype assessment-run-in-progress-arn-list ()
   '(trivial-types:proper-list arn))
 (common-lisp:defun |make-assessment-run-in-progress-arn-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (assessment-run-in-progress-exception (:copier common-lisp:nil))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or error-message common-lisp:null))
   (assessment-run-arns
    (common-lisp:error
     #A((30) common-lisp:base-char . ":assessmentrunarns is required"))
    :type
    (common-lisp:or assessment-run-in-progress-arn-list common-lisp:null))
   (assessment-run-arns-truncated
    (common-lisp:error
     #A((39) common-lisp:base-char
        . ":assessmentrunarnstruncated is required"))
    :type (common-lisp:or bool common-lisp:null))
   (can-retry
    (common-lisp:error
     #A((21) common-lisp:base-char . ":canretry is required"))
    :type (common-lisp:or bool common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'assessment-run-in-progress-exception
                    'make-assessment-run-in-progress-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          assessment-run-in-progress-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "assessmentRunArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-run-arns)))
    (aws-sdk/generator/shape::to-query-params "assessmentRunArnsTruncated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-run-arns-truncated)))
    (aws-sdk/generator/shape::to-query-params "canRetry"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'can-retry))))))
(common-lisp:progn
 (common-lisp:deftype assessment-run-list ()
   '(trivial-types:proper-list assessment-run))
 (common-lisp:defun |make-assessment-run-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list assessment-run))
   aws-sdk/generator/shape::members))
(common-lisp:deftype assessment-run-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (assessment-run-notification (:copier common-lisp:nil))
   (date
    (common-lisp:error #A((17) common-lisp:base-char . ":date is required"))
    :type (common-lisp:or timestamp common-lisp:null))
   (event
    (common-lisp:error #A((18) common-lisp:base-char . ":event is required"))
    :type (common-lisp:or inspector-event common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or message common-lisp:null))
   (error
    (common-lisp:error #A((18) common-lisp:base-char . ":error is required"))
    :type (common-lisp:or bool common-lisp:null))
   (sns-topic-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (sns-publish-status-code common-lisp:nil :type
    (common-lisp:or assessment-run-notification-sns-status-code
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'assessment-run-notification
                    'make-assessment-run-notification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          assessment-run-notification))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "date"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'date)))
    (aws-sdk/generator/shape::to-query-params "event"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "error"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error)))
    (aws-sdk/generator/shape::to-query-params "snsTopicArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sns-topic-arn)))
    (aws-sdk/generator/shape::to-query-params "snsPublishStatusCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sns-publish-status-code))))))
(common-lisp:progn
 (common-lisp:deftype assessment-run-notification-list ()
   '(trivial-types:proper-list assessment-run-notification))
 (common-lisp:defun |make-assessment-run-notification-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            assessment-run-notification))
   aws-sdk/generator/shape::members))
(common-lisp:deftype assessment-run-notification-sns-status-code ()
  'common-lisp:string)
(common-lisp:deftype assessment-run-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (assessment-run-state-change (:copier common-lisp:nil))
   (state-changed-at
    (common-lisp:error
     #A((27) common-lisp:base-char . ":statechangedat is required"))
    :type (common-lisp:or timestamp common-lisp:null))
   (state
    (common-lisp:error #A((18) common-lisp:base-char . ":state is required"))
    :type (common-lisp:or assessment-run-state common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'assessment-run-state-change
                    'make-assessment-run-state-change))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          assessment-run-state-change))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "stateChangedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-changed-at)))
    (aws-sdk/generator/shape::to-query-params "state"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state))))))
(common-lisp:progn
 (common-lisp:deftype assessment-run-state-change-list ()
   '(trivial-types:proper-list assessment-run-state-change))
 (common-lisp:defun |make-assessment-run-state-change-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            assessment-run-state-change))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype assessment-run-state-list ()
   '(trivial-types:proper-list assessment-run-state))
 (common-lisp:defun |make-assessment-run-state-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list assessment-run-state))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (assessment-target (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or assessment-target-name common-lisp:null))
   (resource-group-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":resourcegrouparn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (created-at
    (common-lisp:error
     #A((22) common-lisp:base-char . ":createdat is required"))
    :type (common-lisp:or timestamp common-lisp:null))
   (updated-at
    (common-lisp:error
     #A((22) common-lisp:base-char . ":updatedat is required"))
    :type (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'assessment-target 'make-assessment-target))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape assessment-target))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "resourceGroupArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-group-arn)))
    (aws-sdk/generator/shape::to-query-params "createdAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "updatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'updated-at))))))
(common-lisp:progn
 (common-lisp:defstruct (assessment-target-filter (:copier common-lisp:nil))
   (assessment-target-name-pattern common-lisp:nil :type
    (common-lisp:or name-pattern common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'assessment-target-filter 'make-assessment-target-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          assessment-target-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentTargetNamePattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-target-name-pattern))))))
(common-lisp:progn
 (common-lisp:deftype assessment-target-list ()
   '(trivial-types:proper-list assessment-target))
 (common-lisp:defun |make-assessment-target-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list assessment-target))
   aws-sdk/generator/shape::members))
(common-lisp:deftype assessment-target-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (assessment-template (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or assessment-template-name common-lisp:null))
   (assessment-target-arn
    (common-lisp:error
     #A((32) common-lisp:base-char . ":assessmenttargetarn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (duration-in-seconds
    (common-lisp:error
     #A((30) common-lisp:base-char . ":durationinseconds is required"))
    :type (common-lisp:or assessment-run-duration common-lisp:null))
   (rules-package-arns
    (common-lisp:error
     #A((29) common-lisp:base-char . ":rulespackagearns is required"))
    :type
    (common-lisp:or assessment-template-rules-package-arn-list
                    common-lisp:null))
   (user-attributes-for-findings
    (common-lisp:error
     #A((38) common-lisp:base-char . ":userattributesforfindings is required"))
    :type (common-lisp:or user-attribute-list common-lisp:null))
   (created-at
    (common-lisp:error
     #A((22) common-lisp:base-char . ":createdat is required"))
    :type (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'assessment-template 'make-assessment-template))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape assessment-template))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "assessmentTargetArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-target-arn)))
    (aws-sdk/generator/shape::to-query-params "durationInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "rulesPackageArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules-package-arns)))
    (aws-sdk/generator/shape::to-query-params "userAttributesForFindings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-attributes-for-findings)))
    (aws-sdk/generator/shape::to-query-params "createdAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at))))))
(common-lisp:progn
 (common-lisp:defstruct (assessment-template-filter (:copier common-lisp:nil))
   (name-pattern common-lisp:nil :type
    (common-lisp:or name-pattern common-lisp:null))
   (duration-range common-lisp:nil :type
    (common-lisp:or duration-range common-lisp:null))
   (rules-package-arns common-lisp:nil :type
    (common-lisp:or filter-rules-package-arn-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'assessment-template-filter
                    'make-assessment-template-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          assessment-template-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "namePattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name-pattern)))
    (aws-sdk/generator/shape::to-query-params "durationRange"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration-range)))
    (aws-sdk/generator/shape::to-query-params "rulesPackageArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules-package-arns))))))
(common-lisp:progn
 (common-lisp:deftype assessment-template-list ()
   '(trivial-types:proper-list assessment-template))
 (common-lisp:defun |make-assessment-template-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list assessment-template))
   aws-sdk/generator/shape::members))
(common-lisp:deftype assessment-template-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype assessment-template-rules-package-arn-list ()
   '(trivial-types:proper-list arn))
 (common-lisp:defun |make-assessment-template-rules-package-arn-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (asset-attributes (:copier common-lisp:nil))
   (schema-version
    (common-lisp:error
     #A((26) common-lisp:base-char . ":schemaversion is required"))
    :type (common-lisp:or numeric-version common-lisp:null))
   (agent-id common-lisp:nil :type (common-lisp:or agent-id common-lisp:null))
   (auto-scaling-group common-lisp:nil :type
    (common-lisp:or auto-scaling-group common-lisp:null))
   (ami-id common-lisp:nil :type (common-lisp:or ami-id common-lisp:null))
   (hostname common-lisp:nil :type (common-lisp:or hostname common-lisp:null))
   (ipv4addresses common-lisp:nil :type
    (common-lisp:or ipv4address-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'asset-attributes 'make-asset-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape asset-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "schemaVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-version)))
    (aws-sdk/generator/shape::to-query-params "agentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-id)))
    (aws-sdk/generator/shape::to-query-params "autoScalingGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-group)))
    (aws-sdk/generator/shape::to-query-params "amiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ami-id)))
    (aws-sdk/generator/shape::to-query-params "hostname"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hostname)))
    (aws-sdk/generator/shape::to-query-params "ipv4Addresses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ipv4addresses))))))
(common-lisp:deftype asset-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (attribute (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or attribute-key common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or attribute-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attribute 'make-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape attribute))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype attribute-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype attribute-list () '(trivial-types:proper-list attribute))
 (common-lisp:defun |make-attribute-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute))
   aws-sdk/generator/shape::members))
(common-lisp:deftype attribute-value () 'common-lisp:string)
(common-lisp:deftype auto-scaling-group () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype auto-scaling-group-list ()
   '(trivial-types:proper-list auto-scaling-group))
 (common-lisp:defun |make-auto-scaling-group-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list auto-scaling-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype batch-describe-arn-list ()
   '(trivial-types:proper-list arn))
 (common-lisp:defun |make-batch-describe-arn-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype bool () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (create-assessment-target-request (:copier common-lisp:nil))
   (assessment-target-name
    (common-lisp:error
     #A((33) common-lisp:base-char . ":assessmenttargetname is required"))
    :type (common-lisp:or assessment-target-name common-lisp:null))
   (resource-group-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":resourcegrouparn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-assessment-target-request
                    'make-create-assessment-target-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-assessment-target-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentTargetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-target-name)))
    (aws-sdk/generator/shape::to-query-params "resourceGroupArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-group-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-assessment-target-response (:copier common-lisp:nil))
   (assessment-target-arn
    (common-lisp:error
     #A((32) common-lisp:base-char . ":assessmenttargetarn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-assessment-target-response
                    'make-create-assessment-target-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-assessment-target-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentTargetArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-target-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-assessment-template-request (:copier common-lisp:nil))
   (assessment-target-arn
    (common-lisp:error
     #A((32) common-lisp:base-char . ":assessmenttargetarn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (assessment-template-name
    (common-lisp:error
     #A((35) common-lisp:base-char . ":assessmenttemplatename is required"))
    :type (common-lisp:or assessment-template-name common-lisp:null))
   (duration-in-seconds
    (common-lisp:error
     #A((30) common-lisp:base-char . ":durationinseconds is required"))
    :type (common-lisp:or assessment-run-duration common-lisp:null))
   (rules-package-arns
    (common-lisp:error
     #A((29) common-lisp:base-char . ":rulespackagearns is required"))
    :type
    (common-lisp:or assessment-template-rules-package-arn-list
                    common-lisp:null))
   (user-attributes-for-findings common-lisp:nil :type
    (common-lisp:or user-attribute-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-assessment-template-request
                    'make-create-assessment-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-assessment-template-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentTargetArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-target-arn)))
    (aws-sdk/generator/shape::to-query-params "assessmentTemplateName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-template-name)))
    (aws-sdk/generator/shape::to-query-params "durationInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "rulesPackageArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules-package-arns)))
    (aws-sdk/generator/shape::to-query-params "userAttributesForFindings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-attributes-for-findings))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-assessment-template-response (:copier common-lisp:nil))
   (assessment-template-arn
    (common-lisp:error
     #A((34) common-lisp:base-char . ":assessmenttemplatearn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-assessment-template-response
                    'make-create-assessment-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-assessment-template-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentTemplateArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-template-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-resource-group-request (:copier common-lisp:nil))
   (resource-group-tags
    (common-lisp:error
     #A((30) common-lisp:base-char . ":resourcegrouptags is required"))
    :type (common-lisp:or resource-group-tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-resource-group-request
                    'make-create-resource-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-resource-group-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "resourceGroupTags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-group-tags))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-resource-group-response (:copier common-lisp:nil))
   (resource-group-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":resourcegrouparn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-resource-group-response
                    'make-create-resource-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-resource-group-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "resourceGroupArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-group-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-assessment-run-request (:copier common-lisp:nil))
   (assessment-run-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":assessmentrunarn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-assessment-run-request
                    'make-delete-assessment-run-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-assessment-run-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentRunArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-run-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-assessment-target-request (:copier common-lisp:nil))
   (assessment-target-arn
    (common-lisp:error
     #A((32) common-lisp:base-char . ":assessmenttargetarn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-assessment-target-request
                    'make-delete-assessment-target-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-assessment-target-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentTargetArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-target-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-assessment-template-request (:copier common-lisp:nil))
   (assessment-template-arn
    (common-lisp:error
     #A((34) common-lisp:base-char . ":assessmenttemplatearn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-assessment-template-request
                    'make-delete-assessment-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-assessment-template-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentTemplateArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-template-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-assessment-runs-request (:copier common-lisp:nil))
   (assessment-run-arns
    (common-lisp:error
     #A((30) common-lisp:base-char . ":assessmentrunarns is required"))
    :type (common-lisp:or batch-describe-arn-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-assessment-runs-request
                    'make-describe-assessment-runs-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-assessment-runs-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentRunArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-run-arns))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-assessment-runs-response (:copier common-lisp:nil))
   (assessment-runs
    (common-lisp:error
     #A((27) common-lisp:base-char . ":assessmentruns is required"))
    :type (common-lisp:or assessment-run-list common-lisp:null))
   (failed-items
    (common-lisp:error
     #A((24) common-lisp:base-char . ":faileditems is required"))
    :type (common-lisp:or failed-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-assessment-runs-response
                    'make-describe-assessment-runs-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-assessment-runs-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentRuns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-runs)))
    (aws-sdk/generator/shape::to-query-params "failedItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-items))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-assessment-targets-request (:copier common-lisp:nil))
   (assessment-target-arns
    (common-lisp:error
     #A((33) common-lisp:base-char . ":assessmenttargetarns is required"))
    :type (common-lisp:or batch-describe-arn-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-assessment-targets-request
                    'make-describe-assessment-targets-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-assessment-targets-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentTargetArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-target-arns))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-assessment-targets-response (:copier common-lisp:nil))
   (assessment-targets
    (common-lisp:error
     #A((30) common-lisp:base-char . ":assessmenttargets is required"))
    :type (common-lisp:or assessment-target-list common-lisp:null))
   (failed-items
    (common-lisp:error
     #A((24) common-lisp:base-char . ":faileditems is required"))
    :type (common-lisp:or failed-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-assessment-targets-response
                    'make-describe-assessment-targets-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-assessment-targets-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentTargets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-targets)))
    (aws-sdk/generator/shape::to-query-params "failedItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-items))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-assessment-templates-request (:copier common-lisp:nil))
   (assessment-template-arns
    (common-lisp:error
     #A((35) common-lisp:base-char . ":assessmenttemplatearns is required"))
    :type (common-lisp:or batch-describe-arn-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-assessment-templates-request
                    'make-describe-assessment-templates-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-assessment-templates-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentTemplateArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-template-arns))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-assessment-templates-response (:copier common-lisp:nil))
   (assessment-templates
    (common-lisp:error
     #A((32) common-lisp:base-char . ":assessmenttemplates is required"))
    :type (common-lisp:or assessment-template-list common-lisp:null))
   (failed-items
    (common-lisp:error
     #A((24) common-lisp:base-char . ":faileditems is required"))
    :type (common-lisp:or failed-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-assessment-templates-response
                    'make-describe-assessment-templates-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-assessment-templates-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentTemplates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-templates)))
    (aws-sdk/generator/shape::to-query-params "failedItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-items))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-cross-account-access-role-response (:copier common-lisp:nil))
   (role-arn
    (common-lisp:error #A((20) common-lisp:base-char . ":rolearn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (valid
    (common-lisp:error #A((18) common-lisp:base-char . ":valid is required"))
    :type (common-lisp:or bool common-lisp:null))
   (registered-at
    (common-lisp:error
     #A((25) common-lisp:base-char . ":registeredat is required"))
    :type (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-cross-account-access-role-response
                    'make-describe-cross-account-access-role-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-cross-account-access-role-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "roleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "valid"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'valid)))
    (aws-sdk/generator/shape::to-query-params "registeredAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registered-at))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-findings-request (:copier common-lisp:nil))
   (finding-arns
    (common-lisp:error
     #A((24) common-lisp:base-char . ":findingarns is required"))
    :type (common-lisp:or batch-describe-arn-list common-lisp:null))
   (locale common-lisp:nil :type (common-lisp:or locale common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-findings-request
                    'make-describe-findings-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-findings-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "findingArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'finding-arns)))
    (aws-sdk/generator/shape::to-query-params "locale"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'locale))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-findings-response (:copier common-lisp:nil))
   (findings
    (common-lisp:error
     #A((21) common-lisp:base-char . ":findings is required"))
    :type (common-lisp:or finding-list common-lisp:null))
   (failed-items
    (common-lisp:error
     #A((24) common-lisp:base-char . ":faileditems is required"))
    :type (common-lisp:or failed-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-findings-response
                    'make-describe-findings-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-findings-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "findings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'findings)))
    (aws-sdk/generator/shape::to-query-params "failedItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-items))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-resource-groups-request (:copier common-lisp:nil))
   (resource-group-arns
    (common-lisp:error
     #A((30) common-lisp:base-char . ":resourcegrouparns is required"))
    :type (common-lisp:or batch-describe-arn-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-resource-groups-request
                    'make-describe-resource-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-resource-groups-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "resourceGroupArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-group-arns))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-resource-groups-response (:copier common-lisp:nil))
   (resource-groups
    (common-lisp:error
     #A((27) common-lisp:base-char . ":resourcegroups is required"))
    :type (common-lisp:or resource-group-list common-lisp:null))
   (failed-items
    (common-lisp:error
     #A((24) common-lisp:base-char . ":faileditems is required"))
    :type (common-lisp:or failed-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-resource-groups-response
                    'make-describe-resource-groups-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-resource-groups-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "resourceGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-groups)))
    (aws-sdk/generator/shape::to-query-params "failedItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-items))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-rules-packages-request (:copier common-lisp:nil))
   (rules-package-arns
    (common-lisp:error
     #A((29) common-lisp:base-char . ":rulespackagearns is required"))
    :type (common-lisp:or batch-describe-arn-list common-lisp:null))
   (locale common-lisp:nil :type (common-lisp:or locale common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-rules-packages-request
                    'make-describe-rules-packages-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-rules-packages-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "rulesPackageArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules-package-arns)))
    (aws-sdk/generator/shape::to-query-params "locale"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'locale))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-rules-packages-response (:copier common-lisp:nil))
   (rules-packages
    (common-lisp:error
     #A((26) common-lisp:base-char . ":rulespackages is required"))
    :type (common-lisp:or rules-package-list common-lisp:null))
   (failed-items
    (common-lisp:error
     #A((24) common-lisp:base-char . ":faileditems is required"))
    :type (common-lisp:or failed-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-rules-packages-response
                    'make-describe-rules-packages-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-rules-packages-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "rulesPackages"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules-packages)))
    (aws-sdk/generator/shape::to-query-params "failedItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-items))))))
(common-lisp:progn
 (common-lisp:defstruct (duration-range (:copier common-lisp:nil))
   (min-seconds common-lisp:nil :type
    (common-lisp:or assessment-run-duration common-lisp:null))
   (max-seconds common-lisp:nil :type
    (common-lisp:or assessment-run-duration common-lisp:null)))
 (common-lisp:export (common-lisp:list 'duration-range 'make-duration-range))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape duration-range))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "minSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'min-seconds)))
    (aws-sdk/generator/shape::to-query-params "maxSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-seconds))))))
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (event-subscription (:copier common-lisp:nil))
   (event
    (common-lisp:error #A((18) common-lisp:base-char . ":event is required"))
    :type (common-lisp:or inspector-event common-lisp:null))
   (subscribed-at
    (common-lisp:error
     #A((25) common-lisp:base-char . ":subscribedat is required"))
    :type (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'event-subscription 'make-event-subscription))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape event-subscription))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "event"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event)))
    (aws-sdk/generator/shape::to-query-params "subscribedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subscribed-at))))))
(common-lisp:progn
 (common-lisp:deftype event-subscription-list ()
   '(trivial-types:proper-list event-subscription))
 (common-lisp:defun |make-event-subscription-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-subscription))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (failed-item-details (:copier common-lisp:nil))
   (failure-code
    (common-lisp:error
     #A((24) common-lisp:base-char . ":failurecode is required"))
    :type (common-lisp:or failed-item-error-code common-lisp:null))
   (retryable
    (common-lisp:error
     #A((22) common-lisp:base-char . ":retryable is required"))
    :type (common-lisp:or bool common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'failed-item-details 'make-failed-item-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape failed-item-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "failureCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failure-code)))
    (aws-sdk/generator/shape::to-query-params "retryable"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'retryable))))))
(common-lisp:deftype failed-item-error-code () 'common-lisp:string)
(common-lisp:defstruct
    (failed-items
     (:constructor |make-failed-items|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:deftype filter-rules-package-arn-list ()
   '(trivial-types:proper-list arn))
 (common-lisp:defun |make-filter-rules-package-arn-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (finding (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (schema-version common-lisp:nil :type
    (common-lisp:or numeric-version common-lisp:null))
   (service common-lisp:nil :type
    (common-lisp:or service-name common-lisp:null))
   (service-attributes common-lisp:nil :type
    (common-lisp:or inspector-service-attributes common-lisp:null))
   (asset-type common-lisp:nil :type
    (common-lisp:or asset-type common-lisp:null))
   (asset-attributes common-lisp:nil :type
    (common-lisp:or asset-attributes common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or finding-id common-lisp:null))
   (title common-lisp:nil :type (common-lisp:or text common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or text common-lisp:null))
   (recommendation common-lisp:nil :type
    (common-lisp:or text common-lisp:null))
   (severity common-lisp:nil :type (common-lisp:or severity common-lisp:null))
   (numeric-severity common-lisp:nil :type
    (common-lisp:or numeric-severity common-lisp:null))
   (confidence common-lisp:nil :type
    (common-lisp:or ioc-confidence common-lisp:null))
   (indicator-of-compromise common-lisp:nil :type
    (common-lisp:or bool common-lisp:null))
   (attributes
    (common-lisp:error
     #A((23) common-lisp:base-char . ":attributes is required"))
    :type (common-lisp:or attribute-list common-lisp:null))
   (user-attributes
    (common-lisp:error
     #A((27) common-lisp:base-char . ":userattributes is required"))
    :type (common-lisp:or user-attribute-list common-lisp:null))
   (created-at
    (common-lisp:error
     #A((22) common-lisp:base-char . ":createdat is required"))
    :type (common-lisp:or timestamp common-lisp:null))
   (updated-at
    (common-lisp:error
     #A((22) common-lisp:base-char . ":updatedat is required"))
    :type (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'finding 'make-finding))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape finding))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "schemaVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-version)))
    (aws-sdk/generator/shape::to-query-params "service"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service)))
    (aws-sdk/generator/shape::to-query-params "serviceAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-attributes)))
    (aws-sdk/generator/shape::to-query-params "assetType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'asset-type)))
    (aws-sdk/generator/shape::to-query-params "assetAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'asset-attributes)))
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "title"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'title)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "recommendation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'recommendation)))
    (aws-sdk/generator/shape::to-query-params "severity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'severity)))
    (aws-sdk/generator/shape::to-query-params "numericSeverity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'numeric-severity)))
    (aws-sdk/generator/shape::to-query-params "confidence"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'confidence)))
    (aws-sdk/generator/shape::to-query-params "indicatorOfCompromise"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'indicator-of-compromise)))
    (aws-sdk/generator/shape::to-query-params "attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "userAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-attributes)))
    (aws-sdk/generator/shape::to-query-params "createdAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "updatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'updated-at))))))
(common-lisp:deftype finding-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (finding-filter (:copier common-lisp:nil))
   (agent-ids common-lisp:nil :type
    (common-lisp:or agent-id-list common-lisp:null))
   (auto-scaling-groups common-lisp:nil :type
    (common-lisp:or auto-scaling-group-list common-lisp:null))
   (rule-names common-lisp:nil :type
    (common-lisp:or rule-name-list common-lisp:null))
   (severities common-lisp:nil :type
    (common-lisp:or severity-list common-lisp:null))
   (rules-package-arns common-lisp:nil :type
    (common-lisp:or filter-rules-package-arn-list common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or attribute-list common-lisp:null))
   (user-attributes common-lisp:nil :type
    (common-lisp:or attribute-list common-lisp:null))
   (creation-time-range common-lisp:nil :type
    (common-lisp:or timestamp-range common-lisp:null)))
 (common-lisp:export (common-lisp:list 'finding-filter 'make-finding-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape finding-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "agentIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-ids)))
    (aws-sdk/generator/shape::to-query-params "autoScalingGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-groups)))
    (aws-sdk/generator/shape::to-query-params "ruleNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-names)))
    (aws-sdk/generator/shape::to-query-params "severities"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'severities)))
    (aws-sdk/generator/shape::to-query-params "rulesPackageArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules-package-arns)))
    (aws-sdk/generator/shape::to-query-params "attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "userAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-attributes)))
    (aws-sdk/generator/shape::to-query-params "creationTimeRange"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-time-range))))))
(common-lisp:deftype finding-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype finding-list () '(trivial-types:proper-list finding))
 (common-lisp:defun |make-finding-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list finding))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (get-assessment-report-request (:copier common-lisp:nil))
   (assessment-run-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":assessmentrunarn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (report-file-format
    (common-lisp:error
     #A((29) common-lisp:base-char . ":reportfileformat is required"))
    :type (common-lisp:or report-file-format common-lisp:null))
   (report-type
    (common-lisp:error
     #A((23) common-lisp:base-char . ":reporttype is required"))
    :type (common-lisp:or report-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-assessment-report-request
                    'make-get-assessment-report-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-assessment-report-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentRunArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-run-arn)))
    (aws-sdk/generator/shape::to-query-params "reportFileFormat"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'report-file-format)))
    (aws-sdk/generator/shape::to-query-params "reportType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'report-type))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-assessment-report-response (:copier common-lisp:nil))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or report-status common-lisp:null))
   (url common-lisp:nil :type (common-lisp:or url common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-assessment-report-response
                    'make-get-assessment-report-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-assessment-report-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "url"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'url))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-telemetry-metadata-request (:copier common-lisp:nil))
   (assessment-run-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":assessmentrunarn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-telemetry-metadata-request
                    'make-get-telemetry-metadata-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-telemetry-metadata-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentRunArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-run-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-telemetry-metadata-response (:copier common-lisp:nil))
   (telemetry-metadata
    (common-lisp:error
     #A((30) common-lisp:base-char . ":telemetrymetadata is required"))
    :type (common-lisp:or telemetry-metadata-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-telemetry-metadata-response
                    'make-get-telemetry-metadata-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-telemetry-metadata-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "telemetryMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'telemetry-metadata))))))
(common-lisp:deftype hostname () 'common-lisp:string)
(common-lisp:deftype inspector-event () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (inspector-service-attributes (:copier common-lisp:nil))
   (schema-version
    (common-lisp:error
     #A((26) common-lisp:base-char . ":schemaversion is required"))
    :type (common-lisp:or numeric-version common-lisp:null))
   (assessment-run-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null))
   (rules-package-arn common-lisp:nil :type
    (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'inspector-service-attributes
                    'make-inspector-service-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          inspector-service-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "schemaVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-version)))
    (aws-sdk/generator/shape::to-query-params "assessmentRunArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-run-arn)))
    (aws-sdk/generator/shape::to-query-params "rulesPackageArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules-package-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (internal-exception (:copier common-lisp:nil))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or error-message common-lisp:null))
   (can-retry
    (common-lisp:error
     #A((21) common-lisp:base-char . ":canretry is required"))
    :type (common-lisp:or bool common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'internal-exception 'make-internal-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape internal-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "canRetry"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'can-retry))))))
(common-lisp:deftype invalid-cross-account-role-error-code ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-cross-account-role-exception (:copier common-lisp:nil))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or error-message common-lisp:null))
   (error-code
    (common-lisp:error
     #A((22) common-lisp:base-char . ":errorcode is required"))
    :type
    (common-lisp:or invalid-cross-account-role-error-code common-lisp:null))
   (can-retry
    (common-lisp:error
     #A((21) common-lisp:base-char . ":canretry is required"))
    :type (common-lisp:or bool common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-cross-account-role-exception
                    'make-invalid-cross-account-role-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-cross-account-role-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "errorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code)))
    (aws-sdk/generator/shape::to-query-params "canRetry"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'can-retry))))))
(common-lisp:deftype invalid-input-error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (invalid-input-exception (:copier common-lisp:nil))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or error-message common-lisp:null))
   (error-code
    (common-lisp:error
     #A((22) common-lisp:base-char . ":errorcode is required"))
    :type (common-lisp:or invalid-input-error-code common-lisp:null))
   (can-retry
    (common-lisp:error
     #A((21) common-lisp:base-char . ":canretry is required"))
    :type (common-lisp:or bool common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-input-exception 'make-invalid-input-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-input-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "errorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code)))
    (aws-sdk/generator/shape::to-query-params "canRetry"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'can-retry))))))
(common-lisp:deftype ioc-confidence () 'common-lisp:integer)
(common-lisp:deftype ipv4address () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ipv4address-list ()
   '(trivial-types:proper-list ipv4address))
 (common-lisp:defun |make-ipv4address-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ipv4address))
   aws-sdk/generator/shape::members))
(common-lisp:deftype limit-exceeded-error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or error-message common-lisp:null))
   (error-code
    (common-lisp:error
     #A((22) common-lisp:base-char . ":errorcode is required"))
    :type (common-lisp:or limit-exceeded-error-code common-lisp:null))
   (can-retry
    (common-lisp:error
     #A((21) common-lisp:base-char . ":canretry is required"))
    :type (common-lisp:or bool common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "errorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code)))
    (aws-sdk/generator/shape::to-query-params "canRetry"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'can-retry))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-assessment-run-agents-request (:copier common-lisp:nil))
   (assessment-run-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":assessmentrunarn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (filter common-lisp:nil :type
    (common-lisp:or agent-filter common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or list-max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-assessment-run-agents-request
                    'make-list-assessment-run-agents-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-assessment-run-agents-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentRunArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-run-arn)))
    (aws-sdk/generator/shape::to-query-params "filter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-assessment-run-agents-response (:copier common-lisp:nil))
   (assessment-run-agents
    (common-lisp:error
     #A((32) common-lisp:base-char . ":assessmentrunagents is required"))
    :type (common-lisp:or assessment-run-agent-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-assessment-run-agents-response
                    'make-list-assessment-run-agents-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-assessment-run-agents-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentRunAgents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-run-agents)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-assessment-runs-request (:copier common-lisp:nil))
   (assessment-template-arns common-lisp:nil :type
    (common-lisp:or list-parent-arn-list common-lisp:null))
   (filter common-lisp:nil :type
    (common-lisp:or assessment-run-filter common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or list-max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-assessment-runs-request
                    'make-list-assessment-runs-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-assessment-runs-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentTemplateArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-template-arns)))
    (aws-sdk/generator/shape::to-query-params "filter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-assessment-runs-response (:copier common-lisp:nil))
   (assessment-run-arns
    (common-lisp:error
     #A((30) common-lisp:base-char . ":assessmentrunarns is required"))
    :type (common-lisp:or list-returned-arn-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-assessment-runs-response
                    'make-list-assessment-runs-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-assessment-runs-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentRunArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-run-arns)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-assessment-targets-request (:copier common-lisp:nil))
   (filter common-lisp:nil :type
    (common-lisp:or assessment-target-filter common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or list-max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-assessment-targets-request
                    'make-list-assessment-targets-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-assessment-targets-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "filter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-assessment-targets-response (:copier common-lisp:nil))
   (assessment-target-arns
    (common-lisp:error
     #A((33) common-lisp:base-char . ":assessmenttargetarns is required"))
    :type (common-lisp:or list-returned-arn-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-assessment-targets-response
                    'make-list-assessment-targets-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-assessment-targets-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentTargetArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-target-arns)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-assessment-templates-request (:copier common-lisp:nil))
   (assessment-target-arns common-lisp:nil :type
    (common-lisp:or list-parent-arn-list common-lisp:null))
   (filter common-lisp:nil :type
    (common-lisp:or assessment-template-filter common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or list-max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-assessment-templates-request
                    'make-list-assessment-templates-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-assessment-templates-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentTargetArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-target-arns)))
    (aws-sdk/generator/shape::to-query-params "filter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-assessment-templates-response (:copier common-lisp:nil))
   (assessment-template-arns
    (common-lisp:error
     #A((35) common-lisp:base-char . ":assessmenttemplatearns is required"))
    :type (common-lisp:or list-returned-arn-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-assessment-templates-response
                    'make-list-assessment-templates-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-assessment-templates-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentTemplateArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-template-arns)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype list-event-subscriptions-max-results ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (list-event-subscriptions-request (:copier common-lisp:nil))
   (resource-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or list-event-subscriptions-max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-event-subscriptions-request
                    'make-list-event-subscriptions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-event-subscriptions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "resourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-event-subscriptions-response (:copier common-lisp:nil))
   (subscriptions
    (common-lisp:error
     #A((26) common-lisp:base-char . ":subscriptions is required"))
    :type (common-lisp:or subscription-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-event-subscriptions-response
                    'make-list-event-subscriptions-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-event-subscriptions-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "subscriptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subscriptions)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-findings-request (:copier common-lisp:nil))
   (assessment-run-arns common-lisp:nil :type
    (common-lisp:or list-parent-arn-list common-lisp:null))
   (filter common-lisp:nil :type
    (common-lisp:or finding-filter common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or list-max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-findings-request 'make-list-findings-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-findings-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentRunArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-run-arns)))
    (aws-sdk/generator/shape::to-query-params "filter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (list-findings-response (:copier common-lisp:nil))
   (finding-arns
    (common-lisp:error
     #A((24) common-lisp:base-char . ":findingarns is required"))
    :type (common-lisp:or list-returned-arn-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-findings-response 'make-list-findings-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-findings-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "findingArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'finding-arns)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype list-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype list-parent-arn-list () '(trivial-types:proper-list arn))
 (common-lisp:defun |make-list-parent-arn-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-returned-arn-list ()
   '(trivial-types:proper-list arn))
 (common-lisp:defun |make-list-returned-arn-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (list-rules-packages-request (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or list-max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-rules-packages-request
                    'make-list-rules-packages-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-rules-packages-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-rules-packages-response (:copier common-lisp:nil))
   (rules-package-arns
    (common-lisp:error
     #A((29) common-lisp:base-char . ":rulespackagearns is required"))
    :type (common-lisp:or list-returned-arn-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-rules-packages-response
                    'make-list-rules-packages-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-rules-packages-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "rulesPackageArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules-package-arns)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-request (:copier common-lisp:nil))
   (resource-arn
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resourcearn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-tags-for-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "resourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-for-resource-response (:copier common-lisp:nil))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-tags-for-resource-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:deftype locale () 'common-lisp:string)
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:deftype message () 'common-lisp:string)
(common-lisp:deftype message-type () 'common-lisp:string)
(common-lisp:deftype name-pattern () 'common-lisp:string)
(common-lisp:deftype no-such-entity-error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (no-such-entity-exception (:copier common-lisp:nil))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or error-message common-lisp:null))
   (error-code
    (common-lisp:error
     #A((22) common-lisp:base-char . ":errorcode is required"))
    :type (common-lisp:or no-such-entity-error-code common-lisp:null))
   (can-retry
    (common-lisp:error
     #A((21) common-lisp:base-char . ":canretry is required"))
    :type (common-lisp:or bool common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'no-such-entity-exception 'make-no-such-entity-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          no-such-entity-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "errorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code)))
    (aws-sdk/generator/shape::to-query-params "canRetry"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'can-retry))))))
(common-lisp:deftype numeric-severity () 'common-lisp:double-float)
(common-lisp:deftype numeric-version () 'common-lisp:integer)
(common-lisp:deftype pagination-token () 'common-lisp:string)
(common-lisp:deftype preview-agents-max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (preview-agents-request (:copier common-lisp:nil))
   (preview-agents-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":previewagentsarn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or preview-agents-max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'preview-agents-request 'make-preview-agents-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          preview-agents-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "previewAgentsArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'preview-agents-arn)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (preview-agents-response (:copier common-lisp:nil))
   (agent-previews
    (common-lisp:error
     #A((26) common-lisp:base-char . ":agentpreviews is required"))
    :type (common-lisp:or agent-preview-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'preview-agents-response 'make-preview-agents-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          preview-agents-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "agentPreviews"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-previews)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype provider-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (register-cross-account-access-role-request (:copier common-lisp:nil))
   (role-arn
    (common-lisp:error #A((20) common-lisp:base-char . ":rolearn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-cross-account-access-role-request
                    'make-register-cross-account-access-role-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-cross-account-access-role-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "roleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-attributes-from-findings-request (:copier common-lisp:nil))
   (finding-arns
    (common-lisp:error
     #A((24) common-lisp:base-char . ":findingarns is required"))
    :type
    (common-lisp:or add-remove-attributes-finding-arn-list common-lisp:null))
   (attribute-keys
    (common-lisp:error
     #A((26) common-lisp:base-char . ":attributekeys is required"))
    :type (common-lisp:or user-attribute-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-attributes-from-findings-request
                    'make-remove-attributes-from-findings-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          remove-attributes-from-findings-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "findingArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'finding-arns)))
    (aws-sdk/generator/shape::to-query-params "attributeKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-keys))))))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-attributes-from-findings-response (:copier common-lisp:nil))
   (failed-items
    (common-lisp:error
     #A((24) common-lisp:base-char . ":faileditems is required"))
    :type (common-lisp:or failed-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-attributes-from-findings-response
                    'make-remove-attributes-from-findings-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          remove-attributes-from-findings-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "failedItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-items))))))
(common-lisp:deftype report-file-format () 'common-lisp:string)
(common-lisp:deftype report-status () 'common-lisp:string)
(common-lisp:deftype report-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (resource-group (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or resource-group-tags common-lisp:null))
   (created-at
    (common-lisp:error
     #A((22) common-lisp:base-char . ":createdat is required"))
    :type (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'resource-group 'make-resource-group))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape resource-group))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "createdAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at))))))
(common-lisp:progn
 (common-lisp:deftype resource-group-list ()
   '(trivial-types:proper-list resource-group))
 (common-lisp:defun |make-resource-group-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (resource-group-tag (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or tag-key common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-group-tag 'make-resource-group-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape resource-group-tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:deftype resource-group-tags ()
   '(trivial-types:proper-list resource-group-tag))
 (common-lisp:defun |make-resource-group-tags|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-group-tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype rule-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype rule-name-list () '(trivial-types:proper-list rule-name))
 (common-lisp:defun |make-rule-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rule-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (rules-package (:copier common-lisp:nil))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or rules-package-name common-lisp:null))
   (version
    (common-lisp:error #A((20) common-lisp:base-char . ":version is required"))
    :type (common-lisp:or version common-lisp:null))
   (provider
    (common-lisp:error
     #A((21) common-lisp:base-char . ":provider is required"))
    :type (common-lisp:or provider-name common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or text common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rules-package 'make-rules-package))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape rules-package))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "provider"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:deftype rules-package-list ()
   '(trivial-types:proper-list rules-package))
 (common-lisp:defun |make-rules-package-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rules-package))
   aws-sdk/generator/shape::members))
(common-lisp:deftype rules-package-name () 'common-lisp:string)
(common-lisp:deftype service-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (set-tags-for-resource-request (:copier common-lisp:nil))
   (resource-arn
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resourcearn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-tags-for-resource-request
                    'make-set-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-tags-for-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "resourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:deftype severity () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype severity-list () '(trivial-types:proper-list severity))
 (common-lisp:defun |make-severity-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list severity))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (start-assessment-run-request (:copier common-lisp:nil))
   (assessment-template-arn
    (common-lisp:error
     #A((34) common-lisp:base-char . ":assessmenttemplatearn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (assessment-run-name common-lisp:nil :type
    (common-lisp:or assessment-run-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-assessment-run-request
                    'make-start-assessment-run-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-assessment-run-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentTemplateArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-template-arn)))
    (aws-sdk/generator/shape::to-query-params "assessmentRunName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-run-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (start-assessment-run-response (:copier common-lisp:nil))
   (assessment-run-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":assessmentrunarn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-assessment-run-response
                    'make-start-assessment-run-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-assessment-run-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentRunArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-run-arn))))))
(common-lisp:deftype stop-action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (stop-assessment-run-request (:copier common-lisp:nil))
   (assessment-run-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":assessmentrunarn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (stop-action common-lisp:nil :type
    (common-lisp:or stop-action common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-assessment-run-request
                    'make-stop-assessment-run-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-assessment-run-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentRunArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-run-arn)))
    (aws-sdk/generator/shape::to-query-params "stopAction"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stop-action))))))
(common-lisp:progn
 (common-lisp:defstruct (subscribe-to-event-request (:copier common-lisp:nil))
   (resource-arn
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resourcearn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (event
    (common-lisp:error #A((18) common-lisp:base-char . ":event is required"))
    :type (common-lisp:or inspector-event common-lisp:null))
   (topic-arn
    (common-lisp:error
     #A((21) common-lisp:base-char . ":topicarn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'subscribe-to-event-request
                    'make-subscribe-to-event-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          subscribe-to-event-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "resourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "event"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event)))
    (aws-sdk/generator/shape::to-query-params "topicArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'topic-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (subscription (:copier common-lisp:nil))
   (resource-arn
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resourcearn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (topic-arn
    (common-lisp:error
     #A((21) common-lisp:base-char . ":topicarn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (event-subscriptions
    (common-lisp:error
     #A((31) common-lisp:base-char . ":eventsubscriptions is required"))
    :type (common-lisp:or event-subscription-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'subscription 'make-subscription))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape subscription))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "resourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "topicArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'topic-arn)))
    (aws-sdk/generator/shape::to-query-params "eventSubscriptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-subscriptions))))))
(common-lisp:progn
 (common-lisp:deftype subscription-list ()
   '(trivial-types:proper-list subscription))
 (common-lisp:defun |make-subscription-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subscription))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (tag (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or tag-key common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (telemetry-metadata (:copier common-lisp:nil))
   (message-type
    (common-lisp:error
     #A((24) common-lisp:base-char . ":messagetype is required"))
    :type (common-lisp:or message-type common-lisp:null))
   (count
    (common-lisp:error #A((18) common-lisp:base-char . ":count is required"))
    :type (common-lisp:or long common-lisp:null))
   (data-size common-lisp:nil :type (common-lisp:or long common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'telemetry-metadata 'make-telemetry-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape telemetry-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "messageType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message-type)))
    (aws-sdk/generator/shape::to-query-params "count"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'count)))
    (aws-sdk/generator/shape::to-query-params "dataSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-size))))))
(common-lisp:progn
 (common-lisp:deftype telemetry-metadata-list ()
   '(trivial-types:proper-list telemetry-metadata))
 (common-lisp:defun |make-telemetry-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list telemetry-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:deftype text () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (timestamp-range (:copier common-lisp:nil))
   (begin-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'timestamp-range 'make-timestamp-range))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape timestamp-range))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "beginDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'begin-date)))
    (aws-sdk/generator/shape::to-query-params "endDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-date))))))
(common-lisp:progn
 (common-lisp:defstruct
     (unsubscribe-from-event-request (:copier common-lisp:nil))
   (resource-arn
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resourcearn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (event
    (common-lisp:error #A((18) common-lisp:base-char . ":event is required"))
    :type (common-lisp:or inspector-event common-lisp:null))
   (topic-arn
    (common-lisp:error
     #A((21) common-lisp:base-char . ":topicarn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unsubscribe-from-event-request
                    'make-unsubscribe-from-event-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unsubscribe-from-event-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "resourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "event"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event)))
    (aws-sdk/generator/shape::to-query-params "topicArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'topic-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (unsupported-feature-exception (:copier common-lisp:nil))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or error-message common-lisp:null))
   (can-retry
    (common-lisp:error
     #A((21) common-lisp:base-char . ":canretry is required"))
    :type (common-lisp:or bool common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unsupported-feature-exception
                    'make-unsupported-feature-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unsupported-feature-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "canRetry"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'can-retry))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-assessment-target-request (:copier common-lisp:nil))
   (assessment-target-arn
    (common-lisp:error
     #A((32) common-lisp:base-char . ":assessmenttargetarn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (assessment-target-name
    (common-lisp:error
     #A((33) common-lisp:base-char . ":assessmenttargetname is required"))
    :type (common-lisp:or assessment-target-name common-lisp:null))
   (resource-group-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":resourcegrouparn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-assessment-target-request
                    'make-update-assessment-target-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-assessment-target-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "assessmentTargetArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-target-arn)))
    (aws-sdk/generator/shape::to-query-params "assessmentTargetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assessment-target-name)))
    (aws-sdk/generator/shape::to-query-params "resourceGroupArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-group-arn))))))
(common-lisp:deftype url () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype user-attribute-key-list ()
   '(trivial-types:proper-list attribute-key))
 (common-lisp:defun |make-user-attribute-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype user-attribute-list ()
   '(trivial-types:proper-list attribute))
 (common-lisp:defun |make-user-attribute-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute))
   aws-sdk/generator/shape::members))
(common-lisp:deftype version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun add-attributes-to-findings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key finding-arns attributes)
   (common-lisp:declare (common-lisp:ignorable finding-arns attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-add-attributes-to-findings-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AddAttributesToFindings")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AddAttributesToFindingsResponse" common-lisp:nil)))
 (common-lisp:export 'add-attributes-to-findings))
(common-lisp:progn
 (common-lisp:defun create-assessment-target
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assessment-target-name
                     resource-group-arn)
   (common-lisp:declare
    (common-lisp:ignorable assessment-target-name resource-group-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-assessment-target-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateAssessmentTarget")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateAssessmentTargetResponse" common-lisp:nil)))
 (common-lisp:export 'create-assessment-target))
(common-lisp:progn
 (common-lisp:defun create-assessment-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assessment-target-arn
                     assessment-template-name duration-in-seconds
                     rules-package-arns user-attributes-for-findings)
   (common-lisp:declare
    (common-lisp:ignorable assessment-target-arn assessment-template-name
     duration-in-seconds rules-package-arns user-attributes-for-findings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-assessment-template-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateAssessmentTemplate")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateAssessmentTemplateResponse" common-lisp:nil)))
 (common-lisp:export 'create-assessment-template))
(common-lisp:progn
 (common-lisp:defun create-resource-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-group-tags)
   (common-lisp:declare (common-lisp:ignorable resource-group-tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-resource-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateResourceGroup")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateResourceGroupResponse" common-lisp:nil)))
 (common-lisp:export 'create-resource-group))
(common-lisp:progn
 (common-lisp:defun delete-assessment-run
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assessment-run-arn)
   (common-lisp:declare (common-lisp:ignorable assessment-run-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-assessment-run-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteAssessmentRun")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-assessment-run))
(common-lisp:progn
 (common-lisp:defun delete-assessment-target
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assessment-target-arn)
   (common-lisp:declare (common-lisp:ignorable assessment-target-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-assessment-target-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteAssessmentTarget")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-assessment-target))
(common-lisp:progn
 (common-lisp:defun delete-assessment-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assessment-template-arn)
   (common-lisp:declare (common-lisp:ignorable assessment-template-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-assessment-template-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteAssessmentTemplate")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-assessment-template))
(common-lisp:progn
 (common-lisp:defun describe-assessment-runs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assessment-run-arns)
   (common-lisp:declare (common-lisp:ignorable assessment-run-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-assessment-runs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeAssessmentRuns")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeAssessmentRunsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-assessment-runs))
(common-lisp:progn
 (common-lisp:defun describe-assessment-targets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assessment-target-arns)
   (common-lisp:declare (common-lisp:ignorable assessment-target-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-assessment-targets-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeAssessmentTargets")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeAssessmentTargetsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-assessment-targets))
(common-lisp:progn
 (common-lisp:defun describe-assessment-templates
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assessment-template-arns)
   (common-lisp:declare (common-lisp:ignorable assessment-template-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-assessment-templates-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeAssessmentTemplates")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeAssessmentTemplatesResponse" common-lisp:nil)))
 (common-lisp:export 'describe-assessment-templates))
(common-lisp:progn
 (common-lisp:defun describe-cross-account-access-role ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((9) common-lisp:base-char . "inspector")
                             :method :post :params
                             (common-lisp:cons "Action"
                                               "DescribeCrossAccountAccessRole"))
    "DescribeCrossAccountAccessRoleResponse" common-lisp:nil))
 (common-lisp:export 'describe-cross-account-access-role))
(common-lisp:progn
 (common-lisp:defun describe-findings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key finding-arns locale)
   (common-lisp:declare (common-lisp:ignorable finding-arns locale))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-findings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeFindings")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeFindingsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-findings))
(common-lisp:progn
 (common-lisp:defun describe-resource-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-group-arns)
   (common-lisp:declare (common-lisp:ignorable resource-group-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-resource-groups-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeResourceGroups")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeResourceGroupsResponse" common-lisp:nil)))
 (common-lisp:export 'describe-resource-groups))
(common-lisp:progn
 (common-lisp:defun describe-rules-packages
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rules-package-arns locale)
   (common-lisp:declare (common-lisp:ignorable rules-package-arns locale))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-rules-packages-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeRulesPackages")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeRulesPackagesResponse" common-lisp:nil)))
 (common-lisp:export 'describe-rules-packages))
(common-lisp:progn
 (common-lisp:defun get-assessment-report
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assessment-run-arn report-file-format
                     report-type)
   (common-lisp:declare
    (common-lisp:ignorable assessment-run-arn report-file-format report-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-assessment-report-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetAssessmentReport")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetAssessmentReportResponse" common-lisp:nil)))
 (common-lisp:export 'get-assessment-report))
(common-lisp:progn
 (common-lisp:defun get-telemetry-metadata
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assessment-run-arn)
   (common-lisp:declare (common-lisp:ignorable assessment-run-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-telemetry-metadata-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetTelemetryMetadata")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetTelemetryMetadataResponse" common-lisp:nil)))
 (common-lisp:export 'get-telemetry-metadata))
(common-lisp:progn
 (common-lisp:defun list-assessment-run-agents
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assessment-run-arn filter next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable assessment-run-arn filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-assessment-run-agents-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListAssessmentRunAgents")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListAssessmentRunAgentsResponse" common-lisp:nil)))
 (common-lisp:export 'list-assessment-run-agents))
(common-lisp:progn
 (common-lisp:defun list-assessment-runs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assessment-template-arns filter
                     next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable assessment-template-arns filter next-token
     max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-assessment-runs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListAssessmentRuns")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListAssessmentRunsResponse" common-lisp:nil)))
 (common-lisp:export 'list-assessment-runs))
(common-lisp:progn
 (common-lisp:defun list-assessment-targets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-assessment-targets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListAssessmentTargets")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListAssessmentTargetsResponse" common-lisp:nil)))
 (common-lisp:export 'list-assessment-targets))
(common-lisp:progn
 (common-lisp:defun list-assessment-templates
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assessment-target-arns filter next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable assessment-target-arns filter next-token
     max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-assessment-templates-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListAssessmentTemplates")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListAssessmentTemplatesResponse" common-lisp:nil)))
 (common-lisp:export 'list-assessment-templates))
(common-lisp:progn
 (common-lisp:defun list-event-subscriptions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable resource-arn next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-event-subscriptions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListEventSubscriptions")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListEventSubscriptionsResponse" common-lisp:nil)))
 (common-lisp:export 'list-event-subscriptions))
(common-lisp:progn
 (common-lisp:defun list-findings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assessment-run-arns filter next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable assessment-run-arns filter next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-findings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListFindings")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListFindingsResponse" common-lisp:nil)))
 (common-lisp:export 'list-findings))
(common-lisp:progn
 (common-lisp:defun list-rules-packages
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-rules-packages-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListRulesPackages")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListRulesPackagesResponse" common-lisp:nil)))
 (common-lisp:export 'list-rules-packages))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListTagsForResource")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListTagsForResourceResponse" common-lisp:nil)))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun preview-agents
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key preview-agents-arn next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable preview-agents-arn next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-preview-agents-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PreviewAgents")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PreviewAgentsResponse" common-lisp:nil)))
 (common-lisp:export 'preview-agents))
(common-lisp:progn
 (common-lisp:defun register-cross-account-access-role
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key role-arn)
   (common-lisp:declare (common-lisp:ignorable role-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-register-cross-account-access-role-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RegisterCrossAccountAccessRole")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'register-cross-account-access-role))
(common-lisp:progn
 (common-lisp:defun remove-attributes-from-findings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key finding-arns attribute-keys)
   (common-lisp:declare (common-lisp:ignorable finding-arns attribute-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-remove-attributes-from-findings-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RemoveAttributesFromFindings")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RemoveAttributesFromFindingsResponse" common-lisp:nil)))
 (common-lisp:export 'remove-attributes-from-findings))
(common-lisp:progn
 (common-lisp:defun set-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SetTagsForResource")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'set-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun start-assessment-run
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assessment-template-arn
                     assessment-run-name)
   (common-lisp:declare
    (common-lisp:ignorable assessment-template-arn assessment-run-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-assessment-run-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StartAssessmentRun")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StartAssessmentRunResponse" common-lisp:nil)))
 (common-lisp:export 'start-assessment-run))
(common-lisp:progn
 (common-lisp:defun stop-assessment-run
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assessment-run-arn stop-action)
   (common-lisp:declare (common-lisp:ignorable assessment-run-arn stop-action))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-assessment-run-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StopAssessmentRun")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'stop-assessment-run))
(common-lisp:progn
 (common-lisp:defun subscribe-to-event
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn event topic-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn event topic-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-subscribe-to-event-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SubscribeToEvent")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'subscribe-to-event))
(common-lisp:progn
 (common-lisp:defun unsubscribe-from-event
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn event topic-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn event topic-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-unsubscribe-from-event-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UnsubscribeFromEvent")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'unsubscribe-from-event))
(common-lisp:progn
 (common-lisp:defun update-assessment-target
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assessment-target-arn
                     assessment-target-name resource-group-arn)
   (common-lisp:declare
    (common-lisp:ignorable assessment-target-arn assessment-target-name
     resource-group-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-assessment-target-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "inspector")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateAssessmentTarget")
                                  ("Version" ,@"2016-02-16"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-assessment-target))