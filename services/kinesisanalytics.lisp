;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/kinesisanalytics
  (:use)
  (:nicknames #:aws/kinesisanalytics)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/kinesisanalytics)

(common-lisp:progn
 (common-lisp:defstruct
     (add-application-cloud-watch-logging-option-request
      (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (current-application-version-id
    (common-lisp:error
     #A((43) common-lisp:base-char
        . ":current-application-version-id is required"))
    :type (common-lisp:or application-version-id common-lisp:null))
   (cloud-watch-logging-option
    (common-lisp:error
     #A((39) common-lisp:base-char
        . ":cloud-watch-logging-option is required"))
    :type (common-lisp:or cloud-watch-logging-option common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-application-cloud-watch-logging-option-request
                    'make-add-application-cloud-watch-logging-option-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-application-cloud-watch-logging-option-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "CurrentApplicationVersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'current-application-version-id)))
    (aws-sdk/generator/shape::to-query-params "CloudWatchLoggingOption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cloud-watch-logging-option))))))
(common-lisp:progn
 (common-lisp:defstruct
     (add-application-cloud-watch-logging-option-response
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'add-application-cloud-watch-logging-option-response
                    'make-add-application-cloud-watch-logging-option-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-application-cloud-watch-logging-option-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (add-application-input-request (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (current-application-version-id
    (common-lisp:error
     #A((43) common-lisp:base-char
        . ":current-application-version-id is required"))
    :type (common-lisp:or application-version-id common-lisp:null))
   (input
    (common-lisp:error #A((18) common-lisp:base-char . ":input is required"))
    :type (common-lisp:or input common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-application-input-request
                    'make-add-application-input-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-application-input-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "CurrentApplicationVersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'current-application-version-id)))
    (aws-sdk/generator/shape::to-query-params "Input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input))))))
(common-lisp:progn
 (common-lisp:defstruct
     (add-application-input-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'add-application-input-response
                    'make-add-application-input-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-application-input-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (add-application-output-request (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (current-application-version-id
    (common-lisp:error
     #A((43) common-lisp:base-char
        . ":current-application-version-id is required"))
    :type (common-lisp:or application-version-id common-lisp:null))
   (output
    (common-lisp:error #A((19) common-lisp:base-char . ":output is required"))
    :type (common-lisp:or output common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-application-output-request
                    'make-add-application-output-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-application-output-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "CurrentApplicationVersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'current-application-version-id)))
    (aws-sdk/generator/shape::to-query-params "Output"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output))))))
(common-lisp:progn
 (common-lisp:defstruct
     (add-application-output-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'add-application-output-response
                    'make-add-application-output-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-application-output-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (add-application-reference-data-source-request (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (current-application-version-id
    (common-lisp:error
     #A((43) common-lisp:base-char
        . ":current-application-version-id is required"))
    :type (common-lisp:or application-version-id common-lisp:null))
   (reference-data-source
    (common-lisp:error
     #A((34) common-lisp:base-char . ":reference-data-source is required"))
    :type (common-lisp:or reference-data-source common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-application-reference-data-source-request
                    'make-add-application-reference-data-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-application-reference-data-source-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "CurrentApplicationVersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'current-application-version-id)))
    (aws-sdk/generator/shape::to-query-params "ReferenceDataSource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reference-data-source))))))
(common-lisp:progn
 (common-lisp:defstruct
     (add-application-reference-data-source-response
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'add-application-reference-data-source-response
                    'make-add-application-reference-data-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-application-reference-data-source-response))
   (common-lisp:append)))
(common-lisp:deftype application-code () 'common-lisp:string)
(common-lisp:deftype application-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (application-detail (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (application-description common-lisp:nil :type
    (common-lisp:or application-description common-lisp:null))
   (application-arn
    (common-lisp:error
     #A((28) common-lisp:base-char . ":application-arn is required"))
    :type (common-lisp:or resource-arn common-lisp:null))
   (application-status
    (common-lisp:error
     #A((31) common-lisp:base-char . ":application-status is required"))
    :type (common-lisp:or application-status common-lisp:null))
   (create-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-update-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (input-descriptions common-lisp:nil :type
    (common-lisp:or input-descriptions common-lisp:null))
   (output-descriptions common-lisp:nil :type
    (common-lisp:or output-descriptions common-lisp:null))
   (reference-data-source-descriptions common-lisp:nil :type
    (common-lisp:or reference-data-source-descriptions common-lisp:null))
   (cloud-watch-logging-option-descriptions common-lisp:nil :type
    (common-lisp:or cloud-watch-logging-option-descriptions common-lisp:null))
   (application-code common-lisp:nil :type
    (common-lisp:or application-code common-lisp:null))
   (application-version-id
    (common-lisp:error
     #A((35) common-lisp:base-char . ":application-version-id is required"))
    :type (common-lisp:or application-version-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'application-detail 'make-application-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape application-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "ApplicationDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-description)))
    (aws-sdk/generator/shape::to-query-params "ApplicationARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-arn)))
    (aws-sdk/generator/shape::to-query-params "ApplicationStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-status)))
    (aws-sdk/generator/shape::to-query-params "CreateTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'create-timestamp)))
    (aws-sdk/generator/shape::to-query-params "LastUpdateTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-update-timestamp)))
    (aws-sdk/generator/shape::to-query-params "InputDescriptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-descriptions)))
    (aws-sdk/generator/shape::to-query-params "OutputDescriptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-descriptions)))
    (aws-sdk/generator/shape::to-query-params "ReferenceDataSourceDescriptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reference-data-source-descriptions)))
    (aws-sdk/generator/shape::to-query-params
     "CloudWatchLoggingOptionDescriptions"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'cloud-watch-logging-option-descriptions)))
    (aws-sdk/generator/shape::to-query-params "ApplicationCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-code)))
    (aws-sdk/generator/shape::to-query-params "ApplicationVersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-version-id))))))
(common-lisp:deftype application-name () 'common-lisp:string)
(common-lisp:deftype application-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype application-summaries ()
   '(trivial-types:proper-list application-summary))
 (common-lisp:defun |make-application-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list application-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (application-summary (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (application-arn
    (common-lisp:error
     #A((28) common-lisp:base-char . ":application-arn is required"))
    :type (common-lisp:or resource-arn common-lisp:null))
   (application-status
    (common-lisp:error
     #A((31) common-lisp:base-char . ":application-status is required"))
    :type (common-lisp:or application-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'application-summary 'make-application-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape application-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "ApplicationARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-arn)))
    (aws-sdk/generator/shape::to-query-params "ApplicationStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-status))))))
(common-lisp:progn
 (common-lisp:defstruct (application-update (:copier common-lisp:nil))
   (input-updates common-lisp:nil :type
    (common-lisp:or input-updates common-lisp:null))
   (application-code-update common-lisp:nil :type
    (common-lisp:or application-code common-lisp:null))
   (output-updates common-lisp:nil :type
    (common-lisp:or output-updates common-lisp:null))
   (reference-data-source-updates common-lisp:nil :type
    (common-lisp:or reference-data-source-updates common-lisp:null))
   (cloud-watch-logging-option-updates common-lisp:nil :type
    (common-lisp:or cloud-watch-logging-option-updates common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'application-update 'make-application-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape application-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InputUpdates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-updates)))
    (aws-sdk/generator/shape::to-query-params "ApplicationCodeUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-code-update)))
    (aws-sdk/generator/shape::to-query-params "OutputUpdates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-updates)))
    (aws-sdk/generator/shape::to-query-params "ReferenceDataSourceUpdates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reference-data-source-updates)))
    (aws-sdk/generator/shape::to-query-params "CloudWatchLoggingOptionUpdates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cloud-watch-logging-option-updates))))))
(common-lisp:deftype application-version-id () 'common-lisp:integer)
(common-lisp:deftype boolean-object () 'common-lisp:boolean)
(common-lisp:deftype bucket-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (csvmapping-parameters (:copier common-lisp:nil))
   (record-row-delimiter
    (common-lisp:error
     #A((33) common-lisp:base-char . ":record-row-delimiter is required"))
    :type (common-lisp:or record-row-delimiter common-lisp:null))
   (record-column-delimiter
    (common-lisp:error
     #A((36) common-lisp:base-char . ":record-column-delimiter is required"))
    :type (common-lisp:or record-column-delimiter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'csvmapping-parameters 'make-csvmapping-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          csvmapping-parameters))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RecordRowDelimiter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-row-delimiter)))
    (aws-sdk/generator/shape::to-query-params "RecordColumnDelimiter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-column-delimiter))))))
(common-lisp:progn
 (common-lisp:defstruct (cloud-watch-logging-option (:copier common-lisp:nil))
   (log-stream-arn
    (common-lisp:error
     #A((27) common-lisp:base-char . ":log-stream-arn is required"))
    :type (common-lisp:or log-stream-arn common-lisp:null))
   (role-arn
    (common-lisp:error
     #A((21) common-lisp:base-char . ":role-arn is required"))
    :type (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-watch-logging-option
                    'make-cloud-watch-logging-option))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cloud-watch-logging-option))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LogStreamARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-stream-arn)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (cloud-watch-logging-option-description (:copier common-lisp:nil))
   (cloud-watch-logging-option-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (log-stream-arn
    (common-lisp:error
     #A((27) common-lisp:base-char . ":log-stream-arn is required"))
    :type (common-lisp:or log-stream-arn common-lisp:null))
   (role-arn
    (common-lisp:error
     #A((21) common-lisp:base-char . ":role-arn is required"))
    :type (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-watch-logging-option-description
                    'make-cloud-watch-logging-option-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cloud-watch-logging-option-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CloudWatchLoggingOptionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cloud-watch-logging-option-id)))
    (aws-sdk/generator/shape::to-query-params "LogStreamARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-stream-arn)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:progn
 (common-lisp:deftype cloud-watch-logging-option-descriptions ()
   '(trivial-types:proper-list cloud-watch-logging-option-description))
 (common-lisp:defun |make-cloud-watch-logging-option-descriptions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            cloud-watch-logging-option-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (cloud-watch-logging-option-update (:copier common-lisp:nil))
   (cloud-watch-logging-option-id
    (common-lisp:error
     #A((42) common-lisp:base-char
        . ":cloud-watch-logging-option-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (log-stream-arnupdate common-lisp:nil :type
    (common-lisp:or log-stream-arn common-lisp:null))
   (role-arnupdate common-lisp:nil :type
    (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-watch-logging-option-update
                    'make-cloud-watch-logging-option-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cloud-watch-logging-option-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CloudWatchLoggingOptionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cloud-watch-logging-option-id)))
    (aws-sdk/generator/shape::to-query-params "LogStreamARNUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-stream-arnupdate)))
    (aws-sdk/generator/shape::to-query-params "RoleARNUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arnupdate))))))
(common-lisp:progn
 (common-lisp:deftype cloud-watch-logging-option-updates ()
   '(trivial-types:proper-list cloud-watch-logging-option-update))
 (common-lisp:defun |make-cloud-watch-logging-option-updates|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            cloud-watch-logging-option-update))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype cloud-watch-logging-options ()
   '(trivial-types:proper-list cloud-watch-logging-option))
 (common-lisp:defun |make-cloud-watch-logging-options|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            cloud-watch-logging-option))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (code-validation-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'code-validation-exception
                    'make-code-validation-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          code-validation-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (concurrent-modification-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'concurrent-modification-exception
                    'make-concurrent-modification-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          concurrent-modification-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (create-application-request (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (application-description common-lisp:nil :type
    (common-lisp:or application-description common-lisp:null))
   (inputs common-lisp:nil :type (common-lisp:or inputs common-lisp:null))
   (outputs common-lisp:nil :type (common-lisp:or outputs common-lisp:null))
   (cloud-watch-logging-options common-lisp:nil :type
    (common-lisp:or cloud-watch-logging-options common-lisp:null))
   (application-code common-lisp:nil :type
    (common-lisp:or application-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-application-request
                    'make-create-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-application-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "ApplicationDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-description)))
    (aws-sdk/generator/shape::to-query-params "Inputs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'inputs)))
    (aws-sdk/generator/shape::to-query-params "Outputs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'outputs)))
    (aws-sdk/generator/shape::to-query-params "CloudWatchLoggingOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cloud-watch-logging-options)))
    (aws-sdk/generator/shape::to-query-params "ApplicationCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-code))))))
(common-lisp:progn
 (common-lisp:defstruct (create-application-response (:copier common-lisp:nil))
   (application-summary
    (common-lisp:error
     #A((32) common-lisp:base-char . ":application-summary is required"))
    :type (common-lisp:or application-summary common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-application-response
                    'make-create-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-application-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-summary))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-application-cloud-watch-logging-option-request
      (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (current-application-version-id
    (common-lisp:error
     #A((43) common-lisp:base-char
        . ":current-application-version-id is required"))
    :type (common-lisp:or application-version-id common-lisp:null))
   (cloud-watch-logging-option-id
    (common-lisp:error
     #A((42) common-lisp:base-char
        . ":cloud-watch-logging-option-id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-application-cloud-watch-logging-option-request
                    'make-delete-application-cloud-watch-logging-option-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-application-cloud-watch-logging-option-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "CurrentApplicationVersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'current-application-version-id)))
    (aws-sdk/generator/shape::to-query-params "CloudWatchLoggingOptionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cloud-watch-logging-option-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-application-cloud-watch-logging-option-response
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-application-cloud-watch-logging-option-response
                    'make-delete-application-cloud-watch-logging-option-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-application-cloud-watch-logging-option-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-application-output-request (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (current-application-version-id
    (common-lisp:error
     #A((43) common-lisp:base-char
        . ":current-application-version-id is required"))
    :type (common-lisp:or application-version-id common-lisp:null))
   (output-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":output-id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-application-output-request
                    'make-delete-application-output-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-application-output-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "CurrentApplicationVersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'current-application-version-id)))
    (aws-sdk/generator/shape::to-query-params "OutputId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-application-output-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-application-output-response
                    'make-delete-application-output-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-application-output-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-application-reference-data-source-request
      (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (current-application-version-id
    (common-lisp:error
     #A((43) common-lisp:base-char
        . ":current-application-version-id is required"))
    :type (common-lisp:or application-version-id common-lisp:null))
   (reference-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":reference-id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-application-reference-data-source-request
                    'make-delete-application-reference-data-source-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-application-reference-data-source-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "CurrentApplicationVersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'current-application-version-id)))
    (aws-sdk/generator/shape::to-query-params "ReferenceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reference-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-application-reference-data-source-response
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-application-reference-data-source-response
                    'make-delete-application-reference-data-source-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-application-reference-data-source-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-application-request (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (create-timestamp
    (common-lisp:error
     #A((29) common-lisp:base-char . ":create-timestamp is required"))
    :type (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-application-request
                    'make-delete-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-application-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "CreateTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'create-timestamp))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-application-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-application-response
                    'make-delete-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-application-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-application-request (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-application-request
                    'make-describe-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-application-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-application-response (:copier common-lisp:nil))
   (application-detail
    (common-lisp:error
     #A((31) common-lisp:base-char . ":application-detail is required"))
    :type (common-lisp:or application-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-application-response
                    'make-describe-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-application-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-detail))))))
(common-lisp:progn
 (common-lisp:defstruct (destination-schema (:copier common-lisp:nil))
   (record-format-type common-lisp:nil :type
    (common-lisp:or record-format-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'destination-schema 'make-destination-schema))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape destination-schema))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RecordFormatType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-format-type))))))
(common-lisp:progn
 (common-lisp:defstruct
     (discover-input-schema-request (:copier common-lisp:nil))
   (resource-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":resource-arn is required"))
    :type (common-lisp:or resource-arn common-lisp:null))
   (role-arn
    (common-lisp:error
     #A((21) common-lisp:base-char . ":role-arn is required"))
    :type (common-lisp:or role-arn common-lisp:null))
   (input-starting-position-configuration
    (common-lisp:error
     #A((50) common-lisp:base-char
        . ":input-starting-position-configuration is required"))
    :type
    (common-lisp:or input-starting-position-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'discover-input-schema-request
                    'make-discover-input-schema-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          discover-input-schema-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params
     "InputStartingPositionConfiguration"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'input-starting-position-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (discover-input-schema-response (:copier common-lisp:nil))
   (input-schema common-lisp:nil :type
    (common-lisp:or source-schema common-lisp:null))
   (parsed-input-records common-lisp:nil :type
    (common-lisp:or parsed-input-records common-lisp:null))
   (raw-input-records common-lisp:nil :type
    (common-lisp:or raw-input-records common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'discover-input-schema-response
                    'make-discover-input-schema-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          discover-input-schema-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InputSchema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-schema)))
    (aws-sdk/generator/shape::to-query-params "ParsedInputRecords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parsed-input-records)))
    (aws-sdk/generator/shape::to-query-params "RawInputRecords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'raw-input-records))))))
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:deftype file-key () 'common-lisp:string)
(common-lisp:deftype id () 'common-lisp:string)
(common-lisp:deftype in-app-stream-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype in-app-stream-names ()
   '(trivial-types:proper-list in-app-stream-name))
 (common-lisp:defun |make-in-app-stream-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list in-app-stream-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype in-app-table-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (input (:copier common-lisp:nil))
   (name-prefix
    (common-lisp:error
     #A((24) common-lisp:base-char . ":name-prefix is required"))
    :type (common-lisp:or in-app-stream-name common-lisp:null))
   (kinesis-streams-input common-lisp:nil :type
    (common-lisp:or kinesis-streams-input common-lisp:null))
   (kinesis-firehose-input common-lisp:nil :type
    (common-lisp:or kinesis-firehose-input common-lisp:null))
   (input-parallelism common-lisp:nil :type
    (common-lisp:or input-parallelism common-lisp:null))
   (input-schema
    (common-lisp:error
     #A((25) common-lisp:base-char . ":input-schema is required"))
    :type (common-lisp:or source-schema common-lisp:null)))
 (common-lisp:export (common-lisp:list 'input 'make-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NamePrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name-prefix)))
    (aws-sdk/generator/shape::to-query-params "KinesisStreamsInput"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kinesis-streams-input)))
    (aws-sdk/generator/shape::to-query-params "KinesisFirehoseInput"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kinesis-firehose-input)))
    (aws-sdk/generator/shape::to-query-params "InputParallelism"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-parallelism)))
    (aws-sdk/generator/shape::to-query-params "InputSchema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-schema))))))
(common-lisp:progn
 (common-lisp:defstruct (input-configuration (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null))
   (input-starting-position-configuration
    (common-lisp:error
     #A((50) common-lisp:base-char
        . ":input-starting-position-configuration is required"))
    :type
    (common-lisp:or input-starting-position-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'input-configuration 'make-input-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape input-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params
     "InputStartingPositionConfiguration"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'input-starting-position-configuration))))))
(common-lisp:progn
 (common-lisp:deftype input-configurations ()
   '(trivial-types:proper-list input-configuration))
 (common-lisp:defun |make-input-configurations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list input-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (input-description (:copier common-lisp:nil))
   (input-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (name-prefix common-lisp:nil :type
    (common-lisp:or in-app-stream-name common-lisp:null))
   (in-app-stream-names common-lisp:nil :type
    (common-lisp:or in-app-stream-names common-lisp:null))
   (kinesis-streams-input-description common-lisp:nil :type
    (common-lisp:or kinesis-streams-input-description common-lisp:null))
   (kinesis-firehose-input-description common-lisp:nil :type
    (common-lisp:or kinesis-firehose-input-description common-lisp:null))
   (input-schema common-lisp:nil :type
    (common-lisp:or source-schema common-lisp:null))
   (input-parallelism common-lisp:nil :type
    (common-lisp:or input-parallelism common-lisp:null))
   (input-starting-position-configuration common-lisp:nil :type
    (common-lisp:or input-starting-position-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'input-description 'make-input-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape input-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InputId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-id)))
    (aws-sdk/generator/shape::to-query-params "NamePrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name-prefix)))
    (aws-sdk/generator/shape::to-query-params "InAppStreamNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'in-app-stream-names)))
    (aws-sdk/generator/shape::to-query-params "KinesisStreamsInputDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kinesis-streams-input-description)))
    (aws-sdk/generator/shape::to-query-params "KinesisFirehoseInputDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kinesis-firehose-input-description)))
    (aws-sdk/generator/shape::to-query-params "InputSchema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-schema)))
    (aws-sdk/generator/shape::to-query-params "InputParallelism"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-parallelism)))
    (aws-sdk/generator/shape::to-query-params
     "InputStartingPositionConfiguration"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'input-starting-position-configuration))))))
(common-lisp:progn
 (common-lisp:deftype input-descriptions ()
   '(trivial-types:proper-list input-description))
 (common-lisp:defun |make-input-descriptions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list input-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (input-parallelism (:copier common-lisp:nil))
   (count common-lisp:nil :type
    (common-lisp:or input-parallelism-count common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'input-parallelism 'make-input-parallelism))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape input-parallelism))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Count"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'count))))))
(common-lisp:deftype input-parallelism-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (input-parallelism-update (:copier common-lisp:nil))
   (count-update common-lisp:nil :type
    (common-lisp:or input-parallelism-count common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'input-parallelism-update 'make-input-parallelism-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          input-parallelism-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CountUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'count-update))))))
(common-lisp:progn
 (common-lisp:defstruct (input-schema-update (:copier common-lisp:nil))
   (record-format-update common-lisp:nil :type
    (common-lisp:or record-format common-lisp:null))
   (record-encoding-update common-lisp:nil :type
    (common-lisp:or record-encoding common-lisp:null))
   (record-column-updates common-lisp:nil :type
    (common-lisp:or record-columns common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'input-schema-update 'make-input-schema-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape input-schema-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RecordFormatUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-format-update)))
    (aws-sdk/generator/shape::to-query-params "RecordEncodingUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-encoding-update)))
    (aws-sdk/generator/shape::to-query-params "RecordColumnUpdates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-column-updates))))))
(common-lisp:deftype input-starting-position () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (input-starting-position-configuration (:copier common-lisp:nil))
   (input-starting-position common-lisp:nil :type
    (common-lisp:or input-starting-position common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'input-starting-position-configuration
                    'make-input-starting-position-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          input-starting-position-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InputStartingPosition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-starting-position))))))
(common-lisp:progn
 (common-lisp:defstruct (input-update (:copier common-lisp:nil))
   (input-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":input-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (name-prefix-update common-lisp:nil :type
    (common-lisp:or in-app-stream-name common-lisp:null))
   (kinesis-streams-input-update common-lisp:nil :type
    (common-lisp:or kinesis-streams-input-update common-lisp:null))
   (kinesis-firehose-input-update common-lisp:nil :type
    (common-lisp:or kinesis-firehose-input-update common-lisp:null))
   (input-schema-update common-lisp:nil :type
    (common-lisp:or input-schema-update common-lisp:null))
   (input-parallelism-update common-lisp:nil :type
    (common-lisp:or input-parallelism-update common-lisp:null)))
 (common-lisp:export (common-lisp:list 'input-update 'make-input-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape input-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InputId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-id)))
    (aws-sdk/generator/shape::to-query-params "NamePrefixUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name-prefix-update)))
    (aws-sdk/generator/shape::to-query-params "KinesisStreamsInputUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kinesis-streams-input-update)))
    (aws-sdk/generator/shape::to-query-params "KinesisFirehoseInputUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kinesis-firehose-input-update)))
    (aws-sdk/generator/shape::to-query-params "InputSchemaUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-schema-update)))
    (aws-sdk/generator/shape::to-query-params "InputParallelismUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-parallelism-update))))))
(common-lisp:progn
 (common-lisp:deftype input-updates ()
   '(trivial-types:proper-list input-update))
 (common-lisp:defun |make-input-updates|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list input-update))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype inputs () '(trivial-types:proper-list input))
 (common-lisp:defun |make-inputs|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list input))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-application-configuration-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-application-configuration-exception
                    'make-invalid-application-configuration-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-application-configuration-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-argument-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-argument-exception
                    'make-invalid-argument-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-argument-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (jsonmapping-parameters (:copier common-lisp:nil))
   (record-row-path
    (common-lisp:error
     #A((28) common-lisp:base-char . ":record-row-path is required"))
    :type (common-lisp:or record-row-path common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'jsonmapping-parameters 'make-jsonmapping-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          jsonmapping-parameters))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RecordRowPath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-row-path))))))
(common-lisp:progn
 (common-lisp:defstruct (kinesis-firehose-input (:copier common-lisp:nil))
   (resource-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":resource-arn is required"))
    :type (common-lisp:or resource-arn common-lisp:null))
   (role-arn
    (common-lisp:error
     #A((21) common-lisp:base-char . ":role-arn is required"))
    :type (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kinesis-firehose-input 'make-kinesis-firehose-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          kinesis-firehose-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (kinesis-firehose-input-description (:copier common-lisp:nil))
   (resource-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kinesis-firehose-input-description
                    'make-kinesis-firehose-input-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          kinesis-firehose-input-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (kinesis-firehose-input-update (:copier common-lisp:nil))
   (resource-arnupdate common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (role-arnupdate common-lisp:nil :type
    (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kinesis-firehose-input-update
                    'make-kinesis-firehose-input-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          kinesis-firehose-input-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceARNUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arnupdate)))
    (aws-sdk/generator/shape::to-query-params "RoleARNUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arnupdate))))))
(common-lisp:progn
 (common-lisp:defstruct (kinesis-firehose-output (:copier common-lisp:nil))
   (resource-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":resource-arn is required"))
    :type (common-lisp:or resource-arn common-lisp:null))
   (role-arn
    (common-lisp:error
     #A((21) common-lisp:base-char . ":role-arn is required"))
    :type (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kinesis-firehose-output 'make-kinesis-firehose-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          kinesis-firehose-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (kinesis-firehose-output-description (:copier common-lisp:nil))
   (resource-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kinesis-firehose-output-description
                    'make-kinesis-firehose-output-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          kinesis-firehose-output-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (kinesis-firehose-output-update (:copier common-lisp:nil))
   (resource-arnupdate common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (role-arnupdate common-lisp:nil :type
    (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kinesis-firehose-output-update
                    'make-kinesis-firehose-output-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          kinesis-firehose-output-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceARNUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arnupdate)))
    (aws-sdk/generator/shape::to-query-params "RoleARNUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arnupdate))))))
(common-lisp:progn
 (common-lisp:defstruct (kinesis-streams-input (:copier common-lisp:nil))
   (resource-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":resource-arn is required"))
    :type (common-lisp:or resource-arn common-lisp:null))
   (role-arn
    (common-lisp:error
     #A((21) common-lisp:base-char . ":role-arn is required"))
    :type (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kinesis-streams-input 'make-kinesis-streams-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          kinesis-streams-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (kinesis-streams-input-description (:copier common-lisp:nil))
   (resource-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kinesis-streams-input-description
                    'make-kinesis-streams-input-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          kinesis-streams-input-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (kinesis-streams-input-update (:copier common-lisp:nil))
   (resource-arnupdate common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (role-arnupdate common-lisp:nil :type
    (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kinesis-streams-input-update
                    'make-kinesis-streams-input-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          kinesis-streams-input-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceARNUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arnupdate)))
    (aws-sdk/generator/shape::to-query-params "RoleARNUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arnupdate))))))
(common-lisp:progn
 (common-lisp:defstruct (kinesis-streams-output (:copier common-lisp:nil))
   (resource-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":resource-arn is required"))
    :type (common-lisp:or resource-arn common-lisp:null))
   (role-arn
    (common-lisp:error
     #A((21) common-lisp:base-char . ":role-arn is required"))
    :type (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kinesis-streams-output 'make-kinesis-streams-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          kinesis-streams-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (kinesis-streams-output-description (:copier common-lisp:nil))
   (resource-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kinesis-streams-output-description
                    'make-kinesis-streams-output-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          kinesis-streams-output-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "RoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (kinesis-streams-output-update (:copier common-lisp:nil))
   (resource-arnupdate common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (role-arnupdate common-lisp:nil :type
    (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kinesis-streams-output-update
                    'make-kinesis-streams-output-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          kinesis-streams-output-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceARNUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arnupdate)))
    (aws-sdk/generator/shape::to-query-params "RoleARNUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arnupdate))))))
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype list-applications-input-limit () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (list-applications-request (:copier common-lisp:nil))
   (limit common-lisp:nil :type
    (common-lisp:or list-applications-input-limit common-lisp:null))
   (exclusive-start-application-name common-lisp:nil :type
    (common-lisp:or application-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-applications-request
                    'make-list-applications-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-applications-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "ExclusiveStartApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'exclusive-start-application-name))))))
(common-lisp:progn
 (common-lisp:defstruct (list-applications-response (:copier common-lisp:nil))
   (application-summaries
    (common-lisp:error
     #A((34) common-lisp:base-char . ":application-summaries is required"))
    :type (common-lisp:or application-summaries common-lisp:null))
   (has-more-applications
    (common-lisp:error
     #A((34) common-lisp:base-char . ":has-more-applications is required"))
    :type (common-lisp:or boolean-object common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-applications-response
                    'make-list-applications-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-applications-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationSummaries"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-summaries)))
    (aws-sdk/generator/shape::to-query-params "HasMoreApplications"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'has-more-applications))))))
(common-lisp:deftype log-stream-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (mapping-parameters (:copier common-lisp:nil))
   (jsonmapping-parameters common-lisp:nil :type
    (common-lisp:or jsonmapping-parameters common-lisp:null))
   (csvmapping-parameters common-lisp:nil :type
    (common-lisp:or csvmapping-parameters common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'mapping-parameters 'make-mapping-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape mapping-parameters))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JSONMappingParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'jsonmapping-parameters)))
    (aws-sdk/generator/shape::to-query-params "CSVMappingParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'csvmapping-parameters))))))
(common-lisp:progn
 (common-lisp:defstruct (output (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or in-app-stream-name common-lisp:null))
   (kinesis-streams-output common-lisp:nil :type
    (common-lisp:or kinesis-streams-output common-lisp:null))
   (kinesis-firehose-output common-lisp:nil :type
    (common-lisp:or kinesis-firehose-output common-lisp:null))
   (destination-schema
    (common-lisp:error
     #A((31) common-lisp:base-char . ":destination-schema is required"))
    :type (common-lisp:or destination-schema common-lisp:null)))
 (common-lisp:export (common-lisp:list 'output 'make-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "KinesisStreamsOutput"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kinesis-streams-output)))
    (aws-sdk/generator/shape::to-query-params "KinesisFirehoseOutput"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kinesis-firehose-output)))
    (aws-sdk/generator/shape::to-query-params "DestinationSchema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-schema))))))
(common-lisp:progn
 (common-lisp:defstruct (output-description (:copier common-lisp:nil))
   (output-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or in-app-stream-name common-lisp:null))
   (kinesis-streams-output-description common-lisp:nil :type
    (common-lisp:or kinesis-streams-output-description common-lisp:null))
   (kinesis-firehose-output-description common-lisp:nil :type
    (common-lisp:or kinesis-firehose-output-description common-lisp:null))
   (destination-schema common-lisp:nil :type
    (common-lisp:or destination-schema common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'output-description 'make-output-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape output-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OutputId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "KinesisStreamsOutputDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kinesis-streams-output-description)))
    (aws-sdk/generator/shape::to-query-params
     "KinesisFirehoseOutputDescription"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'kinesis-firehose-output-description)))
    (aws-sdk/generator/shape::to-query-params "DestinationSchema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-schema))))))
(common-lisp:progn
 (common-lisp:deftype output-descriptions ()
   '(trivial-types:proper-list output-description))
 (common-lisp:defun |make-output-descriptions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list output-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (output-update (:copier common-lisp:nil))
   (output-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":output-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (name-update common-lisp:nil :type
    (common-lisp:or in-app-stream-name common-lisp:null))
   (kinesis-streams-output-update common-lisp:nil :type
    (common-lisp:or kinesis-streams-output-update common-lisp:null))
   (kinesis-firehose-output-update common-lisp:nil :type
    (common-lisp:or kinesis-firehose-output-update common-lisp:null))
   (destination-schema-update common-lisp:nil :type
    (common-lisp:or destination-schema common-lisp:null)))
 (common-lisp:export (common-lisp:list 'output-update 'make-output-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape output-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OutputId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-id)))
    (aws-sdk/generator/shape::to-query-params "NameUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name-update)))
    (aws-sdk/generator/shape::to-query-params "KinesisStreamsOutputUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kinesis-streams-output-update)))
    (aws-sdk/generator/shape::to-query-params "KinesisFirehoseOutputUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kinesis-firehose-output-update)))
    (aws-sdk/generator/shape::to-query-params "DestinationSchemaUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-schema-update))))))
(common-lisp:progn
 (common-lisp:deftype output-updates ()
   '(trivial-types:proper-list output-update))
 (common-lisp:defun |make-output-updates|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list output-update))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype outputs () '(trivial-types:proper-list output))
 (common-lisp:defun |make-outputs|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list output))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype parsed-input-record ()
   '(trivial-types:proper-list parsed-input-record-field))
 (common-lisp:defun |make-parsed-input-record|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            parsed-input-record-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype parsed-input-record-field () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype parsed-input-records ()
   '(trivial-types:proper-list parsed-input-record))
 (common-lisp:defun |make-parsed-input-records|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list parsed-input-record))
   aws-sdk/generator/shape::members))
(common-lisp:deftype raw-input-record () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype raw-input-records ()
   '(trivial-types:proper-list raw-input-record))
 (common-lisp:defun |make-raw-input-records|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list raw-input-record))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (record-column (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or record-column-name common-lisp:null))
   (mapping common-lisp:nil :type
    (common-lisp:or record-column-mapping common-lisp:null))
   (sql-type
    (common-lisp:error
     #A((21) common-lisp:base-char . ":sql-type is required"))
    :type (common-lisp:or record-column-sql-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'record-column 'make-record-column))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape record-column))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Mapping"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mapping)))
    (aws-sdk/generator/shape::to-query-params "SqlType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sql-type))))))
(common-lisp:deftype record-column-delimiter () 'common-lisp:string)
(common-lisp:deftype record-column-mapping () 'common-lisp:string)
(common-lisp:deftype record-column-name () 'common-lisp:string)
(common-lisp:deftype record-column-sql-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype record-columns ()
   '(trivial-types:proper-list record-column))
 (common-lisp:defun |make-record-columns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list record-column))
   aws-sdk/generator/shape::members))
(common-lisp:deftype record-encoding () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (record-format (:copier common-lisp:nil))
   (record-format-type
    (common-lisp:error
     #A((31) common-lisp:base-char . ":record-format-type is required"))
    :type (common-lisp:or record-format-type common-lisp:null))
   (mapping-parameters common-lisp:nil :type
    (common-lisp:or mapping-parameters common-lisp:null)))
 (common-lisp:export (common-lisp:list 'record-format 'make-record-format))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape record-format))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RecordFormatType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-format-type)))
    (aws-sdk/generator/shape::to-query-params "MappingParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mapping-parameters))))))
(common-lisp:deftype record-format-type () 'common-lisp:string)
(common-lisp:deftype record-row-delimiter () 'common-lisp:string)
(common-lisp:deftype record-row-path () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (reference-data-source (:copier common-lisp:nil))
   (table-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":table-name is required"))
    :type (common-lisp:or in-app-table-name common-lisp:null))
   (s3reference-data-source common-lisp:nil :type
    (common-lisp:or s3reference-data-source common-lisp:null))
   (reference-schema
    (common-lisp:error
     #A((29) common-lisp:base-char . ":reference-schema is required"))
    :type (common-lisp:or source-schema common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reference-data-source 'make-reference-data-source))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          reference-data-source))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TableName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-name)))
    (aws-sdk/generator/shape::to-query-params "S3ReferenceDataSource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3reference-data-source)))
    (aws-sdk/generator/shape::to-query-params "ReferenceSchema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reference-schema))))))
(common-lisp:progn
 (common-lisp:defstruct
     (reference-data-source-description (:copier common-lisp:nil))
   (reference-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":reference-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (table-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":table-name is required"))
    :type (common-lisp:or in-app-table-name common-lisp:null))
   (s3reference-data-source-description
    (common-lisp:error
     #A((48) common-lisp:base-char
        . ":s3reference-data-source-description is required"))
    :type
    (common-lisp:or s3reference-data-source-description common-lisp:null))
   (reference-schema common-lisp:nil :type
    (common-lisp:or source-schema common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reference-data-source-description
                    'make-reference-data-source-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          reference-data-source-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ReferenceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reference-id)))
    (aws-sdk/generator/shape::to-query-params "TableName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-name)))
    (aws-sdk/generator/shape::to-query-params
     "S3ReferenceDataSourceDescription"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              's3reference-data-source-description)))
    (aws-sdk/generator/shape::to-query-params "ReferenceSchema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reference-schema))))))
(common-lisp:progn
 (common-lisp:deftype reference-data-source-descriptions ()
   '(trivial-types:proper-list reference-data-source-description))
 (common-lisp:defun |make-reference-data-source-descriptions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            reference-data-source-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (reference-data-source-update (:copier common-lisp:nil))
   (reference-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":reference-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (table-name-update common-lisp:nil :type
    (common-lisp:or in-app-table-name common-lisp:null))
   (s3reference-data-source-update common-lisp:nil :type
    (common-lisp:or s3reference-data-source-update common-lisp:null))
   (reference-schema-update common-lisp:nil :type
    (common-lisp:or source-schema common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reference-data-source-update
                    'make-reference-data-source-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          reference-data-source-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ReferenceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reference-id)))
    (aws-sdk/generator/shape::to-query-params "TableNameUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-name-update)))
    (aws-sdk/generator/shape::to-query-params "S3ReferenceDataSourceUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3reference-data-source-update)))
    (aws-sdk/generator/shape::to-query-params "ReferenceSchemaUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reference-schema-update))))))
(common-lisp:progn
 (common-lisp:deftype reference-data-source-updates ()
   '(trivial-types:proper-list reference-data-source-update))
 (common-lisp:defun |make-reference-data-source-updates|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            reference-data-source-update))
   aws-sdk/generator/shape::members))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (resource-in-use-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-in-use-exception
                    'make-resource-in-use-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-in-use-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'make-resource-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-provisioned-throughput-exceeded-exception
      (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-provisioned-throughput-exceeded-exception
                    'make-resource-provisioned-throughput-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-provisioned-throughput-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype role-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (s3reference-data-source (:copier common-lisp:nil))
   (bucket-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":bucket-arn is required"))
    :type (common-lisp:or bucket-arn common-lisp:null))
   (file-key
    (common-lisp:error
     #A((21) common-lisp:base-char . ":file-key is required"))
    :type (common-lisp:or file-key common-lisp:null))
   (reference-role-arn
    (common-lisp:error
     #A((31) common-lisp:base-char . ":reference-role-arn is required"))
    :type (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 's3reference-data-source 'make-s3reference-data-source))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          s3reference-data-source))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BucketARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket-arn)))
    (aws-sdk/generator/shape::to-query-params "FileKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'file-key)))
    (aws-sdk/generator/shape::to-query-params "ReferenceRoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reference-role-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (s3reference-data-source-description (:copier common-lisp:nil))
   (bucket-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":bucket-arn is required"))
    :type (common-lisp:or bucket-arn common-lisp:null))
   (file-key
    (common-lisp:error
     #A((21) common-lisp:base-char . ":file-key is required"))
    :type (common-lisp:or file-key common-lisp:null))
   (reference-role-arn
    (common-lisp:error
     #A((31) common-lisp:base-char . ":reference-role-arn is required"))
    :type (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 's3reference-data-source-description
                    'make-s3reference-data-source-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          s3reference-data-source-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BucketARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket-arn)))
    (aws-sdk/generator/shape::to-query-params "FileKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'file-key)))
    (aws-sdk/generator/shape::to-query-params "ReferenceRoleARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reference-role-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (s3reference-data-source-update (:copier common-lisp:nil))
   (bucket-arnupdate common-lisp:nil :type
    (common-lisp:or bucket-arn common-lisp:null))
   (file-key-update common-lisp:nil :type
    (common-lisp:or file-key common-lisp:null))
   (reference-role-arnupdate common-lisp:nil :type
    (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 's3reference-data-source-update
                    'make-s3reference-data-source-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          s3reference-data-source-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BucketARNUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bucket-arnupdate)))
    (aws-sdk/generator/shape::to-query-params "FileKeyUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'file-key-update)))
    (aws-sdk/generator/shape::to-query-params "ReferenceRoleARNUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reference-role-arnupdate))))))
(common-lisp:progn
 (common-lisp:defstruct
     (service-unavailable-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'make-service-unavailable-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          service-unavailable-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (source-schema (:copier common-lisp:nil))
   (record-format
    (common-lisp:error
     #A((26) common-lisp:base-char . ":record-format is required"))
    :type (common-lisp:or record-format common-lisp:null))
   (record-encoding common-lisp:nil :type
    (common-lisp:or record-encoding common-lisp:null))
   (record-columns
    (common-lisp:error
     #A((27) common-lisp:base-char . ":record-columns is required"))
    :type (common-lisp:or record-columns common-lisp:null)))
 (common-lisp:export (common-lisp:list 'source-schema 'make-source-schema))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape source-schema))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RecordFormat"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-format)))
    (aws-sdk/generator/shape::to-query-params "RecordEncoding"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-encoding)))
    (aws-sdk/generator/shape::to-query-params "RecordColumns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-columns))))))
(common-lisp:progn
 (common-lisp:defstruct (start-application-request (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (input-configurations
    (common-lisp:error
     #A((33) common-lisp:base-char . ":input-configurations is required"))
    :type (common-lisp:or input-configurations common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-application-request
                    'make-start-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-application-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "InputConfigurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-configurations))))))
(common-lisp:progn
 (common-lisp:defstruct (start-application-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'start-application-response
                    'make-start-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-application-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (stop-application-request (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-application-request 'make-stop-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-application-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name))))))
(common-lisp:progn
 (common-lisp:defstruct (stop-application-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'stop-application-response
                    'make-stop-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-application-response))
   (common-lisp:append)))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (unable-to-detect-schema-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null))
   (raw-input-records common-lisp:nil :type
    (common-lisp:or raw-input-records common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unable-to-detect-schema-exception
                    'make-unable-to-detect-schema-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unable-to-detect-schema-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "RawInputRecords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'raw-input-records))))))
(common-lisp:progn
 (common-lisp:defstruct (update-application-request (:copier common-lisp:nil))
   (application-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":application-name is required"))
    :type (common-lisp:or application-name common-lisp:null))
   (current-application-version-id
    (common-lisp:error
     #A((43) common-lisp:base-char
        . ":current-application-version-id is required"))
    :type (common-lisp:or application-version-id common-lisp:null))
   (application-update
    (common-lisp:error
     #A((31) common-lisp:base-char . ":application-update is required"))
    :type (common-lisp:or application-update common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-application-request
                    'make-update-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-application-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-name)))
    (aws-sdk/generator/shape::to-query-params "CurrentApplicationVersionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'current-application-version-id)))
    (aws-sdk/generator/shape::to-query-params "ApplicationUpdate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-update))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-application-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-application-response
                    'make-update-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-application-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defun add-application-cloud-watch-logging-option
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name
                     current-application-version-id cloud-watch-logging-option)
   (common-lisp:declare
    (common-lisp:ignorable application-name current-application-version-id
     cloud-watch-logging-option))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-add-application-cloud-watch-logging-option-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "kinesisanalytics")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"AddApplicationCloudWatchLoggingOption")
                                  ("Version" ,@"2015-08-14"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AddApplicationCloudWatchLoggingOptionResponse" common-lisp:nil)))
 (common-lisp:export 'add-application-cloud-watch-logging-option))
(common-lisp:progn
 (common-lisp:defun add-application-input
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name
                     current-application-version-id input)
   (common-lisp:declare
    (common-lisp:ignorable application-name current-application-version-id
     input))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-application-input-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "kinesisanalytics")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AddApplicationInput")
                                  ("Version" ,@"2015-08-14"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AddApplicationInputResponse" common-lisp:nil)))
 (common-lisp:export 'add-application-input))
(common-lisp:progn
 (common-lisp:defun add-application-output
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name
                     current-application-version-id output)
   (common-lisp:declare
    (common-lisp:ignorable application-name current-application-version-id
     output))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-application-output-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "kinesisanalytics")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AddApplicationOutput")
                                  ("Version" ,@"2015-08-14"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AddApplicationOutputResponse" common-lisp:nil)))
 (common-lisp:export 'add-application-output))
(common-lisp:progn
 (common-lisp:defun add-application-reference-data-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name
                     current-application-version-id reference-data-source)
   (common-lisp:declare
    (common-lisp:ignorable application-name current-application-version-id
     reference-data-source))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-add-application-reference-data-source-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "kinesisanalytics")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"AddApplicationReferenceDataSource")
                                  ("Version" ,@"2015-08-14"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AddApplicationReferenceDataSourceResponse" common-lisp:nil)))
 (common-lisp:export 'add-application-reference-data-source))
(common-lisp:progn
 (common-lisp:defun create-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name application-description
                     inputs outputs cloud-watch-logging-options
                     application-code)
   (common-lisp:declare
    (common-lisp:ignorable application-name application-description inputs
     outputs cloud-watch-logging-options application-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "kinesisanalytics")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateApplication")
                                  ("Version" ,@"2015-08-14"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateApplicationResponse" common-lisp:nil)))
 (common-lisp:export 'create-application))
(common-lisp:progn
 (common-lisp:defun delete-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name create-timestamp)
   (common-lisp:declare
    (common-lisp:ignorable application-name create-timestamp))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "kinesisanalytics")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteApplication")
                                  ("Version" ,@"2015-08-14"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteApplicationResponse" common-lisp:nil)))
 (common-lisp:export 'delete-application))
(common-lisp:progn
 (common-lisp:defun delete-application-cloud-watch-logging-option
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name
                     current-application-version-id
                     cloud-watch-logging-option-id)
   (common-lisp:declare
    (common-lisp:ignorable application-name current-application-version-id
     cloud-watch-logging-option-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-application-cloud-watch-logging-option-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "kinesisanalytics")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DeleteApplicationCloudWatchLoggingOption")
                                  ("Version" ,@"2015-08-14"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteApplicationCloudWatchLoggingOptionResponse" common-lisp:nil)))
 (common-lisp:export 'delete-application-cloud-watch-logging-option))
(common-lisp:progn
 (common-lisp:defun delete-application-output
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name
                     current-application-version-id output-id)
   (common-lisp:declare
    (common-lisp:ignorable application-name current-application-version-id
     output-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-application-output-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "kinesisanalytics")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteApplicationOutput")
                                  ("Version" ,@"2015-08-14"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteApplicationOutputResponse" common-lisp:nil)))
 (common-lisp:export 'delete-application-output))
(common-lisp:progn
 (common-lisp:defun delete-application-reference-data-source
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name
                     current-application-version-id reference-id)
   (common-lisp:declare
    (common-lisp:ignorable application-name current-application-version-id
     reference-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-application-reference-data-source-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "kinesisanalytics")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DeleteApplicationReferenceDataSource")
                                  ("Version" ,@"2015-08-14"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteApplicationReferenceDataSourceResponse" common-lisp:nil)))
 (common-lisp:export 'delete-application-reference-data-source))
(common-lisp:progn
 (common-lisp:defun describe-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name)
   (common-lisp:declare (common-lisp:ignorable application-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "kinesisanalytics")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeApplication")
                                  ("Version" ,@"2015-08-14"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeApplicationResponse" common-lisp:nil)))
 (common-lisp:export 'describe-application))
(common-lisp:progn
 (common-lisp:defun discover-input-schema
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn role-arn
                     input-starting-position-configuration)
   (common-lisp:declare
    (common-lisp:ignorable resource-arn role-arn
     input-starting-position-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-discover-input-schema-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "kinesisanalytics")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DiscoverInputSchema")
                                  ("Version" ,@"2015-08-14"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DiscoverInputSchemaResponse" common-lisp:nil)))
 (common-lisp:export 'discover-input-schema))
(common-lisp:progn
 (common-lisp:defun list-applications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key limit exclusive-start-application-name)
   (common-lisp:declare
    (common-lisp:ignorable limit exclusive-start-application-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-applications-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "kinesisanalytics")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListApplications")
                                  ("Version" ,@"2015-08-14"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListApplicationsResponse" common-lisp:nil)))
 (common-lisp:export 'list-applications))
(common-lisp:progn
 (common-lisp:defun start-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name input-configurations)
   (common-lisp:declare
    (common-lisp:ignorable application-name input-configurations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "kinesisanalytics")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StartApplication")
                                  ("Version" ,@"2015-08-14"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StartApplicationResponse" common-lisp:nil)))
 (common-lisp:export 'start-application))
(common-lisp:progn
 (common-lisp:defun stop-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name)
   (common-lisp:declare (common-lisp:ignorable application-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "kinesisanalytics")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StopApplication")
                                  ("Version" ,@"2015-08-14"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StopApplicationResponse" common-lisp:nil)))
 (common-lisp:export 'stop-application))
(common-lisp:progn
 (common-lisp:defun update-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-name
                     current-application-version-id application-update)
   (common-lisp:declare
    (common-lisp:ignorable application-name current-application-version-id
     application-update))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((16) common-lisp:base-char
                                  . "kinesisanalytics")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateApplication")
                                  ("Version" ,@"2015-08-14"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateApplicationResponse" common-lisp:nil)))
 (common-lisp:export 'update-application))