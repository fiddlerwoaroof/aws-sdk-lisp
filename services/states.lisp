;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/states
  (:use)
  (:nicknames #:aws/states)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/states)

(common-lisp:progn
 (common-lisp:defstruct (activity-does-not-exist (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-does-not-exist 'make-activity-does-not-exist))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          activity-does-not-exist))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (activity-failed-event-details (:copier common-lisp:nil))
   (error common-lisp:nil :type (common-lisp:or error common-lisp:null))
   (cause common-lisp:nil :type (common-lisp:or cause common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-failed-event-details
                    'make-activity-failed-event-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          activity-failed-event-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "error"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause))))))
(common-lisp:progn
 (common-lisp:defstruct (activity-limit-exceeded (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-limit-exceeded 'make-activity-limit-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          activity-limit-exceeded))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype activity-list ()
   '(trivial-types:proper-list activity-list-item))
 (common-lisp:defun |make-activity-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list activity-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (activity-list-item (:copier common-lisp:nil))
   (activity-arn
    (common-lisp:error
     #A((24) common-lisp:base-char . ":activityarn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name common-lisp:null))
   (creation-date
    (common-lisp:error
     #A((25) common-lisp:base-char . ":creationdate is required"))
    :type (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-list-item 'make-activity-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape activity-list-item))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "activityArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "creationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date))))))
(common-lisp:progn
 (common-lisp:defstruct
     (activity-schedule-failed-event-details (:copier common-lisp:nil))
   (error common-lisp:nil :type (common-lisp:or error common-lisp:null))
   (cause common-lisp:nil :type (common-lisp:or cause common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-schedule-failed-event-details
                    'make-activity-schedule-failed-event-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          activity-schedule-failed-event-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "error"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause))))))
(common-lisp:progn
 (common-lisp:defstruct
     (activity-scheduled-event-details (:copier common-lisp:nil))
   (resource
    (common-lisp:error
     #A((21) common-lisp:base-char . ":resource is required"))
    :type (common-lisp:or arn common-lisp:null))
   (input common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (timeout-in-seconds common-lisp:nil :type
    (common-lisp:or timeout-in-seconds common-lisp:null))
   (heartbeat-in-seconds common-lisp:nil :type
    (common-lisp:or timeout-in-seconds common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-scheduled-event-details
                    'make-activity-scheduled-event-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          activity-scheduled-event-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "resource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource)))
    (aws-sdk/generator/shape::to-query-params "input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input)))
    (aws-sdk/generator/shape::to-query-params "timeoutInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "heartbeatInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'heartbeat-in-seconds))))))
(common-lisp:progn
 (common-lisp:defstruct
     (activity-started-event-details (:copier common-lisp:nil))
   (worker-name common-lisp:nil :type
    (common-lisp:or identity common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-started-event-details
                    'make-activity-started-event-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          activity-started-event-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "workerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'worker-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (activity-succeeded-event-details (:copier common-lisp:nil))
   (output common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-succeeded-event-details
                    'make-activity-succeeded-event-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          activity-succeeded-event-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "output"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output))))))
(common-lisp:progn
 (common-lisp:defstruct
     (activity-timed-out-event-details (:copier common-lisp:nil))
   (error common-lisp:nil :type (common-lisp:or error common-lisp:null))
   (cause common-lisp:nil :type (common-lisp:or cause common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-timed-out-event-details
                    'make-activity-timed-out-event-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          activity-timed-out-event-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "error"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause))))))
(common-lisp:progn
 (common-lisp:defstruct
     (activity-worker-limit-exceeded (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-worker-limit-exceeded
                    'make-activity-worker-limit-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          activity-worker-limit-exceeded))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:deftype cause () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (create-activity-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-activity-input 'make-create-activity-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-activity-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (create-activity-output (:copier common-lisp:nil))
   (activity-arn
    (common-lisp:error
     #A((24) common-lisp:base-char . ":activityarn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (creation-date
    (common-lisp:error
     #A((25) common-lisp:base-char . ":creationdate is required"))
    :type (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-activity-output 'make-create-activity-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-activity-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "activityArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-arn)))
    (aws-sdk/generator/shape::to-query-params "creationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date))))))
(common-lisp:progn
 (common-lisp:defstruct (create-state-machine-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name common-lisp:null))
   (definition
    (common-lisp:error
     #A((23) common-lisp:base-char . ":definition is required"))
    :type (common-lisp:or definition common-lisp:null))
   (role-arn
    (common-lisp:error #A((20) common-lisp:base-char . ":rolearn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-state-machine-input
                    'make-create-state-machine-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-state-machine-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "definition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'definition)))
    (aws-sdk/generator/shape::to-query-params "roleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (create-state-machine-output (:copier common-lisp:nil))
   (state-machine-arn
    (common-lisp:error
     #A((28) common-lisp:base-char . ":statemachinearn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (creation-date
    (common-lisp:error
     #A((25) common-lisp:base-char . ":creationdate is required"))
    :type (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-state-machine-output
                    'make-create-state-machine-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-state-machine-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "stateMachineArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-machine-arn)))
    (aws-sdk/generator/shape::to-query-params "creationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date))))))
(common-lisp:deftype data () 'common-lisp:string)
(common-lisp:deftype definition () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (delete-activity-input (:copier common-lisp:nil))
   (activity-arn
    (common-lisp:error
     #A((24) common-lisp:base-char . ":activityarn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-activity-input 'make-delete-activity-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-activity-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "activityArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-activity-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-activity-output 'make-delete-activity-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-activity-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-state-machine-input (:copier common-lisp:nil))
   (state-machine-arn
    (common-lisp:error
     #A((28) common-lisp:base-char . ":statemachinearn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-state-machine-input
                    'make-delete-state-machine-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-state-machine-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "stateMachineArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-machine-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-state-machine-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-state-machine-output
                    'make-delete-state-machine-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-state-machine-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (describe-activity-input (:copier common-lisp:nil))
   (activity-arn
    (common-lisp:error
     #A((24) common-lisp:base-char . ":activityarn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-activity-input 'make-describe-activity-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-activity-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "activityArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-activity-output (:copier common-lisp:nil))
   (activity-arn
    (common-lisp:error
     #A((24) common-lisp:base-char . ":activityarn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name common-lisp:null))
   (creation-date
    (common-lisp:error
     #A((25) common-lisp:base-char . ":creationdate is required"))
    :type (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-activity-output 'make-describe-activity-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-activity-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "activityArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "creationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-execution-input (:copier common-lisp:nil))
   (execution-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":executionarn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-execution-input 'make-describe-execution-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-execution-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "executionArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-execution-output (:copier common-lisp:nil))
   (execution-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":executionarn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (state-machine-arn
    (common-lisp:error
     #A((28) common-lisp:base-char . ":statemachinearn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or execution-status common-lisp:null))
   (start-date
    (common-lisp:error
     #A((22) common-lisp:base-char . ":startdate is required"))
    :type (common-lisp:or timestamp common-lisp:null))
   (stop-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (input
    (common-lisp:error #A((18) common-lisp:base-char . ":input is required"))
    :type (common-lisp:or data common-lisp:null))
   (output common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-execution-output
                    'make-describe-execution-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-execution-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "executionArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-arn)))
    (aws-sdk/generator/shape::to-query-params "stateMachineArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-machine-arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "startDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-date)))
    (aws-sdk/generator/shape::to-query-params "stopDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stop-date)))
    (aws-sdk/generator/shape::to-query-params "input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input)))
    (aws-sdk/generator/shape::to-query-params "output"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-state-machine-input (:copier common-lisp:nil))
   (state-machine-arn
    (common-lisp:error
     #A((28) common-lisp:base-char . ":statemachinearn is required"))
    :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-state-machine-input
                    'make-describe-state-machine-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-state-machine-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "stateMachineArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-machine-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-state-machine-output (:copier common-lisp:nil))
   (state-machine-arn
    (common-lisp:error
     #A((28) common-lisp:base-char . ":statemachinearn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or state-machine-status common-lisp:null))
   (definition
    (common-lisp:error
     #A((23) common-lisp:base-char . ":definition is required"))
    :type (common-lisp:or definition common-lisp:null))
   (role-arn
    (common-lisp:error #A((20) common-lisp:base-char . ":rolearn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (creation-date
    (common-lisp:error
     #A((25) common-lisp:base-char . ":creationdate is required"))
    :type (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-state-machine-output
                    'make-describe-state-machine-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-state-machine-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "stateMachineArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-machine-arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "definition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'definition)))
    (aws-sdk/generator/shape::to-query-params "roleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "creationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date))))))
(common-lisp:deftype error () 'common-lisp:string)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:deftype event-id () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (execution-aborted-event-details (:copier common-lisp:nil))
   (error common-lisp:nil :type (common-lisp:or error common-lisp:null))
   (cause common-lisp:nil :type (common-lisp:or cause common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'execution-aborted-event-details
                    'make-execution-aborted-event-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          execution-aborted-event-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "error"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause))))))
(common-lisp:progn
 (common-lisp:defstruct (execution-already-exists (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'execution-already-exists 'make-execution-already-exists))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          execution-already-exists))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (execution-does-not-exist (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'execution-does-not-exist 'make-execution-does-not-exist))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          execution-does-not-exist))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (execution-failed-event-details (:copier common-lisp:nil))
   (error common-lisp:nil :type (common-lisp:or error common-lisp:null))
   (cause common-lisp:nil :type (common-lisp:or cause common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'execution-failed-event-details
                    'make-execution-failed-event-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          execution-failed-event-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "error"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause))))))
(common-lisp:progn
 (common-lisp:defstruct (execution-limit-exceeded (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'execution-limit-exceeded 'make-execution-limit-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          execution-limit-exceeded))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype execution-list ()
   '(trivial-types:proper-list execution-list-item))
 (common-lisp:defun |make-execution-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list execution-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (execution-list-item (:copier common-lisp:nil))
   (execution-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":executionarn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (state-machine-arn
    (common-lisp:error
     #A((28) common-lisp:base-char . ":statemachinearn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name common-lisp:null))
   (status
    (common-lisp:error #A((19) common-lisp:base-char . ":status is required"))
    :type (common-lisp:or execution-status common-lisp:null))
   (start-date
    (common-lisp:error
     #A((22) common-lisp:base-char . ":startdate is required"))
    :type (common-lisp:or timestamp common-lisp:null))
   (stop-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'execution-list-item 'make-execution-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape execution-list-item))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "executionArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-arn)))
    (aws-sdk/generator/shape::to-query-params "stateMachineArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-machine-arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "startDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-date)))
    (aws-sdk/generator/shape::to-query-params "stopDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stop-date))))))
(common-lisp:progn
 (common-lisp:defstruct
     (execution-started-event-details (:copier common-lisp:nil))
   (input common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'execution-started-event-details
                    'make-execution-started-event-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          execution-started-event-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input)))
    (aws-sdk/generator/shape::to-query-params "roleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:deftype execution-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (execution-succeeded-event-details (:copier common-lisp:nil))
   (output common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'execution-succeeded-event-details
                    'make-execution-succeeded-event-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          execution-succeeded-event-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "output"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output))))))
(common-lisp:progn
 (common-lisp:defstruct
     (execution-timed-out-event-details (:copier common-lisp:nil))
   (error common-lisp:nil :type (common-lisp:or error common-lisp:null))
   (cause common-lisp:nil :type (common-lisp:or cause common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'execution-timed-out-event-details
                    'make-execution-timed-out-event-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          execution-timed-out-event-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "error"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause))))))
(common-lisp:progn
 (common-lisp:defstruct (get-activity-task-input (:copier common-lisp:nil))
   (activity-arn
    (common-lisp:error
     #A((24) common-lisp:base-char . ":activityarn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (worker-name common-lisp:nil :type (common-lisp:or name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-activity-task-input 'make-get-activity-task-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-activity-task-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "activityArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-arn)))
    (aws-sdk/generator/shape::to-query-params "workerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'worker-name))))))
(common-lisp:progn
 (common-lisp:defstruct (get-activity-task-output (:copier common-lisp:nil))
   (task-token common-lisp:nil :type
    (common-lisp:or task-token common-lisp:null))
   (input common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-activity-task-output 'make-get-activity-task-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-activity-task-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "taskToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-token)))
    (aws-sdk/generator/shape::to-query-params "input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input))))))
(common-lisp:progn
 (common-lisp:defstruct (get-execution-history-input (:copier common-lisp:nil))
   (execution-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":executionarn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null))
   (reverse-order common-lisp:nil :type
    (common-lisp:or reverse-order common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-execution-history-input
                    'make-get-execution-history-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-execution-history-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "executionArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-arn)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "reverseOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reverse-order)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-execution-history-output (:copier common-lisp:nil))
   (events
    (common-lisp:error #A((19) common-lisp:base-char . ":events is required"))
    :type (common-lisp:or history-event-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-execution-history-output
                    'make-get-execution-history-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-execution-history-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "events"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'events)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (history-event (:copier common-lisp:nil))
   (timestamp
    (common-lisp:error #A((19) common-lisp:base-char . ":string is required"))
    :type (common-lisp:or timestamp common-lisp:null))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or history-event-type common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or event-id common-lisp:null))
   (previous-event-id common-lisp:nil :type
    (common-lisp:or event-id common-lisp:null))
   (activity-failed-event-details common-lisp:nil :type
    (common-lisp:or activity-failed-event-details common-lisp:null))
   (activity-schedule-failed-event-details common-lisp:nil :type
    (common-lisp:or activity-schedule-failed-event-details common-lisp:null))
   (activity-scheduled-event-details common-lisp:nil :type
    (common-lisp:or activity-scheduled-event-details common-lisp:null))
   (activity-started-event-details common-lisp:nil :type
    (common-lisp:or activity-started-event-details common-lisp:null))
   (activity-succeeded-event-details common-lisp:nil :type
    (common-lisp:or activity-succeeded-event-details common-lisp:null))
   (activity-timed-out-event-details common-lisp:nil :type
    (common-lisp:or activity-timed-out-event-details common-lisp:null))
   (execution-failed-event-details common-lisp:nil :type
    (common-lisp:or execution-failed-event-details common-lisp:null))
   (execution-started-event-details common-lisp:nil :type
    (common-lisp:or execution-started-event-details common-lisp:null))
   (execution-succeeded-event-details common-lisp:nil :type
    (common-lisp:or execution-succeeded-event-details common-lisp:null))
   (execution-aborted-event-details common-lisp:nil :type
    (common-lisp:or execution-aborted-event-details common-lisp:null))
   (execution-timed-out-event-details common-lisp:nil :type
    (common-lisp:or execution-timed-out-event-details common-lisp:null))
   (lambda-function-failed-event-details common-lisp:nil :type
    (common-lisp:or lambda-function-failed-event-details common-lisp:null))
   (lambda-function-schedule-failed-event-details common-lisp:nil :type
    (common-lisp:or lambda-function-schedule-failed-event-details
                    common-lisp:null))
   (lambda-function-scheduled-event-details common-lisp:nil :type
    (common-lisp:or lambda-function-scheduled-event-details common-lisp:null))
   (lambda-function-start-failed-event-details common-lisp:nil :type
    (common-lisp:or lambda-function-start-failed-event-details
                    common-lisp:null))
   (lambda-function-succeeded-event-details common-lisp:nil :type
    (common-lisp:or lambda-function-succeeded-event-details common-lisp:null))
   (lambda-function-timed-out-event-details common-lisp:nil :type
    (common-lisp:or lambda-function-timed-out-event-details common-lisp:null))
   (state-entered-event-details common-lisp:nil :type
    (common-lisp:or state-entered-event-details common-lisp:null))
   (state-exited-event-details common-lisp:nil :type
    (common-lisp:or state-exited-event-details common-lisp:null)))
 (common-lisp:export (common-lisp:list 'history-event 'make-history-event))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape history-event))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "timestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timestamp)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "previousEventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'previous-event-id)))
    (aws-sdk/generator/shape::to-query-params "activityFailedEventDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-failed-event-details)))
    (aws-sdk/generator/shape::to-query-params
     "activityScheduleFailedEventDetails"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'activity-schedule-failed-event-details)))
    (aws-sdk/generator/shape::to-query-params "activityScheduledEventDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-scheduled-event-details)))
    (aws-sdk/generator/shape::to-query-params "activityStartedEventDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-started-event-details)))
    (aws-sdk/generator/shape::to-query-params "activitySucceededEventDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-succeeded-event-details)))
    (aws-sdk/generator/shape::to-query-params "activityTimedOutEventDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activity-timed-out-event-details)))
    (aws-sdk/generator/shape::to-query-params "executionFailedEventDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-failed-event-details)))
    (aws-sdk/generator/shape::to-query-params "executionStartedEventDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-started-event-details)))
    (aws-sdk/generator/shape::to-query-params "executionSucceededEventDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-succeeded-event-details)))
    (aws-sdk/generator/shape::to-query-params "executionAbortedEventDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-aborted-event-details)))
    (aws-sdk/generator/shape::to-query-params "executionTimedOutEventDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-timed-out-event-details)))
    (aws-sdk/generator/shape::to-query-params
     "lambdaFunctionFailedEventDetails"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'lambda-function-failed-event-details)))
    (aws-sdk/generator/shape::to-query-params
     "lambdaFunctionScheduleFailedEventDetails"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'lambda-function-schedule-failed-event-details)))
    (aws-sdk/generator/shape::to-query-params
     "lambdaFunctionScheduledEventDetails"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'lambda-function-scheduled-event-details)))
    (aws-sdk/generator/shape::to-query-params
     "lambdaFunctionStartFailedEventDetails"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'lambda-function-start-failed-event-details)))
    (aws-sdk/generator/shape::to-query-params
     "lambdaFunctionSucceededEventDetails"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'lambda-function-succeeded-event-details)))
    (aws-sdk/generator/shape::to-query-params
     "lambdaFunctionTimedOutEventDetails"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'lambda-function-timed-out-event-details)))
    (aws-sdk/generator/shape::to-query-params "stateEnteredEventDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-entered-event-details)))
    (aws-sdk/generator/shape::to-query-params "stateExitedEventDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-exited-event-details))))))
(common-lisp:progn
 (common-lisp:deftype history-event-list ()
   '(trivial-types:proper-list history-event))
 (common-lisp:defun |make-history-event-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list history-event))
   aws-sdk/generator/shape::members))
(common-lisp:deftype history-event-type () 'common-lisp:string)
(common-lisp:deftype identity () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (invalid-arn (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export (common-lisp:list 'invalid-arn 'make-invalid-arn))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-arn))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-definition (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-definition 'make-invalid-definition))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-definition))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-execution-input (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-execution-input 'make-invalid-execution-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-execution-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-name (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export (common-lisp:list 'invalid-name 'make-invalid-name))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-name))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-output (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export (common-lisp:list 'invalid-output 'make-invalid-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-token (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export (common-lisp:list 'invalid-token 'make-invalid-token))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-token))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (lambda-function-failed-event-details (:copier common-lisp:nil))
   (error common-lisp:nil :type (common-lisp:or error common-lisp:null))
   (cause common-lisp:nil :type (common-lisp:or cause common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-failed-event-details
                    'make-lambda-function-failed-event-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lambda-function-failed-event-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "error"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause))))))
(common-lisp:progn
 (common-lisp:defstruct
     (lambda-function-schedule-failed-event-details (:copier common-lisp:nil))
   (error common-lisp:nil :type (common-lisp:or error common-lisp:null))
   (cause common-lisp:nil :type (common-lisp:or cause common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-schedule-failed-event-details
                    'make-lambda-function-schedule-failed-event-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lambda-function-schedule-failed-event-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "error"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause))))))
(common-lisp:progn
 (common-lisp:defstruct
     (lambda-function-scheduled-event-details (:copier common-lisp:nil))
   (resource
    (common-lisp:error
     #A((21) common-lisp:base-char . ":resource is required"))
    :type (common-lisp:or arn common-lisp:null))
   (input common-lisp:nil :type (common-lisp:or data common-lisp:null))
   (timeout-in-seconds common-lisp:nil :type
    (common-lisp:or timeout-in-seconds common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-scheduled-event-details
                    'make-lambda-function-scheduled-event-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lambda-function-scheduled-event-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "resource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource)))
    (aws-sdk/generator/shape::to-query-params "input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input)))
    (aws-sdk/generator/shape::to-query-params "timeoutInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout-in-seconds))))))
(common-lisp:progn
 (common-lisp:defstruct
     (lambda-function-start-failed-event-details (:copier common-lisp:nil))
   (error common-lisp:nil :type (common-lisp:or error common-lisp:null))
   (cause common-lisp:nil :type (common-lisp:or cause common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-start-failed-event-details
                    'make-lambda-function-start-failed-event-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lambda-function-start-failed-event-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "error"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause))))))
(common-lisp:progn
 (common-lisp:defstruct
     (lambda-function-succeeded-event-details (:copier common-lisp:nil))
   (output common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-succeeded-event-details
                    'make-lambda-function-succeeded-event-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lambda-function-succeeded-event-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "output"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output))))))
(common-lisp:progn
 (common-lisp:defstruct
     (lambda-function-timed-out-event-details (:copier common-lisp:nil))
   (error common-lisp:nil :type (common-lisp:or error common-lisp:null))
   (cause common-lisp:nil :type (common-lisp:or cause common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-function-timed-out-event-details
                    'make-lambda-function-timed-out-event-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lambda-function-timed-out-event-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "error"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause))))))
(common-lisp:progn
 (common-lisp:defstruct (list-activities-input (:copier common-lisp:nil))
   (max-results common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-activities-input 'make-list-activities-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-activities-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-activities-output (:copier common-lisp:nil))
   (activities
    (common-lisp:error
     #A((23) common-lisp:base-char . ":activities is required"))
    :type (common-lisp:or activity-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-activities-output 'make-list-activities-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-activities-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "activities"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activities)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-executions-input (:copier common-lisp:nil))
   (state-machine-arn
    (common-lisp:error
     #A((28) common-lisp:base-char . ":statemachinearn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (status-filter common-lisp:nil :type
    (common-lisp:or execution-status common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-executions-input 'make-list-executions-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-executions-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "stateMachineArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-machine-arn)))
    (aws-sdk/generator/shape::to-query-params "statusFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-filter)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-executions-output (:copier common-lisp:nil))
   (executions
    (common-lisp:error
     #A((23) common-lisp:base-char . ":executions is required"))
    :type (common-lisp:or execution-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-executions-output 'make-list-executions-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-executions-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "executions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'executions)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-state-machines-input (:copier common-lisp:nil))
   (max-results common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-state-machines-input
                    'make-list-state-machines-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-state-machines-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-state-machines-output (:copier common-lisp:nil))
   (state-machines
    (common-lisp:error
     #A((26) common-lisp:base-char . ":statemachines is required"))
    :type (common-lisp:or state-machine-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-state-machines-output
                    'make-list-state-machines-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-state-machines-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "stateMachines"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-machines)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:deftype page-size () 'common-lisp:integer)
(common-lisp:deftype page-token () 'common-lisp:string)
(common-lisp:deftype reverse-order () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (send-task-failure-input (:copier common-lisp:nil))
   (task-token
    (common-lisp:error
     #A((22) common-lisp:base-char . ":tasktoken is required"))
    :type (common-lisp:or task-token common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or error common-lisp:null))
   (cause common-lisp:nil :type (common-lisp:or cause common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-task-failure-input 'make-send-task-failure-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          send-task-failure-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "taskToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-token)))
    (aws-sdk/generator/shape::to-query-params "error"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause))))))
(common-lisp:progn
 (common-lisp:defstruct (send-task-failure-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'send-task-failure-output 'make-send-task-failure-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          send-task-failure-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (send-task-heartbeat-input (:copier common-lisp:nil))
   (task-token
    (common-lisp:error
     #A((22) common-lisp:base-char . ":tasktoken is required"))
    :type (common-lisp:or task-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-task-heartbeat-input
                    'make-send-task-heartbeat-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          send-task-heartbeat-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "taskToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-token))))))
(common-lisp:progn
 (common-lisp:defstruct (send-task-heartbeat-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'send-task-heartbeat-output
                    'make-send-task-heartbeat-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          send-task-heartbeat-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (send-task-success-input (:copier common-lisp:nil))
   (task-token
    (common-lisp:error
     #A((22) common-lisp:base-char . ":tasktoken is required"))
    :type (common-lisp:or task-token common-lisp:null))
   (output
    (common-lisp:error #A((19) common-lisp:base-char . ":output is required"))
    :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-task-success-input 'make-send-task-success-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          send-task-success-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "taskToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-token)))
    (aws-sdk/generator/shape::to-query-params "output"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output))))))
(common-lisp:progn
 (common-lisp:defstruct (send-task-success-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'send-task-success-output 'make-send-task-success-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          send-task-success-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (start-execution-input (:copier common-lisp:nil))
   (state-machine-arn
    (common-lisp:error
     #A((28) common-lisp:base-char . ":statemachinearn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (input common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-execution-input 'make-start-execution-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-execution-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "stateMachineArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-machine-arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input))))))
(common-lisp:progn
 (common-lisp:defstruct (start-execution-output (:copier common-lisp:nil))
   (execution-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":executionarn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (start-date
    (common-lisp:error
     #A((22) common-lisp:base-char . ":startdate is required"))
    :type (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-execution-output 'make-start-execution-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-execution-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "executionArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-arn)))
    (aws-sdk/generator/shape::to-query-params "startDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-date))))))
(common-lisp:progn
 (common-lisp:defstruct (state-entered-event-details (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name common-lisp:null))
   (input common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'state-entered-event-details
                    'make-state-entered-event-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          state-entered-event-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input))))))
(common-lisp:progn
 (common-lisp:defstruct (state-exited-event-details (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name common-lisp:null))
   (output common-lisp:nil :type (common-lisp:or data common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'state-exited-event-details
                    'make-state-exited-event-details))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          state-exited-event-details))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "output"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output))))))
(common-lisp:progn
 (common-lisp:defstruct
     (state-machine-already-exists (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'state-machine-already-exists
                    'make-state-machine-already-exists))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          state-machine-already-exists))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (state-machine-deleting (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'state-machine-deleting 'make-state-machine-deleting))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          state-machine-deleting))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (state-machine-does-not-exist (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'state-machine-does-not-exist
                    'make-state-machine-does-not-exist))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          state-machine-does-not-exist))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (state-machine-limit-exceeded (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'state-machine-limit-exceeded
                    'make-state-machine-limit-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          state-machine-limit-exceeded))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype state-machine-list ()
   '(trivial-types:proper-list state-machine-list-item))
 (common-lisp:defun |make-state-machine-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list state-machine-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (state-machine-list-item (:copier common-lisp:nil))
   (state-machine-arn
    (common-lisp:error
     #A((28) common-lisp:base-char . ":statemachinearn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name common-lisp:null))
   (creation-date
    (common-lisp:error
     #A((25) common-lisp:base-char . ":creationdate is required"))
    :type (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'state-machine-list-item 'make-state-machine-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          state-machine-list-item))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "stateMachineArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-machine-arn)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "creationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date))))))
(common-lisp:deftype state-machine-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (stop-execution-input (:copier common-lisp:nil))
   (execution-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":executionarn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (error common-lisp:nil :type (common-lisp:or error common-lisp:null))
   (cause common-lisp:nil :type (common-lisp:or cause common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-execution-input 'make-stop-execution-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape stop-execution-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "executionArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-arn)))
    (aws-sdk/generator/shape::to-query-params "error"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error)))
    (aws-sdk/generator/shape::to-query-params "cause"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cause))))))
(common-lisp:progn
 (common-lisp:defstruct (stop-execution-output (:copier common-lisp:nil))
   (stop-date
    (common-lisp:error
     #A((21) common-lisp:base-char . ":stopdate is required"))
    :type (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-execution-output 'make-stop-execution-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-execution-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "stopDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stop-date))))))
(common-lisp:progn
 (common-lisp:defstruct (task-does-not-exist (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'task-does-not-exist 'make-task-does-not-exist))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape task-does-not-exist))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (task-timed-out (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export (common-lisp:list 'task-timed-out 'make-task-timed-out))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape task-timed-out))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype task-token () 'common-lisp:string)
(common-lisp:deftype timeout-in-seconds () 'common-lisp:integer)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-activity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-activity-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "states") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateActivity")
                                  ("Version" ,@"2016-11-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateActivityOutput" common-lisp:nil)))
 (common-lisp:export 'create-activity))
(common-lisp:progn
 (common-lisp:defun create-state-machine
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name definition role-arn)
   (common-lisp:declare (common-lisp:ignorable name definition role-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-state-machine-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "states") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateStateMachine")
                                  ("Version" ,@"2016-11-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateStateMachineOutput" common-lisp:nil)))
 (common-lisp:export 'create-state-machine))
(common-lisp:progn
 (common-lisp:defun delete-activity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key activity-arn)
   (common-lisp:declare (common-lisp:ignorable activity-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-activity-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "states") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteActivity")
                                  ("Version" ,@"2016-11-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteActivityOutput" common-lisp:nil)))
 (common-lisp:export 'delete-activity))
(common-lisp:progn
 (common-lisp:defun delete-state-machine
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key state-machine-arn)
   (common-lisp:declare (common-lisp:ignorable state-machine-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-state-machine-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "states") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteStateMachine")
                                  ("Version" ,@"2016-11-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteStateMachineOutput" common-lisp:nil)))
 (common-lisp:export 'delete-state-machine))
(common-lisp:progn
 (common-lisp:defun describe-activity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key activity-arn)
   (common-lisp:declare (common-lisp:ignorable activity-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-activity-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "states") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeActivity")
                                  ("Version" ,@"2016-11-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeActivityOutput" common-lisp:nil)))
 (common-lisp:export 'describe-activity))
(common-lisp:progn
 (common-lisp:defun describe-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key execution-arn)
   (common-lisp:declare (common-lisp:ignorable execution-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-execution-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "states") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeExecution")
                                  ("Version" ,@"2016-11-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeExecutionOutput" common-lisp:nil)))
 (common-lisp:export 'describe-execution))
(common-lisp:progn
 (common-lisp:defun describe-state-machine
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key state-machine-arn)
   (common-lisp:declare (common-lisp:ignorable state-machine-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-state-machine-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "states") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeStateMachine")
                                  ("Version" ,@"2016-11-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeStateMachineOutput" common-lisp:nil)))
 (common-lisp:export 'describe-state-machine))
(common-lisp:progn
 (common-lisp:defun get-activity-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key activity-arn worker-name)
   (common-lisp:declare (common-lisp:ignorable activity-arn worker-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-activity-task-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "states") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetActivityTask")
                                  ("Version" ,@"2016-11-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetActivityTaskOutput" common-lisp:nil)))
 (common-lisp:export 'get-activity-task))
(common-lisp:progn
 (common-lisp:defun get-execution-history
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key execution-arn max-results reverse-order
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable execution-arn max-results reverse-order next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-execution-history-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "states") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetExecutionHistory")
                                  ("Version" ,@"2016-11-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetExecutionHistoryOutput" common-lisp:nil)))
 (common-lisp:export 'get-execution-history))
(common-lisp:progn
 (common-lisp:defun list-activities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-activities-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "states") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListActivities")
                                  ("Version" ,@"2016-11-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListActivitiesOutput" common-lisp:nil)))
 (common-lisp:export 'list-activities))
(common-lisp:progn
 (common-lisp:defun list-executions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key state-machine-arn status-filter
                     max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable state-machine-arn status-filter max-results
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-executions-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "states") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListExecutions")
                                  ("Version" ,@"2016-11-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListExecutionsOutput" common-lisp:nil)))
 (common-lisp:export 'list-executions))
(common-lisp:progn
 (common-lisp:defun list-state-machines
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-state-machines-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "states") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListStateMachines")
                                  ("Version" ,@"2016-11-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListStateMachinesOutput" common-lisp:nil)))
 (common-lisp:export 'list-state-machines))
(common-lisp:progn
 (common-lisp:defun send-task-failure
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-token error cause)
   (common-lisp:declare (common-lisp:ignorable task-token error cause))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-task-failure-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "states") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"SendTaskFailure")
                                  ("Version" ,@"2016-11-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SendTaskFailureOutput" common-lisp:nil)))
 (common-lisp:export 'send-task-failure))
(common-lisp:progn
 (common-lisp:defun send-task-heartbeat
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-token)
   (common-lisp:declare (common-lisp:ignorable task-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-task-heartbeat-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "states") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"SendTaskHeartbeat")
                                  ("Version" ,@"2016-11-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SendTaskHeartbeatOutput" common-lisp:nil)))
 (common-lisp:export 'send-task-heartbeat))
(common-lisp:progn
 (common-lisp:defun send-task-success
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-token output)
   (common-lisp:declare (common-lisp:ignorable task-token output))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-task-success-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "states") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"SendTaskSuccess")
                                  ("Version" ,@"2016-11-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SendTaskSuccessOutput" common-lisp:nil)))
 (common-lisp:export 'send-task-success))
(common-lisp:progn
 (common-lisp:defun start-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key state-machine-arn name input)
   (common-lisp:declare (common-lisp:ignorable state-machine-arn name input))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-execution-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "states") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"StartExecution")
                                  ("Version" ,@"2016-11-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StartExecutionOutput" common-lisp:nil)))
 (common-lisp:export 'start-execution))
(common-lisp:progn
 (common-lisp:defun stop-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key execution-arn error cause)
   (common-lisp:declare (common-lisp:ignorable execution-arn error cause))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-execution-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "states") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"StopExecution")
                                  ("Version" ,@"2016-11-23"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StopExecutionOutput" common-lisp:nil)))
 (common-lisp:export 'stop-execution))