;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/codebuild
  (:use)
  (:nicknames #:aws/codebuild)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/codebuild)

(common-lisp:progn
 (common-lisp:defstruct
     (account-limit-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'account-limit-exceeded-exception
                    'make-account-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          account-limit-exceeded-exception))
   (common-lisp:append)))
(common-lisp:deftype artifact-namespace () 'common-lisp:string)
(common-lisp:deftype artifact-packaging () 'common-lisp:string)
(common-lisp:deftype artifacts-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (batch-get-builds-input (:copier common-lisp:nil))
   (ids (common-lisp:error #A((16) common-lisp:base-char . ":ids is required"))
    :type (common-lisp:or build-ids common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-builds-input 'make-batch-get-builds-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-builds-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ids"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ids))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-get-builds-output (:copier common-lisp:nil))
   (builds common-lisp:nil :type (common-lisp:or builds common-lisp:null))
   (builds-not-found common-lisp:nil :type
    (common-lisp:or build-ids common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-builds-output 'make-batch-get-builds-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-builds-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "builds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'builds)))
    (aws-sdk/generator/shape::to-query-params "buildsNotFound"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'builds-not-found))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-get-projects-input (:copier common-lisp:nil))
   (names
    (common-lisp:error #A((18) common-lisp:base-char . ":names is required"))
    :type (common-lisp:or project-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-projects-input 'make-batch-get-projects-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-projects-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "names"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'names))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-get-projects-output (:copier common-lisp:nil))
   (projects common-lisp:nil :type (common-lisp:or projects common-lisp:null))
   (projects-not-found common-lisp:nil :type
    (common-lisp:or project-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-projects-output
                    'make-batch-get-projects-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-projects-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "projects"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'projects)))
    (aws-sdk/generator/shape::to-query-params "projectsNotFound"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'projects-not-found))))))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (build (:copier common-lisp:nil))
   (id common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (current-phase common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (build-status common-lisp:nil :type
    (common-lisp:or status-type common-lisp:null))
   (source-version common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (project-name common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (phases common-lisp:nil :type
    (common-lisp:or build-phases common-lisp:null))
   (source common-lisp:nil :type
    (common-lisp:or project-source common-lisp:null))
   (artifacts common-lisp:nil :type
    (common-lisp:or build-artifacts common-lisp:null))
   (environment common-lisp:nil :type
    (common-lisp:or project-environment common-lisp:null))
   (logs common-lisp:nil :type (common-lisp:or logs-location common-lisp:null))
   (timeout-in-minutes common-lisp:nil :type
    (common-lisp:or wrapper-int common-lisp:null))
   (build-complete common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (initiator common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'build 'make-build))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape build))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "startTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "endTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time)))
    (aws-sdk/generator/shape::to-query-params "currentPhase"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'current-phase)))
    (aws-sdk/generator/shape::to-query-params "buildStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'build-status)))
    (aws-sdk/generator/shape::to-query-params "sourceVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-version)))
    (aws-sdk/generator/shape::to-query-params "projectName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project-name)))
    (aws-sdk/generator/shape::to-query-params "phases"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'phases)))
    (aws-sdk/generator/shape::to-query-params "source"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source)))
    (aws-sdk/generator/shape::to-query-params "artifacts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'artifacts)))
    (aws-sdk/generator/shape::to-query-params "environment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment)))
    (aws-sdk/generator/shape::to-query-params "logs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'logs)))
    (aws-sdk/generator/shape::to-query-params "timeoutInMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout-in-minutes)))
    (aws-sdk/generator/shape::to-query-params "buildComplete"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'build-complete)))
    (aws-sdk/generator/shape::to-query-params "initiator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'initiator))))))
(common-lisp:progn
 (common-lisp:defstruct (build-artifacts (:copier common-lisp:nil))
   (location common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (sha256sum common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (md5sum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'build-artifacts 'make-build-artifacts))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape build-artifacts))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "sha256sum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sha256sum)))
    (aws-sdk/generator/shape::to-query-params "md5sum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'md5sum))))))
(common-lisp:progn
 (common-lisp:deftype build-ids ()
   '(trivial-types:proper-list non-empty-string))
 (common-lisp:defun |make-build-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list non-empty-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (build-phase (:copier common-lisp:nil))
   (phase-type common-lisp:nil :type
    (common-lisp:or build-phase-type common-lisp:null))
   (phase-status common-lisp:nil :type
    (common-lisp:or status-type common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (end-time common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (duration-in-seconds common-lisp:nil :type
    (common-lisp:or wrapper-long common-lisp:null))
   (contexts common-lisp:nil :type
    (common-lisp:or phase-contexts common-lisp:null)))
 (common-lisp:export (common-lisp:list 'build-phase 'make-build-phase))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape build-phase))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "phaseType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'phase-type)))
    (aws-sdk/generator/shape::to-query-params "phaseStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'phase-status)))
    (aws-sdk/generator/shape::to-query-params "startTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "endTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time)))
    (aws-sdk/generator/shape::to-query-params "durationInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "contexts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'contexts))))))
(common-lisp:deftype build-phase-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype build-phases () '(trivial-types:proper-list build-phase))
 (common-lisp:defun |make-build-phases|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list build-phase))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype builds () '(trivial-types:proper-list build))
 (common-lisp:defun |make-builds|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list build))
   aws-sdk/generator/shape::members))
(common-lisp:deftype compute-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (create-project-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or project-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or project-description common-lisp:null))
   (source
    (common-lisp:error #A((19) common-lisp:base-char . ":source is required"))
    :type (common-lisp:or project-source common-lisp:null))
   (artifacts
    (common-lisp:error
     #A((22) common-lisp:base-char . ":artifacts is required"))
    :type (common-lisp:or project-artifacts common-lisp:null))
   (environment
    (common-lisp:error
     #A((24) common-lisp:base-char . ":environment is required"))
    :type (common-lisp:or project-environment common-lisp:null))
   (service-role common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (timeout-in-minutes common-lisp:nil :type
    (common-lisp:or time-out common-lisp:null))
   (encryption-key common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-project-input 'make-create-project-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-project-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "source"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source)))
    (aws-sdk/generator/shape::to-query-params "artifacts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'artifacts)))
    (aws-sdk/generator/shape::to-query-params "environment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment)))
    (aws-sdk/generator/shape::to-query-params "serviceRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role)))
    (aws-sdk/generator/shape::to-query-params "timeoutInMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout-in-minutes)))
    (aws-sdk/generator/shape::to-query-params "encryptionKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encryption-key)))
    (aws-sdk/generator/shape::to-query-params "tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (create-project-output (:copier common-lisp:nil))
   (project common-lisp:nil :type (common-lisp:or project common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-project-output 'make-create-project-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-project-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "project"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-project-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-project-input 'make-delete-project-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-project-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-project-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-project-output 'make-delete-project-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-project-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (environment-image (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'environment-image 'make-environment-image))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape environment-image))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:deftype environment-images ()
   '(trivial-types:proper-list environment-image))
 (common-lisp:defun |make-environment-images|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list environment-image))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (environment-language (:copier common-lisp:nil))
   (language common-lisp:nil :type
    (common-lisp:or language-type common-lisp:null))
   (images common-lisp:nil :type
    (common-lisp:or environment-images common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'environment-language 'make-environment-language))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape environment-language))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "language"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'language)))
    (aws-sdk/generator/shape::to-query-params "images"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'images))))))
(common-lisp:progn
 (common-lisp:deftype environment-languages ()
   '(trivial-types:proper-list environment-language))
 (common-lisp:defun |make-environment-languages|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list environment-language))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (environment-platform (:copier common-lisp:nil))
   (platform common-lisp:nil :type
    (common-lisp:or platform-type common-lisp:null))
   (languages common-lisp:nil :type
    (common-lisp:or environment-languages common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'environment-platform 'make-environment-platform))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape environment-platform))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "platform"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform)))
    (aws-sdk/generator/shape::to-query-params "languages"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'languages))))))
(common-lisp:progn
 (common-lisp:deftype environment-platforms ()
   '(trivial-types:proper-list environment-platform))
 (common-lisp:defun |make-environment-platforms|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list environment-platform))
   aws-sdk/generator/shape::members))
(common-lisp:deftype environment-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (environment-variable (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or non-empty-string common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'environment-variable 'make-environment-variable))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape environment-variable))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:deftype environment-variables ()
   '(trivial-types:proper-list environment-variable))
 (common-lisp:defun |make-environment-variables|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list environment-variable))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (invalid-input-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-input-exception 'make-invalid-input-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-input-exception))
   (common-lisp:append)))
(common-lisp:deftype key-input () 'common-lisp:string)
(common-lisp:deftype language-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-builds-for-project-input (:copier common-lisp:nil))
   (project-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":projectname is required"))
    :type (common-lisp:or non-empty-string common-lisp:null))
   (sort-order common-lisp:nil :type
    (common-lisp:or sort-order-type common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-builds-for-project-input
                    'make-list-builds-for-project-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-builds-for-project-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "projectName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project-name)))
    (aws-sdk/generator/shape::to-query-params "sortOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-order)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-builds-for-project-output (:copier common-lisp:nil))
   (ids common-lisp:nil :type (common-lisp:or build-ids common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-builds-for-project-output
                    'make-list-builds-for-project-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-builds-for-project-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ids"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ids)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-builds-input (:copier common-lisp:nil))
   (sort-order common-lisp:nil :type
    (common-lisp:or sort-order-type common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-builds-input 'make-list-builds-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-builds-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "sortOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-order)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-builds-output (:copier common-lisp:nil))
   (ids common-lisp:nil :type (common-lisp:or build-ids common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-builds-output 'make-list-builds-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-builds-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ids"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ids)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-curated-environment-images-input (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'list-curated-environment-images-input
                    'make-list-curated-environment-images-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-curated-environment-images-input))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (list-curated-environment-images-output (:copier common-lisp:nil))
   (platforms common-lisp:nil :type
    (common-lisp:or environment-platforms common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-curated-environment-images-output
                    'make-list-curated-environment-images-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-curated-environment-images-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "platforms"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platforms))))))
(common-lisp:progn
 (common-lisp:defstruct (list-projects-input (:copier common-lisp:nil))
   (sort-by common-lisp:nil :type
    (common-lisp:or project-sort-by-type common-lisp:null))
   (sort-order common-lisp:nil :type
    (common-lisp:or sort-order-type common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-projects-input 'make-list-projects-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-projects-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "sortBy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-by)))
    (aws-sdk/generator/shape::to-query-params "sortOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-order)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-projects-output (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (projects common-lisp:nil :type
    (common-lisp:or project-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-projects-output 'make-list-projects-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-projects-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "projects"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'projects))))))
(common-lisp:progn
 (common-lisp:defstruct (logs-location (:copier common-lisp:nil))
   (group-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stream-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (deep-link common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'logs-location 'make-logs-location))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape logs-location))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "groupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'group-name)))
    (aws-sdk/generator/shape::to-query-params "streamName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stream-name)))
    (aws-sdk/generator/shape::to-query-params "deepLink"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deep-link))))))
(common-lisp:deftype non-empty-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (phase-context (:copier common-lisp:nil))
   (status-code common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'phase-context 'make-phase-context))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape phase-context))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "statusCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-code)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype phase-contexts ()
   '(trivial-types:proper-list phase-context))
 (common-lisp:defun |make-phase-contexts|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list phase-context))
   aws-sdk/generator/shape::members))
(common-lisp:deftype platform-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (project (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or project-name common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or project-description common-lisp:null))
   (source common-lisp:nil :type
    (common-lisp:or project-source common-lisp:null))
   (artifacts common-lisp:nil :type
    (common-lisp:or project-artifacts common-lisp:null))
   (environment common-lisp:nil :type
    (common-lisp:or project-environment common-lisp:null))
   (service-role common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (timeout-in-minutes common-lisp:nil :type
    (common-lisp:or time-out common-lisp:null))
   (encryption-key common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (created common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (last-modified common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'project 'make-project))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape project))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "source"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source)))
    (aws-sdk/generator/shape::to-query-params "artifacts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'artifacts)))
    (aws-sdk/generator/shape::to-query-params "environment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment)))
    (aws-sdk/generator/shape::to-query-params "serviceRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role)))
    (aws-sdk/generator/shape::to-query-params "timeoutInMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout-in-minutes)))
    (aws-sdk/generator/shape::to-query-params "encryptionKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encryption-key)))
    (aws-sdk/generator/shape::to-query-params "tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "created"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created)))
    (aws-sdk/generator/shape::to-query-params "lastModified"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified))))))
(common-lisp:progn
 (common-lisp:defstruct (project-artifacts (:copier common-lisp:nil))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or artifacts-type common-lisp:null))
   (location common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (path common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (namespace-type common-lisp:nil :type
    (common-lisp:or artifact-namespace common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (packaging common-lisp:nil :type
    (common-lisp:or artifact-packaging common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'project-artifacts 'make-project-artifacts))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape project-artifacts))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "path"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path)))
    (aws-sdk/generator/shape::to-query-params "namespaceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'namespace-type)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "packaging"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'packaging))))))
(common-lisp:deftype project-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (project-environment (:copier common-lisp:nil))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or environment-type common-lisp:null))
   (image
    (common-lisp:error #A((18) common-lisp:base-char . ":image is required"))
    :type (common-lisp:or non-empty-string common-lisp:null))
   (compute-type
    (common-lisp:error
     #A((24) common-lisp:base-char . ":computetype is required"))
    :type (common-lisp:or compute-type common-lisp:null))
   (environment-variables common-lisp:nil :type
    (common-lisp:or environment-variables common-lisp:null))
   (privileged-mode common-lisp:nil :type
    (common-lisp:or wrapper-boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'project-environment 'make-project-environment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape project-environment))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "image"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image)))
    (aws-sdk/generator/shape::to-query-params "computeType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-type)))
    (aws-sdk/generator/shape::to-query-params "environmentVariables"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-variables)))
    (aws-sdk/generator/shape::to-query-params "privilegedMode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'privileged-mode))))))
(common-lisp:deftype project-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype project-names ()
   '(trivial-types:proper-list non-empty-string))
 (common-lisp:defun |make-project-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list non-empty-string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype project-sort-by-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (project-source (:copier common-lisp:nil))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or source-type common-lisp:null))
   (location common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (buildspec common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (auth common-lisp:nil :type (common-lisp:or source-auth common-lisp:null)))
 (common-lisp:export (common-lisp:list 'project-source 'make-project-source))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape project-source))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "buildspec"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'buildspec)))
    (aws-sdk/generator/shape::to-query-params "auth"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auth))))))
(common-lisp:progn
 (common-lisp:deftype projects () '(trivial-types:proper-list project))
 (common-lisp:defun |make-projects|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list project))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-already-exists-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'resource-already-exists-exception
                    'make-resource-already-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-already-exists-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'make-resource-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-not-found-exception))
   (common-lisp:append)))
(common-lisp:deftype sort-order-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (source-auth (:copier common-lisp:nil))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or source-auth-type common-lisp:null))
   (resource common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'source-auth 'make-source-auth))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape source-auth))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "resource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource))))))
(common-lisp:deftype source-auth-type () 'common-lisp:string)
(common-lisp:deftype source-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (start-build-input (:copier common-lisp:nil))
   (project-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":projectname is required"))
    :type (common-lisp:or non-empty-string common-lisp:null))
   (source-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (artifacts-override common-lisp:nil :type
    (common-lisp:or project-artifacts common-lisp:null))
   (environment-variables-override common-lisp:nil :type
    (common-lisp:or environment-variables common-lisp:null))
   (buildspec-override common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (timeout-in-minutes-override common-lisp:nil :type
    (common-lisp:or time-out common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-build-input 'make-start-build-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape start-build-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "projectName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project-name)))
    (aws-sdk/generator/shape::to-query-params "sourceVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-version)))
    (aws-sdk/generator/shape::to-query-params "artifactsOverride"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'artifacts-override)))
    (aws-sdk/generator/shape::to-query-params "environmentVariablesOverride"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment-variables-override)))
    (aws-sdk/generator/shape::to-query-params "buildspecOverride"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'buildspec-override)))
    (aws-sdk/generator/shape::to-query-params "timeoutInMinutesOverride"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout-in-minutes-override))))))
(common-lisp:progn
 (common-lisp:defstruct (start-build-output (:copier common-lisp:nil))
   (build common-lisp:nil :type (common-lisp:or build common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-build-output 'make-start-build-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape start-build-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "build"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'build))))))
(common-lisp:deftype status-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (stop-build-input (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-build-input 'make-stop-build-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape stop-build-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct (stop-build-output (:copier common-lisp:nil))
   (build common-lisp:nil :type (common-lisp:or build common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-build-output 'make-stop-build-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape stop-build-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "build"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'build))))))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (tag (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or key-input common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or value-input common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype time-out () 'common-lisp:integer)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (update-project-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or non-empty-string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or project-description common-lisp:null))
   (source common-lisp:nil :type
    (common-lisp:or project-source common-lisp:null))
   (artifacts common-lisp:nil :type
    (common-lisp:or project-artifacts common-lisp:null))
   (environment common-lisp:nil :type
    (common-lisp:or project-environment common-lisp:null))
   (service-role common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (timeout-in-minutes common-lisp:nil :type
    (common-lisp:or time-out common-lisp:null))
   (encryption-key common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-project-input 'make-update-project-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-project-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "source"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source)))
    (aws-sdk/generator/shape::to-query-params "artifacts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'artifacts)))
    (aws-sdk/generator/shape::to-query-params "environment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment)))
    (aws-sdk/generator/shape::to-query-params "serviceRole"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role)))
    (aws-sdk/generator/shape::to-query-params "timeoutInMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout-in-minutes)))
    (aws-sdk/generator/shape::to-query-params "encryptionKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encryption-key)))
    (aws-sdk/generator/shape::to-query-params "tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (update-project-output (:copier common-lisp:nil))
   (project common-lisp:nil :type (common-lisp:or project common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-project-output 'make-update-project-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-project-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "project"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'project))))))
(common-lisp:deftype value-input () 'common-lisp:string)
(common-lisp:deftype wrapper-boolean () 'common-lisp:boolean)
(common-lisp:deftype wrapper-int () 'common-lisp:integer)
(common-lisp:deftype wrapper-long () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defun batch-get-builds
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ids)
   (common-lisp:declare (common-lisp:ignorable ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-get-builds-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "codebuild")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"BatchGetBuilds")
                                  ("Version" ,@"2016-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BatchGetBuildsOutput" common-lisp:nil)))
 (common-lisp:export 'batch-get-builds))
(common-lisp:progn
 (common-lisp:defun batch-get-projects
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key names)
   (common-lisp:declare (common-lisp:ignorable names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-get-projects-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "codebuild")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"BatchGetProjects")
                                  ("Version" ,@"2016-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BatchGetProjectsOutput" common-lisp:nil)))
 (common-lisp:export 'batch-get-projects))
(common-lisp:progn
 (common-lisp:defun create-project
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description source artifacts
                     environment service-role timeout-in-minutes encryption-key
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable name description source artifacts environment
     service-role timeout-in-minutes encryption-key tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-project-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "codebuild")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateProject")
                                  ("Version" ,@"2016-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateProjectOutput" common-lisp:nil)))
 (common-lisp:export 'create-project))
(common-lisp:progn
 (common-lisp:defun delete-project
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-project-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "codebuild")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteProject")
                                  ("Version" ,@"2016-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteProjectOutput" common-lisp:nil)))
 (common-lisp:export 'delete-project))
(common-lisp:progn
 (common-lisp:defun list-builds
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sort-order next-token)
   (common-lisp:declare (common-lisp:ignorable sort-order next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-builds-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "codebuild")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListBuilds")
                                  ("Version" ,@"2016-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListBuildsOutput" common-lisp:nil)))
 (common-lisp:export 'list-builds))
(common-lisp:progn
 (common-lisp:defun list-builds-for-project
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-name sort-order next-token)
   (common-lisp:declare
    (common-lisp:ignorable project-name sort-order next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-builds-for-project-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "codebuild")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListBuildsForProject")
                                  ("Version" ,@"2016-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListBuildsForProjectOutput" common-lisp:nil)))
 (common-lisp:export 'list-builds-for-project))
(common-lisp:progn
 (common-lisp:defun list-curated-environment-images ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((9) common-lisp:base-char . "codebuild")
                             :method :post :params
                             (common-lisp:cons "Action"
                                               "ListCuratedEnvironmentImages"))
    "ListCuratedEnvironmentImagesOutput" common-lisp:nil))
 (common-lisp:export 'list-curated-environment-images))
(common-lisp:progn
 (common-lisp:defun list-projects
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sort-by sort-order next-token)
   (common-lisp:declare (common-lisp:ignorable sort-by sort-order next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-projects-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "codebuild")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListProjects")
                                  ("Version" ,@"2016-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListProjectsOutput" common-lisp:nil)))
 (common-lisp:export 'list-projects))
(common-lisp:progn
 (common-lisp:defun start-build
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key project-name source-version
                     artifacts-override environment-variables-override
                     buildspec-override timeout-in-minutes-override)
   (common-lisp:declare
    (common-lisp:ignorable project-name source-version artifacts-override
     environment-variables-override buildspec-override
     timeout-in-minutes-override))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-build-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "codebuild")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StartBuild")
                                  ("Version" ,@"2016-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StartBuildOutput" common-lisp:nil)))
 (common-lisp:export 'start-build))
(common-lisp:progn
 (common-lisp:defun stop-build
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-build-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "codebuild")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StopBuild")
                                  ("Version" ,@"2016-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StopBuildOutput" common-lisp:nil)))
 (common-lisp:export 'stop-build))
(common-lisp:progn
 (common-lisp:defun update-project
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description source artifacts
                     environment service-role timeout-in-minutes encryption-key
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable name description source artifacts environment
     service-role timeout-in-minutes encryption-key tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-project-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((9) common-lisp:base-char . "codebuild")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateProject")
                                  ("Version" ,@"2016-10-06"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateProjectOutput" common-lisp:nil)))
 (common-lisp:export 'update-project))