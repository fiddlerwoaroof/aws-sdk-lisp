;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/opsworks
  (:use)
  (:nicknames #:aws/opsworks)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/opsworks)

(common-lisp:progn
 (common-lisp:defstruct (agent-version (:copier common-lisp:nil))
   (version common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (configuration-manager common-lisp:nil :type
    (common-lisp:or stack-configuration-manager common-lisp:null)))
 (common-lisp:export (common-lisp:list 'agent-version 'make-agent-version))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape agent-version))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "ConfigurationManager"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-manager))))))
(common-lisp:progn
 (common-lisp:deftype agent-versions ()
   '(trivial-types:proper-list agent-version))
 (common-lisp:defun |make-agent-versions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list agent-version))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (app (:copier common-lisp:nil))
   (app-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (shortname common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (data-sources common-lisp:nil :type
    (common-lisp:or data-sources common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or app-type common-lisp:null))
   (app-source common-lisp:nil :type (common-lisp:or source common-lisp:null))
   (domains common-lisp:nil :type (common-lisp:or strings common-lisp:null))
   (enable-ssl common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (ssl-configuration common-lisp:nil :type
    (common-lisp:or ssl-configuration common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or app-attributes common-lisp:null))
   (created-at common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (environment common-lisp:nil :type
    (common-lisp:or environment-variables common-lisp:null)))
 (common-lisp:export (common-lisp:list 'app 'make-app))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape app))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AppId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'app-id)))
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "Shortname"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shortname)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "DataSources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-sources)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "AppSource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'app-source)))
    (aws-sdk/generator/shape::to-query-params "Domains"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domains)))
    (aws-sdk/generator/shape::to-query-params "EnableSsl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enable-ssl)))
    (aws-sdk/generator/shape::to-query-params "SslConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssl-configuration)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "CreatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "Environment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment))))))
(common-lisp:defstruct
    (app-attributes
     (:constructor |make-app-attributes|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype app-attributes-keys () 'common-lisp:string)
(common-lisp:deftype app-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype apps () '(trivial-types:proper-list app))
 (common-lisp:defun |make-apps|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list app))
   aws-sdk/generator/shape::members))
(common-lisp:deftype architecture () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (assign-instance-request (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (layer-ids
    (common-lisp:error
     #A((22) common-lisp:base-char . ":layer-ids is required"))
    :type (common-lisp:or strings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'assign-instance-request 'make-assign-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          assign-instance-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "LayerIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (assign-volume-request (:copier common-lisp:nil))
   (volume-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":volume-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'assign-volume-request 'make-assign-volume-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          assign-volume-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "VolumeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-elastic-ip-request (:copier common-lisp:nil))
   (elastic-ip
    (common-lisp:error
     #A((23) common-lisp:base-char . ":elastic-ip is required"))
    :type (common-lisp:or string common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-elastic-ip-request
                    'make-associate-elastic-ip-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          associate-elastic-ip-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ElasticIp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elastic-ip)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (attach-elastic-load-balancer-request (:copier common-lisp:nil))
   (elastic-load-balancer-name
    (common-lisp:error
     #A((39) common-lisp:base-char
        . ":elastic-load-balancer-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (layer-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":layer-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attach-elastic-load-balancer-request
                    'make-attach-elastic-load-balancer-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attach-elastic-load-balancer-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ElasticLoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elastic-load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "LayerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-id))))))
(common-lisp:progn
 (common-lisp:defstruct (auto-scaling-thresholds (:copier common-lisp:nil))
   (instance-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (thresholds-wait-time common-lisp:nil :type
    (common-lisp:or minute common-lisp:null))
   (ignore-metrics-time common-lisp:nil :type
    (common-lisp:or minute common-lisp:null))
   (cpu-threshold common-lisp:nil :type
    (common-lisp:or double common-lisp:null))
   (memory-threshold common-lisp:nil :type
    (common-lisp:or double common-lisp:null))
   (load-threshold common-lisp:nil :type
    (common-lisp:or double common-lisp:null))
   (alarms common-lisp:nil :type (common-lisp:or strings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-thresholds 'make-auto-scaling-thresholds))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          auto-scaling-thresholds))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-count)))
    (aws-sdk/generator/shape::to-query-params "ThresholdsWaitTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'thresholds-wait-time)))
    (aws-sdk/generator/shape::to-query-params "IgnoreMetricsTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ignore-metrics-time)))
    (aws-sdk/generator/shape::to-query-params "CpuThreshold"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cpu-threshold)))
    (aws-sdk/generator/shape::to-query-params "MemoryThreshold"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'memory-threshold)))
    (aws-sdk/generator/shape::to-query-params "LoadThreshold"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-threshold)))
    (aws-sdk/generator/shape::to-query-params "Alarms"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alarms))))))
(common-lisp:deftype auto-scaling-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (block-device-mapping (:copier common-lisp:nil))
   (device-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (no-device common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (virtual-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (ebs common-lisp:nil :type
    (common-lisp:or ebs-block-device common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'block-device-mapping 'make-block-device-mapping))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape block-device-mapping))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DeviceName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-name)))
    (aws-sdk/generator/shape::to-query-params "NoDevice"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'no-device)))
    (aws-sdk/generator/shape::to-query-params "VirtualName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'virtual-name)))
    (aws-sdk/generator/shape::to-query-params "Ebs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebs))))))
(common-lisp:progn
 (common-lisp:deftype block-device-mappings ()
   '(trivial-types:proper-list block-device-mapping))
 (common-lisp:defun |make-block-device-mappings|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list block-device-mapping))
   aws-sdk/generator/shape::members))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (chef-configuration (:copier common-lisp:nil))
   (manage-berkshelf common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (berkshelf-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'chef-configuration 'make-chef-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape chef-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ManageBerkshelf"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'manage-berkshelf)))
    (aws-sdk/generator/shape::to-query-params "BerkshelfVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'berkshelf-version))))))
(common-lisp:progn
 (common-lisp:defstruct (clone-stack-request (:copier common-lisp:nil))
   (source-stack-id
    (common-lisp:error
     #A((28) common-lisp:base-char . ":source-stack-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (region common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or stack-attributes common-lisp:null))
   (service-role-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":service-role-arn is required"))
    :type (common-lisp:or string common-lisp:null))
   (default-instance-profile-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (default-os common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (hostname-theme common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (default-availability-zone common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (default-subnet-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (custom-json common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (configuration-manager common-lisp:nil :type
    (common-lisp:or stack-configuration-manager common-lisp:null))
   (chef-configuration common-lisp:nil :type
    (common-lisp:or chef-configuration common-lisp:null))
   (use-custom-cookbooks common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (use-opsworks-security-groups common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (custom-cookbooks-source common-lisp:nil :type
    (common-lisp:or source common-lisp:null))
   (default-ssh-key-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (clone-permissions common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (clone-app-ids common-lisp:nil :type
    (common-lisp:or strings common-lisp:null))
   (default-root-device-type common-lisp:nil :type
    (common-lisp:or root-device-type common-lisp:null))
   (agent-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'clone-stack-request 'make-clone-stack-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape clone-stack-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SourceStackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-stack-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Region"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'region)))
    (aws-sdk/generator/shape::to-query-params "VpcId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vpc-id)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "ServiceRoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role-arn)))
    (aws-sdk/generator/shape::to-query-params "DefaultInstanceProfileArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-instance-profile-arn)))
    (aws-sdk/generator/shape::to-query-params "DefaultOs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-os)))
    (aws-sdk/generator/shape::to-query-params "HostnameTheme"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hostname-theme)))
    (aws-sdk/generator/shape::to-query-params "DefaultAvailabilityZone"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-availability-zone)))
    (aws-sdk/generator/shape::to-query-params "DefaultSubnetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-subnet-id)))
    (aws-sdk/generator/shape::to-query-params "CustomJson"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-json)))
    (aws-sdk/generator/shape::to-query-params "ConfigurationManager"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-manager)))
    (aws-sdk/generator/shape::to-query-params "ChefConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'chef-configuration)))
    (aws-sdk/generator/shape::to-query-params "UseCustomCookbooks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'use-custom-cookbooks)))
    (aws-sdk/generator/shape::to-query-params "UseOpsworksSecurityGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'use-opsworks-security-groups)))
    (aws-sdk/generator/shape::to-query-params "CustomCookbooksSource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-cookbooks-source)))
    (aws-sdk/generator/shape::to-query-params "DefaultSshKeyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-ssh-key-name)))
    (aws-sdk/generator/shape::to-query-params "ClonePermissions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'clone-permissions)))
    (aws-sdk/generator/shape::to-query-params "CloneAppIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'clone-app-ids)))
    (aws-sdk/generator/shape::to-query-params "DefaultRootDeviceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-root-device-type)))
    (aws-sdk/generator/shape::to-query-params "AgentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-version))))))
(common-lisp:progn
 (common-lisp:defstruct (clone-stack-result (:copier common-lisp:nil))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'clone-stack-result 'make-clone-stack-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape clone-stack-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (cloud-watch-logs-configuration (:copier common-lisp:nil))
   (enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (log-streams common-lisp:nil :type
    (common-lisp:or cloud-watch-logs-log-streams common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-watch-logs-configuration
                    'make-cloud-watch-logs-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cloud-watch-logs-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "LogStreams"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-streams))))))
(common-lisp:deftype cloud-watch-logs-encoding () 'common-lisp:string)
(common-lisp:deftype cloud-watch-logs-initial-position () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (cloud-watch-logs-log-stream (:copier common-lisp:nil))
   (log-group-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (datetime-format common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (time-zone common-lisp:nil :type
    (common-lisp:or cloud-watch-logs-time-zone common-lisp:null))
   (file common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (file-fingerprint-lines common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (multi-line-start-pattern common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (initial-position common-lisp:nil :type
    (common-lisp:or cloud-watch-logs-initial-position common-lisp:null))
   (encoding common-lisp:nil :type
    (common-lisp:or cloud-watch-logs-encoding common-lisp:null))
   (buffer-duration common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (batch-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (batch-size common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cloud-watch-logs-log-stream
                    'make-cloud-watch-logs-log-stream))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cloud-watch-logs-log-stream))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LogGroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-group-name)))
    (aws-sdk/generator/shape::to-query-params "DatetimeFormat"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'datetime-format)))
    (aws-sdk/generator/shape::to-query-params "TimeZone"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'time-zone)))
    (aws-sdk/generator/shape::to-query-params "File"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'file)))
    (aws-sdk/generator/shape::to-query-params "FileFingerprintLines"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'file-fingerprint-lines)))
    (aws-sdk/generator/shape::to-query-params "MultiLineStartPattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'multi-line-start-pattern)))
    (aws-sdk/generator/shape::to-query-params "InitialPosition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'initial-position)))
    (aws-sdk/generator/shape::to-query-params "Encoding"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encoding)))
    (aws-sdk/generator/shape::to-query-params "BufferDuration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'buffer-duration)))
    (aws-sdk/generator/shape::to-query-params "BatchCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'batch-count)))
    (aws-sdk/generator/shape::to-query-params "BatchSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'batch-size))))))
(common-lisp:progn
 (common-lisp:deftype cloud-watch-logs-log-streams ()
   '(trivial-types:proper-list cloud-watch-logs-log-stream))
 (common-lisp:defun |make-cloud-watch-logs-log-streams|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            cloud-watch-logs-log-stream))
   aws-sdk/generator/shape::members))
(common-lisp:deftype cloud-watch-logs-time-zone () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (command (:copier common-lisp:nil))
   (command-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (deployment-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (acknowledged-at common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (completed-at common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (exit-code common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (log-url common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'command 'make-command))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape command))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CommandId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'command-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "DeploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-id)))
    (aws-sdk/generator/shape::to-query-params "CreatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "AcknowledgedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'acknowledged-at)))
    (aws-sdk/generator/shape::to-query-params "CompletedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'completed-at)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "ExitCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'exit-code)))
    (aws-sdk/generator/shape::to-query-params "LogUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log-url)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type))))))
(common-lisp:progn
 (common-lisp:deftype commands () '(trivial-types:proper-list command))
 (common-lisp:defun |make-commands|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list command))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (create-app-request (:copier common-lisp:nil))
   (stack-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":stack-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (shortname common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (data-sources common-lisp:nil :type
    (common-lisp:or data-sources common-lisp:null))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or app-type common-lisp:null))
   (app-source common-lisp:nil :type (common-lisp:or source common-lisp:null))
   (domains common-lisp:nil :type (common-lisp:or strings common-lisp:null))
   (enable-ssl common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (ssl-configuration common-lisp:nil :type
    (common-lisp:or ssl-configuration common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or app-attributes common-lisp:null))
   (environment common-lisp:nil :type
    (common-lisp:or environment-variables common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-app-request 'make-create-app-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-app-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "Shortname"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shortname)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "DataSources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-sources)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "AppSource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'app-source)))
    (aws-sdk/generator/shape::to-query-params "Domains"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domains)))
    (aws-sdk/generator/shape::to-query-params "EnableSsl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enable-ssl)))
    (aws-sdk/generator/shape::to-query-params "SslConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssl-configuration)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "Environment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment))))))
(common-lisp:progn
 (common-lisp:defstruct (create-app-result (:copier common-lisp:nil))
   (app-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-app-result 'make-create-app-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-app-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AppId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'app-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-deployment-request (:copier common-lisp:nil))
   (stack-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":stack-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (app-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-ids common-lisp:nil :type
    (common-lisp:or strings common-lisp:null))
   (layer-ids common-lisp:nil :type (common-lisp:or strings common-lisp:null))
   (command
    (common-lisp:error #A((20) common-lisp:base-char . ":command is required"))
    :type (common-lisp:or deployment-command common-lisp:null))
   (comment common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (custom-json common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-deployment-request
                    'make-create-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-deployment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "AppId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'app-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-ids)))
    (aws-sdk/generator/shape::to-query-params "LayerIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-ids)))
    (aws-sdk/generator/shape::to-query-params "Command"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'command)))
    (aws-sdk/generator/shape::to-query-params "Comment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comment)))
    (aws-sdk/generator/shape::to-query-params "CustomJson"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-json))))))
(common-lisp:progn
 (common-lisp:defstruct (create-deployment-result (:copier common-lisp:nil))
   (deployment-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-deployment-result 'make-create-deployment-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-deployment-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DeploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-instance-request (:copier common-lisp:nil))
   (stack-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":stack-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (layer-ids
    (common-lisp:error
     #A((22) common-lisp:base-char . ":layer-ids is required"))
    :type (common-lisp:or strings common-lisp:null))
   (instance-type
    (common-lisp:error
     #A((26) common-lisp:base-char . ":instance-type is required"))
    :type (common-lisp:or string common-lisp:null))
   (auto-scaling-type common-lisp:nil :type
    (common-lisp:or auto-scaling-type common-lisp:null))
   (hostname common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (os common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ami-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ssh-key-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (availability-zone common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (virtualization-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (architecture common-lisp:nil :type
    (common-lisp:or architecture common-lisp:null))
   (root-device-type common-lisp:nil :type
    (common-lisp:or root-device-type common-lisp:null))
   (block-device-mappings common-lisp:nil :type
    (common-lisp:or block-device-mappings common-lisp:null))
   (install-updates-on-boot common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (ebs-optimized common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (agent-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (tenancy common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-instance-request 'make-create-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-instance-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "LayerIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-ids)))
    (aws-sdk/generator/shape::to-query-params "InstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-type)))
    (aws-sdk/generator/shape::to-query-params "Hostname"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hostname)))
    (aws-sdk/generator/shape::to-query-params "Os"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'os)))
    (aws-sdk/generator/shape::to-query-params "AmiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ami-id)))
    (aws-sdk/generator/shape::to-query-params "SshKeyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssh-key-name)))
    (aws-sdk/generator/shape::to-query-params "AvailabilityZone"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zone)))
    (aws-sdk/generator/shape::to-query-params "VirtualizationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'virtualization-type)))
    (aws-sdk/generator/shape::to-query-params "SubnetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-id)))
    (aws-sdk/generator/shape::to-query-params "Architecture"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'architecture)))
    (aws-sdk/generator/shape::to-query-params "RootDeviceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'root-device-type)))
    (aws-sdk/generator/shape::to-query-params "BlockDeviceMappings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'block-device-mappings)))
    (aws-sdk/generator/shape::to-query-params "InstallUpdatesOnBoot"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'install-updates-on-boot)))
    (aws-sdk/generator/shape::to-query-params "EbsOptimized"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebs-optimized)))
    (aws-sdk/generator/shape::to-query-params "AgentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-version)))
    (aws-sdk/generator/shape::to-query-params "Tenancy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tenancy))))))
(common-lisp:progn
 (common-lisp:defstruct (create-instance-result (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-instance-result 'make-create-instance-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-instance-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-layer-request (:copier common-lisp:nil))
   (stack-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":stack-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or layer-type common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (shortname
    (common-lisp:error
     #A((22) common-lisp:base-char . ":shortname is required"))
    :type (common-lisp:or string common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or layer-attributes common-lisp:null))
   (cloud-watch-logs-configuration common-lisp:nil :type
    (common-lisp:or cloud-watch-logs-configuration common-lisp:null))
   (custom-instance-profile-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (custom-json common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (custom-security-group-ids common-lisp:nil :type
    (common-lisp:or strings common-lisp:null))
   (packages common-lisp:nil :type (common-lisp:or strings common-lisp:null))
   (volume-configurations common-lisp:nil :type
    (common-lisp:or volume-configurations common-lisp:null))
   (enable-auto-healing common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (auto-assign-elastic-ips common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (auto-assign-public-ips common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (custom-recipes common-lisp:nil :type
    (common-lisp:or recipes common-lisp:null))
   (install-updates-on-boot common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (use-ebs-optimized-instances common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (lifecycle-event-configuration common-lisp:nil :type
    (common-lisp:or lifecycle-event-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-layer-request 'make-create-layer-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-layer-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Shortname"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shortname)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "CloudWatchLogsConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cloud-watch-logs-configuration)))
    (aws-sdk/generator/shape::to-query-params "CustomInstanceProfileArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-instance-profile-arn)))
    (aws-sdk/generator/shape::to-query-params "CustomJson"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-json)))
    (aws-sdk/generator/shape::to-query-params "CustomSecurityGroupIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-security-group-ids)))
    (aws-sdk/generator/shape::to-query-params "Packages"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'packages)))
    (aws-sdk/generator/shape::to-query-params "VolumeConfigurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-configurations)))
    (aws-sdk/generator/shape::to-query-params "EnableAutoHealing"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enable-auto-healing)))
    (aws-sdk/generator/shape::to-query-params "AutoAssignElasticIps"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-assign-elastic-ips)))
    (aws-sdk/generator/shape::to-query-params "AutoAssignPublicIps"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-assign-public-ips)))
    (aws-sdk/generator/shape::to-query-params "CustomRecipes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-recipes)))
    (aws-sdk/generator/shape::to-query-params "InstallUpdatesOnBoot"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'install-updates-on-boot)))
    (aws-sdk/generator/shape::to-query-params "UseEbsOptimizedInstances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'use-ebs-optimized-instances)))
    (aws-sdk/generator/shape::to-query-params "LifecycleEventConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifecycle-event-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct (create-layer-result (:copier common-lisp:nil))
   (layer-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-layer-result 'make-create-layer-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-layer-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LayerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-stack-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (region
    (common-lisp:error #A((19) common-lisp:base-char . ":region is required"))
    :type (common-lisp:or string common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or stack-attributes common-lisp:null))
   (service-role-arn
    (common-lisp:error
     #A((29) common-lisp:base-char . ":service-role-arn is required"))
    :type (common-lisp:or string common-lisp:null))
   (default-instance-profile-arn
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":default-instance-profile-arn is required"))
    :type (common-lisp:or string common-lisp:null))
   (default-os common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (hostname-theme common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (default-availability-zone common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (default-subnet-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (custom-json common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (configuration-manager common-lisp:nil :type
    (common-lisp:or stack-configuration-manager common-lisp:null))
   (chef-configuration common-lisp:nil :type
    (common-lisp:or chef-configuration common-lisp:null))
   (use-custom-cookbooks common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (use-opsworks-security-groups common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (custom-cookbooks-source common-lisp:nil :type
    (common-lisp:or source common-lisp:null))
   (default-ssh-key-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (default-root-device-type common-lisp:nil :type
    (common-lisp:or root-device-type common-lisp:null))
   (agent-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-stack-request 'make-create-stack-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-stack-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Region"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'region)))
    (aws-sdk/generator/shape::to-query-params "VpcId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vpc-id)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "ServiceRoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role-arn)))
    (aws-sdk/generator/shape::to-query-params "DefaultInstanceProfileArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-instance-profile-arn)))
    (aws-sdk/generator/shape::to-query-params "DefaultOs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-os)))
    (aws-sdk/generator/shape::to-query-params "HostnameTheme"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hostname-theme)))
    (aws-sdk/generator/shape::to-query-params "DefaultAvailabilityZone"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-availability-zone)))
    (aws-sdk/generator/shape::to-query-params "DefaultSubnetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-subnet-id)))
    (aws-sdk/generator/shape::to-query-params "CustomJson"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-json)))
    (aws-sdk/generator/shape::to-query-params "ConfigurationManager"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-manager)))
    (aws-sdk/generator/shape::to-query-params "ChefConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'chef-configuration)))
    (aws-sdk/generator/shape::to-query-params "UseCustomCookbooks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'use-custom-cookbooks)))
    (aws-sdk/generator/shape::to-query-params "UseOpsworksSecurityGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'use-opsworks-security-groups)))
    (aws-sdk/generator/shape::to-query-params "CustomCookbooksSource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-cookbooks-source)))
    (aws-sdk/generator/shape::to-query-params "DefaultSshKeyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-ssh-key-name)))
    (aws-sdk/generator/shape::to-query-params "DefaultRootDeviceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-root-device-type)))
    (aws-sdk/generator/shape::to-query-params "AgentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-version))))))
(common-lisp:progn
 (common-lisp:defstruct (create-stack-result (:copier common-lisp:nil))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-stack-result 'make-create-stack-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-stack-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-user-profile-request (:copier common-lisp:nil))
   (iam-user-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":iam-user-arn is required"))
    :type (common-lisp:or string common-lisp:null))
   (ssh-username common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (ssh-public-key common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (allow-self-management common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-user-profile-request
                    'make-create-user-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-user-profile-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IamUserArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-user-arn)))
    (aws-sdk/generator/shape::to-query-params "SshUsername"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssh-username)))
    (aws-sdk/generator/shape::to-query-params "SshPublicKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssh-public-key)))
    (aws-sdk/generator/shape::to-query-params "AllowSelfManagement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allow-self-management))))))
(common-lisp:progn
 (common-lisp:defstruct (create-user-profile-result (:copier common-lisp:nil))
   (iam-user-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-user-profile-result
                    'make-create-user-profile-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-user-profile-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IamUserArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-user-arn))))))
(common-lisp:defstruct
    (daily-auto-scaling-schedule
     (:constructor |make-daily-auto-scaling-schedule|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (data-source (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (database-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'data-source 'make-data-source))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape data-source))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "DatabaseName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'database-name))))))
(common-lisp:progn
 (common-lisp:deftype data-sources () '(trivial-types:proper-list data-source))
 (common-lisp:defun |make-data-sources|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list data-source))
   aws-sdk/generator/shape::members))
(common-lisp:deftype date-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (delete-app-request (:copier common-lisp:nil))
   (app-id
    (common-lisp:error #A((19) common-lisp:base-char . ":app-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-app-request 'make-delete-app-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-app-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AppId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'app-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-instance-request (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (delete-elastic-ip common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (delete-volumes common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-instance-request 'make-delete-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-instance-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "DeleteElasticIp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete-elastic-ip)))
    (aws-sdk/generator/shape::to-query-params "DeleteVolumes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete-volumes))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-layer-request (:copier common-lisp:nil))
   (layer-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":layer-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-layer-request 'make-delete-layer-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-layer-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LayerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-stack-request (:copier common-lisp:nil))
   (stack-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":stack-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-stack-request 'make-delete-stack-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-stack-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-user-profile-request (:copier common-lisp:nil))
   (iam-user-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":iam-user-arn is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-user-profile-request
                    'make-delete-user-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-user-profile-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IamUserArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-user-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (deployment (:copier common-lisp:nil))
   (deployment-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (app-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (completed-at common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (duration common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (iam-user-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (comment common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (command common-lisp:nil :type
    (common-lisp:or deployment-command common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (custom-json common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-ids common-lisp:nil :type
    (common-lisp:or strings common-lisp:null)))
 (common-lisp:export (common-lisp:list 'deployment 'make-deployment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape deployment))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DeploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-id)))
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "AppId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'app-id)))
    (aws-sdk/generator/shape::to-query-params "CreatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "CompletedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'completed-at)))
    (aws-sdk/generator/shape::to-query-params "Duration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration)))
    (aws-sdk/generator/shape::to-query-params "IamUserArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-user-arn)))
    (aws-sdk/generator/shape::to-query-params "Comment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comment)))
    (aws-sdk/generator/shape::to-query-params "Command"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'command)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "CustomJson"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-json)))
    (aws-sdk/generator/shape::to-query-params "InstanceIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (deployment-command (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or deployment-command-name common-lisp:null))
   (args common-lisp:nil :type
    (common-lisp:or deployment-command-args common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deployment-command 'make-deployment-command))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape deployment-command))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Args"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'args))))))
(common-lisp:defstruct
    (deployment-command-args
     (:constructor |make-deployment-command-args|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype deployment-command-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype deployments () '(trivial-types:proper-list deployment))
 (common-lisp:defun |make-deployments|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deployment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-ecs-cluster-request (:copier common-lisp:nil))
   (ecs-cluster-arn
    (common-lisp:error
     #A((28) common-lisp:base-char . ":ecs-cluster-arn is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-ecs-cluster-request
                    'make-deregister-ecs-cluster-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deregister-ecs-cluster-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EcsClusterArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ecs-cluster-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-elastic-ip-request (:copier common-lisp:nil))
   (elastic-ip
    (common-lisp:error
     #A((23) common-lisp:base-char . ":elastic-ip is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-elastic-ip-request
                    'make-deregister-elastic-ip-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deregister-elastic-ip-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ElasticIp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elastic-ip))))))
(common-lisp:progn
 (common-lisp:defstruct (deregister-instance-request (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-instance-request
                    'make-deregister-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deregister-instance-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-rds-db-instance-request (:copier common-lisp:nil))
   (rds-db-instance-arn
    (common-lisp:error
     #A((32) common-lisp:base-char . ":rds-db-instance-arn is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-rds-db-instance-request
                    'make-deregister-rds-db-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deregister-rds-db-instance-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RdsDbInstanceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rds-db-instance-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (deregister-volume-request (:copier common-lisp:nil))
   (volume-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":volume-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-volume-request
                    'make-deregister-volume-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deregister-volume-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "VolumeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-agent-versions-request (:copier common-lisp:nil))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (configuration-manager common-lisp:nil :type
    (common-lisp:or stack-configuration-manager common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-agent-versions-request
                    'make-describe-agent-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-agent-versions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "ConfigurationManager"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-manager))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-agent-versions-result (:copier common-lisp:nil))
   (agent-versions common-lisp:nil :type
    (common-lisp:or agent-versions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-agent-versions-result
                    'make-describe-agent-versions-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-agent-versions-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AgentVersions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-versions))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-apps-request (:copier common-lisp:nil))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (app-ids common-lisp:nil :type (common-lisp:or strings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-apps-request 'make-describe-apps-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-apps-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "AppIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'app-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-apps-result (:copier common-lisp:nil))
   (apps common-lisp:nil :type (common-lisp:or apps common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-apps-result 'make-describe-apps-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape describe-apps-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Apps"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'apps))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-commands-request (:copier common-lisp:nil))
   (deployment-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (command-ids common-lisp:nil :type
    (common-lisp:or strings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-commands-request
                    'make-describe-commands-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-commands-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DeploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "CommandIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'command-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-commands-result (:copier common-lisp:nil))
   (commands common-lisp:nil :type (common-lisp:or commands common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-commands-result 'make-describe-commands-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-commands-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Commands"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'commands))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-deployments-request (:copier common-lisp:nil))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (app-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (deployment-ids common-lisp:nil :type
    (common-lisp:or strings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-deployments-request
                    'make-describe-deployments-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-deployments-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "AppId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'app-id)))
    (aws-sdk/generator/shape::to-query-params "DeploymentIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-deployments-result (:copier common-lisp:nil))
   (deployments common-lisp:nil :type
    (common-lisp:or deployments common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-deployments-result
                    'make-describe-deployments-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-deployments-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Deployments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployments))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-ecs-clusters-request (:copier common-lisp:nil))
   (ecs-cluster-arns common-lisp:nil :type
    (common-lisp:or strings common-lisp:null))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-ecs-clusters-request
                    'make-describe-ecs-clusters-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-ecs-clusters-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EcsClusterArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ecs-cluster-arns)))
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-ecs-clusters-result (:copier common-lisp:nil))
   (ecs-clusters common-lisp:nil :type
    (common-lisp:or ecs-clusters common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-ecs-clusters-result
                    'make-describe-ecs-clusters-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-ecs-clusters-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EcsClusters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ecs-clusters)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-elastic-ips-request (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ips common-lisp:nil :type (common-lisp:or strings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-elastic-ips-request
                    'make-describe-elastic-ips-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-elastic-ips-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "Ips"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ips))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-elastic-ips-result (:copier common-lisp:nil))
   (elastic-ips common-lisp:nil :type
    (common-lisp:or elastic-ips common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-elastic-ips-result
                    'make-describe-elastic-ips-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-elastic-ips-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ElasticIps"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elastic-ips))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-elastic-load-balancers-request (:copier common-lisp:nil))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (layer-ids common-lisp:nil :type (common-lisp:or strings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-elastic-load-balancers-request
                    'make-describe-elastic-load-balancers-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-elastic-load-balancers-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "LayerIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-ids))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-elastic-load-balancers-result (:copier common-lisp:nil))
   (elastic-load-balancers common-lisp:nil :type
    (common-lisp:or elastic-load-balancers common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-elastic-load-balancers-result
                    'make-describe-elastic-load-balancers-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-elastic-load-balancers-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ElasticLoadBalancers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elastic-load-balancers))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-instances-request (:copier common-lisp:nil))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (layer-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-ids common-lisp:nil :type
    (common-lisp:or strings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-instances-request
                    'make-describe-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-instances-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "LayerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-instances-result (:copier common-lisp:nil))
   (instances common-lisp:nil :type
    (common-lisp:or instances common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-instances-result
                    'make-describe-instances-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-instances-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Instances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-layers-request (:copier common-lisp:nil))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (layer-ids common-lisp:nil :type (common-lisp:or strings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-layers-request 'make-describe-layers-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-layers-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "LayerIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-layers-result (:copier common-lisp:nil))
   (layers common-lisp:nil :type (common-lisp:or layers common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-layers-result 'make-describe-layers-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-layers-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Layers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layers))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-load-based-auto-scaling-request (:copier common-lisp:nil))
   (layer-ids
    (common-lisp:error
     #A((22) common-lisp:base-char . ":layer-ids is required"))
    :type (common-lisp:or strings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-load-based-auto-scaling-request
                    'make-describe-load-based-auto-scaling-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-load-based-auto-scaling-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LayerIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-ids))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-load-based-auto-scaling-result (:copier common-lisp:nil))
   (load-based-auto-scaling-configurations common-lisp:nil :type
    (common-lisp:or load-based-auto-scaling-configurations common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-load-based-auto-scaling-result
                    'make-describe-load-based-auto-scaling-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-load-based-auto-scaling-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params
     "LoadBasedAutoScalingConfigurations"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'load-based-auto-scaling-configurations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-my-user-profile-result (:copier common-lisp:nil))
   (user-profile common-lisp:nil :type
    (common-lisp:or self-user-profile common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-my-user-profile-result
                    'make-describe-my-user-profile-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-my-user-profile-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserProfile"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-profile))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-permissions-request (:copier common-lisp:nil))
   (iam-user-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-permissions-request
                    'make-describe-permissions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-permissions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IamUserArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-user-arn)))
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-permissions-result (:copier common-lisp:nil))
   (permissions common-lisp:nil :type
    (common-lisp:or permissions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-permissions-result
                    'make-describe-permissions-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-permissions-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Permissions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'permissions))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-raid-arrays-request (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (raid-array-ids common-lisp:nil :type
    (common-lisp:or strings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-raid-arrays-request
                    'make-describe-raid-arrays-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-raid-arrays-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "RaidArrayIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'raid-array-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-raid-arrays-result (:copier common-lisp:nil))
   (raid-arrays common-lisp:nil :type
    (common-lisp:or raid-arrays common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-raid-arrays-result
                    'make-describe-raid-arrays-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-raid-arrays-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RaidArrays"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'raid-arrays))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-rds-db-instances-request (:copier common-lisp:nil))
   (stack-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":stack-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (rds-db-instance-arns common-lisp:nil :type
    (common-lisp:or strings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-rds-db-instances-request
                    'make-describe-rds-db-instances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-rds-db-instances-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "RdsDbInstanceArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rds-db-instance-arns))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-rds-db-instances-result (:copier common-lisp:nil))
   (rds-db-instances common-lisp:nil :type
    (common-lisp:or rds-db-instances common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-rds-db-instances-result
                    'make-describe-rds-db-instances-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-rds-db-instances-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RdsDbInstances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rds-db-instances))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-service-errors-request (:copier common-lisp:nil))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (service-error-ids common-lisp:nil :type
    (common-lisp:or strings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-service-errors-request
                    'make-describe-service-errors-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-service-errors-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "ServiceErrorIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-error-ids))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-service-errors-result (:copier common-lisp:nil))
   (service-errors common-lisp:nil :type
    (common-lisp:or service-errors common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-service-errors-result
                    'make-describe-service-errors-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-service-errors-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ServiceErrors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-errors))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-stack-provisioning-parameters-request (:copier common-lisp:nil))
   (stack-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":stack-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-stack-provisioning-parameters-request
                    'make-describe-stack-provisioning-parameters-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-stack-provisioning-parameters-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-stack-provisioning-parameters-result (:copier common-lisp:nil))
   (agent-installer-url common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or parameters common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-stack-provisioning-parameters-result
                    'make-describe-stack-provisioning-parameters-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-stack-provisioning-parameters-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AgentInstallerUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-installer-url)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-stack-summary-request (:copier common-lisp:nil))
   (stack-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":stack-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-stack-summary-request
                    'make-describe-stack-summary-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-stack-summary-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-stack-summary-result (:copier common-lisp:nil))
   (stack-summary common-lisp:nil :type
    (common-lisp:or stack-summary common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-stack-summary-result
                    'make-describe-stack-summary-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-stack-summary-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-summary))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-stacks-request (:copier common-lisp:nil))
   (stack-ids common-lisp:nil :type (common-lisp:or strings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-stacks-request 'make-describe-stacks-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-stacks-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-stacks-result (:copier common-lisp:nil))
   (stacks common-lisp:nil :type (common-lisp:or stacks common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-stacks-result 'make-describe-stacks-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-stacks-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Stacks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stacks))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-time-based-auto-scaling-request (:copier common-lisp:nil))
   (instance-ids
    (common-lisp:error
     #A((25) common-lisp:base-char . ":instance-ids is required"))
    :type (common-lisp:or strings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-time-based-auto-scaling-request
                    'make-describe-time-based-auto-scaling-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-time-based-auto-scaling-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-ids))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-time-based-auto-scaling-result (:copier common-lisp:nil))
   (time-based-auto-scaling-configurations common-lisp:nil :type
    (common-lisp:or time-based-auto-scaling-configurations common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-time-based-auto-scaling-result
                    'make-describe-time-based-auto-scaling-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-time-based-auto-scaling-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params
     "TimeBasedAutoScalingConfigurations"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'time-based-auto-scaling-configurations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-user-profiles-request (:copier common-lisp:nil))
   (iam-user-arns common-lisp:nil :type
    (common-lisp:or strings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-profiles-request
                    'make-describe-user-profiles-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-user-profiles-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IamUserArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-user-arns))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-user-profiles-result (:copier common-lisp:nil))
   (user-profiles common-lisp:nil :type
    (common-lisp:or user-profiles common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-user-profiles-result
                    'make-describe-user-profiles-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-user-profiles-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserProfiles"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-profiles))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-volumes-request (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (raid-array-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (volume-ids common-lisp:nil :type
    (common-lisp:or strings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-volumes-request 'make-describe-volumes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-volumes-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "RaidArrayId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'raid-array-id)))
    (aws-sdk/generator/shape::to-query-params "VolumeIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-volumes-result (:copier common-lisp:nil))
   (volumes common-lisp:nil :type (common-lisp:or volumes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-volumes-result 'make-describe-volumes-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-volumes-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Volumes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volumes))))))
(common-lisp:progn
 (common-lisp:defstruct
     (detach-elastic-load-balancer-request (:copier common-lisp:nil))
   (elastic-load-balancer-name
    (common-lisp:error
     #A((39) common-lisp:base-char
        . ":elastic-load-balancer-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (layer-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":layer-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detach-elastic-load-balancer-request
                    'make-detach-elastic-load-balancer-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          detach-elastic-load-balancer-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ElasticLoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elastic-load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "LayerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-elastic-ip-request (:copier common-lisp:nil))
   (elastic-ip
    (common-lisp:error
     #A((23) common-lisp:base-char . ":elastic-ip is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-elastic-ip-request
                    'make-disassociate-elastic-ip-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disassociate-elastic-ip-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ElasticIp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elastic-ip))))))
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct (ebs-block-device (:copier common-lisp:nil))
   (snapshot-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (iops common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (volume-size common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (volume-type common-lisp:nil :type
    (common-lisp:or volume-type common-lisp:null))
   (delete-on-termination common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ebs-block-device 'make-ebs-block-device))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape ebs-block-device))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SnapshotId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snapshot-id)))
    (aws-sdk/generator/shape::to-query-params "Iops"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iops)))
    (aws-sdk/generator/shape::to-query-params "VolumeSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-size)))
    (aws-sdk/generator/shape::to-query-params "VolumeType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-type)))
    (aws-sdk/generator/shape::to-query-params "DeleteOnTermination"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete-on-termination))))))
(common-lisp:progn
 (common-lisp:defstruct (ecs-cluster (:copier common-lisp:nil))
   (ecs-cluster-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (ecs-cluster-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (registered-at common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ecs-cluster 'make-ecs-cluster))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape ecs-cluster))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EcsClusterArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ecs-cluster-arn)))
    (aws-sdk/generator/shape::to-query-params "EcsClusterName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ecs-cluster-name)))
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "RegisteredAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registered-at))))))
(common-lisp:progn
 (common-lisp:deftype ecs-clusters () '(trivial-types:proper-list ecs-cluster))
 (common-lisp:defun |make-ecs-clusters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ecs-cluster))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (elastic-ip (:copier common-lisp:nil))
   (ip common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (domain common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (region common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'elastic-ip 'make-elastic-ip))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape elastic-ip))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Ip"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ip)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Domain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain)))
    (aws-sdk/generator/shape::to-query-params "Region"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'region)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id))))))
(common-lisp:progn
 (common-lisp:deftype elastic-ips () '(trivial-types:proper-list elastic-ip))
 (common-lisp:defun |make-elastic-ips|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list elastic-ip))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (elastic-load-balancer (:copier common-lisp:nil))
   (elastic-load-balancer-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (region common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (dns-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (layer-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (availability-zones common-lisp:nil :type
    (common-lisp:or strings common-lisp:null))
   (subnet-ids common-lisp:nil :type (common-lisp:or strings common-lisp:null))
   (ec2instance-ids common-lisp:nil :type
    (common-lisp:or strings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'elastic-load-balancer 'make-elastic-load-balancer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          elastic-load-balancer))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ElasticLoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elastic-load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "Region"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'region)))
    (aws-sdk/generator/shape::to-query-params "DnsName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dns-name)))
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "LayerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-id)))
    (aws-sdk/generator/shape::to-query-params "VpcId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vpc-id)))
    (aws-sdk/generator/shape::to-query-params "AvailabilityZones"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zones)))
    (aws-sdk/generator/shape::to-query-params "SubnetIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-ids)))
    (aws-sdk/generator/shape::to-query-params "Ec2InstanceIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2instance-ids))))))
(common-lisp:progn
 (common-lisp:deftype elastic-load-balancers ()
   '(trivial-types:proper-list elastic-load-balancer))
 (common-lisp:defun |make-elastic-load-balancers|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list elastic-load-balancer))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (environment-variable (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or string common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or string common-lisp:null))
   (secure common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'environment-variable 'make-environment-variable))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape environment-variable))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "Secure"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'secure))))))
(common-lisp:progn
 (common-lisp:deftype environment-variables ()
   '(trivial-types:proper-list environment-variable))
 (common-lisp:defun |make-environment-variables|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list environment-variable))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (get-hostname-suggestion-request (:copier common-lisp:nil))
   (layer-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":layer-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-hostname-suggestion-request
                    'make-get-hostname-suggestion-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-hostname-suggestion-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LayerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-hostname-suggestion-result (:copier common-lisp:nil))
   (layer-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (hostname common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-hostname-suggestion-result
                    'make-get-hostname-suggestion-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-hostname-suggestion-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LayerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-id)))
    (aws-sdk/generator/shape::to-query-params "Hostname"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hostname))))))
(common-lisp:progn
 (common-lisp:defstruct (grant-access-request (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (valid-for-in-minutes common-lisp:nil :type
    (common-lisp:or valid-for-in-minutes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'grant-access-request 'make-grant-access-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape grant-access-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "ValidForInMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'valid-for-in-minutes))))))
(common-lisp:progn
 (common-lisp:defstruct (grant-access-result (:copier common-lisp:nil))
   (temporary-credential common-lisp:nil :type
    (common-lisp:or temporary-credential common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'grant-access-result 'make-grant-access-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape grant-access-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TemporaryCredential"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'temporary-credential))))))
(common-lisp:deftype hour () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (instance (:copier common-lisp:nil))
   (agent-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (ami-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (architecture common-lisp:nil :type
    (common-lisp:or architecture common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (auto-scaling-type common-lisp:nil :type
    (common-lisp:or auto-scaling-type common-lisp:null))
   (availability-zone common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (block-device-mappings common-lisp:nil :type
    (common-lisp:or block-device-mappings common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (ebs-optimized common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (ec2instance-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (ecs-cluster-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (ecs-container-instance-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (elastic-ip common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (hostname common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (infrastructure-class common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (install-updates-on-boot common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-profile-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (instance-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (last-service-error-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (layer-ids common-lisp:nil :type (common-lisp:or strings common-lisp:null))
   (os common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (platform common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (private-dns common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (private-ip common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (public-dns common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (public-ip common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (registered-by common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (reported-agent-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (reported-os common-lisp:nil :type
    (common-lisp:or reported-os common-lisp:null))
   (root-device-type common-lisp:nil :type
    (common-lisp:or root-device-type common-lisp:null))
   (root-device-volume-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (security-group-ids common-lisp:nil :type
    (common-lisp:or strings common-lisp:null))
   (ssh-host-dsa-key-fingerprint common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (ssh-host-rsa-key-fingerprint common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (ssh-key-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (subnet-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (tenancy common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (virtualization-type common-lisp:nil :type
    (common-lisp:or virtualization-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance 'make-instance))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AgentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-version)))
    (aws-sdk/generator/shape::to-query-params "AmiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ami-id)))
    (aws-sdk/generator/shape::to-query-params "Architecture"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'architecture)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-type)))
    (aws-sdk/generator/shape::to-query-params "AvailabilityZone"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zone)))
    (aws-sdk/generator/shape::to-query-params "BlockDeviceMappings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'block-device-mappings)))
    (aws-sdk/generator/shape::to-query-params "CreatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "EbsOptimized"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebs-optimized)))
    (aws-sdk/generator/shape::to-query-params "Ec2InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2instance-id)))
    (aws-sdk/generator/shape::to-query-params "EcsClusterArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ecs-cluster-arn)))
    (aws-sdk/generator/shape::to-query-params "EcsContainerInstanceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ecs-container-instance-arn)))
    (aws-sdk/generator/shape::to-query-params "ElasticIp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elastic-ip)))
    (aws-sdk/generator/shape::to-query-params "Hostname"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hostname)))
    (aws-sdk/generator/shape::to-query-params "InfrastructureClass"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'infrastructure-class)))
    (aws-sdk/generator/shape::to-query-params "InstallUpdatesOnBoot"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'install-updates-on-boot)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceProfileArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-profile-arn)))
    (aws-sdk/generator/shape::to-query-params "InstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type)))
    (aws-sdk/generator/shape::to-query-params "LastServiceErrorId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-service-error-id)))
    (aws-sdk/generator/shape::to-query-params "LayerIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-ids)))
    (aws-sdk/generator/shape::to-query-params "Os"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'os)))
    (aws-sdk/generator/shape::to-query-params "Platform"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform)))
    (aws-sdk/generator/shape::to-query-params "PrivateDns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'private-dns)))
    (aws-sdk/generator/shape::to-query-params "PrivateIp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'private-ip)))
    (aws-sdk/generator/shape::to-query-params "PublicDns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'public-dns)))
    (aws-sdk/generator/shape::to-query-params "PublicIp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'public-ip)))
    (aws-sdk/generator/shape::to-query-params "RegisteredBy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registered-by)))
    (aws-sdk/generator/shape::to-query-params "ReportedAgentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reported-agent-version)))
    (aws-sdk/generator/shape::to-query-params "ReportedOs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reported-os)))
    (aws-sdk/generator/shape::to-query-params "RootDeviceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'root-device-type)))
    (aws-sdk/generator/shape::to-query-params "RootDeviceVolumeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'root-device-volume-id)))
    (aws-sdk/generator/shape::to-query-params "SecurityGroupIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-group-ids)))
    (aws-sdk/generator/shape::to-query-params "SshHostDsaKeyFingerprint"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssh-host-dsa-key-fingerprint)))
    (aws-sdk/generator/shape::to-query-params "SshHostRsaKeyFingerprint"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssh-host-rsa-key-fingerprint)))
    (aws-sdk/generator/shape::to-query-params "SshKeyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssh-key-name)))
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "SubnetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-id)))
    (aws-sdk/generator/shape::to-query-params "Tenancy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tenancy)))
    (aws-sdk/generator/shape::to-query-params "VirtualizationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'virtualization-type))))))
(common-lisp:progn
 (common-lisp:defstruct (instance-identity (:copier common-lisp:nil))
   (document common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (signature common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'instance-identity 'make-instance-identity))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance-identity))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Document"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'document)))
    (aws-sdk/generator/shape::to-query-params "Signature"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'signature))))))
(common-lisp:progn
 (common-lisp:deftype instances () '(trivial-types:proper-list instance))
 (common-lisp:defun |make-instances|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (instances-count (:copier common-lisp:nil))
   (assigning common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (booting common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (connection-lost common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (deregistering common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (online common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (pending common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (rebooting common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (registered common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (registering common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (requested common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (running-setup common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (setup-failed common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (shutting-down common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (start-failed common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (stopped common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (stopping common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (terminated common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (terminating common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (unassigning common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instances-count 'make-instances-count))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instances-count))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Assigning"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assigning)))
    (aws-sdk/generator/shape::to-query-params "Booting"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'booting)))
    (aws-sdk/generator/shape::to-query-params "ConnectionLost"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'connection-lost)))
    (aws-sdk/generator/shape::to-query-params "Deregistering"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deregistering)))
    (aws-sdk/generator/shape::to-query-params "Online"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'online)))
    (aws-sdk/generator/shape::to-query-params "Pending"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pending)))
    (aws-sdk/generator/shape::to-query-params "Rebooting"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rebooting)))
    (aws-sdk/generator/shape::to-query-params "Registered"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registered)))
    (aws-sdk/generator/shape::to-query-params "Registering"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registering)))
    (aws-sdk/generator/shape::to-query-params "Requested"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'requested)))
    (aws-sdk/generator/shape::to-query-params "RunningSetup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'running-setup)))
    (aws-sdk/generator/shape::to-query-params "SetupFailed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'setup-failed)))
    (aws-sdk/generator/shape::to-query-params "ShuttingDown"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shutting-down)))
    (aws-sdk/generator/shape::to-query-params "StartFailed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-failed)))
    (aws-sdk/generator/shape::to-query-params "Stopped"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stopped)))
    (aws-sdk/generator/shape::to-query-params "Stopping"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stopping)))
    (aws-sdk/generator/shape::to-query-params "Terminated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'terminated)))
    (aws-sdk/generator/shape::to-query-params "Terminating"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'terminating)))
    (aws-sdk/generator/shape::to-query-params "Unassigning"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unassigning))))))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (layer (:copier common-lisp:nil))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (layer-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or layer-type common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (shortname common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or layer-attributes common-lisp:null))
   (cloud-watch-logs-configuration common-lisp:nil :type
    (common-lisp:or cloud-watch-logs-configuration common-lisp:null))
   (custom-instance-profile-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (custom-json common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (custom-security-group-ids common-lisp:nil :type
    (common-lisp:or strings common-lisp:null))
   (default-security-group-names common-lisp:nil :type
    (common-lisp:or strings common-lisp:null))
   (packages common-lisp:nil :type (common-lisp:or strings common-lisp:null))
   (volume-configurations common-lisp:nil :type
    (common-lisp:or volume-configurations common-lisp:null))
   (enable-auto-healing common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (auto-assign-elastic-ips common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (auto-assign-public-ips common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (default-recipes common-lisp:nil :type
    (common-lisp:or recipes common-lisp:null))
   (custom-recipes common-lisp:nil :type
    (common-lisp:or recipes common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (install-updates-on-boot common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (use-ebs-optimized-instances common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (lifecycle-event-configuration common-lisp:nil :type
    (common-lisp:or lifecycle-event-configuration common-lisp:null)))
 (common-lisp:export (common-lisp:list 'layer 'make-layer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape layer))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "LayerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-id)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Shortname"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shortname)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "CloudWatchLogsConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cloud-watch-logs-configuration)))
    (aws-sdk/generator/shape::to-query-params "CustomInstanceProfileArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-instance-profile-arn)))
    (aws-sdk/generator/shape::to-query-params "CustomJson"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-json)))
    (aws-sdk/generator/shape::to-query-params "CustomSecurityGroupIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-security-group-ids)))
    (aws-sdk/generator/shape::to-query-params "DefaultSecurityGroupNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-security-group-names)))
    (aws-sdk/generator/shape::to-query-params "Packages"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'packages)))
    (aws-sdk/generator/shape::to-query-params "VolumeConfigurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-configurations)))
    (aws-sdk/generator/shape::to-query-params "EnableAutoHealing"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enable-auto-healing)))
    (aws-sdk/generator/shape::to-query-params "AutoAssignElasticIps"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-assign-elastic-ips)))
    (aws-sdk/generator/shape::to-query-params "AutoAssignPublicIps"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-assign-public-ips)))
    (aws-sdk/generator/shape::to-query-params "DefaultRecipes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-recipes)))
    (aws-sdk/generator/shape::to-query-params "CustomRecipes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-recipes)))
    (aws-sdk/generator/shape::to-query-params "CreatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "InstallUpdatesOnBoot"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'install-updates-on-boot)))
    (aws-sdk/generator/shape::to-query-params "UseEbsOptimizedInstances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'use-ebs-optimized-instances)))
    (aws-sdk/generator/shape::to-query-params "LifecycleEventConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifecycle-event-configuration))))))
(common-lisp:defstruct
    (layer-attributes
     (:constructor |make-layer-attributes|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype layer-attributes-keys () 'common-lisp:string)
(common-lisp:deftype layer-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype layers () '(trivial-types:proper-list layer))
 (common-lisp:defun |make-layers|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list layer))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (lifecycle-event-configuration (:copier common-lisp:nil))
   (shutdown common-lisp:nil :type
    (common-lisp:or shutdown-event-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lifecycle-event-configuration
                    'make-lifecycle-event-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lifecycle-event-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Shutdown"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shutdown))))))
(common-lisp:progn
 (common-lisp:defstruct (list-tags-request (:copier common-lisp:nil))
   (resource-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":resource-arn is required"))
    :type (common-lisp:or resource-arn common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-request 'make-list-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-tags-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-tags-result (:copier common-lisp:nil))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-result 'make-list-tags-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-tags-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (load-based-auto-scaling-configuration (:copier common-lisp:nil))
   (layer-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (enable common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (up-scaling common-lisp:nil :type
    (common-lisp:or auto-scaling-thresholds common-lisp:null))
   (down-scaling common-lisp:nil :type
    (common-lisp:or auto-scaling-thresholds common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'load-based-auto-scaling-configuration
                    'make-load-based-auto-scaling-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          load-based-auto-scaling-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LayerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-id)))
    (aws-sdk/generator/shape::to-query-params "Enable"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enable)))
    (aws-sdk/generator/shape::to-query-params "UpScaling"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'up-scaling)))
    (aws-sdk/generator/shape::to-query-params "DownScaling"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'down-scaling))))))
(common-lisp:progn
 (common-lisp:deftype load-based-auto-scaling-configurations ()
   '(trivial-types:proper-list load-based-auto-scaling-configuration))
 (common-lisp:defun |make-load-based-auto-scaling-configurations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            load-based-auto-scaling-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype minute () 'common-lisp:integer)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:defstruct
    (parameters
     (:constructor |make-parameters|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (permission (:copier common-lisp:nil))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (iam-user-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (allow-ssh common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (allow-sudo common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (level common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'permission 'make-permission))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape permission))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "IamUserArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-user-arn)))
    (aws-sdk/generator/shape::to-query-params "AllowSsh"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allow-ssh)))
    (aws-sdk/generator/shape::to-query-params "AllowSudo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allow-sudo)))
    (aws-sdk/generator/shape::to-query-params "Level"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'level))))))
(common-lisp:progn
 (common-lisp:deftype permissions () '(trivial-types:proper-list permission))
 (common-lisp:defun |make-permissions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list permission))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (raid-array (:copier common-lisp:nil))
   (raid-array-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (raid-level common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (number-of-disks common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (size common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (device common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (mount-point common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (availability-zone common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (volume-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (iops common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'raid-array 'make-raid-array))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape raid-array))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RaidArrayId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'raid-array-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "RaidLevel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'raid-level)))
    (aws-sdk/generator/shape::to-query-params "NumberOfDisks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'number-of-disks)))
    (aws-sdk/generator/shape::to-query-params "Size"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size)))
    (aws-sdk/generator/shape::to-query-params "Device"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device)))
    (aws-sdk/generator/shape::to-query-params "MountPoint"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mount-point)))
    (aws-sdk/generator/shape::to-query-params "AvailabilityZone"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zone)))
    (aws-sdk/generator/shape::to-query-params "CreatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "VolumeType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-type)))
    (aws-sdk/generator/shape::to-query-params "Iops"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iops))))))
(common-lisp:progn
 (common-lisp:deftype raid-arrays () '(trivial-types:proper-list raid-array))
 (common-lisp:defun |make-raid-arrays|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list raid-array))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (rds-db-instance (:copier common-lisp:nil))
   (rds-db-instance-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (db-instance-identifier common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (db-user common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (db-password common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (region common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (address common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (engine common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (missing-on-rds common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rds-db-instance 'make-rds-db-instance))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape rds-db-instance))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RdsDbInstanceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rds-db-instance-arn)))
    (aws-sdk/generator/shape::to-query-params "DbInstanceIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'db-instance-identifier)))
    (aws-sdk/generator/shape::to-query-params "DbUser"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'db-user)))
    (aws-sdk/generator/shape::to-query-params "DbPassword"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'db-password)))
    (aws-sdk/generator/shape::to-query-params "Region"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'region)))
    (aws-sdk/generator/shape::to-query-params "Address"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'address)))
    (aws-sdk/generator/shape::to-query-params "Engine"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'engine)))
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "MissingOnRds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'missing-on-rds))))))
(common-lisp:progn
 (common-lisp:deftype rds-db-instances ()
   '(trivial-types:proper-list rds-db-instance))
 (common-lisp:defun |make-rds-db-instances|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rds-db-instance))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (reboot-instance-request (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reboot-instance-request 'make-reboot-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          reboot-instance-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id))))))
(common-lisp:progn
 (common-lisp:defstruct (recipes (:copier common-lisp:nil))
   (setup common-lisp:nil :type (common-lisp:or strings common-lisp:null))
   (configure common-lisp:nil :type (common-lisp:or strings common-lisp:null))
   (deploy common-lisp:nil :type (common-lisp:or strings common-lisp:null))
   (undeploy common-lisp:nil :type (common-lisp:or strings common-lisp:null))
   (shutdown common-lisp:nil :type (common-lisp:or strings common-lisp:null)))
 (common-lisp:export (common-lisp:list 'recipes 'make-recipes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape recipes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Setup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'setup)))
    (aws-sdk/generator/shape::to-query-params "Configure"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configure)))
    (aws-sdk/generator/shape::to-query-params "Deploy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deploy)))
    (aws-sdk/generator/shape::to-query-params "Undeploy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'undeploy)))
    (aws-sdk/generator/shape::to-query-params "Shutdown"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shutdown))))))
(common-lisp:progn
 (common-lisp:defstruct
     (register-ecs-cluster-request (:copier common-lisp:nil))
   (ecs-cluster-arn
    (common-lisp:error
     #A((28) common-lisp:base-char . ":ecs-cluster-arn is required"))
    :type (common-lisp:or string common-lisp:null))
   (stack-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":stack-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-ecs-cluster-request
                    'make-register-ecs-cluster-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-ecs-cluster-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EcsClusterArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ecs-cluster-arn)))
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id))))))
(common-lisp:progn
 (common-lisp:defstruct (register-ecs-cluster-result (:copier common-lisp:nil))
   (ecs-cluster-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-ecs-cluster-result
                    'make-register-ecs-cluster-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-ecs-cluster-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EcsClusterArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ecs-cluster-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (register-elastic-ip-request (:copier common-lisp:nil))
   (elastic-ip
    (common-lisp:error
     #A((23) common-lisp:base-char . ":elastic-ip is required"))
    :type (common-lisp:or string common-lisp:null))
   (stack-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":stack-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-elastic-ip-request
                    'make-register-elastic-ip-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-elastic-ip-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ElasticIp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elastic-ip)))
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id))))))
(common-lisp:progn
 (common-lisp:defstruct (register-elastic-ip-result (:copier common-lisp:nil))
   (elastic-ip common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-elastic-ip-result
                    'make-register-elastic-ip-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-elastic-ip-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ElasticIp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elastic-ip))))))
(common-lisp:progn
 (common-lisp:defstruct (register-instance-request (:copier common-lisp:nil))
   (stack-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":stack-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (hostname common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (public-ip common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (private-ip common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (rsa-public-key common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (rsa-public-key-fingerprint common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (instance-identity common-lisp:nil :type
    (common-lisp:or instance-identity common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-instance-request
                    'make-register-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-instance-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "Hostname"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hostname)))
    (aws-sdk/generator/shape::to-query-params "PublicIp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'public-ip)))
    (aws-sdk/generator/shape::to-query-params "PrivateIp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'private-ip)))
    (aws-sdk/generator/shape::to-query-params "RsaPublicKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rsa-public-key)))
    (aws-sdk/generator/shape::to-query-params "RsaPublicKeyFingerprint"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rsa-public-key-fingerprint)))
    (aws-sdk/generator/shape::to-query-params "InstanceIdentity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-identity))))))
(common-lisp:progn
 (common-lisp:defstruct (register-instance-result (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-instance-result 'make-register-instance-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-instance-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (register-rds-db-instance-request (:copier common-lisp:nil))
   (stack-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":stack-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (rds-db-instance-arn
    (common-lisp:error
     #A((32) common-lisp:base-char . ":rds-db-instance-arn is required"))
    :type (common-lisp:or string common-lisp:null))
   (db-user
    (common-lisp:error #A((20) common-lisp:base-char . ":db-user is required"))
    :type (common-lisp:or string common-lisp:null))
   (db-password
    (common-lisp:error
     #A((24) common-lisp:base-char . ":db-password is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-rds-db-instance-request
                    'make-register-rds-db-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-rds-db-instance-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "RdsDbInstanceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rds-db-instance-arn)))
    (aws-sdk/generator/shape::to-query-params "DbUser"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'db-user)))
    (aws-sdk/generator/shape::to-query-params "DbPassword"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'db-password))))))
(common-lisp:progn
 (common-lisp:defstruct (register-volume-request (:copier common-lisp:nil))
   (ec2volume-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (stack-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":stack-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-volume-request 'make-register-volume-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-volume-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Ec2VolumeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2volume-id)))
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id))))))
(common-lisp:progn
 (common-lisp:defstruct (register-volume-result (:copier common-lisp:nil))
   (volume-id common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-volume-result 'make-register-volume-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-volume-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "VolumeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-id))))))
(common-lisp:progn
 (common-lisp:defstruct (reported-os (:copier common-lisp:nil))
   (family common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reported-os 'make-reported-os))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape reported-os))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Family"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'family)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (resource-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'make-resource-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype root-device-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (self-user-profile (:copier common-lisp:nil))
   (iam-user-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ssh-username common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (ssh-public-key common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'self-user-profile 'make-self-user-profile))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape self-user-profile))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IamUserArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-user-arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "SshUsername"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssh-username)))
    (aws-sdk/generator/shape::to-query-params "SshPublicKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssh-public-key))))))
(common-lisp:progn
 (common-lisp:defstruct (service-error (:copier common-lisp:nil))
   (service-error-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'service-error 'make-service-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape service-error))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ServiceErrorId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-error-id)))
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "CreatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at))))))
(common-lisp:progn
 (common-lisp:deftype service-errors ()
   '(trivial-types:proper-list service-error))
 (common-lisp:defun |make-service-errors|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list service-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (set-load-based-auto-scaling-request (:copier common-lisp:nil))
   (layer-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":layer-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (enable common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (up-scaling common-lisp:nil :type
    (common-lisp:or auto-scaling-thresholds common-lisp:null))
   (down-scaling common-lisp:nil :type
    (common-lisp:or auto-scaling-thresholds common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-load-based-auto-scaling-request
                    'make-set-load-based-auto-scaling-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-load-based-auto-scaling-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LayerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-id)))
    (aws-sdk/generator/shape::to-query-params "Enable"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enable)))
    (aws-sdk/generator/shape::to-query-params "UpScaling"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'up-scaling)))
    (aws-sdk/generator/shape::to-query-params "DownScaling"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'down-scaling))))))
(common-lisp:progn
 (common-lisp:defstruct (set-permission-request (:copier common-lisp:nil))
   (stack-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":stack-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (iam-user-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":iam-user-arn is required"))
    :type (common-lisp:or string common-lisp:null))
   (allow-ssh common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (allow-sudo common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (level common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-permission-request 'make-set-permission-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-permission-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "IamUserArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-user-arn)))
    (aws-sdk/generator/shape::to-query-params "AllowSsh"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allow-ssh)))
    (aws-sdk/generator/shape::to-query-params "AllowSudo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allow-sudo)))
    (aws-sdk/generator/shape::to-query-params "Level"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'level))))))
(common-lisp:progn
 (common-lisp:defstruct
     (set-time-based-auto-scaling-request (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (auto-scaling-schedule common-lisp:nil :type
    (common-lisp:or weekly-auto-scaling-schedule common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-time-based-auto-scaling-request
                    'make-set-time-based-auto-scaling-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-time-based-auto-scaling-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingSchedule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-schedule))))))
(common-lisp:progn
 (common-lisp:defstruct
     (shutdown-event-configuration (:copier common-lisp:nil))
   (execution-timeout common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (delay-until-elb-connections-drained common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'shutdown-event-configuration
                    'make-shutdown-event-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          shutdown-event-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ExecutionTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'execution-timeout)))
    (aws-sdk/generator/shape::to-query-params "DelayUntilElbConnectionsDrained"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delay-until-elb-connections-drained))))))
(common-lisp:progn
 (common-lisp:defstruct (source (:copier common-lisp:nil))
   (type common-lisp:nil :type (common-lisp:or source-type common-lisp:null))
   (url common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (username common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (password common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ssh-key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (revision common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'source 'make-source))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape source))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Url"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'url)))
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "Password"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'password)))
    (aws-sdk/generator/shape::to-query-params "SshKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssh-key)))
    (aws-sdk/generator/shape::to-query-params "Revision"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'revision))))))
(common-lisp:deftype source-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (ssl-configuration (:copier common-lisp:nil))
   (certificate
    (common-lisp:error
     #A((24) common-lisp:base-char . ":certificate is required"))
    :type (common-lisp:or string common-lisp:null))
   (private-key
    (common-lisp:error
     #A((24) common-lisp:base-char . ":private-key is required"))
    :type (common-lisp:or string common-lisp:null))
   (chain common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ssl-configuration 'make-ssl-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape ssl-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Certificate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'certificate)))
    (aws-sdk/generator/shape::to-query-params "PrivateKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'private-key)))
    (aws-sdk/generator/shape::to-query-params "Chain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'chain))))))
(common-lisp:progn
 (common-lisp:defstruct (stack (:copier common-lisp:nil))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (region common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (vpc-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or stack-attributes common-lisp:null))
   (service-role-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (default-instance-profile-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (default-os common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (hostname-theme common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (default-availability-zone common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (default-subnet-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (custom-json common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (configuration-manager common-lisp:nil :type
    (common-lisp:or stack-configuration-manager common-lisp:null))
   (chef-configuration common-lisp:nil :type
    (common-lisp:or chef-configuration common-lisp:null))
   (use-custom-cookbooks common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (use-opsworks-security-groups common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (custom-cookbooks-source common-lisp:nil :type
    (common-lisp:or source common-lisp:null))
   (default-ssh-key-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (default-root-device-type common-lisp:nil :type
    (common-lisp:or root-device-type common-lisp:null))
   (agent-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stack 'make-stack))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape stack))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "Region"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'region)))
    (aws-sdk/generator/shape::to-query-params "VpcId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vpc-id)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "ServiceRoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role-arn)))
    (aws-sdk/generator/shape::to-query-params "DefaultInstanceProfileArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-instance-profile-arn)))
    (aws-sdk/generator/shape::to-query-params "DefaultOs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-os)))
    (aws-sdk/generator/shape::to-query-params "HostnameTheme"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hostname-theme)))
    (aws-sdk/generator/shape::to-query-params "DefaultAvailabilityZone"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-availability-zone)))
    (aws-sdk/generator/shape::to-query-params "DefaultSubnetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-subnet-id)))
    (aws-sdk/generator/shape::to-query-params "CustomJson"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-json)))
    (aws-sdk/generator/shape::to-query-params "ConfigurationManager"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-manager)))
    (aws-sdk/generator/shape::to-query-params "ChefConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'chef-configuration)))
    (aws-sdk/generator/shape::to-query-params "UseCustomCookbooks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'use-custom-cookbooks)))
    (aws-sdk/generator/shape::to-query-params "UseOpsworksSecurityGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'use-opsworks-security-groups)))
    (aws-sdk/generator/shape::to-query-params "CustomCookbooksSource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-cookbooks-source)))
    (aws-sdk/generator/shape::to-query-params "DefaultSshKeyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-ssh-key-name)))
    (aws-sdk/generator/shape::to-query-params "CreatedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at)))
    (aws-sdk/generator/shape::to-query-params "DefaultRootDeviceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-root-device-type)))
    (aws-sdk/generator/shape::to-query-params "AgentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-version))))))
(common-lisp:defstruct
    (stack-attributes
     (:constructor |make-stack-attributes|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype stack-attributes-keys () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (stack-configuration-manager (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stack-configuration-manager
                    'make-stack-configuration-manager))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stack-configuration-manager))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:progn
 (common-lisp:defstruct (stack-summary (:copier common-lisp:nil))
   (stack-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (layers-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (apps-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (instances-count common-lisp:nil :type
    (common-lisp:or instances-count common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stack-summary 'make-stack-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape stack-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "LayersCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layers-count)))
    (aws-sdk/generator/shape::to-query-params "AppsCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'apps-count)))
    (aws-sdk/generator/shape::to-query-params "InstancesCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances-count))))))
(common-lisp:progn
 (common-lisp:deftype stacks () '(trivial-types:proper-list stack))
 (common-lisp:defun |make-stacks|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stack))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (start-instance-request (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-instance-request 'make-start-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-instance-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id))))))
(common-lisp:progn
 (common-lisp:defstruct (start-stack-request (:copier common-lisp:nil))
   (stack-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":stack-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-stack-request 'make-start-stack-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape start-stack-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id))))))
(common-lisp:progn
 (common-lisp:defstruct (stop-instance-request (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-instance-request 'make-stop-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-instance-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id))))))
(common-lisp:progn
 (common-lisp:defstruct (stop-stack-request (:copier common-lisp:nil))
   (stack-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":stack-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-stack-request 'make-stop-stack-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape stop-stack-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id))))))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype strings () '(trivial-types:proper-list string))
 (common-lisp:defun |make-strings|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype switch () 'common-lisp:string)
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-keys () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-keys|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (tag-resource-request (:copier common-lisp:nil))
   (resource-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":resource-arn is required"))
    :type (common-lisp:or resource-arn common-lisp:null))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:defstruct
    (tags
     (:constructor |make-tags|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (temporary-credential (:copier common-lisp:nil))
   (username common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (password common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (valid-for-in-minutes common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (instance-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'temporary-credential 'make-temporary-credential))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape temporary-credential))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Username"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'username)))
    (aws-sdk/generator/shape::to-query-params "Password"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'password)))
    (aws-sdk/generator/shape::to-query-params "ValidForInMinutes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'valid-for-in-minutes)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (time-based-auto-scaling-configuration (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (auto-scaling-schedule common-lisp:nil :type
    (common-lisp:or weekly-auto-scaling-schedule common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'time-based-auto-scaling-configuration
                    'make-time-based-auto-scaling-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          time-based-auto-scaling-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingSchedule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-schedule))))))
(common-lisp:progn
 (common-lisp:deftype time-based-auto-scaling-configurations ()
   '(trivial-types:proper-list time-based-auto-scaling-configuration))
 (common-lisp:defun |make-time-based-auto-scaling-configurations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            time-based-auto-scaling-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (unassign-instance-request (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unassign-instance-request
                    'make-unassign-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unassign-instance-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id))))))
(common-lisp:progn
 (common-lisp:defstruct (unassign-volume-request (:copier common-lisp:nil))
   (volume-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":volume-id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unassign-volume-request 'make-unassign-volume-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unassign-volume-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "VolumeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-id))))))
(common-lisp:progn
 (common-lisp:defstruct (untag-resource-request (:copier common-lisp:nil))
   (resource-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":resource-arn is required"))
    :type (common-lisp:or resource-arn common-lisp:null))
   (tag-keys
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tag-keys is required"))
    :type (common-lisp:or tag-keys common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          untag-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "TagKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-keys))))))
(common-lisp:progn
 (common-lisp:defstruct (update-app-request (:copier common-lisp:nil))
   (app-id
    (common-lisp:error #A((19) common-lisp:base-char . ":app-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (data-sources common-lisp:nil :type
    (common-lisp:or data-sources common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or app-type common-lisp:null))
   (app-source common-lisp:nil :type (common-lisp:or source common-lisp:null))
   (domains common-lisp:nil :type (common-lisp:or strings common-lisp:null))
   (enable-ssl common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (ssl-configuration common-lisp:nil :type
    (common-lisp:or ssl-configuration common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or app-attributes common-lisp:null))
   (environment common-lisp:nil :type
    (common-lisp:or environment-variables common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-app-request 'make-update-app-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-app-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AppId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'app-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "DataSources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-sources)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "AppSource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'app-source)))
    (aws-sdk/generator/shape::to-query-params "Domains"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domains)))
    (aws-sdk/generator/shape::to-query-params "EnableSsl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enable-ssl)))
    (aws-sdk/generator/shape::to-query-params "SslConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssl-configuration)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "Environment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'environment))))))
(common-lisp:progn
 (common-lisp:defstruct (update-elastic-ip-request (:copier common-lisp:nil))
   (elastic-ip
    (common-lisp:error
     #A((23) common-lisp:base-char . ":elastic-ip is required"))
    :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-elastic-ip-request
                    'make-update-elastic-ip-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-elastic-ip-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ElasticIp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'elastic-ip)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (update-instance-request (:copier common-lisp:nil))
   (instance-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":instance-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (layer-ids common-lisp:nil :type (common-lisp:or strings common-lisp:null))
   (instance-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (auto-scaling-type common-lisp:nil :type
    (common-lisp:or auto-scaling-type common-lisp:null))
   (hostname common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (os common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ami-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ssh-key-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (architecture common-lisp:nil :type
    (common-lisp:or architecture common-lisp:null))
   (install-updates-on-boot common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (ebs-optimized common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (agent-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-instance-request 'make-update-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-instance-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "LayerIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-ids)))
    (aws-sdk/generator/shape::to-query-params "InstanceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-type)))
    (aws-sdk/generator/shape::to-query-params "AutoScalingType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-scaling-type)))
    (aws-sdk/generator/shape::to-query-params "Hostname"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hostname)))
    (aws-sdk/generator/shape::to-query-params "Os"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'os)))
    (aws-sdk/generator/shape::to-query-params "AmiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ami-id)))
    (aws-sdk/generator/shape::to-query-params "SshKeyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssh-key-name)))
    (aws-sdk/generator/shape::to-query-params "Architecture"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'architecture)))
    (aws-sdk/generator/shape::to-query-params "InstallUpdatesOnBoot"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'install-updates-on-boot)))
    (aws-sdk/generator/shape::to-query-params "EbsOptimized"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ebs-optimized)))
    (aws-sdk/generator/shape::to-query-params "AgentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-version))))))
(common-lisp:progn
 (common-lisp:defstruct (update-layer-request (:copier common-lisp:nil))
   (layer-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":layer-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (shortname common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or layer-attributes common-lisp:null))
   (cloud-watch-logs-configuration common-lisp:nil :type
    (common-lisp:or cloud-watch-logs-configuration common-lisp:null))
   (custom-instance-profile-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (custom-json common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (custom-security-group-ids common-lisp:nil :type
    (common-lisp:or strings common-lisp:null))
   (packages common-lisp:nil :type (common-lisp:or strings common-lisp:null))
   (volume-configurations common-lisp:nil :type
    (common-lisp:or volume-configurations common-lisp:null))
   (enable-auto-healing common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (auto-assign-elastic-ips common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (auto-assign-public-ips common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (custom-recipes common-lisp:nil :type
    (common-lisp:or recipes common-lisp:null))
   (install-updates-on-boot common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (use-ebs-optimized-instances common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (lifecycle-event-configuration common-lisp:nil :type
    (common-lisp:or lifecycle-event-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-layer-request 'make-update-layer-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-layer-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LayerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Shortname"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shortname)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "CloudWatchLogsConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cloud-watch-logs-configuration)))
    (aws-sdk/generator/shape::to-query-params "CustomInstanceProfileArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-instance-profile-arn)))
    (aws-sdk/generator/shape::to-query-params "CustomJson"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-json)))
    (aws-sdk/generator/shape::to-query-params "CustomSecurityGroupIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-security-group-ids)))
    (aws-sdk/generator/shape::to-query-params "Packages"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'packages)))
    (aws-sdk/generator/shape::to-query-params "VolumeConfigurations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-configurations)))
    (aws-sdk/generator/shape::to-query-params "EnableAutoHealing"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enable-auto-healing)))
    (aws-sdk/generator/shape::to-query-params "AutoAssignElasticIps"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-assign-elastic-ips)))
    (aws-sdk/generator/shape::to-query-params "AutoAssignPublicIps"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-assign-public-ips)))
    (aws-sdk/generator/shape::to-query-params "CustomRecipes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-recipes)))
    (aws-sdk/generator/shape::to-query-params "InstallUpdatesOnBoot"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'install-updates-on-boot)))
    (aws-sdk/generator/shape::to-query-params "UseEbsOptimizedInstances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'use-ebs-optimized-instances)))
    (aws-sdk/generator/shape::to-query-params "LifecycleEventConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifecycle-event-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-my-user-profile-request (:copier common-lisp:nil))
   (ssh-public-key common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-my-user-profile-request
                    'make-update-my-user-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-my-user-profile-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SshPublicKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssh-public-key))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-rds-db-instance-request (:copier common-lisp:nil))
   (rds-db-instance-arn
    (common-lisp:error
     #A((32) common-lisp:base-char . ":rds-db-instance-arn is required"))
    :type (common-lisp:or string common-lisp:null))
   (db-user common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (db-password common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-rds-db-instance-request
                    'make-update-rds-db-instance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-rds-db-instance-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RdsDbInstanceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rds-db-instance-arn)))
    (aws-sdk/generator/shape::to-query-params "DbUser"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'db-user)))
    (aws-sdk/generator/shape::to-query-params "DbPassword"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'db-password))))))
(common-lisp:progn
 (common-lisp:defstruct (update-stack-request (:copier common-lisp:nil))
   (stack-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":stack-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or stack-attributes common-lisp:null))
   (service-role-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (default-instance-profile-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (default-os common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (hostname-theme common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (default-availability-zone common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (default-subnet-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (custom-json common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (configuration-manager common-lisp:nil :type
    (common-lisp:or stack-configuration-manager common-lisp:null))
   (chef-configuration common-lisp:nil :type
    (common-lisp:or chef-configuration common-lisp:null))
   (use-custom-cookbooks common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (custom-cookbooks-source common-lisp:nil :type
    (common-lisp:or source common-lisp:null))
   (default-ssh-key-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (default-root-device-type common-lisp:nil :type
    (common-lisp:or root-device-type common-lisp:null))
   (use-opsworks-security-groups common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (agent-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-stack-request 'make-update-stack-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-stack-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StackId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stack-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "ServiceRoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'service-role-arn)))
    (aws-sdk/generator/shape::to-query-params "DefaultInstanceProfileArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-instance-profile-arn)))
    (aws-sdk/generator/shape::to-query-params "DefaultOs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-os)))
    (aws-sdk/generator/shape::to-query-params "HostnameTheme"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hostname-theme)))
    (aws-sdk/generator/shape::to-query-params "DefaultAvailabilityZone"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-availability-zone)))
    (aws-sdk/generator/shape::to-query-params "DefaultSubnetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-subnet-id)))
    (aws-sdk/generator/shape::to-query-params "CustomJson"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-json)))
    (aws-sdk/generator/shape::to-query-params "ConfigurationManager"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-manager)))
    (aws-sdk/generator/shape::to-query-params "ChefConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'chef-configuration)))
    (aws-sdk/generator/shape::to-query-params "UseCustomCookbooks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'use-custom-cookbooks)))
    (aws-sdk/generator/shape::to-query-params "CustomCookbooksSource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-cookbooks-source)))
    (aws-sdk/generator/shape::to-query-params "DefaultSshKeyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-ssh-key-name)))
    (aws-sdk/generator/shape::to-query-params "DefaultRootDeviceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-root-device-type)))
    (aws-sdk/generator/shape::to-query-params "UseOpsworksSecurityGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'use-opsworks-security-groups)))
    (aws-sdk/generator/shape::to-query-params "AgentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'agent-version))))))
(common-lisp:progn
 (common-lisp:defstruct (update-user-profile-request (:copier common-lisp:nil))
   (iam-user-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":iam-user-arn is required"))
    :type (common-lisp:or string common-lisp:null))
   (ssh-username common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (ssh-public-key common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (allow-self-management common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-user-profile-request
                    'make-update-user-profile-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-user-profile-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IamUserArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-user-arn)))
    (aws-sdk/generator/shape::to-query-params "SshUsername"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssh-username)))
    (aws-sdk/generator/shape::to-query-params "SshPublicKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssh-public-key)))
    (aws-sdk/generator/shape::to-query-params "AllowSelfManagement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allow-self-management))))))
(common-lisp:progn
 (common-lisp:defstruct (update-volume-request (:copier common-lisp:nil))
   (volume-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":volume-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (mount-point common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-volume-request 'make-update-volume-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-volume-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "VolumeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "MountPoint"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mount-point))))))
(common-lisp:progn
 (common-lisp:defstruct (user-profile (:copier common-lisp:nil))
   (iam-user-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ssh-username common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (ssh-public-key common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (allow-self-management common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'user-profile 'make-user-profile))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape user-profile))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IamUserArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-user-arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "SshUsername"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssh-username)))
    (aws-sdk/generator/shape::to-query-params "SshPublicKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ssh-public-key)))
    (aws-sdk/generator/shape::to-query-params "AllowSelfManagement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allow-self-management))))))
(common-lisp:progn
 (common-lisp:deftype user-profiles ()
   '(trivial-types:proper-list user-profile))
 (common-lisp:defun |make-user-profiles|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list user-profile))
   aws-sdk/generator/shape::members))
(common-lisp:deftype valid-for-in-minutes () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (validation-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'make-validation-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape validation-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype virtualization-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (volume (:copier common-lisp:nil))
   (volume-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (ec2volume-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (raid-array-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (instance-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (size common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (device common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (mount-point common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (region common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (availability-zone common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (volume-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (iops common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'volume 'make-volume))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape volume))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "VolumeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-id)))
    (aws-sdk/generator/shape::to-query-params "Ec2VolumeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ec2volume-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "RaidArrayId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'raid-array-id)))
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "Size"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size)))
    (aws-sdk/generator/shape::to-query-params "Device"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device)))
    (aws-sdk/generator/shape::to-query-params "MountPoint"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mount-point)))
    (aws-sdk/generator/shape::to-query-params "Region"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'region)))
    (aws-sdk/generator/shape::to-query-params "AvailabilityZone"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zone)))
    (aws-sdk/generator/shape::to-query-params "VolumeType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-type)))
    (aws-sdk/generator/shape::to-query-params "Iops"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iops))))))
(common-lisp:progn
 (common-lisp:defstruct (volume-configuration (:copier common-lisp:nil))
   (mount-point
    (common-lisp:error
     #A((24) common-lisp:base-char . ":mount-point is required"))
    :type (common-lisp:or string common-lisp:null))
   (raid-level common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (number-of-disks
    (common-lisp:error
     #A((28) common-lisp:base-char . ":number-of-disks is required"))
    :type (common-lisp:or integer common-lisp:null))
   (size
    (common-lisp:error #A((17) common-lisp:base-char . ":size is required"))
    :type (common-lisp:or integer common-lisp:null))
   (volume-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (iops common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'volume-configuration 'make-volume-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape volume-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MountPoint"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mount-point)))
    (aws-sdk/generator/shape::to-query-params "RaidLevel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'raid-level)))
    (aws-sdk/generator/shape::to-query-params "NumberOfDisks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'number-of-disks)))
    (aws-sdk/generator/shape::to-query-params "Size"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size)))
    (aws-sdk/generator/shape::to-query-params "VolumeType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-type)))
    (aws-sdk/generator/shape::to-query-params "Iops"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iops))))))
(common-lisp:progn
 (common-lisp:deftype volume-configurations ()
   '(trivial-types:proper-list volume-configuration))
 (common-lisp:defun |make-volume-configurations|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list volume-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype volume-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype volumes () '(trivial-types:proper-list volume))
 (common-lisp:defun |make-volumes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list volume))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (weekly-auto-scaling-schedule (:copier common-lisp:nil))
   (monday common-lisp:nil :type
    (common-lisp:or daily-auto-scaling-schedule common-lisp:null))
   (tuesday common-lisp:nil :type
    (common-lisp:or daily-auto-scaling-schedule common-lisp:null))
   (wednesday common-lisp:nil :type
    (common-lisp:or daily-auto-scaling-schedule common-lisp:null))
   (thursday common-lisp:nil :type
    (common-lisp:or daily-auto-scaling-schedule common-lisp:null))
   (friday common-lisp:nil :type
    (common-lisp:or daily-auto-scaling-schedule common-lisp:null))
   (saturday common-lisp:nil :type
    (common-lisp:or daily-auto-scaling-schedule common-lisp:null))
   (sunday common-lisp:nil :type
    (common-lisp:or daily-auto-scaling-schedule common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'weekly-auto-scaling-schedule
                    'make-weekly-auto-scaling-schedule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          weekly-auto-scaling-schedule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Monday"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'monday)))
    (aws-sdk/generator/shape::to-query-params "Tuesday"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tuesday)))
    (aws-sdk/generator/shape::to-query-params "Wednesday"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'wednesday)))
    (aws-sdk/generator/shape::to-query-params "Thursday"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'thursday)))
    (aws-sdk/generator/shape::to-query-params "Friday"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'friday)))
    (aws-sdk/generator/shape::to-query-params "Saturday"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'saturday)))
    (aws-sdk/generator/shape::to-query-params "Sunday"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sunday))))))
(common-lisp:progn
 (common-lisp:defun assign-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id layer-ids)
   (common-lisp:declare (common-lisp:ignorable instance-id layer-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-assign-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AssignInstance")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'assign-instance))
(common-lisp:progn
 (common-lisp:defun assign-volume
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-id instance-id)
   (common-lisp:declare (common-lisp:ignorable volume-id instance-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-assign-volume-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AssignVolume")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'assign-volume))
(common-lisp:progn
 (common-lisp:defun associate-elastic-ip
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key elastic-ip instance-id)
   (common-lisp:declare (common-lisp:ignorable elastic-ip instance-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-elastic-ip-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AssociateElasticIp")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'associate-elastic-ip))
(common-lisp:progn
 (common-lisp:defun attach-elastic-load-balancer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key elastic-load-balancer-name layer-id)
   (common-lisp:declare
    (common-lisp:ignorable elastic-load-balancer-name layer-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-attach-elastic-load-balancer-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AttachElasticLoadBalancer")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'attach-elastic-load-balancer))
(common-lisp:progn
 (common-lisp:defun clone-stack
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source-stack-id name region vpc-id
                     attributes service-role-arn default-instance-profile-arn
                     default-os hostname-theme default-availability-zone
                     default-subnet-id custom-json configuration-manager
                     chef-configuration use-custom-cookbooks
                     use-opsworks-security-groups custom-cookbooks-source
                     default-ssh-key-name clone-permissions clone-app-ids
                     default-root-device-type agent-version)
   (common-lisp:declare
    (common-lisp:ignorable source-stack-id name region vpc-id attributes
     service-role-arn default-instance-profile-arn default-os hostname-theme
     default-availability-zone default-subnet-id custom-json
     configuration-manager chef-configuration use-custom-cookbooks
     use-opsworks-security-groups custom-cookbooks-source default-ssh-key-name
     clone-permissions clone-app-ids default-root-device-type agent-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-clone-stack-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CloneStack")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CloneStackResult" common-lisp:nil)))
 (common-lisp:export 'clone-stack))
(common-lisp:progn
 (common-lisp:defun create-app
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-id shortname name description
                     data-sources type app-source domains enable-ssl
                     ssl-configuration attributes environment)
   (common-lisp:declare
    (common-lisp:ignorable stack-id shortname name description data-sources
     type app-source domains enable-ssl ssl-configuration attributes
     environment))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-app-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateApp")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateAppResult" common-lisp:nil)))
 (common-lisp:export 'create-app))
(common-lisp:progn
 (common-lisp:defun create-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-id app-id instance-ids layer-ids
                     command comment custom-json)
   (common-lisp:declare
    (common-lisp:ignorable stack-id app-id instance-ids layer-ids command
     comment custom-json))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateDeployment")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateDeploymentResult" common-lisp:nil)))
 (common-lisp:export 'create-deployment))
(common-lisp:progn
 (common-lisp:defun create-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-id layer-ids instance-type
                     auto-scaling-type hostname os ami-id ssh-key-name
                     availability-zone virtualization-type subnet-id
                     architecture root-device-type block-device-mappings
                     install-updates-on-boot ebs-optimized agent-version
                     tenancy)
   (common-lisp:declare
    (common-lisp:ignorable stack-id layer-ids instance-type auto-scaling-type
     hostname os ami-id ssh-key-name availability-zone virtualization-type
     subnet-id architecture root-device-type block-device-mappings
     install-updates-on-boot ebs-optimized agent-version tenancy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateInstance")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateInstanceResult" common-lisp:nil)))
 (common-lisp:export 'create-instance))
(common-lisp:progn
 (common-lisp:defun create-layer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-id type name shortname attributes
                     cloud-watch-logs-configuration custom-instance-profile-arn
                     custom-json custom-security-group-ids packages
                     volume-configurations enable-auto-healing
                     auto-assign-elastic-ips auto-assign-public-ips
                     custom-recipes install-updates-on-boot
                     use-ebs-optimized-instances lifecycle-event-configuration)
   (common-lisp:declare
    (common-lisp:ignorable stack-id type name shortname attributes
     cloud-watch-logs-configuration custom-instance-profile-arn custom-json
     custom-security-group-ids packages volume-configurations
     enable-auto-healing auto-assign-elastic-ips auto-assign-public-ips
     custom-recipes install-updates-on-boot use-ebs-optimized-instances
     lifecycle-event-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-layer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateLayer")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateLayerResult" common-lisp:nil)))
 (common-lisp:export 'create-layer))
(common-lisp:progn
 (common-lisp:defun create-stack
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name region vpc-id attributes
                     service-role-arn default-instance-profile-arn default-os
                     hostname-theme default-availability-zone default-subnet-id
                     custom-json configuration-manager chef-configuration
                     use-custom-cookbooks use-opsworks-security-groups
                     custom-cookbooks-source default-ssh-key-name
                     default-root-device-type agent-version)
   (common-lisp:declare
    (common-lisp:ignorable name region vpc-id attributes service-role-arn
     default-instance-profile-arn default-os hostname-theme
     default-availability-zone default-subnet-id custom-json
     configuration-manager chef-configuration use-custom-cookbooks
     use-opsworks-security-groups custom-cookbooks-source default-ssh-key-name
     default-root-device-type agent-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-stack-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateStack")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateStackResult" common-lisp:nil)))
 (common-lisp:export 'create-stack))
(common-lisp:progn
 (common-lisp:defun create-user-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key iam-user-arn ssh-username ssh-public-key
                     allow-self-management)
   (common-lisp:declare
    (common-lisp:ignorable iam-user-arn ssh-username ssh-public-key
     allow-self-management))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-user-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateUserProfile")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateUserProfileResult" common-lisp:nil)))
 (common-lisp:export 'create-user-profile))
(common-lisp:progn
 (common-lisp:defun delete-app
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id)
   (common-lisp:declare (common-lisp:ignorable app-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-app-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteApp")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-app))
(common-lisp:progn
 (common-lisp:defun delete-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id delete-elastic-ip
                     delete-volumes)
   (common-lisp:declare
    (common-lisp:ignorable instance-id delete-elastic-ip delete-volumes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteInstance")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-instance))
(common-lisp:progn
 (common-lisp:defun delete-layer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key layer-id)
   (common-lisp:declare (common-lisp:ignorable layer-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-layer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteLayer")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-layer))
(common-lisp:progn
 (common-lisp:defun delete-stack
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-id)
   (common-lisp:declare (common-lisp:ignorable stack-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-stack-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteStack")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-stack))
(common-lisp:progn
 (common-lisp:defun delete-user-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key iam-user-arn)
   (common-lisp:declare (common-lisp:ignorable iam-user-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-user-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteUserProfile")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-user-profile))
(common-lisp:progn
 (common-lisp:defun deregister-ecs-cluster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ecs-cluster-arn)
   (common-lisp:declare (common-lisp:ignorable ecs-cluster-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-deregister-ecs-cluster-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeregisterEcsCluster")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'deregister-ecs-cluster))
(common-lisp:progn
 (common-lisp:defun deregister-elastic-ip
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key elastic-ip)
   (common-lisp:declare (common-lisp:ignorable elastic-ip))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-deregister-elastic-ip-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeregisterElasticIp")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'deregister-elastic-ip))
(common-lisp:progn
 (common-lisp:defun deregister-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id)
   (common-lisp:declare (common-lisp:ignorable instance-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-deregister-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeregisterInstance")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'deregister-instance))
(common-lisp:progn
 (common-lisp:defun deregister-rds-db-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rds-db-instance-arn)
   (common-lisp:declare (common-lisp:ignorable rds-db-instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-deregister-rds-db-instance-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeregisterRdsDbInstance")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'deregister-rds-db-instance))
(common-lisp:progn
 (common-lisp:defun deregister-volume
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-id)
   (common-lisp:declare (common-lisp:ignorable volume-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-deregister-volume-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeregisterVolume")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'deregister-volume))
(common-lisp:progn
 (common-lisp:defun describe-agent-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-id configuration-manager)
   (common-lisp:declare (common-lisp:ignorable stack-id configuration-manager))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-agent-versions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeAgentVersions")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeAgentVersionsResult" common-lisp:nil)))
 (common-lisp:export 'describe-agent-versions))
(common-lisp:progn
 (common-lisp:defun describe-apps
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-id app-ids)
   (common-lisp:declare (common-lisp:ignorable stack-id app-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-apps-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeApps")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeAppsResult" common-lisp:nil)))
 (common-lisp:export 'describe-apps))
(common-lisp:progn
 (common-lisp:defun describe-commands
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key deployment-id instance-id command-ids)
   (common-lisp:declare
    (common-lisp:ignorable deployment-id instance-id command-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-commands-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeCommands")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeCommandsResult" common-lisp:nil)))
 (common-lisp:export 'describe-commands))
(common-lisp:progn
 (common-lisp:defun describe-deployments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-id app-id deployment-ids)
   (common-lisp:declare (common-lisp:ignorable stack-id app-id deployment-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-deployments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeDeployments")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeDeploymentsResult" common-lisp:nil)))
 (common-lisp:export 'describe-deployments))
(common-lisp:progn
 (common-lisp:defun describe-ecs-clusters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ecs-cluster-arns stack-id next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable ecs-cluster-arns stack-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-ecs-clusters-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeEcsClusters")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeEcsClustersResult" common-lisp:nil)))
 (common-lisp:export 'describe-ecs-clusters))
(common-lisp:progn
 (common-lisp:defun describe-elastic-ips
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id stack-id ips)
   (common-lisp:declare (common-lisp:ignorable instance-id stack-id ips))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-elastic-ips-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeElasticIps")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeElasticIpsResult" common-lisp:nil)))
 (common-lisp:export 'describe-elastic-ips))
(common-lisp:progn
 (common-lisp:defun describe-elastic-load-balancers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-id layer-ids)
   (common-lisp:declare (common-lisp:ignorable stack-id layer-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-elastic-load-balancers-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeElasticLoadBalancers")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeElasticLoadBalancersResult" common-lisp:nil)))
 (common-lisp:export 'describe-elastic-load-balancers))
(common-lisp:progn
 (common-lisp:defun describe-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-id layer-id instance-ids)
   (common-lisp:declare (common-lisp:ignorable stack-id layer-id instance-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-instances-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeInstances")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeInstancesResult" common-lisp:nil)))
 (common-lisp:export 'describe-instances))
(common-lisp:progn
 (common-lisp:defun describe-layers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-id layer-ids)
   (common-lisp:declare (common-lisp:ignorable stack-id layer-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-layers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeLayers")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeLayersResult" common-lisp:nil)))
 (common-lisp:export 'describe-layers))
(common-lisp:progn
 (common-lisp:defun describe-load-based-auto-scaling
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key layer-ids)
   (common-lisp:declare (common-lisp:ignorable layer-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-load-based-auto-scaling-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeLoadBasedAutoScaling")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeLoadBasedAutoScalingResult" common-lisp:nil)))
 (common-lisp:export 'describe-load-based-auto-scaling))
(common-lisp:progn
 (common-lisp:defun describe-my-user-profile ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((8) common-lisp:base-char . "opsworks") :method
                             :post :params
                             (common-lisp:cons "Action"
                                               "DescribeMyUserProfile"))
    "DescribeMyUserProfileResult" common-lisp:nil))
 (common-lisp:export 'describe-my-user-profile))
(common-lisp:progn
 (common-lisp:defun describe-permissions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key iam-user-arn stack-id)
   (common-lisp:declare (common-lisp:ignorable iam-user-arn stack-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-permissions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribePermissions")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribePermissionsResult" common-lisp:nil)))
 (common-lisp:export 'describe-permissions))
(common-lisp:progn
 (common-lisp:defun describe-raid-arrays
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id stack-id raid-array-ids)
   (common-lisp:declare
    (common-lisp:ignorable instance-id stack-id raid-array-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-raid-arrays-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeRaidArrays")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeRaidArraysResult" common-lisp:nil)))
 (common-lisp:export 'describe-raid-arrays))
(common-lisp:progn
 (common-lisp:defun describe-rds-db-instances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-id rds-db-instance-arns)
   (common-lisp:declare (common-lisp:ignorable stack-id rds-db-instance-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-rds-db-instances-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeRdsDbInstances")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeRdsDbInstancesResult" common-lisp:nil)))
 (common-lisp:export 'describe-rds-db-instances))
(common-lisp:progn
 (common-lisp:defun describe-service-errors
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-id instance-id service-error-ids)
   (common-lisp:declare
    (common-lisp:ignorable stack-id instance-id service-error-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-service-errors-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeServiceErrors")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeServiceErrorsResult" common-lisp:nil)))
 (common-lisp:export 'describe-service-errors))
(common-lisp:progn
 (common-lisp:defun describe-stack-provisioning-parameters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-id)
   (common-lisp:declare (common-lisp:ignorable stack-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-stack-provisioning-parameters-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeStackProvisioningParameters")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeStackProvisioningParametersResult" common-lisp:nil)))
 (common-lisp:export 'describe-stack-provisioning-parameters))
(common-lisp:progn
 (common-lisp:defun describe-stack-summary
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-id)
   (common-lisp:declare (common-lisp:ignorable stack-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-stack-summary-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeStackSummary")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeStackSummaryResult" common-lisp:nil)))
 (common-lisp:export 'describe-stack-summary))
(common-lisp:progn
 (common-lisp:defun describe-stacks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-ids)
   (common-lisp:declare (common-lisp:ignorable stack-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-stacks-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeStacks")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeStacksResult" common-lisp:nil)))
 (common-lisp:export 'describe-stacks))
(common-lisp:progn
 (common-lisp:defun describe-time-based-auto-scaling
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-ids)
   (common-lisp:declare (common-lisp:ignorable instance-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-time-based-auto-scaling-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeTimeBasedAutoScaling")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeTimeBasedAutoScalingResult" common-lisp:nil)))
 (common-lisp:export 'describe-time-based-auto-scaling))
(common-lisp:progn
 (common-lisp:defun describe-user-profiles
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key iam-user-arns)
   (common-lisp:declare (common-lisp:ignorable iam-user-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-user-profiles-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeUserProfiles")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeUserProfilesResult" common-lisp:nil)))
 (common-lisp:export 'describe-user-profiles))
(common-lisp:progn
 (common-lisp:defun describe-volumes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id stack-id raid-array-id
                     volume-ids)
   (common-lisp:declare
    (common-lisp:ignorable instance-id stack-id raid-array-id volume-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-volumes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeVolumes")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeVolumesResult" common-lisp:nil)))
 (common-lisp:export 'describe-volumes))
(common-lisp:progn
 (common-lisp:defun detach-elastic-load-balancer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key elastic-load-balancer-name layer-id)
   (common-lisp:declare
    (common-lisp:ignorable elastic-load-balancer-name layer-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-detach-elastic-load-balancer-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DetachElasticLoadBalancer")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'detach-elastic-load-balancer))
(common-lisp:progn
 (common-lisp:defun disassociate-elastic-ip
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key elastic-ip)
   (common-lisp:declare (common-lisp:ignorable elastic-ip))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disassociate-elastic-ip-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DisassociateElasticIp")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'disassociate-elastic-ip))
(common-lisp:progn
 (common-lisp:defun get-hostname-suggestion
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key layer-id)
   (common-lisp:declare (common-lisp:ignorable layer-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-hostname-suggestion-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetHostnameSuggestion")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetHostnameSuggestionResult" common-lisp:nil)))
 (common-lisp:export 'get-hostname-suggestion))
(common-lisp:progn
 (common-lisp:defun grant-access
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id valid-for-in-minutes)
   (common-lisp:declare
    (common-lisp:ignorable instance-id valid-for-in-minutes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-grant-access-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GrantAccess")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GrantAccessResult" common-lisp:nil)))
 (common-lisp:export 'grant-access))
(common-lisp:progn
 (common-lisp:defun list-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable resource-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListTags")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListTagsResult" common-lisp:nil)))
 (common-lisp:export 'list-tags))
(common-lisp:progn
 (common-lisp:defun reboot-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id)
   (common-lisp:declare (common-lisp:ignorable instance-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-reboot-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RebootInstance")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'reboot-instance))
(common-lisp:progn
 (common-lisp:defun register-ecs-cluster
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ecs-cluster-arn stack-id)
   (common-lisp:declare (common-lisp:ignorable ecs-cluster-arn stack-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-register-ecs-cluster-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RegisterEcsCluster")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RegisterEcsClusterResult" common-lisp:nil)))
 (common-lisp:export 'register-ecs-cluster))
(common-lisp:progn
 (common-lisp:defun register-elastic-ip
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key elastic-ip stack-id)
   (common-lisp:declare (common-lisp:ignorable elastic-ip stack-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-register-elastic-ip-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RegisterElasticIp")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RegisterElasticIpResult" common-lisp:nil)))
 (common-lisp:export 'register-elastic-ip))
(common-lisp:progn
 (common-lisp:defun register-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-id hostname public-ip private-ip
                     rsa-public-key rsa-public-key-fingerprint
                     instance-identity)
   (common-lisp:declare
    (common-lisp:ignorable stack-id hostname public-ip private-ip
     rsa-public-key rsa-public-key-fingerprint instance-identity))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-register-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RegisterInstance")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RegisterInstanceResult" common-lisp:nil)))
 (common-lisp:export 'register-instance))
(common-lisp:progn
 (common-lisp:defun register-rds-db-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-id rds-db-instance-arn db-user
                     db-password)
   (common-lisp:declare
    (common-lisp:ignorable stack-id rds-db-instance-arn db-user db-password))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-register-rds-db-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RegisterRdsDbInstance")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'register-rds-db-instance))
(common-lisp:progn
 (common-lisp:defun register-volume
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ec2volume-id stack-id)
   (common-lisp:declare (common-lisp:ignorable ec2volume-id stack-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-register-volume-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RegisterVolume")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RegisterVolumeResult" common-lisp:nil)))
 (common-lisp:export 'register-volume))
(common-lisp:progn
 (common-lisp:defun set-load-based-auto-scaling
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key layer-id enable up-scaling down-scaling)
   (common-lisp:declare
    (common-lisp:ignorable layer-id enable up-scaling down-scaling))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-set-load-based-auto-scaling-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SetLoadBasedAutoScaling")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'set-load-based-auto-scaling))
(common-lisp:progn
 (common-lisp:defun set-permission
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-id iam-user-arn allow-ssh
                     allow-sudo level)
   (common-lisp:declare
    (common-lisp:ignorable stack-id iam-user-arn allow-ssh allow-sudo level))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-permission-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SetPermission")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'set-permission))
(common-lisp:progn
 (common-lisp:defun set-time-based-auto-scaling
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id auto-scaling-schedule)
   (common-lisp:declare
    (common-lisp:ignorable instance-id auto-scaling-schedule))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-set-time-based-auto-scaling-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SetTimeBasedAutoScaling")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'set-time-based-auto-scaling))
(common-lisp:progn
 (common-lisp:defun start-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id)
   (common-lisp:declare (common-lisp:ignorable instance-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StartInstance")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'start-instance))
(common-lisp:progn
 (common-lisp:defun start-stack
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-id)
   (common-lisp:declare (common-lisp:ignorable stack-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-stack-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StartStack")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'start-stack))
(common-lisp:progn
 (common-lisp:defun stop-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id)
   (common-lisp:declare (common-lisp:ignorable instance-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StopInstance")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'stop-instance))
(common-lisp:progn
 (common-lisp:defun stop-stack
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-id)
   (common-lisp:declare (common-lisp:ignorable stack-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-stack-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StopStack")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'stop-stack))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"TagResource")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun unassign-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id)
   (common-lisp:declare (common-lisp:ignorable instance-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-unassign-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UnassignInstance")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'unassign-instance))
(common-lisp:progn
 (common-lisp:defun unassign-volume
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-id)
   (common-lisp:declare (common-lisp:ignorable volume-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-unassign-volume-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UnassignVolume")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'unassign-volume))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UntagResource")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-app
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-id name description data-sources type
                     app-source domains enable-ssl ssl-configuration attributes
                     environment)
   (common-lisp:declare
    (common-lisp:ignorable app-id name description data-sources type app-source
     domains enable-ssl ssl-configuration attributes environment))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-app-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateApp")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-app))
(common-lisp:progn
 (common-lisp:defun update-elastic-ip
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key elastic-ip name)
   (common-lisp:declare (common-lisp:ignorable elastic-ip name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-elastic-ip-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateElasticIp")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-elastic-ip))
(common-lisp:progn
 (common-lisp:defun update-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-id layer-ids instance-type
                     auto-scaling-type hostname os ami-id ssh-key-name
                     architecture install-updates-on-boot ebs-optimized
                     agent-version)
   (common-lisp:declare
    (common-lisp:ignorable instance-id layer-ids instance-type
     auto-scaling-type hostname os ami-id ssh-key-name architecture
     install-updates-on-boot ebs-optimized agent-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateInstance")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-instance))
(common-lisp:progn
 (common-lisp:defun update-layer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key layer-id name shortname attributes
                     cloud-watch-logs-configuration custom-instance-profile-arn
                     custom-json custom-security-group-ids packages
                     volume-configurations enable-auto-healing
                     auto-assign-elastic-ips auto-assign-public-ips
                     custom-recipes install-updates-on-boot
                     use-ebs-optimized-instances lifecycle-event-configuration)
   (common-lisp:declare
    (common-lisp:ignorable layer-id name shortname attributes
     cloud-watch-logs-configuration custom-instance-profile-arn custom-json
     custom-security-group-ids packages volume-configurations
     enable-auto-healing auto-assign-elastic-ips auto-assign-public-ips
     custom-recipes install-updates-on-boot use-ebs-optimized-instances
     lifecycle-event-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-layer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateLayer")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-layer))
(common-lisp:progn
 (common-lisp:defun update-my-user-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ssh-public-key)
   (common-lisp:declare (common-lisp:ignorable ssh-public-key))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-my-user-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateMyUserProfile")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-my-user-profile))
(common-lisp:progn
 (common-lisp:defun update-rds-db-instance
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rds-db-instance-arn db-user db-password)
   (common-lisp:declare
    (common-lisp:ignorable rds-db-instance-arn db-user db-password))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-rds-db-instance-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateRdsDbInstance")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-rds-db-instance))
(common-lisp:progn
 (common-lisp:defun update-stack
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stack-id name attributes service-role-arn
                     default-instance-profile-arn default-os hostname-theme
                     default-availability-zone default-subnet-id custom-json
                     configuration-manager chef-configuration
                     use-custom-cookbooks custom-cookbooks-source
                     default-ssh-key-name default-root-device-type
                     use-opsworks-security-groups agent-version)
   (common-lisp:declare
    (common-lisp:ignorable stack-id name attributes service-role-arn
     default-instance-profile-arn default-os hostname-theme
     default-availability-zone default-subnet-id custom-json
     configuration-manager chef-configuration use-custom-cookbooks
     custom-cookbooks-source default-ssh-key-name default-root-device-type
     use-opsworks-security-groups agent-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-stack-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateStack")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-stack))
(common-lisp:progn
 (common-lisp:defun update-user-profile
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key iam-user-arn ssh-username ssh-public-key
                     allow-self-management)
   (common-lisp:declare
    (common-lisp:ignorable iam-user-arn ssh-username ssh-public-key
     allow-self-management))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-user-profile-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateUserProfile")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-user-profile))
(common-lisp:progn
 (common-lisp:defun update-volume
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-id name mount-point)
   (common-lisp:declare (common-lisp:ignorable volume-id name mount-point))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-volume-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "opsworks")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateVolume")
                                  ("Version" ,@"2013-02-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'update-volume))