;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/sts
  (:use)
  (:nicknames #:aws/sts)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/sts)

(common-lisp:progn
 (common-lisp:defstruct (assume-role-request (:copier common-lisp:nil))
   (role-arn
    (common-lisp:error
     #A((21) common-lisp:base-char . ":role-arn is required"))
    :type (common-lisp:or |arnType| common-lisp:null))
   (role-session-name
    (common-lisp:error
     #A((30) common-lisp:base-char . ":role-session-name is required"))
    :type (common-lisp:or |roleSessionNameType| common-lisp:null))
   (policy common-lisp:nil :type
    (common-lisp:or |sessionPolicyDocumentType| common-lisp:null))
   (duration-seconds common-lisp:nil :type
    (common-lisp:or |roleDurationSecondsType| common-lisp:null))
   (external-id common-lisp:nil :type
    (common-lisp:or |externalIdType| common-lisp:null))
   (serial-number common-lisp:nil :type
    (common-lisp:or |serialNumberType| common-lisp:null))
   (token-code common-lisp:nil :type
    (common-lisp:or |tokenCodeType| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'assume-role-request 'make-assume-role-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape assume-role-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "RoleSessionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-session-name)))
    (aws-sdk/generator/shape::to-query-params "Policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy)))
    (aws-sdk/generator/shape::to-query-params "DurationSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration-seconds)))
    (aws-sdk/generator/shape::to-query-params "ExternalId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'external-id)))
    (aws-sdk/generator/shape::to-query-params "SerialNumber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'serial-number)))
    (aws-sdk/generator/shape::to-query-params "TokenCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'token-code))))))
(common-lisp:progn
 (common-lisp:defstruct (assume-role-response (:copier common-lisp:nil))
   (credentials common-lisp:nil :type
    (common-lisp:or credentials common-lisp:null))
   (assumed-role-user common-lisp:nil :type
    (common-lisp:or assumed-role-user common-lisp:null))
   (packed-policy-size common-lisp:nil :type
    (common-lisp:or |nonNegativeIntegerType| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'assume-role-response 'make-assume-role-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape assume-role-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Credentials"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'credentials)))
    (aws-sdk/generator/shape::to-query-params "AssumedRoleUser"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assumed-role-user)))
    (aws-sdk/generator/shape::to-query-params "PackedPolicySize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'packed-policy-size))))))
(common-lisp:progn
 (common-lisp:defstruct
     (assume-role-with-samlrequest (:copier common-lisp:nil))
   (role-arn
    (common-lisp:error
     #A((21) common-lisp:base-char . ":role-arn is required"))
    :type (common-lisp:or |arnType| common-lisp:null))
   (principal-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":principal-arn is required"))
    :type (common-lisp:or |arnType| common-lisp:null))
   (samlassertion
    (common-lisp:error
     #A((26) common-lisp:base-char . ":samlassertion is required"))
    :type (common-lisp:or samlassertion-type common-lisp:null))
   (policy common-lisp:nil :type
    (common-lisp:or |sessionPolicyDocumentType| common-lisp:null))
   (duration-seconds common-lisp:nil :type
    (common-lisp:or |roleDurationSecondsType| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'assume-role-with-samlrequest
                    'make-assume-role-with-samlrequest))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          assume-role-with-samlrequest))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "PrincipalArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'principal-arn)))
    (aws-sdk/generator/shape::to-query-params "SAMLAssertion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'samlassertion)))
    (aws-sdk/generator/shape::to-query-params "Policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy)))
    (aws-sdk/generator/shape::to-query-params "DurationSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration-seconds))))))
(common-lisp:progn
 (common-lisp:defstruct
     (assume-role-with-samlresponse (:copier common-lisp:nil))
   (credentials common-lisp:nil :type
    (common-lisp:or credentials common-lisp:null))
   (assumed-role-user common-lisp:nil :type
    (common-lisp:or assumed-role-user common-lisp:null))
   (packed-policy-size common-lisp:nil :type
    (common-lisp:or |nonNegativeIntegerType| common-lisp:null))
   (subject common-lisp:nil :type (common-lisp:or subject common-lisp:null))
   (subject-type common-lisp:nil :type
    (common-lisp:or subject-type common-lisp:null))
   (issuer common-lisp:nil :type (common-lisp:or issuer common-lisp:null))
   (audience common-lisp:nil :type (common-lisp:or audience common-lisp:null))
   (name-qualifier common-lisp:nil :type
    (common-lisp:or name-qualifier common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'assume-role-with-samlresponse
                    'make-assume-role-with-samlresponse))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          assume-role-with-samlresponse))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Credentials"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'credentials)))
    (aws-sdk/generator/shape::to-query-params "AssumedRoleUser"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assumed-role-user)))
    (aws-sdk/generator/shape::to-query-params "PackedPolicySize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'packed-policy-size)))
    (aws-sdk/generator/shape::to-query-params "Subject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subject)))
    (aws-sdk/generator/shape::to-query-params "SubjectType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subject-type)))
    (aws-sdk/generator/shape::to-query-params "Issuer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'issuer)))
    (aws-sdk/generator/shape::to-query-params "Audience"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'audience)))
    (aws-sdk/generator/shape::to-query-params "NameQualifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name-qualifier))))))
(common-lisp:progn
 (common-lisp:defstruct
     (assume-role-with-web-identity-request (:copier common-lisp:nil))
   (role-arn
    (common-lisp:error
     #A((21) common-lisp:base-char . ":role-arn is required"))
    :type (common-lisp:or |arnType| common-lisp:null))
   (role-session-name
    (common-lisp:error
     #A((30) common-lisp:base-char . ":role-session-name is required"))
    :type (common-lisp:or |roleSessionNameType| common-lisp:null))
   (web-identity-token
    (common-lisp:error
     #A((31) common-lisp:base-char . ":web-identity-token is required"))
    :type (common-lisp:or |clientTokenType| common-lisp:null))
   (provider-id common-lisp:nil :type
    (common-lisp:or |urlType| common-lisp:null))
   (policy common-lisp:nil :type
    (common-lisp:or |sessionPolicyDocumentType| common-lisp:null))
   (duration-seconds common-lisp:nil :type
    (common-lisp:or |roleDurationSecondsType| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'assume-role-with-web-identity-request
                    'make-assume-role-with-web-identity-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          assume-role-with-web-identity-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "RoleSessionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-session-name)))
    (aws-sdk/generator/shape::to-query-params "WebIdentityToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'web-identity-token)))
    (aws-sdk/generator/shape::to-query-params "ProviderId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider-id)))
    (aws-sdk/generator/shape::to-query-params "Policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy)))
    (aws-sdk/generator/shape::to-query-params "DurationSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration-seconds))))))
(common-lisp:progn
 (common-lisp:defstruct
     (assume-role-with-web-identity-response (:copier common-lisp:nil))
   (credentials common-lisp:nil :type
    (common-lisp:or credentials common-lisp:null))
   (subject-from-web-identity-token common-lisp:nil :type
    (common-lisp:or |webIdentitySubjectType| common-lisp:null))
   (assumed-role-user common-lisp:nil :type
    (common-lisp:or assumed-role-user common-lisp:null))
   (packed-policy-size common-lisp:nil :type
    (common-lisp:or |nonNegativeIntegerType| common-lisp:null))
   (provider common-lisp:nil :type (common-lisp:or issuer common-lisp:null))
   (audience common-lisp:nil :type (common-lisp:or audience common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'assume-role-with-web-identity-response
                    'make-assume-role-with-web-identity-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          assume-role-with-web-identity-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Credentials"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'credentials)))
    (aws-sdk/generator/shape::to-query-params "SubjectFromWebIdentityToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subject-from-web-identity-token)))
    (aws-sdk/generator/shape::to-query-params "AssumedRoleUser"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assumed-role-user)))
    (aws-sdk/generator/shape::to-query-params "PackedPolicySize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'packed-policy-size)))
    (aws-sdk/generator/shape::to-query-params "Provider"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider)))
    (aws-sdk/generator/shape::to-query-params "Audience"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'audience))))))
(common-lisp:progn
 (common-lisp:defstruct (assumed-role-user (:copier common-lisp:nil))
   (assumed-role-id
    (common-lisp:error
     #A((28) common-lisp:base-char . ":assumed-role-id is required"))
    :type (common-lisp:or |assumedRoleIdType| common-lisp:null))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or |arnType| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'assumed-role-user 'make-assumed-role-user))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape assumed-role-user))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AssumedRoleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assumed-role-id)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:deftype audience () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (credentials (:copier common-lisp:nil))
   (access-key-id
    (common-lisp:error
     #A((26) common-lisp:base-char . ":access-key-id is required"))
    :type (common-lisp:or |accessKeyIdType| common-lisp:null))
   (secret-access-key
    (common-lisp:error
     #A((30) common-lisp:base-char . ":secret-access-key is required"))
    :type (common-lisp:or |accessKeySecretType| common-lisp:null))
   (session-token
    (common-lisp:error
     #A((26) common-lisp:base-char . ":session-token is required"))
    :type (common-lisp:or |tokenType| common-lisp:null))
   (expiration
    (common-lisp:error
     #A((23) common-lisp:base-char . ":expiration is required"))
    :type (common-lisp:or |dateType| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'credentials 'make-credentials))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape credentials))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccessKeyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-key-id)))
    (aws-sdk/generator/shape::to-query-params "SecretAccessKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'secret-access-key)))
    (aws-sdk/generator/shape::to-query-params "SessionToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'session-token)))
    (aws-sdk/generator/shape::to-query-params "Expiration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expiration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (decode-authorization-message-request (:copier common-lisp:nil))
   (encoded-message
    (common-lisp:error
     #A((28) common-lisp:base-char . ":encoded-message is required"))
    :type (common-lisp:or |encodedMessageType| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'decode-authorization-message-request
                    'make-decode-authorization-message-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          decode-authorization-message-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EncodedMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encoded-message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (decode-authorization-message-response (:copier common-lisp:nil))
   (decoded-message common-lisp:nil :type
    (common-lisp:or |decodedMessageType| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'decode-authorization-message-response
                    'make-decode-authorization-message-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          decode-authorization-message-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DecodedMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'decoded-message))))))
(common-lisp:progn
 (common-lisp:defstruct (expired-token-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |expiredIdentityTokenMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'expired-token-exception 'make-expired-token-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          expired-token-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (federated-user (:copier common-lisp:nil))
   (federated-user-id
    (common-lisp:error
     #A((30) common-lisp:base-char . ":federated-user-id is required"))
    :type (common-lisp:or |federatedIdType| common-lisp:null))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or |arnType| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'federated-user 'make-federated-user))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape federated-user))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FederatedUserId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'federated-user-id)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-caller-identity-request (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-caller-identity-request
                    'make-get-caller-identity-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-caller-identity-request))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-caller-identity-response (:copier common-lisp:nil))
   (user-id common-lisp:nil :type
    (common-lisp:or |userIdType| common-lisp:null))
   (account common-lisp:nil :type
    (common-lisp:or |accountType| common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or |arnType| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-caller-identity-response
                    'make-get-caller-identity-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-caller-identity-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-id)))
    (aws-sdk/generator/shape::to-query-params "Account"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-federation-token-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or |userNameType| common-lisp:null))
   (policy common-lisp:nil :type
    (common-lisp:or |sessionPolicyDocumentType| common-lisp:null))
   (duration-seconds common-lisp:nil :type
    (common-lisp:or |durationSecondsType| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-federation-token-request
                    'make-get-federation-token-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-federation-token-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy)))
    (aws-sdk/generator/shape::to-query-params "DurationSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration-seconds))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-federation-token-response (:copier common-lisp:nil))
   (credentials common-lisp:nil :type
    (common-lisp:or credentials common-lisp:null))
   (federated-user common-lisp:nil :type
    (common-lisp:or federated-user common-lisp:null))
   (packed-policy-size common-lisp:nil :type
    (common-lisp:or |nonNegativeIntegerType| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-federation-token-response
                    'make-get-federation-token-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-federation-token-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Credentials"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'credentials)))
    (aws-sdk/generator/shape::to-query-params "FederatedUser"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'federated-user)))
    (aws-sdk/generator/shape::to-query-params "PackedPolicySize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'packed-policy-size))))))
(common-lisp:progn
 (common-lisp:defstruct (get-session-token-request (:copier common-lisp:nil))
   (duration-seconds common-lisp:nil :type
    (common-lisp:or |durationSecondsType| common-lisp:null))
   (serial-number common-lisp:nil :type
    (common-lisp:or |serialNumberType| common-lisp:null))
   (token-code common-lisp:nil :type
    (common-lisp:or |tokenCodeType| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-session-token-request
                    'make-get-session-token-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-session-token-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DurationSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration-seconds)))
    (aws-sdk/generator/shape::to-query-params "SerialNumber"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'serial-number)))
    (aws-sdk/generator/shape::to-query-params "TokenCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'token-code))))))
(common-lisp:progn
 (common-lisp:defstruct (get-session-token-response (:copier common-lisp:nil))
   (credentials common-lisp:nil :type
    (common-lisp:or credentials common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-session-token-response
                    'make-get-session-token-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-session-token-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Credentials"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'credentials))))))
(common-lisp:progn
 (common-lisp:defstruct
     (idpcommunication-error-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |idpCommunicationErrorMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'idpcommunication-error-exception
                    'make-idpcommunication-error-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          idpcommunication-error-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (idprejected-claim-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |idpRejectedClaimMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'idprejected-claim-exception
                    'make-idprejected-claim-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          idprejected-claim-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-authorization-message-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |invalidAuthorizationMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-authorization-message-exception
                    'make-invalid-authorization-message-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-authorization-message-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-identity-token-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |invalidIdentityTokenMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-identity-token-exception
                    'make-invalid-identity-token-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-identity-token-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype issuer () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (malformed-policy-document-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |malformedPolicyDocumentMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'malformed-policy-document-exception
                    'make-malformed-policy-document-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          malformed-policy-document-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype name-qualifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (packed-policy-too-large-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |packedPolicyTooLargeMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'packed-policy-too-large-exception
                    'make-packed-policy-too-large-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          packed-policy-too-large-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (region-disabled-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |regionDisabledMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'region-disabled-exception
                    'make-region-disabled-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          region-disabled-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype samlassertion-type () 'common-lisp:string)
(common-lisp:deftype subject () 'common-lisp:string)
(common-lisp:deftype subject-type () 'common-lisp:string)
(common-lisp:deftype |accessKeyIdType| () 'common-lisp:string)
(common-lisp:deftype |accessKeySecretType| () 'common-lisp:string)
(common-lisp:deftype |accountType| () 'common-lisp:string)
(common-lisp:deftype |arnType| () 'common-lisp:string)
(common-lisp:deftype |assumedRoleIdType| () 'common-lisp:string)
(common-lisp:deftype |clientTokenType| () 'common-lisp:string)
(common-lisp:deftype |dateType| () 'common-lisp:string)
(common-lisp:deftype |decodedMessageType| () 'common-lisp:string)
(common-lisp:deftype |durationSecondsType| () 'common-lisp:integer)
(common-lisp:deftype |encodedMessageType| () 'common-lisp:string)
(common-lisp:deftype |expiredIdentityTokenMessage| () 'common-lisp:string)
(common-lisp:deftype |externalIdType| () 'common-lisp:string)
(common-lisp:deftype |federatedIdType| () 'common-lisp:string)
(common-lisp:deftype |idpCommunicationErrorMessage| () 'common-lisp:string)
(common-lisp:deftype |idpRejectedClaimMessage| () 'common-lisp:string)
(common-lisp:deftype |invalidAuthorizationMessage| () 'common-lisp:string)
(common-lisp:deftype |invalidIdentityTokenMessage| () 'common-lisp:string)
(common-lisp:deftype |malformedPolicyDocumentMessage| () 'common-lisp:string)
(common-lisp:deftype |nonNegativeIntegerType| () 'common-lisp:integer)
(common-lisp:deftype |packedPolicyTooLargeMessage| () 'common-lisp:string)
(common-lisp:deftype |regionDisabledMessage| () 'common-lisp:string)
(common-lisp:deftype |roleDurationSecondsType| () 'common-lisp:integer)
(common-lisp:deftype |roleSessionNameType| () 'common-lisp:string)
(common-lisp:deftype |serialNumberType| () 'common-lisp:string)
(common-lisp:deftype |sessionPolicyDocumentType| () 'common-lisp:string)
(common-lisp:deftype |tokenCodeType| () 'common-lisp:string)
(common-lisp:deftype |tokenType| () 'common-lisp:string)
(common-lisp:deftype |urlType| () 'common-lisp:string)
(common-lisp:deftype |userIdType| () 'common-lisp:string)
(common-lisp:deftype |userNameType| () 'common-lisp:string)
(common-lisp:deftype |webIdentitySubjectType| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun assume-role
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key role-arn role-session-name policy
                     duration-seconds external-id serial-number token-code)
   (common-lisp:declare
    (common-lisp:ignorable role-arn role-session-name policy duration-seconds
     external-id serial-number token-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-assume-role-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "sts")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AssumeRole")
                                  ("Version" ,@"2011-06-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AssumeRoleResponse" "AssumeRoleResult")))
 (common-lisp:export 'assume-role))
(common-lisp:progn
 (common-lisp:defun assume-role-with-saml
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key role-arn principal-arn samlassertion
                     policy duration-seconds)
   (common-lisp:declare
    (common-lisp:ignorable role-arn principal-arn samlassertion policy
     duration-seconds))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-assume-role-with-samlrequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "sts")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AssumeRoleWithSAML")
                                  ("Version" ,@"2011-06-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AssumeRoleWithSAMLResponse" "AssumeRoleWithSAMLResult")))
 (common-lisp:export 'assume-role-with-saml))
(common-lisp:progn
 (common-lisp:defun assume-role-with-web-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key role-arn role-session-name
                     web-identity-token provider-id policy duration-seconds)
   (common-lisp:declare
    (common-lisp:ignorable role-arn role-session-name web-identity-token
     provider-id policy duration-seconds))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-assume-role-with-web-identity-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "sts")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AssumeRoleWithWebIdentity")
                                  ("Version" ,@"2011-06-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AssumeRoleWithWebIdentityResponse" "AssumeRoleWithWebIdentityResult")))
 (common-lisp:export 'assume-role-with-web-identity))
(common-lisp:progn
 (common-lisp:defun decode-authorization-message
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key encoded-message)
   (common-lisp:declare (common-lisp:ignorable encoded-message))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-decode-authorization-message-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "sts")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DecodeAuthorizationMessage")
                                  ("Version" ,@"2011-06-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DecodeAuthorizationMessageResponse"
      "DecodeAuthorizationMessageResult")))
 (common-lisp:export 'decode-authorization-message))
(common-lisp:progn
 (common-lisp:defun get-caller-identity ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "sts")
                             :method :post :params
                             (common-lisp:cons "Action" "GetCallerIdentity"))
    "GetCallerIdentityResponse" "GetCallerIdentityResult"))
 (common-lisp:export 'get-caller-identity))
(common-lisp:progn
 (common-lisp:defun get-federation-token
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name policy duration-seconds)
   (common-lisp:declare (common-lisp:ignorable name policy duration-seconds))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-federation-token-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "sts")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetFederationToken")
                                  ("Version" ,@"2011-06-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetFederationTokenResponse" "GetFederationTokenResult")))
 (common-lisp:export 'get-federation-token))
(common-lisp:progn
 (common-lisp:defun get-session-token
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key duration-seconds serial-number
                     token-code)
   (common-lisp:declare
    (common-lisp:ignorable duration-seconds serial-number token-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-session-token-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "sts")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetSessionToken")
                                  ("Version" ,@"2011-06-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetSessionTokenResponse" "GetSessionTokenResult")))
 (common-lisp:export 'get-session-token))