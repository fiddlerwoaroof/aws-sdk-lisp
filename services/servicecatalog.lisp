;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/servicecatalog
  (:use)
  (:nicknames #:aws/servicecatalog)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/servicecatalog)

(common-lisp:deftype accept-language () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (accept-portfolio-share-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (portfolio-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":portfolio-id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'accept-portfolio-share-input
                    'make-accept-portfolio-share-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          accept-portfolio-share-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "PortfolioId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'portfolio-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (accept-portfolio-share-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'accept-portfolio-share-output
                    'make-accept-portfolio-share-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          accept-portfolio-share-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (access-level-filter (:copier common-lisp:nil))
   (key common-lisp:nil :type
    (common-lisp:or access-level-filter-key common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or access-level-filter-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'access-level-filter 'make-access-level-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape access-level-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype access-level-filter-key () 'common-lisp:string)
(common-lisp:deftype access-level-filter-value () 'common-lisp:string)
(common-lisp:deftype account-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype account-ids () '(trivial-types:proper-list account-id))
 (common-lisp:defun |make-account-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list account-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype add-tags () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-add-tags|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype allowed-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype allowed-values ()
   '(trivial-types:proper-list allowed-value))
 (common-lisp:defun |make-allowed-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list allowed-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype approximate-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (associate-principal-with-portfolio-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (portfolio-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":portfolio-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (principal-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":principal-arn is required"))
    :type (common-lisp:or principal-arn common-lisp:null))
   (principal-type
    (common-lisp:error
     #A((27) common-lisp:base-char . ":principal-type is required"))
    :type (common-lisp:or principal-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-principal-with-portfolio-input
                    'make-associate-principal-with-portfolio-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          associate-principal-with-portfolio-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "PortfolioId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'portfolio-id)))
    (aws-sdk/generator/shape::to-query-params "PrincipalARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'principal-arn)))
    (aws-sdk/generator/shape::to-query-params "PrincipalType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'principal-type))))))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-principal-with-portfolio-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'associate-principal-with-portfolio-output
                    'make-associate-principal-with-portfolio-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          associate-principal-with-portfolio-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-product-with-portfolio-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (product-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":product-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (portfolio-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":portfolio-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (source-portfolio-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-product-with-portfolio-input
                    'make-associate-product-with-portfolio-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          associate-product-with-portfolio-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "ProductId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-id)))
    (aws-sdk/generator/shape::to-query-params "PortfolioId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'portfolio-id)))
    (aws-sdk/generator/shape::to-query-params "SourcePortfolioId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-portfolio-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-product-with-portfolio-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'associate-product-with-portfolio-output
                    'make-associate-product-with-portfolio-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          associate-product-with-portfolio-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-tag-option-with-resource-input (:copier common-lisp:nil))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (tag-option-id
    (common-lisp:error
     #A((26) common-lisp:base-char . ":tag-option-id is required"))
    :type (common-lisp:or tag-option-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-tag-option-with-resource-input
                    'make-associate-tag-option-with-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          associate-tag-option-with-resource-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "TagOptionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-option-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-tag-option-with-resource-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'associate-tag-option-with-resource-output
                    'make-associate-tag-option-with-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          associate-tag-option-with-resource-output))
   (common-lisp:append)))
(common-lisp:deftype attribute-value () 'common-lisp:string)
(common-lisp:deftype constraint-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (constraint-detail (:copier common-lisp:nil))
   (constraint-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or constraint-type common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or constraint-description common-lisp:null))
   (owner common-lisp:nil :type (common-lisp:or account-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'constraint-detail 'make-constraint-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape constraint-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ConstraintId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'constraint-id)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Owner"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner))))))
(common-lisp:progn
 (common-lisp:deftype constraint-details ()
   '(trivial-types:proper-list constraint-detail))
 (common-lisp:defun |make-constraint-details|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list constraint-detail))
   aws-sdk/generator/shape::members))
(common-lisp:deftype constraint-parameters () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype constraint-summaries ()
   '(trivial-types:proper-list constraint-summary))
 (common-lisp:defun |make-constraint-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list constraint-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (constraint-summary (:copier common-lisp:nil))
   (type common-lisp:nil :type
    (common-lisp:or constraint-type common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or constraint-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'constraint-summary 'make-constraint-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape constraint-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:deftype constraint-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (create-constraint-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (portfolio-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":portfolio-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (product-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":product-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (parameters
    (common-lisp:error
     #A((23) common-lisp:base-char . ":parameters is required"))
    :type (common-lisp:or constraint-parameters common-lisp:null))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or constraint-type common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or constraint-description common-lisp:null))
   (idempotency-token
    (common-lisp:error
     #A((30) common-lisp:base-char . ":idempotency-token is required"))
    :type (common-lisp:or idempotency-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-constraint-input 'make-create-constraint-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-constraint-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "PortfolioId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'portfolio-id)))
    (aws-sdk/generator/shape::to-query-params "ProductId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-id)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "IdempotencyToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'idempotency-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-constraint-output (:copier common-lisp:nil))
   (constraint-detail common-lisp:nil :type
    (common-lisp:or constraint-detail common-lisp:null))
   (constraint-parameters common-lisp:nil :type
    (common-lisp:or constraint-parameters common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-constraint-output 'make-create-constraint-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-constraint-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ConstraintDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'constraint-detail)))
    (aws-sdk/generator/shape::to-query-params "ConstraintParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'constraint-parameters)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:defstruct (create-portfolio-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (display-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":display-name is required"))
    :type (common-lisp:or portfolio-display-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or portfolio-description common-lisp:null))
   (provider-name
    (common-lisp:error
     #A((26) common-lisp:base-char . ":provider-name is required"))
    :type (common-lisp:or provider-name common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or add-tags common-lisp:null))
   (idempotency-token
    (common-lisp:error
     #A((30) common-lisp:base-char . ":idempotency-token is required"))
    :type (common-lisp:or idempotency-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-portfolio-input 'make-create-portfolio-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-portfolio-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "DisplayName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "ProviderName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider-name)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "IdempotencyToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'idempotency-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-portfolio-output (:copier common-lisp:nil))
   (portfolio-detail common-lisp:nil :type
    (common-lisp:or portfolio-detail common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-portfolio-output 'make-create-portfolio-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-portfolio-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PortfolioDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'portfolio-detail)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-portfolio-share-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (portfolio-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":portfolio-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (account-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":account-id is required"))
    :type (common-lisp:or account-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-portfolio-share-input
                    'make-create-portfolio-share-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-portfolio-share-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "PortfolioId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'portfolio-id)))
    (aws-sdk/generator/shape::to-query-params "AccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-portfolio-share-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-portfolio-share-output
                    'make-create-portfolio-share-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-portfolio-share-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (create-product-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or product-view-name common-lisp:null))
   (owner
    (common-lisp:error #A((18) common-lisp:base-char . ":owner is required"))
    :type (common-lisp:or product-view-owner common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or product-view-short-description common-lisp:null))
   (distributor common-lisp:nil :type
    (common-lisp:or product-view-owner common-lisp:null))
   (support-description common-lisp:nil :type
    (common-lisp:or support-description common-lisp:null))
   (support-email common-lisp:nil :type
    (common-lisp:or support-email common-lisp:null))
   (support-url common-lisp:nil :type
    (common-lisp:or support-url common-lisp:null))
   (product-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":product-type is required"))
    :type (common-lisp:or product-type common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or add-tags common-lisp:null))
   (provisioning-artifact-parameters
    (common-lisp:error
     #A((45) common-lisp:base-char
        . ":provisioning-artifact-parameters is required"))
    :type (common-lisp:or provisioning-artifact-properties common-lisp:null))
   (idempotency-token
    (common-lisp:error
     #A((30) common-lisp:base-char . ":idempotency-token is required"))
    :type (common-lisp:or idempotency-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-product-input 'make-create-product-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-product-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Owner"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Distributor"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'distributor)))
    (aws-sdk/generator/shape::to-query-params "SupportDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'support-description)))
    (aws-sdk/generator/shape::to-query-params "SupportEmail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'support-email)))
    (aws-sdk/generator/shape::to-query-params "SupportUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'support-url)))
    (aws-sdk/generator/shape::to-query-params "ProductType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-type)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "ProvisioningArtifactParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioning-artifact-parameters)))
    (aws-sdk/generator/shape::to-query-params "IdempotencyToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'idempotency-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-product-output (:copier common-lisp:nil))
   (product-view-detail common-lisp:nil :type
    (common-lisp:or product-view-detail common-lisp:null))
   (provisioning-artifact-detail common-lisp:nil :type
    (common-lisp:or provisioning-artifact-detail common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-product-output 'make-create-product-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-product-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProductViewDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-view-detail)))
    (aws-sdk/generator/shape::to-query-params "ProvisioningArtifactDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioning-artifact-detail)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-provisioning-artifact-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (product-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":product-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (parameters
    (common-lisp:error
     #A((23) common-lisp:base-char . ":parameters is required"))
    :type (common-lisp:or provisioning-artifact-properties common-lisp:null))
   (idempotency-token
    (common-lisp:error
     #A((30) common-lisp:base-char . ":idempotency-token is required"))
    :type (common-lisp:or idempotency-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-provisioning-artifact-input
                    'make-create-provisioning-artifact-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-provisioning-artifact-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "ProductId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-id)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "IdempotencyToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'idempotency-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-provisioning-artifact-output (:copier common-lisp:nil))
   (provisioning-artifact-detail common-lisp:nil :type
    (common-lisp:or provisioning-artifact-detail common-lisp:null))
   (info common-lisp:nil :type
    (common-lisp:or provisioning-artifact-info common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-provisioning-artifact-output
                    'make-create-provisioning-artifact-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-provisioning-artifact-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProvisioningArtifactDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioning-artifact-detail)))
    (aws-sdk/generator/shape::to-query-params "Info"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'info)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:defstruct (create-tag-option-input (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or tag-option-key common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or tag-option-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-tag-option-input 'make-create-tag-option-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-tag-option-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:defstruct (create-tag-option-output (:copier common-lisp:nil))
   (tag-option-detail common-lisp:nil :type
    (common-lisp:or tag-option-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-tag-option-output 'make-create-tag-option-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-tag-option-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TagOptionDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-option-detail))))))
(common-lisp:deftype created-time () 'common-lisp:string)
(common-lisp:deftype creation-time () 'common-lisp:string)
(common-lisp:deftype default-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (delete-constraint-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-constraint-input 'make-delete-constraint-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-constraint-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-constraint-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-constraint-output 'make-delete-constraint-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-constraint-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-portfolio-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-portfolio-input 'make-delete-portfolio-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-portfolio-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-portfolio-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-portfolio-output 'make-delete-portfolio-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-portfolio-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-portfolio-share-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (portfolio-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":portfolio-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (account-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":account-id is required"))
    :type (common-lisp:or account-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-portfolio-share-input
                    'make-delete-portfolio-share-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-portfolio-share-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "PortfolioId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'portfolio-id)))
    (aws-sdk/generator/shape::to-query-params "AccountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-portfolio-share-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-portfolio-share-output
                    'make-delete-portfolio-share-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-portfolio-share-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-product-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-product-input 'make-delete-product-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-product-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-product-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-product-output 'make-delete-product-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-product-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-provisioning-artifact-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (product-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":product-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (provisioning-artifact-id
    (common-lisp:error
     #A((37) common-lisp:base-char . ":provisioning-artifact-id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-provisioning-artifact-input
                    'make-delete-provisioning-artifact-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-provisioning-artifact-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "ProductId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-id)))
    (aws-sdk/generator/shape::to-query-params "ProvisioningArtifactId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioning-artifact-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-provisioning-artifact-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-provisioning-artifact-output
                    'make-delete-provisioning-artifact-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-provisioning-artifact-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (describe-constraint-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-constraint-input
                    'make-describe-constraint-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-constraint-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-constraint-output (:copier common-lisp:nil))
   (constraint-detail common-lisp:nil :type
    (common-lisp:or constraint-detail common-lisp:null))
   (constraint-parameters common-lisp:nil :type
    (common-lisp:or constraint-parameters common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-constraint-output
                    'make-describe-constraint-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-constraint-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ConstraintDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'constraint-detail)))
    (aws-sdk/generator/shape::to-query-params "ConstraintParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'constraint-parameters)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-portfolio-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-portfolio-input 'make-describe-portfolio-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-portfolio-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-portfolio-output (:copier common-lisp:nil))
   (portfolio-detail common-lisp:nil :type
    (common-lisp:or portfolio-detail common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null))
   (tag-options common-lisp:nil :type
    (common-lisp:or tag-option-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-portfolio-output
                    'make-describe-portfolio-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-portfolio-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PortfolioDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'portfolio-detail)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "TagOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-options))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-product-as-admin-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-product-as-admin-input
                    'make-describe-product-as-admin-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-product-as-admin-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-product-as-admin-output (:copier common-lisp:nil))
   (product-view-detail common-lisp:nil :type
    (common-lisp:or product-view-detail common-lisp:null))
   (provisioning-artifact-summaries common-lisp:nil :type
    (common-lisp:or provisioning-artifact-summaries common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null))
   (tag-options common-lisp:nil :type
    (common-lisp:or tag-option-details common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-product-as-admin-output
                    'make-describe-product-as-admin-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-product-as-admin-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProductViewDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-view-detail)))
    (aws-sdk/generator/shape::to-query-params "ProvisioningArtifactSummaries"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioning-artifact-summaries)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "TagOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-options))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-product-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-product-input 'make-describe-product-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-product-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-product-output (:copier common-lisp:nil))
   (product-view-summary common-lisp:nil :type
    (common-lisp:or product-view-summary common-lisp:null))
   (provisioning-artifacts common-lisp:nil :type
    (common-lisp:or provisioning-artifacts common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-product-output 'make-describe-product-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-product-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProductViewSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-view-summary)))
    (aws-sdk/generator/shape::to-query-params "ProvisioningArtifacts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioning-artifacts))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-product-view-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-product-view-input
                    'make-describe-product-view-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-product-view-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-product-view-output (:copier common-lisp:nil))
   (product-view-summary common-lisp:nil :type
    (common-lisp:or product-view-summary common-lisp:null))
   (provisioning-artifacts common-lisp:nil :type
    (common-lisp:or provisioning-artifacts common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-product-view-output
                    'make-describe-product-view-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-product-view-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProductViewSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-view-summary)))
    (aws-sdk/generator/shape::to-query-params "ProvisioningArtifacts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioning-artifacts))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-provisioned-product-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-provisioned-product-input
                    'make-describe-provisioned-product-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-provisioned-product-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-provisioned-product-output (:copier common-lisp:nil))
   (provisioned-product-detail common-lisp:nil :type
    (common-lisp:or provisioned-product-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-provisioned-product-output
                    'make-describe-provisioned-product-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-provisioned-product-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProvisionedProductDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioned-product-detail))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-provisioning-artifact-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (provisioning-artifact-id
    (common-lisp:error
     #A((37) common-lisp:base-char . ":provisioning-artifact-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (product-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":product-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (verbose common-lisp:nil :type (common-lisp:or verbose common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-provisioning-artifact-input
                    'make-describe-provisioning-artifact-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-provisioning-artifact-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "ProvisioningArtifactId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioning-artifact-id)))
    (aws-sdk/generator/shape::to-query-params "ProductId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-id)))
    (aws-sdk/generator/shape::to-query-params "Verbose"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'verbose))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-provisioning-artifact-output (:copier common-lisp:nil))
   (provisioning-artifact-detail common-lisp:nil :type
    (common-lisp:or provisioning-artifact-detail common-lisp:null))
   (info common-lisp:nil :type
    (common-lisp:or provisioning-artifact-info common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-provisioning-artifact-output
                    'make-describe-provisioning-artifact-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-provisioning-artifact-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProvisioningArtifactDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioning-artifact-detail)))
    (aws-sdk/generator/shape::to-query-params "Info"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'info)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-provisioning-parameters-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (product-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":product-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (provisioning-artifact-id
    (common-lisp:error
     #A((37) common-lisp:base-char . ":provisioning-artifact-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (path-id common-lisp:nil :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-provisioning-parameters-input
                    'make-describe-provisioning-parameters-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-provisioning-parameters-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "ProductId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-id)))
    (aws-sdk/generator/shape::to-query-params "ProvisioningArtifactId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioning-artifact-id)))
    (aws-sdk/generator/shape::to-query-params "PathId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-provisioning-parameters-output (:copier common-lisp:nil))
   (provisioning-artifact-parameters common-lisp:nil :type
    (common-lisp:or provisioning-artifact-parameters common-lisp:null))
   (constraint-summaries common-lisp:nil :type
    (common-lisp:or constraint-summaries common-lisp:null))
   (usage-instructions common-lisp:nil :type
    (common-lisp:or usage-instructions common-lisp:null))
   (tag-options common-lisp:nil :type
    (common-lisp:or tag-option-summaries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-provisioning-parameters-output
                    'make-describe-provisioning-parameters-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-provisioning-parameters-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProvisioningArtifactParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioning-artifact-parameters)))
    (aws-sdk/generator/shape::to-query-params "ConstraintSummaries"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'constraint-summaries)))
    (aws-sdk/generator/shape::to-query-params "UsageInstructions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'usage-instructions)))
    (aws-sdk/generator/shape::to-query-params "TagOptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-options))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-record-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null))
   (page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-record-input 'make-describe-record-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-record-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "PageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-record-output (:copier common-lisp:nil))
   (record-detail common-lisp:nil :type
    (common-lisp:or record-detail common-lisp:null))
   (record-outputs common-lisp:nil :type
    (common-lisp:or record-outputs common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-record-output 'make-describe-record-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-record-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RecordDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-detail)))
    (aws-sdk/generator/shape::to-query-params "RecordOutputs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-outputs)))
    (aws-sdk/generator/shape::to-query-params "NextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-tag-option-input (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or tag-option-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tag-option-input
                    'make-describe-tag-option-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-tag-option-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-tag-option-output (:copier common-lisp:nil))
   (tag-option-detail common-lisp:nil :type
    (common-lisp:or tag-option-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tag-option-output
                    'make-describe-tag-option-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-tag-option-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TagOptionDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-option-detail))))))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-principal-from-portfolio-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (portfolio-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":portfolio-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (principal-arn
    (common-lisp:error
     #A((26) common-lisp:base-char . ":principal-arn is required"))
    :type (common-lisp:or principal-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-principal-from-portfolio-input
                    'make-disassociate-principal-from-portfolio-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disassociate-principal-from-portfolio-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "PortfolioId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'portfolio-id)))
    (aws-sdk/generator/shape::to-query-params "PrincipalARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'principal-arn))))))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-principal-from-portfolio-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'disassociate-principal-from-portfolio-output
                    'make-disassociate-principal-from-portfolio-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disassociate-principal-from-portfolio-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-product-from-portfolio-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (product-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":product-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (portfolio-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":portfolio-id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-product-from-portfolio-input
                    'make-disassociate-product-from-portfolio-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disassociate-product-from-portfolio-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "ProductId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-id)))
    (aws-sdk/generator/shape::to-query-params "PortfolioId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'portfolio-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-product-from-portfolio-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'disassociate-product-from-portfolio-output
                    'make-disassociate-product-from-portfolio-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disassociate-product-from-portfolio-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-tag-option-from-resource-input (:copier common-lisp:nil))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (tag-option-id
    (common-lisp:error
     #A((26) common-lisp:base-char . ":tag-option-id is required"))
    :type (common-lisp:or tag-option-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-tag-option-from-resource-input
                    'make-disassociate-tag-option-from-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disassociate-tag-option-from-resource-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "TagOptionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-option-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-tag-option-from-resource-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'disassociate-tag-option-from-resource-output
                    'make-disassociate-tag-option-from-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disassociate-tag-option-from-resource-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (duplicate-resource-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'duplicate-resource-exception
                    'make-duplicate-resource-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          duplicate-resource-exception))
   (common-lisp:append)))
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:deftype error-description () 'common-lisp:string)
(common-lisp:deftype has-default-path () 'common-lisp:boolean)
(common-lisp:deftype id () 'common-lisp:string)
(common-lisp:deftype idempotency-token () 'common-lisp:string)
(common-lisp:deftype ignore-errors () 'common-lisp:boolean)
(common-lisp:deftype instruction-type () 'common-lisp:string)
(common-lisp:deftype instruction-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-parameters-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameters-exception
                    'make-invalid-parameters-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-parameters-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-state-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-state-exception 'make-invalid-state-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-state-exception))
   (common-lisp:append)))
(common-lisp:deftype last-request-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype launch-path-summaries ()
   '(trivial-types:proper-list launch-path-summary))
 (common-lisp:defun |make-launch-path-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list launch-path-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (launch-path-summary (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (constraint-summaries common-lisp:nil :type
    (common-lisp:or constraint-summaries common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or portfolio-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'launch-path-summary 'make-launch-path-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape launch-path-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "ConstraintSummaries"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'constraint-summaries)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (list-accepted-portfolio-shares-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-accepted-portfolio-shares-input
                    'make-list-accepted-portfolio-shares-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-accepted-portfolio-shares-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "PageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-accepted-portfolio-shares-output (:copier common-lisp:nil))
   (portfolio-details common-lisp:nil :type
    (common-lisp:or portfolio-details common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-accepted-portfolio-shares-output
                    'make-list-accepted-portfolio-shares-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-accepted-portfolio-shares-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PortfolioDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'portfolio-details)))
    (aws-sdk/generator/shape::to-query-params "NextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-constraints-for-portfolio-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (portfolio-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":portfolio-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (product-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null))
   (page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-constraints-for-portfolio-input
                    'make-list-constraints-for-portfolio-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-constraints-for-portfolio-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "PortfolioId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'portfolio-id)))
    (aws-sdk/generator/shape::to-query-params "ProductId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-id)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size)))
    (aws-sdk/generator/shape::to-query-params "PageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-constraints-for-portfolio-output (:copier common-lisp:nil))
   (constraint-details common-lisp:nil :type
    (common-lisp:or constraint-details common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-constraints-for-portfolio-output
                    'make-list-constraints-for-portfolio-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-constraints-for-portfolio-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ConstraintDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'constraint-details)))
    (aws-sdk/generator/shape::to-query-params "NextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-launch-paths-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (product-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":product-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null))
   (page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-launch-paths-input 'make-list-launch-paths-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-launch-paths-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "ProductId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-id)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size)))
    (aws-sdk/generator/shape::to-query-params "PageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-launch-paths-output (:copier common-lisp:nil))
   (launch-path-summaries common-lisp:nil :type
    (common-lisp:or launch-path-summaries common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-launch-paths-output 'make-list-launch-paths-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-launch-paths-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LaunchPathSummaries"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'launch-path-summaries)))
    (aws-sdk/generator/shape::to-query-params "NextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-portfolio-access-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (portfolio-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":portfolio-id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-portfolio-access-input
                    'make-list-portfolio-access-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-portfolio-access-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "PortfolioId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'portfolio-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-portfolio-access-output (:copier common-lisp:nil))
   (account-ids common-lisp:nil :type
    (common-lisp:or account-ids common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-portfolio-access-output
                    'make-list-portfolio-access-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-portfolio-access-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-ids)))
    (aws-sdk/generator/shape::to-query-params "NextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-portfolios-for-product-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (product-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":product-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-portfolios-for-product-input
                    'make-list-portfolios-for-product-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-portfolios-for-product-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "ProductId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-id)))
    (aws-sdk/generator/shape::to-query-params "PageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-portfolios-for-product-output (:copier common-lisp:nil))
   (portfolio-details common-lisp:nil :type
    (common-lisp:or portfolio-details common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-portfolios-for-product-output
                    'make-list-portfolios-for-product-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-portfolios-for-product-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PortfolioDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'portfolio-details)))
    (aws-sdk/generator/shape::to-query-params "NextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-portfolios-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-portfolios-input 'make-list-portfolios-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-portfolios-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "PageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size))))))
(common-lisp:progn
 (common-lisp:defstruct (list-portfolios-output (:copier common-lisp:nil))
   (portfolio-details common-lisp:nil :type
    (common-lisp:or portfolio-details common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-portfolios-output 'make-list-portfolios-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-portfolios-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PortfolioDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'portfolio-details)))
    (aws-sdk/generator/shape::to-query-params "NextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-principals-for-portfolio-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (portfolio-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":portfolio-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null))
   (page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-principals-for-portfolio-input
                    'make-list-principals-for-portfolio-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-principals-for-portfolio-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "PortfolioId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'portfolio-id)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size)))
    (aws-sdk/generator/shape::to-query-params "PageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-principals-for-portfolio-output (:copier common-lisp:nil))
   (principals common-lisp:nil :type
    (common-lisp:or principals common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-principals-for-portfolio-output
                    'make-list-principals-for-portfolio-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-principals-for-portfolio-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Principals"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'principals)))
    (aws-sdk/generator/shape::to-query-params "NextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-provisioning-artifacts-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (product-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":product-id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-provisioning-artifacts-input
                    'make-list-provisioning-artifacts-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-provisioning-artifacts-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "ProductId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-provisioning-artifacts-output (:copier common-lisp:nil))
   (provisioning-artifact-details common-lisp:nil :type
    (common-lisp:or provisioning-artifact-details common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-provisioning-artifacts-output
                    'make-list-provisioning-artifacts-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-provisioning-artifacts-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProvisioningArtifactDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioning-artifact-details)))
    (aws-sdk/generator/shape::to-query-params "NextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-record-history-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (access-level-filter common-lisp:nil :type
    (common-lisp:or access-level-filter common-lisp:null))
   (search-filter common-lisp:nil :type
    (common-lisp:or list-record-history-search-filter common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null))
   (page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-record-history-input
                    'make-list-record-history-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-record-history-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "AccessLevelFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-level-filter)))
    (aws-sdk/generator/shape::to-query-params "SearchFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'search-filter)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size)))
    (aws-sdk/generator/shape::to-query-params "PageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-record-history-output (:copier common-lisp:nil))
   (record-details common-lisp:nil :type
    (common-lisp:or record-details common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-record-history-output
                    'make-list-record-history-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-record-history-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RecordDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-details)))
    (aws-sdk/generator/shape::to-query-params "NextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-record-history-search-filter (:copier common-lisp:nil))
   (key common-lisp:nil :type
    (common-lisp:or search-filter-key common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or search-filter-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-record-history-search-filter
                    'make-list-record-history-search-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-record-history-search-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-resources-for-tag-option-input (:copier common-lisp:nil))
   (tag-option-id
    (common-lisp:error
     #A((26) common-lisp:base-char . ":tag-option-id is required"))
    :type (common-lisp:or tag-option-id common-lisp:null))
   (resource-type common-lisp:nil :type
    (common-lisp:or resource-type common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null))
   (page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resources-for-tag-option-input
                    'make-list-resources-for-tag-option-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-resources-for-tag-option-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TagOptionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-option-id)))
    (aws-sdk/generator/shape::to-query-params "ResourceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-type)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size)))
    (aws-sdk/generator/shape::to-query-params "PageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-resources-for-tag-option-output (:copier common-lisp:nil))
   (resource-details common-lisp:nil :type
    (common-lisp:or resource-details common-lisp:null))
   (page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-resources-for-tag-option-output
                    'make-list-resources-for-tag-option-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-resources-for-tag-option-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-details)))
    (aws-sdk/generator/shape::to-query-params "PageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-tag-options-filters (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or tag-option-key common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or tag-option-value common-lisp:null))
   (active common-lisp:nil :type
    (common-lisp:or tag-option-active common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tag-options-filters 'make-list-tag-options-filters))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-tag-options-filters))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "Active"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'active))))))
(common-lisp:progn
 (common-lisp:defstruct (list-tag-options-input (:copier common-lisp:nil))
   (filters common-lisp:nil :type
    (common-lisp:or list-tag-options-filters common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null))
   (page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tag-options-input 'make-list-tag-options-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-tag-options-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size)))
    (aws-sdk/generator/shape::to-query-params "PageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-tag-options-output (:copier common-lisp:nil))
   (tag-option-details common-lisp:nil :type
    (common-lisp:or tag-option-details common-lisp:null))
   (page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tag-options-output 'make-list-tag-options-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-tag-options-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TagOptionDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-option-details)))
    (aws-sdk/generator/shape::to-query-params "PageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:deftype no-echo () 'common-lisp:boolean)
(common-lisp:deftype notification-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype notification-arns ()
   '(trivial-types:proper-list notification-arn))
 (common-lisp:defun |make-notification-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list notification-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype output-key () 'common-lisp:string)
(common-lisp:deftype output-value () 'common-lisp:string)
(common-lisp:deftype page-size () 'common-lisp:integer)
(common-lisp:deftype page-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (parameter-constraints (:copier common-lisp:nil))
   (allowed-values common-lisp:nil :type
    (common-lisp:or allowed-values common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'parameter-constraints 'make-parameter-constraints))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          parameter-constraints))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AllowedValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'allowed-values))))))
(common-lisp:deftype parameter-key () 'common-lisp:string)
(common-lisp:deftype parameter-type () 'common-lisp:string)
(common-lisp:deftype parameter-value () 'common-lisp:string)
(common-lisp:deftype portfolio-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (portfolio-detail (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or resource-arn common-lisp:null))
   (display-name common-lisp:nil :type
    (common-lisp:or portfolio-display-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or portfolio-description common-lisp:null))
   (created-time common-lisp:nil :type
    (common-lisp:or creation-time common-lisp:null))
   (provider-name common-lisp:nil :type
    (common-lisp:or provider-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'portfolio-detail 'make-portfolio-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape portfolio-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "ARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "DisplayName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "CreatedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-time)))
    (aws-sdk/generator/shape::to-query-params "ProviderName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider-name))))))
(common-lisp:progn
 (common-lisp:deftype portfolio-details ()
   '(trivial-types:proper-list portfolio-detail))
 (common-lisp:defun |make-portfolio-details|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list portfolio-detail))
   aws-sdk/generator/shape::members))
(common-lisp:deftype portfolio-display-name () 'common-lisp:string)
(common-lisp:deftype portfolio-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (principal (:copier common-lisp:nil))
   (principal-arn common-lisp:nil :type
    (common-lisp:or principal-arn common-lisp:null))
   (principal-type common-lisp:nil :type
    (common-lisp:or principal-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'principal 'make-principal))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape principal))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PrincipalARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'principal-arn)))
    (aws-sdk/generator/shape::to-query-params "PrincipalType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'principal-type))))))
(common-lisp:deftype principal-arn () 'common-lisp:string)
(common-lisp:deftype principal-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype principals () '(trivial-types:proper-list principal))
 (common-lisp:defun |make-principals|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list principal))
   aws-sdk/generator/shape::members))
(common-lisp:deftype product-source () 'common-lisp:string)
(common-lisp:deftype product-type () 'common-lisp:string)
(common-lisp:deftype product-view-aggregation-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (product-view-aggregation-value (:copier common-lisp:nil))
   (value common-lisp:nil :type
    (common-lisp:or attribute-value common-lisp:null))
   (approximate-count common-lisp:nil :type
    (common-lisp:or approximate-count common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'product-view-aggregation-value
                    'make-product-view-aggregation-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          product-view-aggregation-value))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "ApproximateCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'approximate-count))))))
(common-lisp:progn
 (common-lisp:deftype product-view-aggregation-values ()
   '(trivial-types:proper-list product-view-aggregation-value))
 (common-lisp:defun |make-product-view-aggregation-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            product-view-aggregation-value))
   aws-sdk/generator/shape::members))
(common-lisp:defstruct
    (product-view-aggregations
     (:constructor |make-product-view-aggregations|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (product-view-detail (:copier common-lisp:nil))
   (product-view-summary common-lisp:nil :type
    (common-lisp:or product-view-summary common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null))
   (product-arn common-lisp:nil :type
    (common-lisp:or resource-arn common-lisp:null))
   (created-time common-lisp:nil :type
    (common-lisp:or created-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'product-view-detail 'make-product-view-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape product-view-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProductViewSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-view-summary)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "ProductARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-arn)))
    (aws-sdk/generator/shape::to-query-params "CreatedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-time))))))
(common-lisp:progn
 (common-lisp:deftype product-view-details ()
   '(trivial-types:proper-list product-view-detail))
 (common-lisp:defun |make-product-view-details|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list product-view-detail))
   aws-sdk/generator/shape::members))
(common-lisp:deftype product-view-distributor () 'common-lisp:string)
(common-lisp:deftype product-view-filter-by () 'common-lisp:string)
(common-lisp:deftype product-view-filter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype product-view-filter-values ()
   '(trivial-types:proper-list product-view-filter-value))
 (common-lisp:defun |make-product-view-filter-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            product-view-filter-value))
   aws-sdk/generator/shape::members))
(common-lisp:defstruct
    (product-view-filters
     (:constructor |make-product-view-filters|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype product-view-name () 'common-lisp:string)
(common-lisp:deftype product-view-owner () 'common-lisp:string)
(common-lisp:deftype product-view-short-description () 'common-lisp:string)
(common-lisp:deftype product-view-sort-by () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype product-view-summaries ()
   '(trivial-types:proper-list product-view-summary))
 (common-lisp:defun |make-product-view-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list product-view-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (product-view-summary (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (product-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or product-view-name common-lisp:null))
   (owner common-lisp:nil :type
    (common-lisp:or product-view-owner common-lisp:null))
   (short-description common-lisp:nil :type
    (common-lisp:or product-view-short-description common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or product-type common-lisp:null))
   (distributor common-lisp:nil :type
    (common-lisp:or product-view-distributor common-lisp:null))
   (has-default-path common-lisp:nil :type
    (common-lisp:or has-default-path common-lisp:null))
   (support-email common-lisp:nil :type
    (common-lisp:or support-email common-lisp:null))
   (support-description common-lisp:nil :type
    (common-lisp:or support-description common-lisp:null))
   (support-url common-lisp:nil :type
    (common-lisp:or support-url common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'product-view-summary 'make-product-view-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape product-view-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "ProductId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Owner"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner)))
    (aws-sdk/generator/shape::to-query-params "ShortDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'short-description)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Distributor"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'distributor)))
    (aws-sdk/generator/shape::to-query-params "HasDefaultPath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'has-default-path)))
    (aws-sdk/generator/shape::to-query-params "SupportEmail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'support-email)))
    (aws-sdk/generator/shape::to-query-params "SupportDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'support-description)))
    (aws-sdk/generator/shape::to-query-params "SupportUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'support-url))))))
(common-lisp:deftype provider-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (provision-product-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (product-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":product-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (provisioning-artifact-id
    (common-lisp:error
     #A((37) common-lisp:base-char . ":provisioning-artifact-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (path-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (provisioned-product-name
    (common-lisp:error
     #A((37) common-lisp:base-char . ":provisioned-product-name is required"))
    :type (common-lisp:or provisioned-product-name common-lisp:null))
   (provisioning-parameters common-lisp:nil :type
    (common-lisp:or provisioning-parameters common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null))
   (notification-arns common-lisp:nil :type
    (common-lisp:or notification-arns common-lisp:null))
   (provision-token
    (common-lisp:error
     #A((28) common-lisp:base-char . ":provision-token is required"))
    :type (common-lisp:or idempotency-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'provision-product-input 'make-provision-product-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          provision-product-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "ProductId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-id)))
    (aws-sdk/generator/shape::to-query-params "ProvisioningArtifactId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioning-artifact-id)))
    (aws-sdk/generator/shape::to-query-params "PathId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path-id)))
    (aws-sdk/generator/shape::to-query-params "ProvisionedProductName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioned-product-name)))
    (aws-sdk/generator/shape::to-query-params "ProvisioningParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioning-parameters)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "NotificationArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification-arns)))
    (aws-sdk/generator/shape::to-query-params "ProvisionToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provision-token))))))
(common-lisp:progn
 (common-lisp:defstruct (provision-product-output (:copier common-lisp:nil))
   (record-detail common-lisp:nil :type
    (common-lisp:or record-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'provision-product-output 'make-provision-product-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          provision-product-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RecordDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-detail))))))
(common-lisp:progn
 (common-lisp:defstruct (provisioned-product-detail (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or provisioned-product-name-or-arn common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or provisioned-product-name-or-arn common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or provisioned-product-type common-lisp:null))
   (id common-lisp:nil :type
    (common-lisp:or provisioned-product-id common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or provisioned-product-status common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or provisioned-product-status-message common-lisp:null))
   (created-time common-lisp:nil :type
    (common-lisp:or created-time common-lisp:null))
   (idempotency-token common-lisp:nil :type
    (common-lisp:or idempotency-token common-lisp:null))
   (last-record-id common-lisp:nil :type
    (common-lisp:or last-request-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'provisioned-product-detail
                    'make-provisioned-product-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          provisioned-product-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "StatusMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-message)))
    (aws-sdk/generator/shape::to-query-params "CreatedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-time)))
    (aws-sdk/generator/shape::to-query-params "IdempotencyToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'idempotency-token)))
    (aws-sdk/generator/shape::to-query-params "LastRecordId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-record-id))))))
(common-lisp:progn
 (common-lisp:deftype provisioned-product-details ()
   '(trivial-types:proper-list provisioned-product-detail))
 (common-lisp:defun |make-provisioned-product-details|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            provisioned-product-detail))
   aws-sdk/generator/shape::members))
(common-lisp:deftype provisioned-product-id () 'common-lisp:string)
(common-lisp:deftype provisioned-product-name () 'common-lisp:string)
(common-lisp:deftype provisioned-product-name-or-arn () 'common-lisp:string)
(common-lisp:deftype provisioned-product-status () 'common-lisp:string)
(common-lisp:deftype provisioned-product-status-message () 'common-lisp:string)
(common-lisp:deftype provisioned-product-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (provisioning-artifact (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or provisioning-artifact-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or provisioning-artifact-description common-lisp:null))
   (created-time common-lisp:nil :type
    (common-lisp:or provisioning-artifact-created-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'provisioning-artifact 'make-provisioning-artifact))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          provisioning-artifact))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "CreatedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-time))))))
(common-lisp:deftype provisioning-artifact-created-time () 'common-lisp:string)
(common-lisp:deftype provisioning-artifact-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (provisioning-artifact-detail (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or provisioning-artifact-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or provisioning-artifact-name common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or provisioning-artifact-type common-lisp:null))
   (created-time common-lisp:nil :type
    (common-lisp:or creation-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'provisioning-artifact-detail
                    'make-provisioning-artifact-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          provisioning-artifact-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "CreatedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-time))))))
(common-lisp:progn
 (common-lisp:deftype provisioning-artifact-details ()
   '(trivial-types:proper-list provisioning-artifact-detail))
 (common-lisp:defun |make-provisioning-artifact-details|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            provisioning-artifact-detail))
   aws-sdk/generator/shape::members))
(common-lisp:defstruct
    (provisioning-artifact-info
     (:constructor |make-provisioning-artifact-info|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype provisioning-artifact-info-key () 'common-lisp:string)
(common-lisp:deftype provisioning-artifact-info-value () 'common-lisp:string)
(common-lisp:deftype provisioning-artifact-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (provisioning-artifact-parameter (:copier common-lisp:nil))
   (parameter-key common-lisp:nil :type
    (common-lisp:or parameter-key common-lisp:null))
   (default-value common-lisp:nil :type
    (common-lisp:or default-value common-lisp:null))
   (parameter-type common-lisp:nil :type
    (common-lisp:or parameter-type common-lisp:null))
   (is-no-echo common-lisp:nil :type (common-lisp:or no-echo common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (parameter-constraints common-lisp:nil :type
    (common-lisp:or parameter-constraints common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'provisioning-artifact-parameter
                    'make-provisioning-artifact-parameter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          provisioning-artifact-parameter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ParameterKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-key)))
    (aws-sdk/generator/shape::to-query-params "DefaultValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-value)))
    (aws-sdk/generator/shape::to-query-params "ParameterType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-type)))
    (aws-sdk/generator/shape::to-query-params "IsNoEcho"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-no-echo)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "ParameterConstraints"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter-constraints))))))
(common-lisp:progn
 (common-lisp:deftype provisioning-artifact-parameters ()
   '(trivial-types:proper-list provisioning-artifact-parameter))
 (common-lisp:defun |make-provisioning-artifact-parameters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            provisioning-artifact-parameter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (provisioning-artifact-properties (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or provisioning-artifact-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or provisioning-artifact-description common-lisp:null))
   (info
    (common-lisp:error #A((17) common-lisp:base-char . ":info is required"))
    :type (common-lisp:or provisioning-artifact-info common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or provisioning-artifact-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'provisioning-artifact-properties
                    'make-provisioning-artifact-properties))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          provisioning-artifact-properties))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Info"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'info)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type))))))
(common-lisp:progn
 (common-lisp:deftype provisioning-artifact-summaries ()
   '(trivial-types:proper-list provisioning-artifact-summary))
 (common-lisp:defun |make-provisioning-artifact-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            provisioning-artifact-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (provisioning-artifact-summary (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or provisioning-artifact-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or provisioning-artifact-description common-lisp:null))
   (created-time common-lisp:nil :type
    (common-lisp:or provisioning-artifact-created-time common-lisp:null))
   (provisioning-artifact-metadata common-lisp:nil :type
    (common-lisp:or provisioning-artifact-info common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'provisioning-artifact-summary
                    'make-provisioning-artifact-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          provisioning-artifact-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "CreatedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-time)))
    (aws-sdk/generator/shape::to-query-params "ProvisioningArtifactMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioning-artifact-metadata))))))
(common-lisp:deftype provisioning-artifact-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype provisioning-artifacts ()
   '(trivial-types:proper-list provisioning-artifact))
 (common-lisp:defun |make-provisioning-artifacts|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list provisioning-artifact))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (provisioning-parameter (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or parameter-key common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or parameter-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'provisioning-parameter 'make-provisioning-parameter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          provisioning-parameter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:deftype provisioning-parameters ()
   '(trivial-types:proper-list provisioning-parameter))
 (common-lisp:defun |make-provisioning-parameters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list provisioning-parameter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (record-detail (:copier common-lisp:nil))
   (record-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (provisioned-product-name common-lisp:nil :type
    (common-lisp:or provisioned-product-name common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or record-status common-lisp:null))
   (created-time common-lisp:nil :type
    (common-lisp:or created-time common-lisp:null))
   (updated-time common-lisp:nil :type
    (common-lisp:or updated-time common-lisp:null))
   (provisioned-product-type common-lisp:nil :type
    (common-lisp:or provisioned-product-type common-lisp:null))
   (record-type common-lisp:nil :type
    (common-lisp:or record-type common-lisp:null))
   (provisioned-product-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (product-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (provisioning-artifact-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (path-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (record-errors common-lisp:nil :type
    (common-lisp:or record-errors common-lisp:null))
   (record-tags common-lisp:nil :type
    (common-lisp:or record-tags common-lisp:null)))
 (common-lisp:export (common-lisp:list 'record-detail 'make-record-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape record-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RecordId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-id)))
    (aws-sdk/generator/shape::to-query-params "ProvisionedProductName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioned-product-name)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "CreatedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-time)))
    (aws-sdk/generator/shape::to-query-params "UpdatedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'updated-time)))
    (aws-sdk/generator/shape::to-query-params "ProvisionedProductType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioned-product-type)))
    (aws-sdk/generator/shape::to-query-params "RecordType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-type)))
    (aws-sdk/generator/shape::to-query-params "ProvisionedProductId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioned-product-id)))
    (aws-sdk/generator/shape::to-query-params "ProductId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-id)))
    (aws-sdk/generator/shape::to-query-params "ProvisioningArtifactId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioning-artifact-id)))
    (aws-sdk/generator/shape::to-query-params "PathId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path-id)))
    (aws-sdk/generator/shape::to-query-params "RecordErrors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-errors)))
    (aws-sdk/generator/shape::to-query-params "RecordTags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-tags))))))
(common-lisp:progn
 (common-lisp:deftype record-details ()
   '(trivial-types:proper-list record-detail))
 (common-lisp:defun |make-record-details|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list record-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (record-error (:copier common-lisp:nil))
   (code common-lisp:nil :type (common-lisp:or error-code common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or error-description common-lisp:null)))
 (common-lisp:export (common-lisp:list 'record-error 'make-record-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape record-error))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:deftype record-errors ()
   '(trivial-types:proper-list record-error))
 (common-lisp:defun |make-record-errors|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list record-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (record-output (:copier common-lisp:nil))
   (output-key common-lisp:nil :type
    (common-lisp:or output-key common-lisp:null))
   (output-value common-lisp:nil :type
    (common-lisp:or output-value common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null)))
 (common-lisp:export (common-lisp:list 'record-output 'make-record-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape record-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OutputKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-key)))
    (aws-sdk/generator/shape::to-query-params "OutputValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-value)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:deftype record-outputs ()
   '(trivial-types:proper-list record-output))
 (common-lisp:defun |make-record-outputs|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list record-output))
   aws-sdk/generator/shape::members))
(common-lisp:deftype record-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (record-tag (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or record-tag-key common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or record-tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'record-tag 'make-record-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape record-tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype record-tag-key () 'common-lisp:string)
(common-lisp:deftype record-tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype record-tags () '(trivial-types:proper-list record-tag))
 (common-lisp:defun |make-record-tags|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list record-tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype record-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (reject-portfolio-share-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (portfolio-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":portfolio-id is required"))
    :type (common-lisp:or id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reject-portfolio-share-input
                    'make-reject-portfolio-share-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          reject-portfolio-share-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "PortfolioId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'portfolio-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (reject-portfolio-share-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'reject-portfolio-share-output
                    'make-reject-portfolio-share-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          reject-portfolio-share-output))
   (common-lisp:append)))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (resource-detail (:copier common-lisp:nil))
   (id common-lisp:nil :type
    (common-lisp:or resource-detail-id common-lisp:null))
   (arn common-lisp:nil :type
    (common-lisp:or resource-detail-arn common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or resource-detail-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or resource-detail-description common-lisp:null))
   (created-time common-lisp:nil :type
    (common-lisp:or resource-detail-created-time common-lisp:null)))
 (common-lisp:export (common-lisp:list 'resource-detail 'make-resource-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape resource-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "ARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "CreatedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-time))))))
(common-lisp:deftype resource-detail-arn () 'common-lisp:string)
(common-lisp:deftype resource-detail-created-time () 'common-lisp:string)
(common-lisp:deftype resource-detail-description () 'common-lisp:string)
(common-lisp:deftype resource-detail-id () 'common-lisp:string)
(common-lisp:deftype resource-detail-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype resource-details ()
   '(trivial-types:proper-list resource-detail))
 (common-lisp:defun |make-resource-details|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-detail))
   aws-sdk/generator/shape::members))
(common-lisp:deftype resource-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (resource-in-use-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'resource-in-use-exception
                    'make-resource-in-use-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-in-use-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'make-resource-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-not-found-exception))
   (common-lisp:append)))
(common-lisp:deftype resource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (scan-provisioned-products-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (access-level-filter common-lisp:nil :type
    (common-lisp:or access-level-filter common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null))
   (page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'scan-provisioned-products-input
                    'make-scan-provisioned-products-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          scan-provisioned-products-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "AccessLevelFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-level-filter)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size)))
    (aws-sdk/generator/shape::to-query-params "PageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (scan-provisioned-products-output (:copier common-lisp:nil))
   (provisioned-products common-lisp:nil :type
    (common-lisp:or provisioned-product-details common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'scan-provisioned-products-output
                    'make-scan-provisioned-products-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          scan-provisioned-products-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProvisionedProducts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioned-products)))
    (aws-sdk/generator/shape::to-query-params "NextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:deftype search-filter-key () 'common-lisp:string)
(common-lisp:deftype search-filter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (search-products-as-admin-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (portfolio-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or product-view-filters common-lisp:null))
   (sort-by common-lisp:nil :type
    (common-lisp:or product-view-sort-by common-lisp:null))
   (sort-order common-lisp:nil :type
    (common-lisp:or sort-order common-lisp:null))
   (page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null))
   (product-source common-lisp:nil :type
    (common-lisp:or product-source common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'search-products-as-admin-input
                    'make-search-products-as-admin-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          search-products-as-admin-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "PortfolioId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'portfolio-id)))
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "SortBy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-by)))
    (aws-sdk/generator/shape::to-query-params "SortOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-order)))
    (aws-sdk/generator/shape::to-query-params "PageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size)))
    (aws-sdk/generator/shape::to-query-params "ProductSource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-source))))))
(common-lisp:progn
 (common-lisp:defstruct
     (search-products-as-admin-output (:copier common-lisp:nil))
   (product-view-details common-lisp:nil :type
    (common-lisp:or product-view-details common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'search-products-as-admin-output
                    'make-search-products-as-admin-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          search-products-as-admin-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProductViewDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-view-details)))
    (aws-sdk/generator/shape::to-query-params "NextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (search-products-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (filters common-lisp:nil :type
    (common-lisp:or product-view-filters common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null))
   (sort-by common-lisp:nil :type
    (common-lisp:or product-view-sort-by common-lisp:null))
   (sort-order common-lisp:nil :type
    (common-lisp:or sort-order common-lisp:null))
   (page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'search-products-input 'make-search-products-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          search-products-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "Filters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filters)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size)))
    (aws-sdk/generator/shape::to-query-params "SortBy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-by)))
    (aws-sdk/generator/shape::to-query-params "SortOrder"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sort-order)))
    (aws-sdk/generator/shape::to-query-params "PageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-token))))))
(common-lisp:progn
 (common-lisp:defstruct (search-products-output (:copier common-lisp:nil))
   (product-view-summaries common-lisp:nil :type
    (common-lisp:or product-view-summaries common-lisp:null))
   (product-view-aggregations common-lisp:nil :type
    (common-lisp:or product-view-aggregations common-lisp:null))
   (next-page-token common-lisp:nil :type
    (common-lisp:or page-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'search-products-output 'make-search-products-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          search-products-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProductViewSummaries"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-view-summaries)))
    (aws-sdk/generator/shape::to-query-params "ProductViewAggregations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-view-aggregations)))
    (aws-sdk/generator/shape::to-query-params "NextPageToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-page-token))))))
(common-lisp:deftype sort-order () 'common-lisp:string)
(common-lisp:deftype status () 'common-lisp:string)
(common-lisp:deftype support-description () 'common-lisp:string)
(common-lisp:deftype support-email () 'common-lisp:string)
(common-lisp:deftype support-url () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (tag (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or tag-key common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-keys () '(trivial-types:proper-list tag-key))
 (common-lisp:defun |make-tag-keys|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-option-active () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (tag-option-detail (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or tag-option-key common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or tag-option-value common-lisp:null))
   (active common-lisp:nil :type
    (common-lisp:or tag-option-active common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or tag-option-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-option-detail 'make-tag-option-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag-option-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "Active"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'active)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:deftype tag-option-details ()
   '(trivial-types:proper-list tag-option-detail))
 (common-lisp:defun |make-tag-option-details|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-option-detail))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-option-id () 'common-lisp:string)
(common-lisp:deftype tag-option-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (tag-option-not-migrated-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'tag-option-not-migrated-exception
                    'make-tag-option-not-migrated-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          tag-option-not-migrated-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:deftype tag-option-summaries ()
   '(trivial-types:proper-list tag-option-summary))
 (common-lisp:defun |make-tag-option-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-option-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (tag-option-summary (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or tag-option-key common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or tag-option-values common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-option-summary 'make-tag-option-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag-option-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values))))))
(common-lisp:deftype tag-option-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-option-values ()
   '(trivial-types:proper-list tag-option-value))
 (common-lisp:defun |make-tag-option-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-option-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tags () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tags|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (terminate-provisioned-product-input (:copier common-lisp:nil))
   (provisioned-product-name common-lisp:nil :type
    (common-lisp:or provisioned-product-name-or-arn common-lisp:null))
   (provisioned-product-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (terminate-token
    (common-lisp:error
     #A((28) common-lisp:base-char . ":terminate-token is required"))
    :type (common-lisp:or idempotency-token common-lisp:null))
   (ignore-errors common-lisp:nil :type
    (common-lisp:or ignore-errors common-lisp:null))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'terminate-provisioned-product-input
                    'make-terminate-provisioned-product-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          terminate-provisioned-product-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProvisionedProductName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioned-product-name)))
    (aws-sdk/generator/shape::to-query-params "ProvisionedProductId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioned-product-id)))
    (aws-sdk/generator/shape::to-query-params "TerminateToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'terminate-token)))
    (aws-sdk/generator/shape::to-query-params "IgnoreErrors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ignore-errors)))
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language))))))
(common-lisp:progn
 (common-lisp:defstruct
     (terminate-provisioned-product-output (:copier common-lisp:nil))
   (record-detail common-lisp:nil :type
    (common-lisp:or record-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'terminate-provisioned-product-output
                    'make-terminate-provisioned-product-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          terminate-provisioned-product-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RecordDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-detail))))))
(common-lisp:progn
 (common-lisp:defstruct (update-constraint-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or constraint-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-constraint-input 'make-update-constraint-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-constraint-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:defstruct (update-constraint-output (:copier common-lisp:nil))
   (constraint-detail common-lisp:nil :type
    (common-lisp:or constraint-detail common-lisp:null))
   (constraint-parameters common-lisp:nil :type
    (common-lisp:or constraint-parameters common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-constraint-output 'make-update-constraint-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-constraint-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ConstraintDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'constraint-detail)))
    (aws-sdk/generator/shape::to-query-params "ConstraintParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'constraint-parameters)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:defstruct (update-portfolio-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null))
   (display-name common-lisp:nil :type
    (common-lisp:or portfolio-display-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or portfolio-description common-lisp:null))
   (provider-name common-lisp:nil :type
    (common-lisp:or provider-name common-lisp:null))
   (add-tags common-lisp:nil :type (common-lisp:or add-tags common-lisp:null))
   (remove-tags common-lisp:nil :type
    (common-lisp:or tag-keys common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-portfolio-input 'make-update-portfolio-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-portfolio-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "DisplayName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'display-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "ProviderName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider-name)))
    (aws-sdk/generator/shape::to-query-params "AddTags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'add-tags)))
    (aws-sdk/generator/shape::to-query-params "RemoveTags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'remove-tags))))))
(common-lisp:progn
 (common-lisp:defstruct (update-portfolio-output (:copier common-lisp:nil))
   (portfolio-detail common-lisp:nil :type
    (common-lisp:or portfolio-detail common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-portfolio-output 'make-update-portfolio-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-portfolio-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PortfolioDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'portfolio-detail)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (update-product-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or product-view-name common-lisp:null))
   (owner common-lisp:nil :type
    (common-lisp:or product-view-owner common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or product-view-short-description common-lisp:null))
   (distributor common-lisp:nil :type
    (common-lisp:or product-view-owner common-lisp:null))
   (support-description common-lisp:nil :type
    (common-lisp:or support-description common-lisp:null))
   (support-email common-lisp:nil :type
    (common-lisp:or support-email common-lisp:null))
   (support-url common-lisp:nil :type
    (common-lisp:or support-url common-lisp:null))
   (add-tags common-lisp:nil :type (common-lisp:or add-tags common-lisp:null))
   (remove-tags common-lisp:nil :type
    (common-lisp:or tag-keys common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-product-input 'make-update-product-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-product-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Owner"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Distributor"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'distributor)))
    (aws-sdk/generator/shape::to-query-params "SupportDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'support-description)))
    (aws-sdk/generator/shape::to-query-params "SupportEmail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'support-email)))
    (aws-sdk/generator/shape::to-query-params "SupportUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'support-url)))
    (aws-sdk/generator/shape::to-query-params "AddTags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'add-tags)))
    (aws-sdk/generator/shape::to-query-params "RemoveTags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'remove-tags))))))
(common-lisp:progn
 (common-lisp:defstruct (update-product-output (:copier common-lisp:nil))
   (product-view-detail common-lisp:nil :type
    (common-lisp:or product-view-detail common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tags common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-product-output 'make-update-product-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-product-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProductViewDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-view-detail)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-provisioned-product-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (provisioned-product-name common-lisp:nil :type
    (common-lisp:or provisioned-product-name-or-arn common-lisp:null))
   (provisioned-product-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (product-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (provisioning-artifact-id common-lisp:nil :type
    (common-lisp:or id common-lisp:null))
   (path-id common-lisp:nil :type (common-lisp:or id common-lisp:null))
   (provisioning-parameters common-lisp:nil :type
    (common-lisp:or update-provisioning-parameters common-lisp:null))
   (update-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":update-token is required"))
    :type (common-lisp:or idempotency-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-provisioned-product-input
                    'make-update-provisioned-product-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-provisioned-product-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "ProvisionedProductName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioned-product-name)))
    (aws-sdk/generator/shape::to-query-params "ProvisionedProductId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioned-product-id)))
    (aws-sdk/generator/shape::to-query-params "ProductId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-id)))
    (aws-sdk/generator/shape::to-query-params "ProvisioningArtifactId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioning-artifact-id)))
    (aws-sdk/generator/shape::to-query-params "PathId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path-id)))
    (aws-sdk/generator/shape::to-query-params "ProvisioningParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioning-parameters)))
    (aws-sdk/generator/shape::to-query-params "UpdateToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'update-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-provisioned-product-output (:copier common-lisp:nil))
   (record-detail common-lisp:nil :type
    (common-lisp:or record-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-provisioned-product-output
                    'make-update-provisioned-product-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-provisioned-product-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RecordDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-detail))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-provisioning-artifact-input (:copier common-lisp:nil))
   (accept-language common-lisp:nil :type
    (common-lisp:or accept-language common-lisp:null))
   (product-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":product-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (provisioning-artifact-id
    (common-lisp:error
     #A((37) common-lisp:base-char . ":provisioning-artifact-id is required"))
    :type (common-lisp:or id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or provisioning-artifact-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or provisioning-artifact-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-provisioning-artifact-input
                    'make-update-provisioning-artifact-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-provisioning-artifact-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AcceptLanguage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-language)))
    (aws-sdk/generator/shape::to-query-params "ProductId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-id)))
    (aws-sdk/generator/shape::to-query-params "ProvisioningArtifactId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioning-artifact-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-provisioning-artifact-output (:copier common-lisp:nil))
   (provisioning-artifact-detail common-lisp:nil :type
    (common-lisp:or provisioning-artifact-detail common-lisp:null))
   (info common-lisp:nil :type
    (common-lisp:or provisioning-artifact-info common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-provisioning-artifact-output
                    'make-update-provisioning-artifact-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-provisioning-artifact-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProvisioningArtifactDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioning-artifact-detail)))
    (aws-sdk/generator/shape::to-query-params "Info"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'info)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-provisioning-parameter (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or parameter-key common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or parameter-value common-lisp:null))
   (use-previous-value common-lisp:nil :type
    (common-lisp:or use-previous-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-provisioning-parameter
                    'make-update-provisioning-parameter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-provisioning-parameter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "UsePreviousValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'use-previous-value))))))
(common-lisp:progn
 (common-lisp:deftype update-provisioning-parameters ()
   '(trivial-types:proper-list update-provisioning-parameter))
 (common-lisp:defun |make-update-provisioning-parameters|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            update-provisioning-parameter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (update-tag-option-input (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or tag-option-id common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or tag-option-value common-lisp:null))
   (active common-lisp:nil :type
    (common-lisp:or tag-option-active common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-tag-option-input 'make-update-tag-option-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-tag-option-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "Active"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'active))))))
(common-lisp:progn
 (common-lisp:defstruct (update-tag-option-output (:copier common-lisp:nil))
   (tag-option-detail common-lisp:nil :type
    (common-lisp:or tag-option-detail common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-tag-option-output 'make-update-tag-option-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-tag-option-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TagOptionDetail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-option-detail))))))
(common-lisp:deftype updated-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (usage-instruction (:copier common-lisp:nil))
   (type common-lisp:nil :type
    (common-lisp:or instruction-type common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or instruction-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'usage-instruction 'make-usage-instruction))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape usage-instruction))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:deftype usage-instructions ()
   '(trivial-types:proper-list usage-instruction))
 (common-lisp:defun |make-usage-instructions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list usage-instruction))
   aws-sdk/generator/shape::members))
(common-lisp:deftype use-previous-value () 'common-lisp:boolean)
(common-lisp:deftype verbose () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defun accept-portfolio-share
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language portfolio-id)
   (common-lisp:declare (common-lisp:ignorable accept-language portfolio-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-accept-portfolio-share-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AcceptPortfolioShare")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AcceptPortfolioShareOutput" common-lisp:nil)))
 (common-lisp:export 'accept-portfolio-share))
(common-lisp:progn
 (common-lisp:defun associate-principal-with-portfolio
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language portfolio-id
                     principal-arn principal-type)
   (common-lisp:declare
    (common-lisp:ignorable accept-language portfolio-id principal-arn
     principal-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-principal-with-portfolio-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"AssociatePrincipalWithPortfolio")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AssociatePrincipalWithPortfolioOutput" common-lisp:nil)))
 (common-lisp:export 'associate-principal-with-portfolio))
(common-lisp:progn
 (common-lisp:defun associate-product-with-portfolio
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language product-id portfolio-id
                     source-portfolio-id)
   (common-lisp:declare
    (common-lisp:ignorable accept-language product-id portfolio-id
     source-portfolio-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-product-with-portfolio-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AssociateProductWithPortfolio")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AssociateProductWithPortfolioOutput" common-lisp:nil)))
 (common-lisp:export 'associate-product-with-portfolio))
(common-lisp:progn
 (common-lisp:defun associate-tag-option-with-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-id tag-option-id)
   (common-lisp:declare (common-lisp:ignorable resource-id tag-option-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-tag-option-with-resource-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AssociateTagOptionWithResource")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AssociateTagOptionWithResourceOutput" common-lisp:nil)))
 (common-lisp:export 'associate-tag-option-with-resource))
(common-lisp:progn
 (common-lisp:defun create-constraint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language portfolio-id product-id
                     parameters type description idempotency-token)
   (common-lisp:declare
    (common-lisp:ignorable accept-language portfolio-id product-id parameters
     type description idempotency-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-constraint-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateConstraint")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateConstraintOutput" common-lisp:nil)))
 (common-lisp:export 'create-constraint))
(common-lisp:progn
 (common-lisp:defun create-portfolio
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language display-name description
                     provider-name tags idempotency-token)
   (common-lisp:declare
    (common-lisp:ignorable accept-language display-name description
     provider-name tags idempotency-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-portfolio-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreatePortfolio")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreatePortfolioOutput" common-lisp:nil)))
 (common-lisp:export 'create-portfolio))
(common-lisp:progn
 (common-lisp:defun create-portfolio-share
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language portfolio-id account-id)
   (common-lisp:declare
    (common-lisp:ignorable accept-language portfolio-id account-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-portfolio-share-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreatePortfolioShare")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreatePortfolioShareOutput" common-lisp:nil)))
 (common-lisp:export 'create-portfolio-share))
(common-lisp:progn
 (common-lisp:defun create-product
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language name owner description
                     distributor support-description support-email support-url
                     product-type tags provisioning-artifact-parameters
                     idempotency-token)
   (common-lisp:declare
    (common-lisp:ignorable accept-language name owner description distributor
     support-description support-email support-url product-type tags
     provisioning-artifact-parameters idempotency-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-product-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateProduct")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateProductOutput" common-lisp:nil)))
 (common-lisp:export 'create-product))
(common-lisp:progn
 (common-lisp:defun create-provisioning-artifact
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language product-id parameters
                     idempotency-token)
   (common-lisp:declare
    (common-lisp:ignorable accept-language product-id parameters
     idempotency-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-provisioning-artifact-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateProvisioningArtifact")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateProvisioningArtifactOutput" common-lisp:nil)))
 (common-lisp:export 'create-provisioning-artifact))
(common-lisp:progn
 (common-lisp:defun create-tag-option
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key key value)
   (common-lisp:declare (common-lisp:ignorable key value))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-tag-option-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateTagOption")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateTagOptionOutput" common-lisp:nil)))
 (common-lisp:export 'create-tag-option))
(common-lisp:progn
 (common-lisp:defun delete-constraint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language id)
   (common-lisp:declare (common-lisp:ignorable accept-language id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-constraint-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteConstraint")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteConstraintOutput" common-lisp:nil)))
 (common-lisp:export 'delete-constraint))
(common-lisp:progn
 (common-lisp:defun delete-portfolio
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language id)
   (common-lisp:declare (common-lisp:ignorable accept-language id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-portfolio-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeletePortfolio")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeletePortfolioOutput" common-lisp:nil)))
 (common-lisp:export 'delete-portfolio))
(common-lisp:progn
 (common-lisp:defun delete-portfolio-share
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language portfolio-id account-id)
   (common-lisp:declare
    (common-lisp:ignorable accept-language portfolio-id account-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-portfolio-share-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeletePortfolioShare")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeletePortfolioShareOutput" common-lisp:nil)))
 (common-lisp:export 'delete-portfolio-share))
(common-lisp:progn
 (common-lisp:defun delete-product
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language id)
   (common-lisp:declare (common-lisp:ignorable accept-language id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-product-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteProduct")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteProductOutput" common-lisp:nil)))
 (common-lisp:export 'delete-product))
(common-lisp:progn
 (common-lisp:defun delete-provisioning-artifact
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language product-id
                     provisioning-artifact-id)
   (common-lisp:declare
    (common-lisp:ignorable accept-language product-id
     provisioning-artifact-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-provisioning-artifact-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteProvisioningArtifact")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteProvisioningArtifactOutput" common-lisp:nil)))
 (common-lisp:export 'delete-provisioning-artifact))
(common-lisp:progn
 (common-lisp:defun describe-constraint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language id)
   (common-lisp:declare (common-lisp:ignorable accept-language id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-constraint-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeConstraint")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeConstraintOutput" common-lisp:nil)))
 (common-lisp:export 'describe-constraint))
(common-lisp:progn
 (common-lisp:defun describe-portfolio
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language id)
   (common-lisp:declare (common-lisp:ignorable accept-language id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-portfolio-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribePortfolio")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribePortfolioOutput" common-lisp:nil)))
 (common-lisp:export 'describe-portfolio))
(common-lisp:progn
 (common-lisp:defun describe-product
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language id)
   (common-lisp:declare (common-lisp:ignorable accept-language id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-product-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeProduct")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeProductOutput" common-lisp:nil)))
 (common-lisp:export 'describe-product))
(common-lisp:progn
 (common-lisp:defun describe-product-as-admin
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language id)
   (common-lisp:declare (common-lisp:ignorable accept-language id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-product-as-admin-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeProductAsAdmin")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeProductAsAdminOutput" common-lisp:nil)))
 (common-lisp:export 'describe-product-as-admin))
(common-lisp:progn
 (common-lisp:defun describe-product-view
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language id)
   (common-lisp:declare (common-lisp:ignorable accept-language id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-product-view-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeProductView")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeProductViewOutput" common-lisp:nil)))
 (common-lisp:export 'describe-product-view))
(common-lisp:progn
 (common-lisp:defun describe-provisioned-product
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language id)
   (common-lisp:declare (common-lisp:ignorable accept-language id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-provisioned-product-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeProvisionedProduct")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeProvisionedProductOutput" common-lisp:nil)))
 (common-lisp:export 'describe-provisioned-product))
(common-lisp:progn
 (common-lisp:defun describe-provisioning-artifact
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language provisioning-artifact-id
                     product-id verbose)
   (common-lisp:declare
    (common-lisp:ignorable accept-language provisioning-artifact-id product-id
     verbose))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-provisioning-artifact-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeProvisioningArtifact")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeProvisioningArtifactOutput" common-lisp:nil)))
 (common-lisp:export 'describe-provisioning-artifact))
(common-lisp:progn
 (common-lisp:defun describe-provisioning-parameters
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language product-id
                     provisioning-artifact-id path-id)
   (common-lisp:declare
    (common-lisp:ignorable accept-language product-id provisioning-artifact-id
     path-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-provisioning-parameters-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeProvisioningParameters")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeProvisioningParametersOutput" common-lisp:nil)))
 (common-lisp:export 'describe-provisioning-parameters))
(common-lisp:progn
 (common-lisp:defun describe-record
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language id page-token page-size)
   (common-lisp:declare
    (common-lisp:ignorable accept-language id page-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-record-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeRecord")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeRecordOutput" common-lisp:nil)))
 (common-lisp:export 'describe-record))
(common-lisp:progn
 (common-lisp:defun describe-tag-option
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-tag-option-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeTagOption")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeTagOptionOutput" common-lisp:nil)))
 (common-lisp:export 'describe-tag-option))
(common-lisp:progn
 (common-lisp:defun disassociate-principal-from-portfolio
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language portfolio-id
                     principal-arn)
   (common-lisp:declare
    (common-lisp:ignorable accept-language portfolio-id principal-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-principal-from-portfolio-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DisassociatePrincipalFromPortfolio")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DisassociatePrincipalFromPortfolioOutput" common-lisp:nil)))
 (common-lisp:export 'disassociate-principal-from-portfolio))
(common-lisp:progn
 (common-lisp:defun disassociate-product-from-portfolio
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language product-id portfolio-id)
   (common-lisp:declare
    (common-lisp:ignorable accept-language product-id portfolio-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-product-from-portfolio-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DisassociateProductFromPortfolio")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DisassociateProductFromPortfolioOutput" common-lisp:nil)))
 (common-lisp:export 'disassociate-product-from-portfolio))
(common-lisp:progn
 (common-lisp:defun disassociate-tag-option-from-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-id tag-option-id)
   (common-lisp:declare (common-lisp:ignorable resource-id tag-option-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-tag-option-from-resource-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DisassociateTagOptionFromResource")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DisassociateTagOptionFromResourceOutput" common-lisp:nil)))
 (common-lisp:export 'disassociate-tag-option-from-resource))
(common-lisp:progn
 (common-lisp:defun list-accepted-portfolio-shares
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language page-token page-size)
   (common-lisp:declare
    (common-lisp:ignorable accept-language page-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-accepted-portfolio-shares-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListAcceptedPortfolioShares")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListAcceptedPortfolioSharesOutput" common-lisp:nil)))
 (common-lisp:export 'list-accepted-portfolio-shares))
(common-lisp:progn
 (common-lisp:defun list-constraints-for-portfolio
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language portfolio-id product-id
                     page-size page-token)
   (common-lisp:declare
    (common-lisp:ignorable accept-language portfolio-id product-id page-size
     page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-constraints-for-portfolio-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListConstraintsForPortfolio")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListConstraintsForPortfolioOutput" common-lisp:nil)))
 (common-lisp:export 'list-constraints-for-portfolio))
(common-lisp:progn
 (common-lisp:defun list-launch-paths
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language product-id page-size
                     page-token)
   (common-lisp:declare
    (common-lisp:ignorable accept-language product-id page-size page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-launch-paths-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListLaunchPaths")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListLaunchPathsOutput" common-lisp:nil)))
 (common-lisp:export 'list-launch-paths))
(common-lisp:progn
 (common-lisp:defun list-portfolio-access
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language portfolio-id)
   (common-lisp:declare (common-lisp:ignorable accept-language portfolio-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-portfolio-access-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListPortfolioAccess")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListPortfolioAccessOutput" common-lisp:nil)))
 (common-lisp:export 'list-portfolio-access))
(common-lisp:progn
 (common-lisp:defun list-portfolios
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language page-token page-size)
   (common-lisp:declare
    (common-lisp:ignorable accept-language page-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-portfolios-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListPortfolios")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListPortfoliosOutput" common-lisp:nil)))
 (common-lisp:export 'list-portfolios))
(common-lisp:progn
 (common-lisp:defun list-portfolios-for-product
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language product-id page-token
                     page-size)
   (common-lisp:declare
    (common-lisp:ignorable accept-language product-id page-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-portfolios-for-product-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListPortfoliosForProduct")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListPortfoliosForProductOutput" common-lisp:nil)))
 (common-lisp:export 'list-portfolios-for-product))
(common-lisp:progn
 (common-lisp:defun list-principals-for-portfolio
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language portfolio-id page-size
                     page-token)
   (common-lisp:declare
    (common-lisp:ignorable accept-language portfolio-id page-size page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-principals-for-portfolio-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListPrincipalsForPortfolio")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListPrincipalsForPortfolioOutput" common-lisp:nil)))
 (common-lisp:export 'list-principals-for-portfolio))
(common-lisp:progn
 (common-lisp:defun list-provisioning-artifacts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language product-id)
   (common-lisp:declare (common-lisp:ignorable accept-language product-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-provisioning-artifacts-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListProvisioningArtifacts")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListProvisioningArtifactsOutput" common-lisp:nil)))
 (common-lisp:export 'list-provisioning-artifacts))
(common-lisp:progn
 (common-lisp:defun list-record-history
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language access-level-filter
                     search-filter page-size page-token)
   (common-lisp:declare
    (common-lisp:ignorable accept-language access-level-filter search-filter
     page-size page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-record-history-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListRecordHistory")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListRecordHistoryOutput" common-lisp:nil)))
 (common-lisp:export 'list-record-history))
(common-lisp:progn
 (common-lisp:defun list-resources-for-tag-option
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tag-option-id resource-type page-size
                     page-token)
   (common-lisp:declare
    (common-lisp:ignorable tag-option-id resource-type page-size page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-resources-for-tag-option-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListResourcesForTagOption")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListResourcesForTagOptionOutput" common-lisp:nil)))
 (common-lisp:export 'list-resources-for-tag-option))
(common-lisp:progn
 (common-lisp:defun list-tag-options
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filters page-size page-token)
   (common-lisp:declare (common-lisp:ignorable filters page-size page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tag-options-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListTagOptions")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListTagOptionsOutput" common-lisp:nil)))
 (common-lisp:export 'list-tag-options))
(common-lisp:progn
 (common-lisp:defun provision-product
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language product-id
                     provisioning-artifact-id path-id provisioned-product-name
                     provisioning-parameters tags notification-arns
                     provision-token)
   (common-lisp:declare
    (common-lisp:ignorable accept-language product-id provisioning-artifact-id
     path-id provisioned-product-name provisioning-parameters tags
     notification-arns provision-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-provision-product-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ProvisionProduct")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ProvisionProductOutput" common-lisp:nil)))
 (common-lisp:export 'provision-product))
(common-lisp:progn
 (common-lisp:defun reject-portfolio-share
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language portfolio-id)
   (common-lisp:declare (common-lisp:ignorable accept-language portfolio-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-reject-portfolio-share-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RejectPortfolioShare")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RejectPortfolioShareOutput" common-lisp:nil)))
 (common-lisp:export 'reject-portfolio-share))
(common-lisp:progn
 (common-lisp:defun scan-provisioned-products
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language access-level-filter
                     page-size page-token)
   (common-lisp:declare
    (common-lisp:ignorable accept-language access-level-filter page-size
     page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-scan-provisioned-products-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ScanProvisionedProducts")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ScanProvisionedProductsOutput" common-lisp:nil)))
 (common-lisp:export 'scan-provisioned-products))
(common-lisp:progn
 (common-lisp:defun search-products
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language filters page-size sort-by
                     sort-order page-token)
   (common-lisp:declare
    (common-lisp:ignorable accept-language filters page-size sort-by sort-order
     page-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-search-products-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SearchProducts")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SearchProductsOutput" common-lisp:nil)))
 (common-lisp:export 'search-products))
(common-lisp:progn
 (common-lisp:defun search-products-as-admin
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language portfolio-id filters
                     sort-by sort-order page-token page-size product-source)
   (common-lisp:declare
    (common-lisp:ignorable accept-language portfolio-id filters sort-by
     sort-order page-token page-size product-source))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-search-products-as-admin-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SearchProductsAsAdmin")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SearchProductsAsAdminOutput" common-lisp:nil)))
 (common-lisp:export 'search-products-as-admin))
(common-lisp:progn
 (common-lisp:defun terminate-provisioned-product
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key provisioned-product-name
                     provisioned-product-id terminate-token ignore-errors
                     accept-language)
   (common-lisp:declare
    (common-lisp:ignorable provisioned-product-name provisioned-product-id
     terminate-token ignore-errors accept-language))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-terminate-provisioned-product-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"TerminateProvisionedProduct")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "TerminateProvisionedProductOutput" common-lisp:nil)))
 (common-lisp:export 'terminate-provisioned-product))
(common-lisp:progn
 (common-lisp:defun update-constraint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language id description)
   (common-lisp:declare (common-lisp:ignorable accept-language id description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-constraint-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateConstraint")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateConstraintOutput" common-lisp:nil)))
 (common-lisp:export 'update-constraint))
(common-lisp:progn
 (common-lisp:defun update-portfolio
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language id display-name
                     description provider-name add-tags remove-tags)
   (common-lisp:declare
    (common-lisp:ignorable accept-language id display-name description
     provider-name add-tags remove-tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-portfolio-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdatePortfolio")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdatePortfolioOutput" common-lisp:nil)))
 (common-lisp:export 'update-portfolio))
(common-lisp:progn
 (common-lisp:defun update-product
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language id name owner description
                     distributor support-description support-email support-url
                     add-tags remove-tags)
   (common-lisp:declare
    (common-lisp:ignorable accept-language id name owner description
     distributor support-description support-email support-url add-tags
     remove-tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-product-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateProduct")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateProductOutput" common-lisp:nil)))
 (common-lisp:export 'update-product))
(common-lisp:progn
 (common-lisp:defun update-provisioned-product
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language provisioned-product-name
                     provisioned-product-id product-id provisioning-artifact-id
                     path-id provisioning-parameters update-token)
   (common-lisp:declare
    (common-lisp:ignorable accept-language provisioned-product-name
     provisioned-product-id product-id provisioning-artifact-id path-id
     provisioning-parameters update-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-provisioned-product-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateProvisionedProduct")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateProvisionedProductOutput" common-lisp:nil)))
 (common-lisp:export 'update-provisioned-product))
(common-lisp:progn
 (common-lisp:defun update-provisioning-artifact
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key accept-language product-id
                     provisioning-artifact-id name description)
   (common-lisp:declare
    (common-lisp:ignorable accept-language product-id provisioning-artifact-id
     name description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-provisioning-artifact-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateProvisioningArtifact")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateProvisioningArtifactOutput" common-lisp:nil)))
 (common-lisp:export 'update-provisioning-artifact))
(common-lisp:progn
 (common-lisp:defun update-tag-option
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id value active)
   (common-lisp:declare (common-lisp:ignorable id value active))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-tag-option-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((14) common-lisp:base-char
                                  . "servicecatalog")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateTagOption")
                                  ("Version" ,@"2015-12-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateTagOptionOutput" common-lisp:nil)))
 (common-lisp:export 'update-tag-option))