;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/workspaces
  (:use)
  (:nicknames #:aws/workspaces)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/workspaces)

(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (access-denied-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'make-access-denied-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          access-denied-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype alias () 'common-lisp:string)
(common-lisp:deftype boolean-object () 'common-lisp:boolean)
(common-lisp:deftype bundle-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype bundle-id-list () '(trivial-types:proper-list bundle-id))
 (common-lisp:defun |make-bundle-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list bundle-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype bundle-list ()
   '(trivial-types:proper-list workspace-bundle))
 (common-lisp:defun |make-bundle-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list workspace-bundle))
   aws-sdk/generator/shape::members))
(common-lisp:deftype bundle-owner () 'common-lisp:string)
(common-lisp:deftype compute () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (compute-type (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or compute common-lisp:null)))
 (common-lisp:export (common-lisp:list 'compute-type 'make-compute-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape compute-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:deftype computer-name () 'common-lisp:string)
(common-lisp:deftype connection-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (create-tags-request (:copier common-lisp:nil))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or non-empty-string common-lisp:null))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-tags-request 'make-create-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-tags-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (create-tags-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-tags-result 'make-create-tags-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-tags-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (create-workspaces-request (:copier common-lisp:nil))
   (workspaces
    (common-lisp:error
     #A((23) common-lisp:base-char . ":workspaces is required"))
    :type (common-lisp:or workspace-request-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-workspaces-request
                    'make-create-workspaces-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-workspaces-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Workspaces"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workspaces))))))
(common-lisp:progn
 (common-lisp:defstruct (create-workspaces-result (:copier common-lisp:nil))
   (failed-requests common-lisp:nil :type
    (common-lisp:or failed-create-workspace-requests common-lisp:null))
   (pending-requests common-lisp:nil :type
    (common-lisp:or workspace-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-workspaces-result 'make-create-workspaces-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-workspaces-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FailedRequests"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-requests)))
    (aws-sdk/generator/shape::to-query-params "PendingRequests"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pending-requests))))))
(common-lisp:deftype default-ou () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (default-workspace-creation-properties (:copier common-lisp:nil))
   (enable-work-docs common-lisp:nil :type
    (common-lisp:or boolean-object common-lisp:null))
   (enable-internet-access common-lisp:nil :type
    (common-lisp:or boolean-object common-lisp:null))
   (default-ou common-lisp:nil :type
    (common-lisp:or default-ou common-lisp:null))
   (custom-security-group-id common-lisp:nil :type
    (common-lisp:or security-group-id common-lisp:null))
   (user-enabled-as-local-administrator common-lisp:nil :type
    (common-lisp:or boolean-object common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'default-workspace-creation-properties
                    'make-default-workspace-creation-properties))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          default-workspace-creation-properties))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EnableWorkDocs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enable-work-docs)))
    (aws-sdk/generator/shape::to-query-params "EnableInternetAccess"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enable-internet-access)))
    (aws-sdk/generator/shape::to-query-params "DefaultOu"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-ou)))
    (aws-sdk/generator/shape::to-query-params "CustomSecurityGroupId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'custom-security-group-id)))
    (aws-sdk/generator/shape::to-query-params "UserEnabledAsLocalAdministrator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-enabled-as-local-administrator))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-tags-request (:copier common-lisp:nil))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or non-empty-string common-lisp:null))
   (tag-keys
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tag-keys is required"))
    :type (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-tags-request 'make-delete-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-tags-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "TagKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-keys))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-tags-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-tags-result 'make-delete-tags-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-tags-result))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (describe-tags-request (:copier common-lisp:nil))
   (resource-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":resource-id is required"))
    :type (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tags-request 'make-describe-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-tags-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-tags-result (:copier common-lisp:nil))
   (tag-list common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tags-result 'make-describe-tags-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape describe-tags-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TagList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-list))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-workspace-bundles-request (:copier common-lisp:nil))
   (bundle-ids common-lisp:nil :type
    (common-lisp:or bundle-id-list common-lisp:null))
   (owner common-lisp:nil :type (common-lisp:or bundle-owner common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-workspace-bundles-request
                    'make-describe-workspace-bundles-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-workspace-bundles-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BundleIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bundle-ids)))
    (aws-sdk/generator/shape::to-query-params "Owner"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-workspace-bundles-result (:copier common-lisp:nil))
   (bundles common-lisp:nil :type
    (common-lisp:or bundle-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-workspace-bundles-result
                    'make-describe-workspace-bundles-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-workspace-bundles-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Bundles"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bundles)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-workspace-directories-request (:copier common-lisp:nil))
   (directory-ids common-lisp:nil :type
    (common-lisp:or directory-id-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-workspace-directories-request
                    'make-describe-workspace-directories-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-workspace-directories-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-ids)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-workspace-directories-result (:copier common-lisp:nil))
   (directories common-lisp:nil :type
    (common-lisp:or directory-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-workspace-directories-result
                    'make-describe-workspace-directories-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-workspace-directories-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Directories"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directories)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-workspaces-connection-status-request (:copier common-lisp:nil))
   (workspace-ids common-lisp:nil :type
    (common-lisp:or workspace-id-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-workspaces-connection-status-request
                    'make-describe-workspaces-connection-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-workspaces-connection-status-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WorkspaceIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workspace-ids)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-workspaces-connection-status-result (:copier common-lisp:nil))
   (workspaces-connection-status common-lisp:nil :type
    (common-lisp:or workspace-connection-status-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-workspaces-connection-status-result
                    'make-describe-workspaces-connection-status-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-workspaces-connection-status-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WorkspacesConnectionStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workspaces-connection-status)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-workspaces-request (:copier common-lisp:nil))
   (workspace-ids common-lisp:nil :type
    (common-lisp:or workspace-id-list common-lisp:null))
   (directory-id common-lisp:nil :type
    (common-lisp:or directory-id common-lisp:null))
   (user-name common-lisp:nil :type
    (common-lisp:or user-name common-lisp:null))
   (bundle-id common-lisp:nil :type
    (common-lisp:or bundle-id common-lisp:null))
   (limit common-lisp:nil :type (common-lisp:or limit common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-workspaces-request
                    'make-describe-workspaces-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-workspaces-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WorkspaceIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workspace-ids)))
    (aws-sdk/generator/shape::to-query-params "DirectoryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-id)))
    (aws-sdk/generator/shape::to-query-params "UserName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-name)))
    (aws-sdk/generator/shape::to-query-params "BundleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bundle-id)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-workspaces-result (:copier common-lisp:nil))
   (workspaces common-lisp:nil :type
    (common-lisp:or workspace-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-workspaces-result
                    'make-describe-workspaces-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-workspaces-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Workspaces"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workspaces)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:deftype directory-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype directory-id-list ()
   '(trivial-types:proper-list directory-id))
 (common-lisp:defun |make-directory-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list directory-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype directory-list ()
   '(trivial-types:proper-list workspace-directory))
 (common-lisp:defun |make-directory-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list workspace-directory))
   aws-sdk/generator/shape::members))
(common-lisp:deftype directory-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype dns-ip-addresses ()
   '(trivial-types:proper-list ip-address))
 (common-lisp:defun |make-dns-ip-addresses|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ip-address))
   aws-sdk/generator/shape::members))
(common-lisp:deftype error-type () 'common-lisp:string)
(common-lisp:deftype exception-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (failed-create-workspace-request (:copier common-lisp:nil))
   (workspace-request common-lisp:nil :type
    (common-lisp:or workspace-request common-lisp:null))
   (error-code common-lisp:nil :type
    (common-lisp:or error-type common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'failed-create-workspace-request
                    'make-failed-create-workspace-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          failed-create-workspace-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WorkspaceRequest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workspace-request)))
    (aws-sdk/generator/shape::to-query-params "ErrorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code)))
    (aws-sdk/generator/shape::to-query-params "ErrorMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-message))))))
(common-lisp:progn
 (common-lisp:deftype failed-create-workspace-requests ()
   '(trivial-types:proper-list failed-create-workspace-request))
 (common-lisp:defun |make-failed-create-workspace-requests|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            failed-create-workspace-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype failed-reboot-workspace-requests ()
   '(trivial-types:proper-list failed-workspace-change-request))
 (common-lisp:defun |make-failed-reboot-workspace-requests|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            failed-workspace-change-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype failed-rebuild-workspace-requests ()
   '(trivial-types:proper-list failed-workspace-change-request))
 (common-lisp:defun |make-failed-rebuild-workspace-requests|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            failed-workspace-change-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype failed-start-workspace-requests ()
   '(trivial-types:proper-list failed-workspace-change-request))
 (common-lisp:defun |make-failed-start-workspace-requests|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            failed-workspace-change-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype failed-stop-workspace-requests ()
   '(trivial-types:proper-list failed-workspace-change-request))
 (common-lisp:defun |make-failed-stop-workspace-requests|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            failed-workspace-change-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype failed-terminate-workspace-requests ()
   '(trivial-types:proper-list failed-workspace-change-request))
 (common-lisp:defun |make-failed-terminate-workspace-requests|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            failed-workspace-change-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (failed-workspace-change-request (:copier common-lisp:nil))
   (workspace-id common-lisp:nil :type
    (common-lisp:or workspace-id common-lisp:null))
   (error-code common-lisp:nil :type
    (common-lisp:or error-type common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'failed-workspace-change-request
                    'make-failed-workspace-change-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          failed-workspace-change-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WorkspaceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workspace-id)))
    (aws-sdk/generator/shape::to-query-params "ErrorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code)))
    (aws-sdk/generator/shape::to-query-params "ErrorMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-parameter-values-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-values-exception
                    'make-invalid-parameter-values-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-parameter-values-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-resource-state-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-resource-state-exception
                    'make-invalid-resource-state-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-resource-state-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype ip-address () 'common-lisp:string)
(common-lisp:deftype limit () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (modify-workspace-properties-request (:copier common-lisp:nil))
   (workspace-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":workspace-id is required"))
    :type (common-lisp:or workspace-id common-lisp:null))
   (workspace-properties
    (common-lisp:error
     #A((33) common-lisp:base-char . ":workspace-properties is required"))
    :type (common-lisp:or workspace-properties common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-workspace-properties-request
                    'make-modify-workspace-properties-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          modify-workspace-properties-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WorkspaceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workspace-id)))
    (aws-sdk/generator/shape::to-query-params "WorkspaceProperties"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workspace-properties))))))
(common-lisp:progn
 (common-lisp:defstruct
     (modify-workspace-properties-result (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'modify-workspace-properties-result
                    'make-modify-workspace-properties-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          modify-workspace-properties-result))
   (common-lisp:append)))
(common-lisp:deftype non-empty-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (operation-in-progress-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'operation-in-progress-exception
                    'make-operation-in-progress-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          operation-in-progress-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype pagination-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (reboot-request (:copier common-lisp:nil))
   (workspace-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":workspace-id is required"))
    :type (common-lisp:or workspace-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'reboot-request 'make-reboot-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape reboot-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WorkspaceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workspace-id))))))
(common-lisp:progn
 (common-lisp:deftype reboot-workspace-requests ()
   '(trivial-types:proper-list reboot-request))
 (common-lisp:defun |make-reboot-workspace-requests|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list reboot-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (reboot-workspaces-request (:copier common-lisp:nil))
   (reboot-workspace-requests
    (common-lisp:error
     #A((38) common-lisp:base-char . ":reboot-workspace-requests is required"))
    :type (common-lisp:or reboot-workspace-requests common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reboot-workspaces-request
                    'make-reboot-workspaces-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          reboot-workspaces-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RebootWorkspaceRequests"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reboot-workspace-requests))))))
(common-lisp:progn
 (common-lisp:defstruct (reboot-workspaces-result (:copier common-lisp:nil))
   (failed-requests common-lisp:nil :type
    (common-lisp:or failed-reboot-workspace-requests common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reboot-workspaces-result 'make-reboot-workspaces-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          reboot-workspaces-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FailedRequests"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-requests))))))
(common-lisp:progn
 (common-lisp:defstruct (rebuild-request (:copier common-lisp:nil))
   (workspace-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":workspace-id is required"))
    :type (common-lisp:or workspace-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rebuild-request 'make-rebuild-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape rebuild-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WorkspaceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workspace-id))))))
(common-lisp:progn
 (common-lisp:deftype rebuild-workspace-requests ()
   '(trivial-types:proper-list rebuild-request))
 (common-lisp:defun |make-rebuild-workspace-requests|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rebuild-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (rebuild-workspaces-request (:copier common-lisp:nil))
   (rebuild-workspace-requests
    (common-lisp:error
     #A((39) common-lisp:base-char
        . ":rebuild-workspace-requests is required"))
    :type (common-lisp:or rebuild-workspace-requests common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'rebuild-workspaces-request
                    'make-rebuild-workspaces-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          rebuild-workspaces-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RebuildWorkspaceRequests"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rebuild-workspace-requests))))))
(common-lisp:progn
 (common-lisp:defstruct (rebuild-workspaces-result (:copier common-lisp:nil))
   (failed-requests common-lisp:nil :type
    (common-lisp:or failed-rebuild-workspace-requests common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'rebuild-workspaces-result
                    'make-rebuild-workspaces-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          rebuild-workspaces-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FailedRequests"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-requests))))))
(common-lisp:deftype registration-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (resource-limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-limit-exceeded-exception
                    'make-resource-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null))
   (resource-id common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'make-resource-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-unavailable-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null))
   (resource-id common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-unavailable-exception
                    'make-resource-unavailable-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-unavailable-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "ResourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id))))))
(common-lisp:deftype running-mode () 'common-lisp:string)
(common-lisp:deftype running-mode-auto-stop-timeout-in-minutes ()
  'common-lisp:integer)
(common-lisp:deftype security-group-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (start-request (:copier common-lisp:nil))
   (workspace-id common-lisp:nil :type
    (common-lisp:or workspace-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'start-request 'make-start-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape start-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WorkspaceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workspace-id))))))
(common-lisp:progn
 (common-lisp:deftype start-workspace-requests ()
   '(trivial-types:proper-list start-request))
 (common-lisp:defun |make-start-workspace-requests|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list start-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (start-workspaces-request (:copier common-lisp:nil))
   (start-workspace-requests
    (common-lisp:error
     #A((37) common-lisp:base-char . ":start-workspace-requests is required"))
    :type (common-lisp:or start-workspace-requests common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-workspaces-request 'make-start-workspaces-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-workspaces-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StartWorkspaceRequests"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-workspace-requests))))))
(common-lisp:progn
 (common-lisp:defstruct (start-workspaces-result (:copier common-lisp:nil))
   (failed-requests common-lisp:nil :type
    (common-lisp:or failed-start-workspace-requests common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-workspaces-result 'make-start-workspaces-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-workspaces-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FailedRequests"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-requests))))))
(common-lisp:progn
 (common-lisp:defstruct (stop-request (:copier common-lisp:nil))
   (workspace-id common-lisp:nil :type
    (common-lisp:or workspace-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stop-request 'make-stop-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape stop-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WorkspaceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workspace-id))))))
(common-lisp:progn
 (common-lisp:deftype stop-workspace-requests ()
   '(trivial-types:proper-list stop-request))
 (common-lisp:defun |make-stop-workspace-requests|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stop-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (stop-workspaces-request (:copier common-lisp:nil))
   (stop-workspace-requests
    (common-lisp:error
     #A((36) common-lisp:base-char . ":stop-workspace-requests is required"))
    :type (common-lisp:or stop-workspace-requests common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-workspaces-request 'make-stop-workspaces-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-workspaces-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StopWorkspaceRequests"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stop-workspace-requests))))))
(common-lisp:progn
 (common-lisp:defstruct (stop-workspaces-result (:copier common-lisp:nil))
   (failed-requests common-lisp:nil :type
    (common-lisp:or failed-stop-workspace-requests common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-workspaces-result 'make-stop-workspaces-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-workspaces-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FailedRequests"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-requests))))))
(common-lisp:deftype subnet-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype subnet-ids () '(trivial-types:proper-list subnet-id))
 (common-lisp:defun |make-subnet-ids|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subnet-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (tag (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or tag-key common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list ()
   '(trivial-types:proper-list non-empty-string))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list non-empty-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (terminate-request (:copier common-lisp:nil))
   (workspace-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":workspace-id is required"))
    :type (common-lisp:or workspace-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'terminate-request 'make-terminate-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape terminate-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WorkspaceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workspace-id))))))
(common-lisp:progn
 (common-lisp:deftype terminate-workspace-requests ()
   '(trivial-types:proper-list terminate-request))
 (common-lisp:defun |make-terminate-workspace-requests|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list terminate-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (terminate-workspaces-request (:copier common-lisp:nil))
   (terminate-workspace-requests
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":terminate-workspace-requests is required"))
    :type (common-lisp:or terminate-workspace-requests common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'terminate-workspaces-request
                    'make-terminate-workspaces-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          terminate-workspaces-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TerminateWorkspaceRequests"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'terminate-workspace-requests))))))
(common-lisp:progn
 (common-lisp:defstruct (terminate-workspaces-result (:copier common-lisp:nil))
   (failed-requests common-lisp:nil :type
    (common-lisp:or failed-terminate-workspace-requests common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'terminate-workspaces-result
                    'make-terminate-workspaces-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          terminate-workspaces-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FailedRequests"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-requests))))))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (unsupported-workspace-configuration-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unsupported-workspace-configuration-exception
                    'make-unsupported-workspace-configuration-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unsupported-workspace-configuration-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype user-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (user-storage (:copier common-lisp:nil))
   (capacity common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'user-storage 'make-user-storage))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape user-storage))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Capacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'capacity))))))
(common-lisp:deftype volume-encryption-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (workspace (:copier common-lisp:nil))
   (workspace-id common-lisp:nil :type
    (common-lisp:or workspace-id common-lisp:null))
   (directory-id common-lisp:nil :type
    (common-lisp:or directory-id common-lisp:null))
   (user-name common-lisp:nil :type
    (common-lisp:or user-name common-lisp:null))
   (ip-address common-lisp:nil :type
    (common-lisp:or ip-address common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or workspace-state common-lisp:null))
   (bundle-id common-lisp:nil :type
    (common-lisp:or bundle-id common-lisp:null))
   (subnet-id common-lisp:nil :type
    (common-lisp:or subnet-id common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (error-code common-lisp:nil :type
    (common-lisp:or workspace-error-code common-lisp:null))
   (computer-name common-lisp:nil :type
    (common-lisp:or computer-name common-lisp:null))
   (volume-encryption-key common-lisp:nil :type
    (common-lisp:or volume-encryption-key common-lisp:null))
   (user-volume-encryption-enabled common-lisp:nil :type
    (common-lisp:or boolean-object common-lisp:null))
   (root-volume-encryption-enabled common-lisp:nil :type
    (common-lisp:or boolean-object common-lisp:null))
   (workspace-properties common-lisp:nil :type
    (common-lisp:or workspace-properties common-lisp:null)))
 (common-lisp:export (common-lisp:list 'workspace 'make-workspace))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape workspace))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WorkspaceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workspace-id)))
    (aws-sdk/generator/shape::to-query-params "DirectoryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-id)))
    (aws-sdk/generator/shape::to-query-params "UserName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-name)))
    (aws-sdk/generator/shape::to-query-params "IpAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ip-address)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "BundleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bundle-id)))
    (aws-sdk/generator/shape::to-query-params "SubnetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-id)))
    (aws-sdk/generator/shape::to-query-params "ErrorMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-message)))
    (aws-sdk/generator/shape::to-query-params "ErrorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code)))
    (aws-sdk/generator/shape::to-query-params "ComputerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'computer-name)))
    (aws-sdk/generator/shape::to-query-params "VolumeEncryptionKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-encryption-key)))
    (aws-sdk/generator/shape::to-query-params "UserVolumeEncryptionEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-volume-encryption-enabled)))
    (aws-sdk/generator/shape::to-query-params "RootVolumeEncryptionEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'root-volume-encryption-enabled)))
    (aws-sdk/generator/shape::to-query-params "WorkspaceProperties"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workspace-properties))))))
(common-lisp:progn
 (common-lisp:defstruct (workspace-bundle (:copier common-lisp:nil))
   (bundle-id common-lisp:nil :type
    (common-lisp:or bundle-id common-lisp:null))
   (name common-lisp:nil :type
    (common-lisp:or non-empty-string common-lisp:null))
   (owner common-lisp:nil :type (common-lisp:or bundle-owner common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (user-storage common-lisp:nil :type
    (common-lisp:or user-storage common-lisp:null))
   (compute-type common-lisp:nil :type
    (common-lisp:or compute-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workspace-bundle 'make-workspace-bundle))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape workspace-bundle))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BundleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bundle-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Owner"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "UserStorage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-storage)))
    (aws-sdk/generator/shape::to-query-params "ComputeType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'compute-type))))))
(common-lisp:progn
 (common-lisp:defstruct (workspace-connection-status (:copier common-lisp:nil))
   (workspace-id common-lisp:nil :type
    (common-lisp:or workspace-id common-lisp:null))
   (connection-state common-lisp:nil :type
    (common-lisp:or connection-state common-lisp:null))
   (connection-state-check-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-known-user-connection-timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workspace-connection-status
                    'make-workspace-connection-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          workspace-connection-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WorkspaceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workspace-id)))
    (aws-sdk/generator/shape::to-query-params "ConnectionState"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'connection-state)))
    (aws-sdk/generator/shape::to-query-params "ConnectionStateCheckTimestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'connection-state-check-timestamp)))
    (aws-sdk/generator/shape::to-query-params
     "LastKnownUserConnectionTimestamp"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'last-known-user-connection-timestamp))))))
(common-lisp:progn
 (common-lisp:deftype workspace-connection-status-list ()
   '(trivial-types:proper-list workspace-connection-status))
 (common-lisp:defun |make-workspace-connection-status-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            workspace-connection-status))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (workspace-directory (:copier common-lisp:nil))
   (directory-id common-lisp:nil :type
    (common-lisp:or directory-id common-lisp:null))
   (alias common-lisp:nil :type (common-lisp:or alias common-lisp:null))
   (directory-name common-lisp:nil :type
    (common-lisp:or directory-name common-lisp:null))
   (registration-code common-lisp:nil :type
    (common-lisp:or registration-code common-lisp:null))
   (subnet-ids common-lisp:nil :type
    (common-lisp:or subnet-ids common-lisp:null))
   (dns-ip-addresses common-lisp:nil :type
    (common-lisp:or dns-ip-addresses common-lisp:null))
   (customer-user-name common-lisp:nil :type
    (common-lisp:or user-name common-lisp:null))
   (iam-role-id common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (directory-type common-lisp:nil :type
    (common-lisp:or workspace-directory-type common-lisp:null))
   (workspace-security-group-id common-lisp:nil :type
    (common-lisp:or security-group-id common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or workspace-directory-state common-lisp:null))
   (workspace-creation-properties common-lisp:nil :type
    (common-lisp:or default-workspace-creation-properties common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workspace-directory 'make-workspace-directory))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape workspace-directory))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-id)))
    (aws-sdk/generator/shape::to-query-params "Alias"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alias)))
    (aws-sdk/generator/shape::to-query-params "DirectoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-name)))
    (aws-sdk/generator/shape::to-query-params "RegistrationCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registration-code)))
    (aws-sdk/generator/shape::to-query-params "SubnetIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnet-ids)))
    (aws-sdk/generator/shape::to-query-params "DnsIpAddresses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dns-ip-addresses)))
    (aws-sdk/generator/shape::to-query-params "CustomerUserName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'customer-user-name)))
    (aws-sdk/generator/shape::to-query-params "IamRoleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'iam-role-id)))
    (aws-sdk/generator/shape::to-query-params "DirectoryType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-type)))
    (aws-sdk/generator/shape::to-query-params "WorkspaceSecurityGroupId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workspace-security-group-id)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "WorkspaceCreationProperties"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workspace-creation-properties))))))
(common-lisp:deftype workspace-directory-state () 'common-lisp:string)
(common-lisp:deftype workspace-directory-type () 'common-lisp:string)
(common-lisp:deftype workspace-error-code () 'common-lisp:string)
(common-lisp:deftype workspace-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype workspace-id-list ()
   '(trivial-types:proper-list workspace-id))
 (common-lisp:defun |make-workspace-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list workspace-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype workspace-list () '(trivial-types:proper-list workspace))
 (common-lisp:defun |make-workspace-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list workspace))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (workspace-properties (:copier common-lisp:nil))
   (running-mode common-lisp:nil :type
    (common-lisp:or running-mode common-lisp:null))
   (running-mode-auto-stop-timeout-in-minutes common-lisp:nil :type
    (common-lisp:or running-mode-auto-stop-timeout-in-minutes
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workspace-properties 'make-workspace-properties))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape workspace-properties))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RunningMode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'running-mode)))
    (aws-sdk/generator/shape::to-query-params
     "RunningModeAutoStopTimeoutInMinutes"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'running-mode-auto-stop-timeout-in-minutes))))))
(common-lisp:progn
 (common-lisp:defstruct (workspace-request (:copier common-lisp:nil))
   (directory-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":directory-id is required"))
    :type (common-lisp:or directory-id common-lisp:null))
   (user-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":user-name is required"))
    :type (common-lisp:or user-name common-lisp:null))
   (bundle-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":bundle-id is required"))
    :type (common-lisp:or bundle-id common-lisp:null))
   (volume-encryption-key common-lisp:nil :type
    (common-lisp:or volume-encryption-key common-lisp:null))
   (user-volume-encryption-enabled common-lisp:nil :type
    (common-lisp:or boolean-object common-lisp:null))
   (root-volume-encryption-enabled common-lisp:nil :type
    (common-lisp:or boolean-object common-lisp:null))
   (workspace-properties common-lisp:nil :type
    (common-lisp:or workspace-properties common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'workspace-request 'make-workspace-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape workspace-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DirectoryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'directory-id)))
    (aws-sdk/generator/shape::to-query-params "UserName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-name)))
    (aws-sdk/generator/shape::to-query-params "BundleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bundle-id)))
    (aws-sdk/generator/shape::to-query-params "VolumeEncryptionKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'volume-encryption-key)))
    (aws-sdk/generator/shape::to-query-params "UserVolumeEncryptionEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-volume-encryption-enabled)))
    (aws-sdk/generator/shape::to-query-params "RootVolumeEncryptionEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'root-volume-encryption-enabled)))
    (aws-sdk/generator/shape::to-query-params "WorkspaceProperties"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'workspace-properties)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:deftype workspace-request-list ()
   '(trivial-types:proper-list workspace-request))
 (common-lisp:defun |make-workspace-request-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list workspace-request))
   aws-sdk/generator/shape::members))
(common-lisp:deftype workspace-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-id tags)
   (common-lisp:declare (common-lisp:ignorable resource-id tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "workspaces")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateTags")
                                  ("Version" ,@"2015-04-08"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateTagsResult" common-lisp:nil)))
 (common-lisp:export 'create-tags))
(common-lisp:progn
 (common-lisp:defun create-workspaces
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key workspaces)
   (common-lisp:declare (common-lisp:ignorable workspaces))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-workspaces-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "workspaces")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateWorkspaces")
                                  ("Version" ,@"2015-04-08"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateWorkspacesResult" common-lisp:nil)))
 (common-lisp:export 'create-workspaces))
(common-lisp:progn
 (common-lisp:defun delete-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-id tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-id tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "workspaces")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteTags")
                                  ("Version" ,@"2015-04-08"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteTagsResult" common-lisp:nil)))
 (common-lisp:export 'delete-tags))
(common-lisp:progn
 (common-lisp:defun describe-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-id)
   (common-lisp:declare (common-lisp:ignorable resource-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "workspaces")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeTags")
                                  ("Version" ,@"2015-04-08"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeTagsResult" common-lisp:nil)))
 (common-lisp:export 'describe-tags))
(common-lisp:progn
 (common-lisp:defun describe-workspace-bundles
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bundle-ids owner next-token)
   (common-lisp:declare (common-lisp:ignorable bundle-ids owner next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-workspace-bundles-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "workspaces")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeWorkspaceBundles")
                                  ("Version" ,@"2015-04-08"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeWorkspaceBundlesResult" common-lisp:nil)))
 (common-lisp:export 'describe-workspace-bundles))
(common-lisp:progn
 (common-lisp:defun describe-workspace-directories
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key directory-ids next-token)
   (common-lisp:declare (common-lisp:ignorable directory-ids next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-workspace-directories-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "workspaces")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeWorkspaceDirectories")
                                  ("Version" ,@"2015-04-08"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeWorkspaceDirectoriesResult" common-lisp:nil)))
 (common-lisp:export 'describe-workspace-directories))
(common-lisp:progn
 (common-lisp:defun describe-workspaces
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key workspace-ids directory-id user-name
                     bundle-id limit next-token)
   (common-lisp:declare
    (common-lisp:ignorable workspace-ids directory-id user-name bundle-id limit
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-workspaces-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "workspaces")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeWorkspaces")
                                  ("Version" ,@"2015-04-08"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeWorkspacesResult" common-lisp:nil)))
 (common-lisp:export 'describe-workspaces))
(common-lisp:progn
 (common-lisp:defun describe-workspaces-connection-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key workspace-ids next-token)
   (common-lisp:declare (common-lisp:ignorable workspace-ids next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-workspaces-connection-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "workspaces")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeWorkspacesConnectionStatus")
                                  ("Version" ,@"2015-04-08"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeWorkspacesConnectionStatusResult" common-lisp:nil)))
 (common-lisp:export 'describe-workspaces-connection-status))
(common-lisp:progn
 (common-lisp:defun modify-workspace-properties
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key workspace-id workspace-properties)
   (common-lisp:declare
    (common-lisp:ignorable workspace-id workspace-properties))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-modify-workspace-properties-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "workspaces")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ModifyWorkspaceProperties")
                                  ("Version" ,@"2015-04-08"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ModifyWorkspacePropertiesResult" common-lisp:nil)))
 (common-lisp:export 'modify-workspace-properties))
(common-lisp:progn
 (common-lisp:defun reboot-workspaces
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key reboot-workspace-requests)
   (common-lisp:declare (common-lisp:ignorable reboot-workspace-requests))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-reboot-workspaces-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "workspaces")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RebootWorkspaces")
                                  ("Version" ,@"2015-04-08"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RebootWorkspacesResult" common-lisp:nil)))
 (common-lisp:export 'reboot-workspaces))
(common-lisp:progn
 (common-lisp:defun rebuild-workspaces
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rebuild-workspace-requests)
   (common-lisp:declare (common-lisp:ignorable rebuild-workspace-requests))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-rebuild-workspaces-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "workspaces")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RebuildWorkspaces")
                                  ("Version" ,@"2015-04-08"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RebuildWorkspacesResult" common-lisp:nil)))
 (common-lisp:export 'rebuild-workspaces))
(common-lisp:progn
 (common-lisp:defun start-workspaces
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key start-workspace-requests)
   (common-lisp:declare (common-lisp:ignorable start-workspace-requests))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-workspaces-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "workspaces")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StartWorkspaces")
                                  ("Version" ,@"2015-04-08"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StartWorkspacesResult" common-lisp:nil)))
 (common-lisp:export 'start-workspaces))
(common-lisp:progn
 (common-lisp:defun stop-workspaces
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stop-workspace-requests)
   (common-lisp:declare (common-lisp:ignorable stop-workspace-requests))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-workspaces-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "workspaces")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"StopWorkspaces")
                                  ("Version" ,@"2015-04-08"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StopWorkspacesResult" common-lisp:nil)))
 (common-lisp:export 'stop-workspaces))
(common-lisp:progn
 (common-lisp:defun terminate-workspaces
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key terminate-workspace-requests)
   (common-lisp:declare (common-lisp:ignorable terminate-workspace-requests))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-terminate-workspaces-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "workspaces")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"TerminateWorkspaces")
                                  ("Version" ,@"2015-04-08"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "TerminateWorkspacesResult" common-lisp:nil)))
 (common-lisp:export 'terminate-workspaces))