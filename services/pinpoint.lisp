;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/pinpoint
  (:use)
  (:nicknames #:aws/pinpoint)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/pinpoint)

(common-lisp:progn
 (common-lisp:defstruct (apnschannel-request (:copier common-lisp:nil))
   (certificate common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (private-key common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'apnschannel-request 'make-apnschannel-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape apnschannel-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Certificate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'certificate)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "PrivateKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'private-key))))))
(common-lisp:progn
 (common-lisp:defstruct (apnschannel-response (:copier common-lisp:nil))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (is-archived common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (last-modified-by common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (platform common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'apnschannel-response 'make-apnschannel-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape apnschannel-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "IsArchived"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-archived)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedBy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-by)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "Platform"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:progn
 (common-lisp:defstruct (apnsmessage (:copier common-lisp:nil))
   (action common-lisp:nil :type (common-lisp:or action common-lisp:null))
   (badge common-lisp:nil :type (common-lisp:or |__integer| common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (category common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (data common-lisp:nil :type (common-lisp:or map-of-string common-lisp:null))
   (media-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (raw-content common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (silent-push common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (sound common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (substitutions common-lisp:nil :type
    (common-lisp:or map-of-list-of-string common-lisp:null))
   (thread-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (title common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (url common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'apnsmessage 'make-apnsmessage))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape apnsmessage))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action)))
    (aws-sdk/generator/shape::to-query-params "Badge"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'badge)))
    (aws-sdk/generator/shape::to-query-params "Body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body)))
    (aws-sdk/generator/shape::to-query-params "Category"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'category)))
    (aws-sdk/generator/shape::to-query-params "Data"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data)))
    (aws-sdk/generator/shape::to-query-params "MediaUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'media-url)))
    (aws-sdk/generator/shape::to-query-params "RawContent"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'raw-content)))
    (aws-sdk/generator/shape::to-query-params "SilentPush"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'silent-push)))
    (aws-sdk/generator/shape::to-query-params "Sound"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sound)))
    (aws-sdk/generator/shape::to-query-params "Substitutions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'substitutions)))
    (aws-sdk/generator/shape::to-query-params "ThreadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'thread-id)))
    (aws-sdk/generator/shape::to-query-params "Title"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'title)))
    (aws-sdk/generator/shape::to-query-params "Url"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'url))))))
(common-lisp:progn
 (common-lisp:defstruct (apnssandbox-channel-request (:copier common-lisp:nil))
   (certificate common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (private-key common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'apnssandbox-channel-request
                    'make-apnssandbox-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          apnssandbox-channel-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Certificate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'certificate)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "PrivateKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'private-key))))))
(common-lisp:progn
 (common-lisp:defstruct
     (apnssandbox-channel-response (:copier common-lisp:nil))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (is-archived common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (last-modified-by common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (platform common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'apnssandbox-channel-response
                    'make-apnssandbox-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          apnssandbox-channel-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "IsArchived"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-archived)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedBy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-by)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "Platform"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:deftype action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (activities-response (:copier common-lisp:nil))
   (item common-lisp:nil :type
    (common-lisp:or list-of-activity-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activities-response 'make-activities-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape activities-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Item"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item))))))
(common-lisp:progn
 (common-lisp:defstruct (activity-response (:copier common-lisp:nil))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (campaign-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (end common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (result common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (scheduled-start common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (start common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (successful-endpoint-count common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (timezones-completed-count common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (timezones-total-count common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (total-endpoint-count common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (treatment-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'activity-response 'make-activity-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape activity-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "CampaignId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'campaign-id)))
    (aws-sdk/generator/shape::to-query-params "End"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Result"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result)))
    (aws-sdk/generator/shape::to-query-params "ScheduledStart"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheduled-start)))
    (aws-sdk/generator/shape::to-query-params "Start"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "SuccessfulEndpointCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'successful-endpoint-count)))
    (aws-sdk/generator/shape::to-query-params "TimezonesCompletedCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timezones-completed-count)))
    (aws-sdk/generator/shape::to-query-params "TimezonesTotalCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timezones-total-count)))
    (aws-sdk/generator/shape::to-query-params "TotalEndpointCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'total-endpoint-count)))
    (aws-sdk/generator/shape::to-query-params "TreatmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'treatment-id))))))
(common-lisp:progn
 (common-lisp:defstruct (address-configuration (:copier common-lisp:nil))
   (body-override common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (channel-type common-lisp:nil :type
    (common-lisp:or channel-type common-lisp:null))
   (context common-lisp:nil :type
    (common-lisp:or map-of-string common-lisp:null))
   (raw-content common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (substitutions common-lisp:nil :type
    (common-lisp:or map-of-list-of-string common-lisp:null))
   (title-override common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'address-configuration 'make-address-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          address-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BodyOverride"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body-override)))
    (aws-sdk/generator/shape::to-query-params "ChannelType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'channel-type)))
    (aws-sdk/generator/shape::to-query-params "Context"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'context)))
    (aws-sdk/generator/shape::to-query-params "RawContent"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'raw-content)))
    (aws-sdk/generator/shape::to-query-params "Substitutions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'substitutions)))
    (aws-sdk/generator/shape::to-query-params "TitleOverride"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'title-override))))))
(common-lisp:progn
 (common-lisp:defstruct (application-response (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'application-response 'make-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape application-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (application-settings-resource (:copier common-lisp:nil))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (limits common-lisp:nil :type
    (common-lisp:or campaign-limits common-lisp:null))
   (quiet-time common-lisp:nil :type
    (common-lisp:or quiet-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'application-settings-resource
                    'make-application-settings-resource))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          application-settings-resource))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "Limits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limits)))
    (aws-sdk/generator/shape::to-query-params "QuietTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quiet-time))))))
(common-lisp:progn
 (common-lisp:defstruct (applications-response (:copier common-lisp:nil))
   (item common-lisp:nil :type
    (common-lisp:or list-of-application-response common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'applications-response 'make-applications-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          applications-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Item"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (attribute-dimension (:copier common-lisp:nil))
   (attribute-type common-lisp:nil :type
    (common-lisp:or attribute-type common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attribute-dimension 'make-attribute-dimension))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape attribute-dimension))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AttributeType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-type)))
    (aws-sdk/generator/shape::to-query-params "Values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values))))))
(common-lisp:deftype attribute-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (bad-request-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (request-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'make-bad-request-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          bad-request-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "RequestID"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-id))))))
(common-lisp:progn
 (common-lisp:defstruct (campaign-email-message (:copier common-lisp:nil))
   (body common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (from-address common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (html-body common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (title common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'campaign-email-message 'make-campaign-email-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          campaign-email-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body)))
    (aws-sdk/generator/shape::to-query-params "FromAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'from-address)))
    (aws-sdk/generator/shape::to-query-params "HtmlBody"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'html-body)))
    (aws-sdk/generator/shape::to-query-params "Title"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'title))))))
(common-lisp:progn
 (common-lisp:defstruct (campaign-limits (:copier common-lisp:nil))
   (daily common-lisp:nil :type (common-lisp:or |__integer| common-lisp:null))
   (total common-lisp:nil :type (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'campaign-limits 'make-campaign-limits))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape campaign-limits))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Daily"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'daily)))
    (aws-sdk/generator/shape::to-query-params "Total"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'total))))))
(common-lisp:progn
 (common-lisp:defstruct (campaign-response (:copier common-lisp:nil))
   (additional-treatments common-lisp:nil :type
    (common-lisp:or list-of-treatment-resource common-lisp:null))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (default-state common-lisp:nil :type
    (common-lisp:or campaign-state common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (holdout-percent common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (is-paused common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (limits common-lisp:nil :type
    (common-lisp:or campaign-limits common-lisp:null))
   (message-configuration common-lisp:nil :type
    (common-lisp:or message-configuration common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (schedule common-lisp:nil :type (common-lisp:or schedule common-lisp:null))
   (segment-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (segment-version common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or campaign-state common-lisp:null))
   (treatment-description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (treatment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'campaign-response 'make-campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape campaign-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AdditionalTreatments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'additional-treatments)))
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "DefaultState"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-state)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "HoldoutPercent"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'holdout-percent)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "IsPaused"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-paused)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "Limits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limits)))
    (aws-sdk/generator/shape::to-query-params "MessageConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message-configuration)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Schedule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schedule)))
    (aws-sdk/generator/shape::to-query-params "SegmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment-id)))
    (aws-sdk/generator/shape::to-query-params "SegmentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment-version)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "TreatmentDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'treatment-description)))
    (aws-sdk/generator/shape::to-query-params "TreatmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'treatment-name)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:progn
 (common-lisp:defstruct (campaign-sms-message (:copier common-lisp:nil))
   (body common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (message-type common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null))
   (sender-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'campaign-sms-message 'make-campaign-sms-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape campaign-sms-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body)))
    (aws-sdk/generator/shape::to-query-params "MessageType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message-type)))
    (aws-sdk/generator/shape::to-query-params "SenderId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sender-id))))))
(common-lisp:progn
 (common-lisp:defstruct (campaign-state (:copier common-lisp:nil))
   (campaign-status common-lisp:nil :type
    (common-lisp:or campaign-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'campaign-state 'make-campaign-state))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape campaign-state))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CampaignStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'campaign-status))))))
(common-lisp:deftype campaign-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (campaigns-response (:copier common-lisp:nil))
   (item common-lisp:nil :type
    (common-lisp:or list-of-campaign-response common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'campaigns-response 'make-campaigns-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape campaigns-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Item"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype channel-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (create-app-request (:copier common-lisp:nil))
   (create-application-request
    (common-lisp:error
     #A((39) common-lisp:base-char
        . ":create-application-request is required"))
    :type (common-lisp:or create-application-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-app-request 'make-create-app-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-app-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CreateApplicationRequest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'create-application-request))))))
(common-lisp:progn
 (common-lisp:defstruct (create-app-response (:copier common-lisp:nil))
   (application-response
    (common-lisp:error
     #A((33) common-lisp:base-char . ":application-response is required"))
    :type (common-lisp:or application-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-app-response 'make-create-app-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-app-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-response))))))
(common-lisp:progn
 (common-lisp:defstruct (create-application-request (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-application-request
                    'make-create-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-application-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (create-campaign-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (write-campaign-request
    (common-lisp:error
     #A((35) common-lisp:base-char . ":write-campaign-request is required"))
    :type (common-lisp:or write-campaign-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-campaign-request 'make-create-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-campaign-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "WriteCampaignRequest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'write-campaign-request))))))
(common-lisp:progn
 (common-lisp:defstruct (create-campaign-response (:copier common-lisp:nil))
   (campaign-response
    (common-lisp:error
     #A((30) common-lisp:base-char . ":campaign-response is required"))
    :type (common-lisp:or campaign-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-campaign-response 'make-create-campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-campaign-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CampaignResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'campaign-response))))))
(common-lisp:progn
 (common-lisp:defstruct (create-import-job-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (import-job-request
    (common-lisp:error
     #A((31) common-lisp:base-char . ":import-job-request is required"))
    :type (common-lisp:or import-job-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-import-job-request
                    'make-create-import-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-import-job-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "ImportJobRequest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'import-job-request))))))
(common-lisp:progn
 (common-lisp:defstruct (create-import-job-response (:copier common-lisp:nil))
   (import-job-response
    (common-lisp:error
     #A((32) common-lisp:base-char . ":import-job-response is required"))
    :type (common-lisp:or import-job-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-import-job-response
                    'make-create-import-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-import-job-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ImportJobResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'import-job-response))))))
(common-lisp:progn
 (common-lisp:defstruct (create-segment-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (write-segment-request
    (common-lisp:error
     #A((34) common-lisp:base-char . ":write-segment-request is required"))
    :type (common-lisp:or write-segment-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-segment-request 'make-create-segment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-segment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "WriteSegmentRequest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'write-segment-request))))))
(common-lisp:progn
 (common-lisp:defstruct (create-segment-response (:copier common-lisp:nil))
   (segment-response
    (common-lisp:error
     #A((29) common-lisp:base-char . ":segment-response is required"))
    :type (common-lisp:or segment-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-segment-response 'make-create-segment-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-segment-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SegmentResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment-response))))))
(common-lisp:progn
 (common-lisp:defstruct (default-message (:copier common-lisp:nil))
   (body common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (substitutions common-lisp:nil :type
    (common-lisp:or map-of-list-of-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'default-message 'make-default-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape default-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body)))
    (aws-sdk/generator/shape::to-query-params "Substitutions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'substitutions))))))
(common-lisp:progn
 (common-lisp:defstruct
     (default-push-notification-message (:copier common-lisp:nil))
   (action common-lisp:nil :type (common-lisp:or action common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (data common-lisp:nil :type (common-lisp:or map-of-string common-lisp:null))
   (silent-push common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (substitutions common-lisp:nil :type
    (common-lisp:or map-of-list-of-string common-lisp:null))
   (title common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (url common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'default-push-notification-message
                    'make-default-push-notification-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          default-push-notification-message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action)))
    (aws-sdk/generator/shape::to-query-params "Body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body)))
    (aws-sdk/generator/shape::to-query-params "Data"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data)))
    (aws-sdk/generator/shape::to-query-params "SilentPush"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'silent-push)))
    (aws-sdk/generator/shape::to-query-params "Substitutions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'substitutions)))
    (aws-sdk/generator/shape::to-query-params "Title"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'title)))
    (aws-sdk/generator/shape::to-query-params "Url"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'url))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-apns-channel-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-apns-channel-request
                    'make-delete-apns-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-apns-channel-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-apns-channel-response (:copier common-lisp:nil))
   (apnschannel-response
    (common-lisp:error
     #A((33) common-lisp:base-char . ":apnschannel-response is required"))
    :type (common-lisp:or apnschannel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-apns-channel-response
                    'make-delete-apns-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-apns-channel-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "APNSChannelResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'apnschannel-response))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-apns-sandbox-channel-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-apns-sandbox-channel-request
                    'make-delete-apns-sandbox-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-apns-sandbox-channel-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-apns-sandbox-channel-response (:copier common-lisp:nil))
   (apnssandbox-channel-response
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":apnssandbox-channel-response is required"))
    :type (common-lisp:or apnssandbox-channel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-apns-sandbox-channel-response
                    'make-delete-apns-sandbox-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-apns-sandbox-channel-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "APNSSandboxChannelResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'apnssandbox-channel-response))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-app-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-app-request 'make-delete-app-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-app-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-app-response (:copier common-lisp:nil))
   (application-response
    (common-lisp:error
     #A((33) common-lisp:base-char . ":application-response is required"))
    :type (common-lisp:or application-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-app-response 'make-delete-app-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-app-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-response))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-campaign-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (campaign-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":campaign-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-campaign-request 'make-delete-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-campaign-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "CampaignId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'campaign-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-campaign-response (:copier common-lisp:nil))
   (campaign-response
    (common-lisp:error
     #A((30) common-lisp:base-char . ":campaign-response is required"))
    :type (common-lisp:or campaign-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-campaign-response 'make-delete-campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-campaign-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CampaignResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'campaign-response))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-email-channel-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-email-channel-request
                    'make-delete-email-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-email-channel-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-email-channel-response (:copier common-lisp:nil))
   (email-channel-response
    (common-lisp:error
     #A((35) common-lisp:base-char . ":email-channel-response is required"))
    :type (common-lisp:or email-channel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-email-channel-response
                    'make-delete-email-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-email-channel-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EmailChannelResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-channel-response))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-event-stream-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-event-stream-request
                    'make-delete-event-stream-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-event-stream-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-event-stream-response (:copier common-lisp:nil))
   (event-stream
    (common-lisp:error
     #A((25) common-lisp:base-char . ":event-stream is required"))
    :type (common-lisp:or event-stream common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-event-stream-response
                    'make-delete-event-stream-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-event-stream-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EventStream"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-stream))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-gcm-channel-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-gcm-channel-request
                    'make-delete-gcm-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-gcm-channel-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-gcm-channel-response (:copier common-lisp:nil))
   (gcmchannel-response
    (common-lisp:error
     #A((32) common-lisp:base-char . ":gcmchannel-response is required"))
    :type (common-lisp:or gcmchannel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-gcm-channel-response
                    'make-delete-gcm-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-gcm-channel-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GCMChannelResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'gcmchannel-response))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-segment-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (segment-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":segment-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-segment-request 'make-delete-segment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-segment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "SegmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-segment-response (:copier common-lisp:nil))
   (segment-response
    (common-lisp:error
     #A((29) common-lisp:base-char . ":segment-response is required"))
    :type (common-lisp:or segment-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-segment-response 'make-delete-segment-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-segment-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SegmentResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment-response))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-sms-channel-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-sms-channel-request
                    'make-delete-sms-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-sms-channel-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-sms-channel-response (:copier common-lisp:nil))
   (smschannel-response
    (common-lisp:error
     #A((32) common-lisp:base-char . ":smschannel-response is required"))
    :type (common-lisp:or smschannel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-sms-channel-response
                    'make-delete-sms-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-sms-channel-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SMSChannelResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'smschannel-response))))))
(common-lisp:deftype delivery-status () 'common-lisp:string)
(common-lisp:deftype dimension-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (direct-message-configuration (:copier common-lisp:nil))
   (apnsmessage common-lisp:nil :type
    (common-lisp:or apnsmessage common-lisp:null))
   (default-message common-lisp:nil :type
    (common-lisp:or default-message common-lisp:null))
   (default-push-notification-message common-lisp:nil :type
    (common-lisp:or default-push-notification-message common-lisp:null))
   (gcmmessage common-lisp:nil :type
    (common-lisp:or gcmmessage common-lisp:null))
   (smsmessage common-lisp:nil :type
    (common-lisp:or smsmessage common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'direct-message-configuration
                    'make-direct-message-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          direct-message-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "APNSMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'apnsmessage)))
    (aws-sdk/generator/shape::to-query-params "DefaultMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-message)))
    (aws-sdk/generator/shape::to-query-params "DefaultPushNotificationMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-push-notification-message)))
    (aws-sdk/generator/shape::to-query-params "GCMMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'gcmmessage)))
    (aws-sdk/generator/shape::to-query-params "SMSMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'smsmessage))))))
(common-lisp:deftype duration () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (email-channel-request (:copier common-lisp:nil))
   (enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (from-address common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (identity common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'email-channel-request 'make-email-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          email-channel-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "FromAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'from-address)))
    (aws-sdk/generator/shape::to-query-params "Identity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity)))
    (aws-sdk/generator/shape::to-query-params "RoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (email-channel-response (:copier common-lisp:nil))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (from-address common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (identity common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (is-archived common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (last-modified-by common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (platform common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'email-channel-response 'make-email-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          email-channel-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "FromAddress"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'from-address)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Identity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity)))
    (aws-sdk/generator/shape::to-query-params "IsArchived"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-archived)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedBy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-by)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "Platform"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform)))
    (aws-sdk/generator/shape::to-query-params "RoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:progn
 (common-lisp:defstruct (endpoint-batch-item (:copier common-lisp:nil))
   (address common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or map-of-list-of-string common-lisp:null))
   (channel-type common-lisp:nil :type
    (common-lisp:or channel-type common-lisp:null))
   (demographic common-lisp:nil :type
    (common-lisp:or endpoint-demographic common-lisp:null))
   (effective-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (endpoint-status common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or endpoint-location common-lisp:null))
   (metrics common-lisp:nil :type
    (common-lisp:or map-of-double common-lisp:null))
   (opt-out common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (request-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (user common-lisp:nil :type
    (common-lisp:or endpoint-user common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'endpoint-batch-item 'make-endpoint-batch-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape endpoint-batch-item))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Address"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'address)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "ChannelType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'channel-type)))
    (aws-sdk/generator/shape::to-query-params "Demographic"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'demographic)))
    (aws-sdk/generator/shape::to-query-params "EffectiveDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'effective-date)))
    (aws-sdk/generator/shape::to-query-params "EndpointStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'endpoint-status)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "Metrics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metrics)))
    (aws-sdk/generator/shape::to-query-params "OptOut"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'opt-out)))
    (aws-sdk/generator/shape::to-query-params "RequestId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-id)))
    (aws-sdk/generator/shape::to-query-params "User"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user))))))
(common-lisp:progn
 (common-lisp:defstruct (endpoint-batch-request (:copier common-lisp:nil))
   (item common-lisp:nil :type
    (common-lisp:or list-of-endpoint-batch-item common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'endpoint-batch-request 'make-endpoint-batch-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          endpoint-batch-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Item"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item))))))
(common-lisp:progn
 (common-lisp:defstruct (endpoint-demographic (:copier common-lisp:nil))
   (app-version common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (locale common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (make common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (model common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (model-version common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (platform common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (platform-version common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (timezone common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'endpoint-demographic 'make-endpoint-demographic))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape endpoint-demographic))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AppVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'app-version)))
    (aws-sdk/generator/shape::to-query-params "Locale"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'locale)))
    (aws-sdk/generator/shape::to-query-params "Make"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'make)))
    (aws-sdk/generator/shape::to-query-params "Model"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'model)))
    (aws-sdk/generator/shape::to-query-params "ModelVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'model-version)))
    (aws-sdk/generator/shape::to-query-params "Platform"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform)))
    (aws-sdk/generator/shape::to-query-params "PlatformVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform-version)))
    (aws-sdk/generator/shape::to-query-params "Timezone"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timezone))))))
(common-lisp:progn
 (common-lisp:defstruct (endpoint-location (:copier common-lisp:nil))
   (city common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (country common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (latitude common-lisp:nil :type
    (common-lisp:or |__double| common-lisp:null))
   (longitude common-lisp:nil :type
    (common-lisp:or |__double| common-lisp:null))
   (postal-code common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (region common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'endpoint-location 'make-endpoint-location))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape endpoint-location))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "City"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'city)))
    (aws-sdk/generator/shape::to-query-params "Country"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'country)))
    (aws-sdk/generator/shape::to-query-params "Latitude"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'latitude)))
    (aws-sdk/generator/shape::to-query-params "Longitude"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'longitude)))
    (aws-sdk/generator/shape::to-query-params "PostalCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'postal-code)))
    (aws-sdk/generator/shape::to-query-params "Region"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'region))))))
(common-lisp:progn
 (common-lisp:defstruct (endpoint-request (:copier common-lisp:nil))
   (address common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or map-of-list-of-string common-lisp:null))
   (channel-type common-lisp:nil :type
    (common-lisp:or channel-type common-lisp:null))
   (demographic common-lisp:nil :type
    (common-lisp:or endpoint-demographic common-lisp:null))
   (effective-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (endpoint-status common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or endpoint-location common-lisp:null))
   (metrics common-lisp:nil :type
    (common-lisp:or map-of-double common-lisp:null))
   (opt-out common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (request-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (user common-lisp:nil :type
    (common-lisp:or endpoint-user common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'endpoint-request 'make-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape endpoint-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Address"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'address)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "ChannelType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'channel-type)))
    (aws-sdk/generator/shape::to-query-params "Demographic"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'demographic)))
    (aws-sdk/generator/shape::to-query-params "EffectiveDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'effective-date)))
    (aws-sdk/generator/shape::to-query-params "EndpointStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'endpoint-status)))
    (aws-sdk/generator/shape::to-query-params "Location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "Metrics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metrics)))
    (aws-sdk/generator/shape::to-query-params "OptOut"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'opt-out)))
    (aws-sdk/generator/shape::to-query-params "RequestId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-id)))
    (aws-sdk/generator/shape::to-query-params "User"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user))))))
(common-lisp:progn
 (common-lisp:defstruct (endpoint-response (:copier common-lisp:nil))
   (address common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or map-of-list-of-string common-lisp:null))
   (channel-type common-lisp:nil :type
    (common-lisp:or channel-type common-lisp:null))
   (cohort-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (demographic common-lisp:nil :type
    (common-lisp:or endpoint-demographic common-lisp:null))
   (effective-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (endpoint-status common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or endpoint-location common-lisp:null))
   (metrics common-lisp:nil :type
    (common-lisp:or map-of-double common-lisp:null))
   (opt-out common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (request-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (shard-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (user common-lisp:nil :type
    (common-lisp:or endpoint-user common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'endpoint-response 'make-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape endpoint-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Address"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'address)))
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "ChannelType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'channel-type)))
    (aws-sdk/generator/shape::to-query-params "CohortId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cohort-id)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "Demographic"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'demographic)))
    (aws-sdk/generator/shape::to-query-params "EffectiveDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'effective-date)))
    (aws-sdk/generator/shape::to-query-params "EndpointStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'endpoint-status)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "Metrics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metrics)))
    (aws-sdk/generator/shape::to-query-params "OptOut"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'opt-out)))
    (aws-sdk/generator/shape::to-query-params "RequestId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-id)))
    (aws-sdk/generator/shape::to-query-params "ShardId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'shard-id)))
    (aws-sdk/generator/shape::to-query-params "User"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user))))))
(common-lisp:progn
 (common-lisp:defstruct (endpoint-user (:copier common-lisp:nil))
   (user-attributes common-lisp:nil :type
    (common-lisp:or map-of-list-of-string common-lisp:null))
   (user-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'endpoint-user 'make-endpoint-user))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape endpoint-user))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UserAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-attributes)))
    (aws-sdk/generator/shape::to-query-params "UserId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-id))))))
(common-lisp:progn
 (common-lisp:defstruct (event-stream (:copier common-lisp:nil))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (destination-stream-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (external-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-updated-by common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'event-stream 'make-event-stream))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape event-stream))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "DestinationStreamArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-stream-arn)))
    (aws-sdk/generator/shape::to-query-params "ExternalId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'external-id)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "LastUpdatedBy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-by)))
    (aws-sdk/generator/shape::to-query-params "RoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (forbidden-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (request-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'forbidden-exception 'make-forbidden-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape forbidden-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "RequestID"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-id))))))
(common-lisp:deftype format () 'common-lisp:string)
(common-lisp:deftype frequency () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (gcmchannel-request (:copier common-lisp:nil))
   (api-key common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'gcmchannel-request 'make-gcmchannel-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape gcmchannel-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApiKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'api-key)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled))))))
(common-lisp:progn
 (common-lisp:defstruct (gcmchannel-response (:copier common-lisp:nil))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (credential common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (is-archived common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (last-modified-by common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (platform common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'gcmchannel-response 'make-gcmchannel-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape gcmchannel-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "Credential"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'credential)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "IsArchived"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-archived)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedBy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-by)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "Platform"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:progn
 (common-lisp:defstruct (gcmmessage (:copier common-lisp:nil))
   (action common-lisp:nil :type (common-lisp:or action common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (collapse-key common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (data common-lisp:nil :type (common-lisp:or map-of-string common-lisp:null))
   (icon-reference common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (image-icon-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (image-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (raw-content common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (restricted-package-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (silent-push common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (small-image-icon-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (sound common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (substitutions common-lisp:nil :type
    (common-lisp:or map-of-list-of-string common-lisp:null))
   (title common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (url common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'gcmmessage 'make-gcmmessage))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape gcmmessage))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action)))
    (aws-sdk/generator/shape::to-query-params "Body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body)))
    (aws-sdk/generator/shape::to-query-params "CollapseKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'collapse-key)))
    (aws-sdk/generator/shape::to-query-params "Data"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data)))
    (aws-sdk/generator/shape::to-query-params "IconReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'icon-reference)))
    (aws-sdk/generator/shape::to-query-params "ImageIconUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-icon-url)))
    (aws-sdk/generator/shape::to-query-params "ImageUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-url)))
    (aws-sdk/generator/shape::to-query-params "RawContent"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'raw-content)))
    (aws-sdk/generator/shape::to-query-params "RestrictedPackageName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'restricted-package-name)))
    (aws-sdk/generator/shape::to-query-params "SilentPush"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'silent-push)))
    (aws-sdk/generator/shape::to-query-params "SmallImageIconUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'small-image-icon-url)))
    (aws-sdk/generator/shape::to-query-params "Sound"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sound)))
    (aws-sdk/generator/shape::to-query-params "Substitutions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'substitutions)))
    (aws-sdk/generator/shape::to-query-params "Title"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'title)))
    (aws-sdk/generator/shape::to-query-params "Url"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'url))))))
(common-lisp:progn
 (common-lisp:defstruct (get-apns-channel-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-apns-channel-request 'make-get-apns-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-apns-channel-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-apns-channel-response (:copier common-lisp:nil))
   (apnschannel-response
    (common-lisp:error
     #A((33) common-lisp:base-char . ":apnschannel-response is required"))
    :type (common-lisp:or apnschannel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-apns-channel-response
                    'make-get-apns-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-apns-channel-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "APNSChannelResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'apnschannel-response))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-apns-sandbox-channel-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-apns-sandbox-channel-request
                    'make-get-apns-sandbox-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-apns-sandbox-channel-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-apns-sandbox-channel-response (:copier common-lisp:nil))
   (apnssandbox-channel-response
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":apnssandbox-channel-response is required"))
    :type (common-lisp:or apnssandbox-channel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-apns-sandbox-channel-response
                    'make-get-apns-sandbox-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-apns-sandbox-channel-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "APNSSandboxChannelResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'apnssandbox-channel-response))))))
(common-lisp:progn
 (common-lisp:defstruct (get-app-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-app-request 'make-get-app-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-app-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-app-response (:copier common-lisp:nil))
   (application-response
    (common-lisp:error
     #A((33) common-lisp:base-char . ":application-response is required"))
    :type (common-lisp:or application-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-app-response 'make-get-app-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-app-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-response))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-application-settings-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-application-settings-request
                    'make-get-application-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-application-settings-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-application-settings-response (:copier common-lisp:nil))
   (application-settings-resource
    (common-lisp:error
     #A((42) common-lisp:base-char
        . ":application-settings-resource is required"))
    :type (common-lisp:or application-settings-resource common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-application-settings-response
                    'make-get-application-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-application-settings-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationSettingsResource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-settings-resource))))))
(common-lisp:progn
 (common-lisp:defstruct (get-apps-request (:copier common-lisp:nil))
   (page-size common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (token common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-apps-request 'make-get-apps-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-apps-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size)))
    (aws-sdk/generator/shape::to-query-params "Token"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-apps-response (:copier common-lisp:nil))
   (applications-response
    (common-lisp:error
     #A((34) common-lisp:base-char . ":applications-response is required"))
    :type (common-lisp:or applications-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-apps-response 'make-get-apps-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-apps-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationsResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'applications-response))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-campaign-activities-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (campaign-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":campaign-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (token common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaign-activities-request
                    'make-get-campaign-activities-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-campaign-activities-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "CampaignId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'campaign-id)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size)))
    (aws-sdk/generator/shape::to-query-params "Token"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-campaign-activities-response (:copier common-lisp:nil))
   (activities-response
    (common-lisp:error
     #A((32) common-lisp:base-char . ":activities-response is required"))
    :type (common-lisp:or activities-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaign-activities-response
                    'make-get-campaign-activities-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-campaign-activities-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ActivitiesResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activities-response))))))
(common-lisp:progn
 (common-lisp:defstruct (get-campaign-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (campaign-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":campaign-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaign-request 'make-get-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-campaign-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "CampaignId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'campaign-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-campaign-response (:copier common-lisp:nil))
   (campaign-response
    (common-lisp:error
     #A((30) common-lisp:base-char . ":campaign-response is required"))
    :type (common-lisp:or campaign-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaign-response 'make-get-campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-campaign-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CampaignResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'campaign-response))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-campaign-version-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (campaign-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":campaign-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (version
    (common-lisp:error #A((20) common-lisp:base-char . ":version is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaign-version-request
                    'make-get-campaign-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-campaign-version-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "CampaignId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'campaign-id)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-campaign-version-response (:copier common-lisp:nil))
   (campaign-response
    (common-lisp:error
     #A((30) common-lisp:base-char . ":campaign-response is required"))
    :type (common-lisp:or campaign-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaign-version-response
                    'make-get-campaign-version-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-campaign-version-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CampaignResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'campaign-response))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-campaign-versions-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (campaign-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":campaign-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (token common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaign-versions-request
                    'make-get-campaign-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-campaign-versions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "CampaignId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'campaign-id)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size)))
    (aws-sdk/generator/shape::to-query-params "Token"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-campaign-versions-response (:copier common-lisp:nil))
   (campaigns-response
    (common-lisp:error
     #A((31) common-lisp:base-char . ":campaigns-response is required"))
    :type (common-lisp:or campaigns-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaign-versions-response
                    'make-get-campaign-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-campaign-versions-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CampaignsResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'campaigns-response))))))
(common-lisp:progn
 (common-lisp:defstruct (get-campaigns-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (token common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaigns-request 'make-get-campaigns-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-campaigns-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size)))
    (aws-sdk/generator/shape::to-query-params "Token"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-campaigns-response (:copier common-lisp:nil))
   (campaigns-response
    (common-lisp:error
     #A((31) common-lisp:base-char . ":campaigns-response is required"))
    :type (common-lisp:or campaigns-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-campaigns-response 'make-get-campaigns-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-campaigns-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CampaignsResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'campaigns-response))))))
(common-lisp:progn
 (common-lisp:defstruct (get-email-channel-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-email-channel-request
                    'make-get-email-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-email-channel-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-email-channel-response (:copier common-lisp:nil))
   (email-channel-response
    (common-lisp:error
     #A((35) common-lisp:base-char . ":email-channel-response is required"))
    :type (common-lisp:or email-channel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-email-channel-response
                    'make-get-email-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-email-channel-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EmailChannelResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-channel-response))))))
(common-lisp:progn
 (common-lisp:defstruct (get-endpoint-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (endpoint-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":endpoint-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-endpoint-request 'make-get-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-endpoint-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "EndpointId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'endpoint-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-endpoint-response (:copier common-lisp:nil))
   (endpoint-response
    (common-lisp:error
     #A((30) common-lisp:base-char . ":endpoint-response is required"))
    :type (common-lisp:or endpoint-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-endpoint-response 'make-get-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-endpoint-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EndpointResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'endpoint-response))))))
(common-lisp:progn
 (common-lisp:defstruct (get-event-stream-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-event-stream-request 'make-get-event-stream-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-event-stream-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-event-stream-response (:copier common-lisp:nil))
   (event-stream
    (common-lisp:error
     #A((25) common-lisp:base-char . ":event-stream is required"))
    :type (common-lisp:or event-stream common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-event-stream-response
                    'make-get-event-stream-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-event-stream-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EventStream"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-stream))))))
(common-lisp:progn
 (common-lisp:defstruct (get-gcm-channel-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-gcm-channel-request 'make-get-gcm-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-gcm-channel-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-gcm-channel-response (:copier common-lisp:nil))
   (gcmchannel-response
    (common-lisp:error
     #A((32) common-lisp:base-char . ":gcmchannel-response is required"))
    :type (common-lisp:or gcmchannel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-gcm-channel-response 'make-get-gcm-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-gcm-channel-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GCMChannelResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'gcmchannel-response))))))
(common-lisp:progn
 (common-lisp:defstruct (get-import-job-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (job-id
    (common-lisp:error #A((19) common-lisp:base-char . ":job-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-import-job-request 'make-get-import-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-import-job-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "JobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-import-job-response (:copier common-lisp:nil))
   (import-job-response
    (common-lisp:error
     #A((32) common-lisp:base-char . ":import-job-response is required"))
    :type (common-lisp:or import-job-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-import-job-response 'make-get-import-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-import-job-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ImportJobResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'import-job-response))))))
(common-lisp:progn
 (common-lisp:defstruct (get-import-jobs-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (token common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-import-jobs-request 'make-get-import-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-import-jobs-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size)))
    (aws-sdk/generator/shape::to-query-params "Token"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-import-jobs-response (:copier common-lisp:nil))
   (import-jobs-response
    (common-lisp:error
     #A((33) common-lisp:base-char . ":import-jobs-response is required"))
    :type (common-lisp:or import-jobs-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-import-jobs-response 'make-get-import-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-import-jobs-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ImportJobsResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'import-jobs-response))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-segment-import-jobs-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (segment-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":segment-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (token common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-segment-import-jobs-request
                    'make-get-segment-import-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-segment-import-jobs-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size)))
    (aws-sdk/generator/shape::to-query-params "SegmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment-id)))
    (aws-sdk/generator/shape::to-query-params "Token"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-segment-import-jobs-response (:copier common-lisp:nil))
   (import-jobs-response
    (common-lisp:error
     #A((33) common-lisp:base-char . ":import-jobs-response is required"))
    :type (common-lisp:or import-jobs-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-segment-import-jobs-response
                    'make-get-segment-import-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-segment-import-jobs-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ImportJobsResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'import-jobs-response))))))
(common-lisp:progn
 (common-lisp:defstruct (get-segment-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (segment-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":segment-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-segment-request 'make-get-segment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-segment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "SegmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-segment-response (:copier common-lisp:nil))
   (segment-response
    (common-lisp:error
     #A((29) common-lisp:base-char . ":segment-response is required"))
    :type (common-lisp:or segment-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-segment-response 'make-get-segment-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-segment-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SegmentResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment-response))))))
(common-lisp:progn
 (common-lisp:defstruct (get-segment-version-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (segment-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":segment-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (version
    (common-lisp:error #A((20) common-lisp:base-char . ":version is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-segment-version-request
                    'make-get-segment-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-segment-version-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "SegmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment-id)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-segment-version-response (:copier common-lisp:nil))
   (segment-response
    (common-lisp:error
     #A((29) common-lisp:base-char . ":segment-response is required"))
    :type (common-lisp:or segment-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-segment-version-response
                    'make-get-segment-version-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-segment-version-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SegmentResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment-response))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-segment-versions-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (segment-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":segment-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (token common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-segment-versions-request
                    'make-get-segment-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-segment-versions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size)))
    (aws-sdk/generator/shape::to-query-params "SegmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment-id)))
    (aws-sdk/generator/shape::to-query-params "Token"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-segment-versions-response (:copier common-lisp:nil))
   (segments-response
    (common-lisp:error
     #A((30) common-lisp:base-char . ":segments-response is required"))
    :type (common-lisp:or segments-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-segment-versions-response
                    'make-get-segment-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-segment-versions-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SegmentsResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segments-response))))))
(common-lisp:progn
 (common-lisp:defstruct (get-segments-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (token common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-segments-request 'make-get-segments-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-segments-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size)))
    (aws-sdk/generator/shape::to-query-params "Token"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-segments-response (:copier common-lisp:nil))
   (segments-response
    (common-lisp:error
     #A((30) common-lisp:base-char . ":segments-response is required"))
    :type (common-lisp:or segments-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-segments-response 'make-get-segments-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-segments-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SegmentsResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segments-response))))))
(common-lisp:progn
 (common-lisp:defstruct (get-sms-channel-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-sms-channel-request 'make-get-sms-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-sms-channel-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-sms-channel-response (:copier common-lisp:nil))
   (smschannel-response
    (common-lisp:error
     #A((32) common-lisp:base-char . ":smschannel-response is required"))
    :type (common-lisp:or smschannel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-sms-channel-response 'make-get-sms-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-sms-channel-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SMSChannelResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'smschannel-response))))))
(common-lisp:progn
 (common-lisp:defstruct (import-job-request (:copier common-lisp:nil))
   (define-segment common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (external-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (format common-lisp:nil :type (common-lisp:or format common-lisp:null))
   (register-endpoints common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (s3url common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (segment-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (segment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-job-request 'make-import-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape import-job-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DefineSegment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'define-segment)))
    (aws-sdk/generator/shape::to-query-params "ExternalId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'external-id)))
    (aws-sdk/generator/shape::to-query-params "Format"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'format)))
    (aws-sdk/generator/shape::to-query-params "RegisterEndpoints"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'register-endpoints)))
    (aws-sdk/generator/shape::to-query-params "RoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "S3Url"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3url)))
    (aws-sdk/generator/shape::to-query-params "SegmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment-id)))
    (aws-sdk/generator/shape::to-query-params "SegmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment-name))))))
(common-lisp:progn
 (common-lisp:defstruct (import-job-resource (:copier common-lisp:nil))
   (define-segment common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (external-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (format common-lisp:nil :type (common-lisp:or format common-lisp:null))
   (register-endpoints common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (s3url common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (segment-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (segment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-job-resource 'make-import-job-resource))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape import-job-resource))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DefineSegment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'define-segment)))
    (aws-sdk/generator/shape::to-query-params "ExternalId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'external-id)))
    (aws-sdk/generator/shape::to-query-params "Format"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'format)))
    (aws-sdk/generator/shape::to-query-params "RegisterEndpoints"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'register-endpoints)))
    (aws-sdk/generator/shape::to-query-params "RoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "S3Url"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3url)))
    (aws-sdk/generator/shape::to-query-params "SegmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment-id)))
    (aws-sdk/generator/shape::to-query-params "SegmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment-name))))))
(common-lisp:progn
 (common-lisp:defstruct (import-job-response (:copier common-lisp:nil))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (completed-pieces common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (completion-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (definition common-lisp:nil :type
    (common-lisp:or import-job-resource common-lisp:null))
   (failed-pieces common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (failures common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (job-status common-lisp:nil :type
    (common-lisp:or job-status common-lisp:null))
   (total-failures common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (total-pieces common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (total-processed common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-job-response 'make-import-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape import-job-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "CompletedPieces"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'completed-pieces)))
    (aws-sdk/generator/shape::to-query-params "CompletionDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'completion-date)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "Definition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'definition)))
    (aws-sdk/generator/shape::to-query-params "FailedPieces"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-pieces)))
    (aws-sdk/generator/shape::to-query-params "Failures"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failures)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "JobStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-status)))
    (aws-sdk/generator/shape::to-query-params "TotalFailures"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'total-failures)))
    (aws-sdk/generator/shape::to-query-params "TotalPieces"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'total-pieces)))
    (aws-sdk/generator/shape::to-query-params "TotalProcessed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'total-processed)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type))))))
(common-lisp:progn
 (common-lisp:defstruct (import-jobs-response (:copier common-lisp:nil))
   (item common-lisp:nil :type
    (common-lisp:or list-of-import-job-response common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-jobs-response 'make-import-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape import-jobs-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Item"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (internal-server-error-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (request-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'internal-server-error-exception
                    'make-internal-server-error-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          internal-server-error-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "RequestID"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-id))))))
(common-lisp:deftype job-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype list-of-activity-response ()
   '(trivial-types:proper-list activity-response))
 (common-lisp:defun |make-list-of-activity-response|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list activity-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-application-response ()
   '(trivial-types:proper-list application-response))
 (common-lisp:defun |make-list-of-application-response|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list application-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-campaign-response ()
   '(trivial-types:proper-list campaign-response))
 (common-lisp:defun |make-list-of-campaign-response|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list campaign-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-endpoint-batch-item ()
   '(trivial-types:proper-list endpoint-batch-item))
 (common-lisp:defun |make-list-of-endpoint-batch-item|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list endpoint-batch-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-import-job-response ()
   '(trivial-types:proper-list import-job-response))
 (common-lisp:defun |make-list-of-import-job-response|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list import-job-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-segment-response ()
   '(trivial-types:proper-list segment-response))
 (common-lisp:defun |make-list-of-segment-response|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list segment-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-treatment-resource ()
   '(trivial-types:proper-list treatment-resource))
 (common-lisp:defun |make-list-of-treatment-resource|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list treatment-resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-write-treatment-resource ()
   '(trivial-types:proper-list write-treatment-resource))
 (common-lisp:defun |make-list-of-write-treatment-resource|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            write-treatment-resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-string ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun |make-list-of-string|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:defstruct
    (map-of-address-configuration
     (:constructor |make-map-of-address-configuration|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:defstruct
    (map-of-attribute-dimension
     (:constructor |make-map-of-attribute-dimension|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:defstruct
    (map-of-list-of-string
     (:constructor |make-map-of-list-of-string|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:defstruct
    (map-of-message-result
     (:constructor |make-map-of-message-result|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:defstruct
    (map-of-double
     (:constructor |make-map-of-double|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:defstruct
    (map-of-integer
     (:constructor |make-map-of-integer|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:defstruct
    (map-of-string
     (:constructor |make-map-of-string|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (message (:copier common-lisp:nil))
   (action common-lisp:nil :type (common-lisp:or action common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (image-icon-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (image-small-icon-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (image-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (json-body common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (media-url common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (raw-content common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (silent-push common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (title common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (url common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'message 'make-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action)))
    (aws-sdk/generator/shape::to-query-params "Body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body)))
    (aws-sdk/generator/shape::to-query-params "ImageIconUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-icon-url)))
    (aws-sdk/generator/shape::to-query-params "ImageSmallIconUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-small-icon-url)))
    (aws-sdk/generator/shape::to-query-params "ImageUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-url)))
    (aws-sdk/generator/shape::to-query-params "JsonBody"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'json-body)))
    (aws-sdk/generator/shape::to-query-params "MediaUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'media-url)))
    (aws-sdk/generator/shape::to-query-params "RawContent"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'raw-content)))
    (aws-sdk/generator/shape::to-query-params "SilentPush"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'silent-push)))
    (aws-sdk/generator/shape::to-query-params "Title"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'title)))
    (aws-sdk/generator/shape::to-query-params "Url"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'url))))))
(common-lisp:progn
 (common-lisp:defstruct (message-body (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (request-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'message-body 'make-message-body))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape message-body))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "RequestID"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-id))))))
(common-lisp:progn
 (common-lisp:defstruct (message-configuration (:copier common-lisp:nil))
   (apnsmessage common-lisp:nil :type
    (common-lisp:or message common-lisp:null))
   (default-message common-lisp:nil :type
    (common-lisp:or message common-lisp:null))
   (email-message common-lisp:nil :type
    (common-lisp:or campaign-email-message common-lisp:null))
   (gcmmessage common-lisp:nil :type (common-lisp:or message common-lisp:null))
   (smsmessage common-lisp:nil :type
    (common-lisp:or campaign-sms-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'message-configuration 'make-message-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          message-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "APNSMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'apnsmessage)))
    (aws-sdk/generator/shape::to-query-params "DefaultMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-message)))
    (aws-sdk/generator/shape::to-query-params "EmailMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-message)))
    (aws-sdk/generator/shape::to-query-params "GCMMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'gcmmessage)))
    (aws-sdk/generator/shape::to-query-params "SMSMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'smsmessage))))))
(common-lisp:progn
 (common-lisp:defstruct (message-request (:copier common-lisp:nil))
   (addresses common-lisp:nil :type
    (common-lisp:or map-of-address-configuration common-lisp:null))
   (context common-lisp:nil :type
    (common-lisp:or map-of-string common-lisp:null))
   (message-configuration common-lisp:nil :type
    (common-lisp:or direct-message-configuration common-lisp:null)))
 (common-lisp:export (common-lisp:list 'message-request 'make-message-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape message-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Addresses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'addresses)))
    (aws-sdk/generator/shape::to-query-params "Context"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'context)))
    (aws-sdk/generator/shape::to-query-params "MessageConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct (message-response (:copier common-lisp:nil))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (request-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (result common-lisp:nil :type
    (common-lisp:or map-of-message-result common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'message-response 'make-message-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape message-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "RequestId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-id)))
    (aws-sdk/generator/shape::to-query-params "Result"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result))))))
(common-lisp:progn
 (common-lisp:defstruct (message-result (:copier common-lisp:nil))
   (delivery-status common-lisp:nil :type
    (common-lisp:or delivery-status common-lisp:null))
   (status-code common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (updated-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'message-result 'make-message-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape message-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DeliveryStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delivery-status)))
    (aws-sdk/generator/shape::to-query-params "StatusCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-code)))
    (aws-sdk/generator/shape::to-query-params "StatusMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-message)))
    (aws-sdk/generator/shape::to-query-params "UpdatedToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'updated-token))))))
(common-lisp:deftype message-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (method-not-allowed-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (request-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'method-not-allowed-exception
                    'make-method-not-allowed-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          method-not-allowed-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "RequestID"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-id))))))
(common-lisp:progn
 (common-lisp:defstruct (not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (request-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'make-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "RequestID"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-id))))))
(common-lisp:progn
 (common-lisp:defstruct (put-event-stream-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (write-event-stream
    (common-lisp:error
     #A((31) common-lisp:base-char . ":write-event-stream is required"))
    :type (common-lisp:or write-event-stream common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-event-stream-request 'make-put-event-stream-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-event-stream-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "WriteEventStream"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'write-event-stream))))))
(common-lisp:progn
 (common-lisp:defstruct (put-event-stream-response (:copier common-lisp:nil))
   (event-stream
    (common-lisp:error
     #A((25) common-lisp:base-char . ":event-stream is required"))
    :type (common-lisp:or event-stream common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-event-stream-response
                    'make-put-event-stream-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-event-stream-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EventStream"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-stream))))))
(common-lisp:progn
 (common-lisp:defstruct (quiet-time (:copier common-lisp:nil))
   (end common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (start common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'quiet-time 'make-quiet-time))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape quiet-time))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "End"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end)))
    (aws-sdk/generator/shape::to-query-params "Start"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start))))))
(common-lisp:progn
 (common-lisp:defstruct (recency-dimension (:copier common-lisp:nil))
   (duration common-lisp:nil :type (common-lisp:or duration common-lisp:null))
   (recency-type common-lisp:nil :type
    (common-lisp:or recency-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'recency-dimension 'make-recency-dimension))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape recency-dimension))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Duration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'duration)))
    (aws-sdk/generator/shape::to-query-params "RecencyType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'recency-type))))))
(common-lisp:deftype recency-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (smschannel-request (:copier common-lisp:nil))
   (enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (sender-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'smschannel-request 'make-smschannel-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape smschannel-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "SenderId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sender-id))))))
(common-lisp:progn
 (common-lisp:defstruct (smschannel-response (:copier common-lisp:nil))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (enabled common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (is-archived common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (last-modified-by common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (platform common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (sender-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (short-code common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'smschannel-response 'make-smschannel-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape smschannel-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "IsArchived"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-archived)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedBy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-by)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "Platform"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform)))
    (aws-sdk/generator/shape::to-query-params "SenderId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sender-id)))
    (aws-sdk/generator/shape::to-query-params "ShortCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'short-code)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:progn
 (common-lisp:defstruct (smsmessage (:copier common-lisp:nil))
   (body common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (message-type common-lisp:nil :type
    (common-lisp:or message-type common-lisp:null))
   (sender-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (substitutions common-lisp:nil :type
    (common-lisp:or map-of-list-of-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'smsmessage 'make-smsmessage))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape smsmessage))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body)))
    (aws-sdk/generator/shape::to-query-params "MessageType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message-type)))
    (aws-sdk/generator/shape::to-query-params "SenderId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sender-id)))
    (aws-sdk/generator/shape::to-query-params "Substitutions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'substitutions))))))
(common-lisp:progn
 (common-lisp:defstruct (schedule (:copier common-lisp:nil))
   (end-time common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (frequency common-lisp:nil :type
    (common-lisp:or frequency common-lisp:null))
   (is-local-time common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (quiet-time common-lisp:nil :type
    (common-lisp:or quiet-time common-lisp:null))
   (start-time common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (timezone common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'schedule 'make-schedule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape schedule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time)))
    (aws-sdk/generator/shape::to-query-params "Frequency"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'frequency)))
    (aws-sdk/generator/shape::to-query-params "IsLocalTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-local-time)))
    (aws-sdk/generator/shape::to-query-params "QuietTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quiet-time)))
    (aws-sdk/generator/shape::to-query-params "StartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "Timezone"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timezone))))))
(common-lisp:progn
 (common-lisp:defstruct (segment-behaviors (:copier common-lisp:nil))
   (recency common-lisp:nil :type
    (common-lisp:or recency-dimension common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'segment-behaviors 'make-segment-behaviors))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape segment-behaviors))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Recency"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'recency))))))
(common-lisp:progn
 (common-lisp:defstruct (segment-demographics (:copier common-lisp:nil))
   (app-version common-lisp:nil :type
    (common-lisp:or set-dimension common-lisp:null))
   (channel common-lisp:nil :type
    (common-lisp:or set-dimension common-lisp:null))
   (device-type common-lisp:nil :type
    (common-lisp:or set-dimension common-lisp:null))
   (make common-lisp:nil :type (common-lisp:or set-dimension common-lisp:null))
   (model common-lisp:nil :type
    (common-lisp:or set-dimension common-lisp:null))
   (platform common-lisp:nil :type
    (common-lisp:or set-dimension common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'segment-demographics 'make-segment-demographics))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape segment-demographics))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AppVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'app-version)))
    (aws-sdk/generator/shape::to-query-params "Channel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'channel)))
    (aws-sdk/generator/shape::to-query-params "DeviceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-type)))
    (aws-sdk/generator/shape::to-query-params "Make"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'make)))
    (aws-sdk/generator/shape::to-query-params "Model"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'model)))
    (aws-sdk/generator/shape::to-query-params "Platform"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform))))))
(common-lisp:progn
 (common-lisp:defstruct (segment-dimensions (:copier common-lisp:nil))
   (attributes common-lisp:nil :type
    (common-lisp:or map-of-attribute-dimension common-lisp:null))
   (behavior common-lisp:nil :type
    (common-lisp:or segment-behaviors common-lisp:null))
   (demographic common-lisp:nil :type
    (common-lisp:or segment-demographics common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or segment-location common-lisp:null))
   (user-attributes common-lisp:nil :type
    (common-lisp:or map-of-attribute-dimension common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'segment-dimensions 'make-segment-dimensions))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape segment-dimensions))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "Behavior"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'behavior)))
    (aws-sdk/generator/shape::to-query-params "Demographic"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'demographic)))
    (aws-sdk/generator/shape::to-query-params "Location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "UserAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-attributes))))))
(common-lisp:progn
 (common-lisp:defstruct (segment-import-resource (:copier common-lisp:nil))
   (channel-counts common-lisp:nil :type
    (common-lisp:or map-of-integer common-lisp:null))
   (external-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (format common-lisp:nil :type (common-lisp:or format common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (s3url common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (size common-lisp:nil :type (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'segment-import-resource 'make-segment-import-resource))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          segment-import-resource))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChannelCounts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'channel-counts)))
    (aws-sdk/generator/shape::to-query-params "ExternalId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'external-id)))
    (aws-sdk/generator/shape::to-query-params "Format"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'format)))
    (aws-sdk/generator/shape::to-query-params "RoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "S3Url"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3url)))
    (aws-sdk/generator/shape::to-query-params "Size"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size))))))
(common-lisp:progn
 (common-lisp:defstruct (segment-location (:copier common-lisp:nil))
   (country common-lisp:nil :type
    (common-lisp:or set-dimension common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'segment-location 'make-segment-location))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape segment-location))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Country"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'country))))))
(common-lisp:progn
 (common-lisp:defstruct (segment-response (:copier common-lisp:nil))
   (application-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (dimensions common-lisp:nil :type
    (common-lisp:or segment-dimensions common-lisp:null))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (import-definition common-lisp:nil :type
    (common-lisp:or segment-import-resource common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (segment-type common-lisp:nil :type
    (common-lisp:or segment-type common-lisp:null))
   (version common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'segment-response 'make-segment-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape segment-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "Dimensions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dimensions)))
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "ImportDefinition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'import-definition)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "SegmentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment-type)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:deftype segment-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (segments-response (:copier common-lisp:nil))
   (item common-lisp:nil :type
    (common-lisp:or list-of-segment-response common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'segments-response 'make-segments-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape segments-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Item"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (send-messages-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (message-request
    (common-lisp:error
     #A((28) common-lisp:base-char . ":message-request is required"))
    :type (common-lisp:or message-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-messages-request 'make-send-messages-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          send-messages-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "MessageRequest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message-request))))))
(common-lisp:progn
 (common-lisp:defstruct (send-messages-response (:copier common-lisp:nil))
   (message-response
    (common-lisp:error
     #A((29) common-lisp:base-char . ":message-response is required"))
    :type (common-lisp:or message-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-messages-response 'make-send-messages-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          send-messages-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MessageResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message-response))))))
(common-lisp:progn
 (common-lisp:defstruct (set-dimension (:copier common-lisp:nil))
   (dimension-type common-lisp:nil :type
    (common-lisp:or dimension-type common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'set-dimension 'make-set-dimension))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape set-dimension))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DimensionType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dimension-type)))
    (aws-sdk/generator/shape::to-query-params "Values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values))))))
(common-lisp:progn
 (common-lisp:defstruct (too-many-requests-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (request-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'make-too-many-requests-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-requests-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "RequestID"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-id))))))
(common-lisp:progn
 (common-lisp:defstruct (treatment-resource (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (message-configuration common-lisp:nil :type
    (common-lisp:or message-configuration common-lisp:null))
   (schedule common-lisp:nil :type (common-lisp:or schedule common-lisp:null))
   (size-percent common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or campaign-state common-lisp:null))
   (treatment-description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (treatment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'treatment-resource 'make-treatment-resource))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape treatment-resource))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "MessageConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message-configuration)))
    (aws-sdk/generator/shape::to-query-params "Schedule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schedule)))
    (aws-sdk/generator/shape::to-query-params "SizePercent"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size-percent)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "TreatmentDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'treatment-description)))
    (aws-sdk/generator/shape::to-query-params "TreatmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'treatment-name))))))
(common-lisp:progn
 (common-lisp:defstruct (update-apns-channel-request (:copier common-lisp:nil))
   (apnschannel-request
    (common-lisp:error
     #A((32) common-lisp:base-char . ":apnschannel-request is required"))
    :type (common-lisp:or apnschannel-request common-lisp:null))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-apns-channel-request
                    'make-update-apns-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-apns-channel-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "APNSChannelRequest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'apnschannel-request)))
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-apns-channel-response (:copier common-lisp:nil))
   (apnschannel-response
    (common-lisp:error
     #A((33) common-lisp:base-char . ":apnschannel-response is required"))
    :type (common-lisp:or apnschannel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-apns-channel-response
                    'make-update-apns-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-apns-channel-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "APNSChannelResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'apnschannel-response))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-apns-sandbox-channel-request (:copier common-lisp:nil))
   (apnssandbox-channel-request
    (common-lisp:error
     #A((40) common-lisp:base-char
        . ":apnssandbox-channel-request is required"))
    :type (common-lisp:or apnssandbox-channel-request common-lisp:null))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-apns-sandbox-channel-request
                    'make-update-apns-sandbox-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-apns-sandbox-channel-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "APNSSandboxChannelRequest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'apnssandbox-channel-request)))
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-apns-sandbox-channel-response (:copier common-lisp:nil))
   (apnssandbox-channel-response
    (common-lisp:error
     #A((41) common-lisp:base-char
        . ":apnssandbox-channel-response is required"))
    :type (common-lisp:or apnssandbox-channel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-apns-sandbox-channel-response
                    'make-update-apns-sandbox-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-apns-sandbox-channel-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "APNSSandboxChannelResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'apnssandbox-channel-response))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-application-settings-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (write-application-settings-request
    (common-lisp:error
     #A((47) common-lisp:base-char
        . ":write-application-settings-request is required"))
    :type
    (common-lisp:or write-application-settings-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-application-settings-request
                    'make-update-application-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-application-settings-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "WriteApplicationSettingsRequest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'write-application-settings-request))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-application-settings-response (:copier common-lisp:nil))
   (application-settings-resource
    (common-lisp:error
     #A((42) common-lisp:base-char
        . ":application-settings-resource is required"))
    :type (common-lisp:or application-settings-resource common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-application-settings-response
                    'make-update-application-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-application-settings-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationSettingsResource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-settings-resource))))))
(common-lisp:progn
 (common-lisp:defstruct (update-campaign-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (campaign-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":campaign-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (write-campaign-request
    (common-lisp:error
     #A((35) common-lisp:base-char . ":write-campaign-request is required"))
    :type (common-lisp:or write-campaign-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-campaign-request 'make-update-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-campaign-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "CampaignId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'campaign-id)))
    (aws-sdk/generator/shape::to-query-params "WriteCampaignRequest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'write-campaign-request))))))
(common-lisp:progn
 (common-lisp:defstruct (update-campaign-response (:copier common-lisp:nil))
   (campaign-response
    (common-lisp:error
     #A((30) common-lisp:base-char . ":campaign-response is required"))
    :type (common-lisp:or campaign-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-campaign-response 'make-update-campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-campaign-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CampaignResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'campaign-response))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-email-channel-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (email-channel-request
    (common-lisp:error
     #A((34) common-lisp:base-char . ":email-channel-request is required"))
    :type (common-lisp:or email-channel-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-email-channel-request
                    'make-update-email-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-email-channel-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "EmailChannelRequest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-channel-request))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-email-channel-response (:copier common-lisp:nil))
   (email-channel-response
    (common-lisp:error
     #A((35) common-lisp:base-char . ":email-channel-response is required"))
    :type (common-lisp:or email-channel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-email-channel-response
                    'make-update-email-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-email-channel-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EmailChannelResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'email-channel-response))))))
(common-lisp:progn
 (common-lisp:defstruct (update-endpoint-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (endpoint-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":endpoint-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (endpoint-request
    (common-lisp:error
     #A((29) common-lisp:base-char . ":endpoint-request is required"))
    :type (common-lisp:or endpoint-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-endpoint-request 'make-update-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-endpoint-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "EndpointId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'endpoint-id)))
    (aws-sdk/generator/shape::to-query-params "EndpointRequest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'endpoint-request))))))
(common-lisp:progn
 (common-lisp:defstruct (update-endpoint-response (:copier common-lisp:nil))
   (message-body
    (common-lisp:error
     #A((25) common-lisp:base-char . ":message-body is required"))
    :type (common-lisp:or message-body common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-endpoint-response 'make-update-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-endpoint-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MessageBody"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message-body))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-endpoints-batch-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (endpoint-batch-request
    (common-lisp:error
     #A((35) common-lisp:base-char . ":endpoint-batch-request is required"))
    :type (common-lisp:or endpoint-batch-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-endpoints-batch-request
                    'make-update-endpoints-batch-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-endpoints-batch-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "EndpointBatchRequest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'endpoint-batch-request))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-endpoints-batch-response (:copier common-lisp:nil))
   (message-body
    (common-lisp:error
     #A((25) common-lisp:base-char . ":message-body is required"))
    :type (common-lisp:or message-body common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-endpoints-batch-response
                    'make-update-endpoints-batch-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-endpoints-batch-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MessageBody"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message-body))))))
(common-lisp:progn
 (common-lisp:defstruct (update-gcm-channel-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (gcmchannel-request
    (common-lisp:error
     #A((31) common-lisp:base-char . ":gcmchannel-request is required"))
    :type (common-lisp:or gcmchannel-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-gcm-channel-request
                    'make-update-gcm-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-gcm-channel-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "GCMChannelRequest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'gcmchannel-request))))))
(common-lisp:progn
 (common-lisp:defstruct (update-gcm-channel-response (:copier common-lisp:nil))
   (gcmchannel-response
    (common-lisp:error
     #A((32) common-lisp:base-char . ":gcmchannel-response is required"))
    :type (common-lisp:or gcmchannel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-gcm-channel-response
                    'make-update-gcm-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-gcm-channel-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "GCMChannelResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'gcmchannel-response))))))
(common-lisp:progn
 (common-lisp:defstruct (update-segment-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (segment-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":segment-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (write-segment-request
    (common-lisp:error
     #A((34) common-lisp:base-char . ":write-segment-request is required"))
    :type (common-lisp:or write-segment-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-segment-request 'make-update-segment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-segment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "SegmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment-id)))
    (aws-sdk/generator/shape::to-query-params "WriteSegmentRequest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'write-segment-request))))))
(common-lisp:progn
 (common-lisp:defstruct (update-segment-response (:copier common-lisp:nil))
   (segment-response
    (common-lisp:error
     #A((29) common-lisp:base-char . ":segment-response is required"))
    :type (common-lisp:or segment-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-segment-response 'make-update-segment-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-segment-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SegmentResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment-response))))))
(common-lisp:progn
 (common-lisp:defstruct (update-sms-channel-request (:copier common-lisp:nil))
   (application-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":application-id is required"))
    :type (common-lisp:or |__string| common-lisp:null))
   (smschannel-request
    (common-lisp:error
     #A((31) common-lisp:base-char . ":smschannel-request is required"))
    :type (common-lisp:or smschannel-request common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-sms-channel-request
                    'make-update-sms-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-sms-channel-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-id)))
    (aws-sdk/generator/shape::to-query-params "SMSChannelRequest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'smschannel-request))))))
(common-lisp:progn
 (common-lisp:defstruct (update-sms-channel-response (:copier common-lisp:nil))
   (smschannel-response
    (common-lisp:error
     #A((32) common-lisp:base-char . ":smschannel-response is required"))
    :type (common-lisp:or smschannel-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-sms-channel-response
                    'make-update-sms-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-sms-channel-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SMSChannelResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'smschannel-response))))))
(common-lisp:progn
 (common-lisp:defstruct
     (write-application-settings-request (:copier common-lisp:nil))
   (limits common-lisp:nil :type
    (common-lisp:or campaign-limits common-lisp:null))
   (quiet-time common-lisp:nil :type
    (common-lisp:or quiet-time common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'write-application-settings-request
                    'make-write-application-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          write-application-settings-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Limits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limits)))
    (aws-sdk/generator/shape::to-query-params "QuietTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quiet-time))))))
(common-lisp:progn
 (common-lisp:defstruct (write-campaign-request (:copier common-lisp:nil))
   (additional-treatments common-lisp:nil :type
    (common-lisp:or list-of-write-treatment-resource common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (holdout-percent common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (is-paused common-lisp:nil :type
    (common-lisp:or |__boolean| common-lisp:null))
   (limits common-lisp:nil :type
    (common-lisp:or campaign-limits common-lisp:null))
   (message-configuration common-lisp:nil :type
    (common-lisp:or message-configuration common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null))
   (schedule common-lisp:nil :type (common-lisp:or schedule common-lisp:null))
   (segment-id common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (segment-version common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (treatment-description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (treatment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'write-campaign-request 'make-write-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          write-campaign-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AdditionalTreatments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'additional-treatments)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "HoldoutPercent"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'holdout-percent)))
    (aws-sdk/generator/shape::to-query-params "IsPaused"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-paused)))
    (aws-sdk/generator/shape::to-query-params "Limits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limits)))
    (aws-sdk/generator/shape::to-query-params "MessageConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message-configuration)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Schedule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schedule)))
    (aws-sdk/generator/shape::to-query-params "SegmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment-id)))
    (aws-sdk/generator/shape::to-query-params "SegmentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment-version)))
    (aws-sdk/generator/shape::to-query-params "TreatmentDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'treatment-description)))
    (aws-sdk/generator/shape::to-query-params "TreatmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'treatment-name))))))
(common-lisp:progn
 (common-lisp:defstruct (write-event-stream (:copier common-lisp:nil))
   (destination-stream-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'write-event-stream 'make-write-event-stream))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape write-event-stream))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DestinationStreamArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination-stream-arn)))
    (aws-sdk/generator/shape::to-query-params "RoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (write-segment-request (:copier common-lisp:nil))
   (dimensions common-lisp:nil :type
    (common-lisp:or segment-dimensions common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'write-segment-request 'make-write-segment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          write-segment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Dimensions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dimensions)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (write-treatment-resource (:copier common-lisp:nil))
   (message-configuration common-lisp:nil :type
    (common-lisp:or message-configuration common-lisp:null))
   (schedule common-lisp:nil :type (common-lisp:or schedule common-lisp:null))
   (size-percent common-lisp:nil :type
    (common-lisp:or |__integer| common-lisp:null))
   (treatment-description common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null))
   (treatment-name common-lisp:nil :type
    (common-lisp:or |__string| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'write-treatment-resource 'make-write-treatment-resource))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          write-treatment-resource))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MessageConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message-configuration)))
    (aws-sdk/generator/shape::to-query-params "Schedule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schedule)))
    (aws-sdk/generator/shape::to-query-params "SizePercent"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size-percent)))
    (aws-sdk/generator/shape::to-query-params "TreatmentDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'treatment-description)))
    (aws-sdk/generator/shape::to-query-params "TreatmentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'treatment-name))))))
(common-lisp:deftype |__boolean| () 'common-lisp:boolean)
(common-lisp:deftype |__double| () 'common-lisp:double-float)
(common-lisp:deftype |__integer| () 'common-lisp:integer)
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:deftype |__timestamp| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-app
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key create-application-request)
   (common-lisp:declare (common-lisp:ignorable create-application-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-app-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateApp")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateAppResponse" common-lisp:nil)))
 (common-lisp:export 'create-app))
(common-lisp:progn
 (common-lisp:defun create-campaign
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id write-campaign-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id write-campaign-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-campaign-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/campaigns"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateCampaign")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateCampaignResponse" common-lisp:nil)))
 (common-lisp:export 'create-campaign))
(common-lisp:progn
 (common-lisp:defun create-import-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id import-job-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id import-job-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-import-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/jobs/import"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateImportJob")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateImportJobResponse" common-lisp:nil)))
 (common-lisp:export 'create-import-job))
(common-lisp:progn
 (common-lisp:defun create-segment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id write-segment-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id write-segment-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-segment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/segments"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateSegment")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateSegmentResponse" common-lisp:nil)))
 (common-lisp:export 'create-segment))
(common-lisp:progn
 (common-lisp:defun delete-apns-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-apns-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/channels/apns"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteApnsChannel")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteApnsChannelResponse" common-lisp:nil)))
 (common-lisp:export 'delete-apns-channel))
(common-lisp:progn
 (common-lisp:defun delete-apns-sandbox-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-apns-sandbox-channel-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/channels/apns_sandbox"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteApnsSandboxChannel")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteApnsSandboxChannelResponse" common-lisp:nil)))
 (common-lisp:export 'delete-apns-sandbox-channel))
(common-lisp:progn
 (common-lisp:defun delete-app
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-app-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteApp")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteAppResponse" common-lisp:nil)))
 (common-lisp:export 'delete-app))
(common-lisp:progn
 (common-lisp:defun delete-campaign
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id campaign-id)
   (common-lisp:declare (common-lisp:ignorable application-id campaign-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-campaign-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/campaigns/~a"
                                                   application-id campaign-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteCampaign")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteCampaignResponse" common-lisp:nil)))
 (common-lisp:export 'delete-campaign))
(common-lisp:progn
 (common-lisp:defun delete-email-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-email-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/channels/email"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteEmailChannel")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteEmailChannelResponse" common-lisp:nil)))
 (common-lisp:export 'delete-email-channel))
(common-lisp:progn
 (common-lisp:defun delete-event-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-event-stream-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/eventstream"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteEventStream")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteEventStreamResponse" common-lisp:nil)))
 (common-lisp:export 'delete-event-stream))
(common-lisp:progn
 (common-lisp:defun delete-gcm-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-gcm-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/channels/gcm"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteGcmChannel")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteGcmChannelResponse" common-lisp:nil)))
 (common-lisp:export 'delete-gcm-channel))
(common-lisp:progn
 (common-lisp:defun delete-segment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id segment-id)
   (common-lisp:declare (common-lisp:ignorable application-id segment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-segment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/segments/~a"
                                                   application-id segment-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteSegment")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteSegmentResponse" common-lisp:nil)))
 (common-lisp:export 'delete-segment))
(common-lisp:progn
 (common-lisp:defun delete-sms-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-sms-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/channels/sms"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteSmsChannel")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteSmsChannelResponse" common-lisp:nil)))
 (common-lisp:export 'delete-sms-channel))
(common-lisp:progn
 (common-lisp:defun get-apns-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-apns-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/channels/apns"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetApnsChannel")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetApnsChannelResponse" common-lisp:nil)))
 (common-lisp:export 'get-apns-channel))
(common-lisp:progn
 (common-lisp:defun get-apns-sandbox-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-apns-sandbox-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/channels/apns_sandbox"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetApnsSandboxChannel")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetApnsSandboxChannelResponse" common-lisp:nil)))
 (common-lisp:export 'get-apns-sandbox-channel))
(common-lisp:progn
 (common-lisp:defun get-app
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-app-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetApp")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetAppResponse" common-lisp:nil)))
 (common-lisp:export 'get-app))
(common-lisp:progn
 (common-lisp:defun get-application-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-application-settings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/settings"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetApplicationSettings")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetApplicationSettingsResponse" common-lisp:nil)))
 (common-lisp:export 'get-application-settings))
(common-lisp:progn
 (common-lisp:defun get-apps
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key page-size token)
   (common-lisp:declare (common-lisp:ignorable page-size token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-apps-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"GetApps")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetAppsResponse" common-lisp:nil)))
 (common-lisp:export 'get-apps))
(common-lisp:progn
 (common-lisp:defun get-campaign
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id campaign-id)
   (common-lisp:declare (common-lisp:ignorable application-id campaign-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-campaign-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/campaigns/~a"
                                                   application-id campaign-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetCampaign")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetCampaignResponse" common-lisp:nil)))
 (common-lisp:export 'get-campaign))
(common-lisp:progn
 (common-lisp:defun get-campaign-activities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id campaign-id page-size
                     token)
   (common-lisp:declare
    (common-lisp:ignorable application-id campaign-id page-size token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-campaign-activities-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/campaigns/~a/activities"
                                                   application-id campaign-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetCampaignActivities")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetCampaignActivitiesResponse" common-lisp:nil)))
 (common-lisp:export 'get-campaign-activities))
(common-lisp:progn
 (common-lisp:defun get-campaign-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id campaign-id version)
   (common-lisp:declare
    (common-lisp:ignorable application-id campaign-id version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-campaign-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/campaigns/~a/versions/~a"
                                                   application-id campaign-id
                                                   version)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetCampaignVersion")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetCampaignVersionResponse" common-lisp:nil)))
 (common-lisp:export 'get-campaign-version))
(common-lisp:progn
 (common-lisp:defun get-campaign-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id campaign-id page-size
                     token)
   (common-lisp:declare
    (common-lisp:ignorable application-id campaign-id page-size token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-campaign-versions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/campaigns/~a/versions"
                                                   application-id campaign-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetCampaignVersions")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetCampaignVersionsResponse" common-lisp:nil)))
 (common-lisp:export 'get-campaign-versions))
(common-lisp:progn
 (common-lisp:defun get-campaigns
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id page-size token)
   (common-lisp:declare (common-lisp:ignorable application-id page-size token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-campaigns-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/campaigns"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetCampaigns")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetCampaignsResponse" common-lisp:nil)))
 (common-lisp:export 'get-campaigns))
(common-lisp:progn
 (common-lisp:defun get-email-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-email-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/channels/email"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetEmailChannel")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetEmailChannelResponse" common-lisp:nil)))
 (common-lisp:export 'get-email-channel))
(common-lisp:progn
 (common-lisp:defun get-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id endpoint-id)
   (common-lisp:declare (common-lisp:ignorable application-id endpoint-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/endpoints/~a"
                                                   application-id endpoint-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetEndpoint")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetEndpointResponse" common-lisp:nil)))
 (common-lisp:export 'get-endpoint))
(common-lisp:progn
 (common-lisp:defun get-event-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-event-stream-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/eventstream"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetEventStream")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetEventStreamResponse" common-lisp:nil)))
 (common-lisp:export 'get-event-stream))
(common-lisp:progn
 (common-lisp:defun get-gcm-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-gcm-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/channels/gcm"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetGcmChannel")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetGcmChannelResponse" common-lisp:nil)))
 (common-lisp:export 'get-gcm-channel))
(common-lisp:progn
 (common-lisp:defun get-import-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id job-id)
   (common-lisp:declare (common-lisp:ignorable application-id job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-import-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/jobs/import/~a"
                                                   application-id job-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetImportJob")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetImportJobResponse" common-lisp:nil)))
 (common-lisp:export 'get-import-job))
(common-lisp:progn
 (common-lisp:defun get-import-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id page-size token)
   (common-lisp:declare (common-lisp:ignorable application-id page-size token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-import-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/jobs/import"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetImportJobs")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetImportJobsResponse" common-lisp:nil)))
 (common-lisp:export 'get-import-jobs))
(common-lisp:progn
 (common-lisp:defun get-segment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id segment-id)
   (common-lisp:declare (common-lisp:ignorable application-id segment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-segment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/segments/~a"
                                                   application-id segment-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetSegment")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetSegmentResponse" common-lisp:nil)))
 (common-lisp:export 'get-segment))
(common-lisp:progn
 (common-lisp:defun get-segment-import-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id page-size segment-id
                     token)
   (common-lisp:declare
    (common-lisp:ignorable application-id page-size segment-id token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-segment-import-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/segments/~a/jobs/import"
                                                   application-id segment-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetSegmentImportJobs")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetSegmentImportJobsResponse" common-lisp:nil)))
 (common-lisp:export 'get-segment-import-jobs))
(common-lisp:progn
 (common-lisp:defun get-segment-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id segment-id version)
   (common-lisp:declare
    (common-lisp:ignorable application-id segment-id version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-segment-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/segments/~a/versions/~a"
                                                   application-id segment-id
                                                   version)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetSegmentVersion")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetSegmentVersionResponse" common-lisp:nil)))
 (common-lisp:export 'get-segment-version))
(common-lisp:progn
 (common-lisp:defun get-segment-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id page-size segment-id
                     token)
   (common-lisp:declare
    (common-lisp:ignorable application-id page-size segment-id token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-segment-versions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/segments/~a/versions"
                                                   application-id segment-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetSegmentVersions")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetSegmentVersionsResponse" common-lisp:nil)))
 (common-lisp:export 'get-segment-versions))
(common-lisp:progn
 (common-lisp:defun get-segments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id page-size token)
   (common-lisp:declare (common-lisp:ignorable application-id page-size token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-segments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/segments"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetSegments")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetSegmentsResponse" common-lisp:nil)))
 (common-lisp:export 'get-segments))
(common-lisp:progn
 (common-lisp:defun get-sms-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-sms-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/channels/sms"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetSmsChannel")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetSmsChannelResponse" common-lisp:nil)))
 (common-lisp:export 'get-sms-channel))
(common-lisp:progn
 (common-lisp:defun put-event-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id write-event-stream)
   (common-lisp:declare
    (common-lisp:ignorable application-id write-event-stream))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-event-stream-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/eventstream"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutEventStream")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutEventStreamResponse" common-lisp:nil)))
 (common-lisp:export 'put-event-stream))
(common-lisp:progn
 (common-lisp:defun send-messages
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id message-request)
   (common-lisp:declare (common-lisp:ignorable application-id message-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-messages-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/messages"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"SendMessages")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SendMessagesResponse" common-lisp:nil)))
 (common-lisp:export 'send-messages))
(common-lisp:progn
 (common-lisp:defun update-apns-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key apnschannel-request application-id)
   (common-lisp:declare
    (common-lisp:ignorable apnschannel-request application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-apns-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/channels/apns"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateApnsChannel")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateApnsChannelResponse" common-lisp:nil)))
 (common-lisp:export 'update-apns-channel))
(common-lisp:progn
 (common-lisp:defun update-apns-sandbox-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key apnssandbox-channel-request
                     application-id)
   (common-lisp:declare
    (common-lisp:ignorable apnssandbox-channel-request application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-apns-sandbox-channel-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/channels/apns_sandbox"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateApnsSandboxChannel")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateApnsSandboxChannelResponse" common-lisp:nil)))
 (common-lisp:export 'update-apns-sandbox-channel))
(common-lisp:progn
 (common-lisp:defun update-application-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id
                     write-application-settings-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id write-application-settings-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-application-settings-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/settings"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateApplicationSettings")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateApplicationSettingsResponse" common-lisp:nil)))
 (common-lisp:export 'update-application-settings))
(common-lisp:progn
 (common-lisp:defun update-campaign
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id campaign-id
                     write-campaign-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id campaign-id write-campaign-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-campaign-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/campaigns/~a"
                                                   application-id campaign-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateCampaign")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateCampaignResponse" common-lisp:nil)))
 (common-lisp:export 'update-campaign))
(common-lisp:progn
 (common-lisp:defun update-email-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id email-channel-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id email-channel-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-email-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/channels/email"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateEmailChannel")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateEmailChannelResponse" common-lisp:nil)))
 (common-lisp:export 'update-email-channel))
(common-lisp:progn
 (common-lisp:defun update-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id endpoint-id
                     endpoint-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id endpoint-id endpoint-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/endpoints/~a"
                                                   application-id endpoint-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateEndpoint")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateEndpointResponse" common-lisp:nil)))
 (common-lisp:export 'update-endpoint))
(common-lisp:progn
 (common-lisp:defun update-endpoints-batch
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id endpoint-batch-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id endpoint-batch-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-endpoints-batch-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/endpoints"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateEndpointsBatch")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateEndpointsBatchResponse" common-lisp:nil)))
 (common-lisp:export 'update-endpoints-batch))
(common-lisp:progn
 (common-lisp:defun update-gcm-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id gcmchannel-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id gcmchannel-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-gcm-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/channels/gcm"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateGcmChannel")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateGcmChannelResponse" common-lisp:nil)))
 (common-lisp:export 'update-gcm-channel))
(common-lisp:progn
 (common-lisp:defun update-segment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id segment-id
                     write-segment-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id segment-id write-segment-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-segment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/segments/~a"
                                                   application-id segment-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateSegment")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateSegmentResponse" common-lisp:nil)))
 (common-lisp:export 'update-segment))
(common-lisp:progn
 (common-lisp:defun update-sms-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id smschannel-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id smschannel-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-sms-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "pinpoint")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/v1/apps/~a/channels/sms"
                                                   application-id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateSmsChannel")
                                  ("Version" ,@"2016-12-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateSmsChannelResponse" common-lisp:nil)))
 (common-lisp:export 'update-sms-channel))