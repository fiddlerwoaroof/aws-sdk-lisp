;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/dynamodb
  (:use)
  (:nicknames #:aws/dynamodb)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/dynamodb)

(common-lisp:deftype attribute-action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (attribute-definition (:copier common-lisp:nil))
   (attribute-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":attribute-name is required"))
    :type (common-lisp:or key-schema-attribute-name common-lisp:null))
   (attribute-type
    (common-lisp:error
     #A((27) common-lisp:base-char . ":attribute-type is required"))
    :type (common-lisp:or scalar-attribute-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attribute-definition 'make-attribute-definition))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape attribute-definition))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AttributeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-name)))
    (aws-sdk/generator/shape::to-query-params "AttributeType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-type))))))
(common-lisp:progn
 (common-lisp:deftype attribute-definitions ()
   '(trivial-types:proper-list attribute-definition))
 (common-lisp:defun |make-attribute-definitions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute-definition))
   aws-sdk/generator/shape::members))
(common-lisp:defstruct
    (attribute-map
     (:constructor |make-attribute-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype attribute-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype attribute-name-list ()
   '(trivial-types:proper-list attribute-name))
 (common-lisp:defun |make-attribute-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute-name))
   aws-sdk/generator/shape::members))
(common-lisp:defstruct
    (attribute-updates
     (:constructor |make-attribute-updates|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (attribute-value (:copier common-lisp:nil))
   (s common-lisp:nil :type
    (common-lisp:or string-attribute-value common-lisp:null))
   (n common-lisp:nil :type
    (common-lisp:or number-attribute-value common-lisp:null))
   (b common-lisp:nil :type
    (common-lisp:or binary-attribute-value common-lisp:null))
   (ss common-lisp:nil :type
    (common-lisp:or string-set-attribute-value common-lisp:null))
   (ns common-lisp:nil :type
    (common-lisp:or number-set-attribute-value common-lisp:null))
   (bs common-lisp:nil :type
    (common-lisp:or binary-set-attribute-value common-lisp:null))
   (m common-lisp:nil :type
    (common-lisp:or map-attribute-value common-lisp:null))
   (l common-lisp:nil :type
    (common-lisp:or list-attribute-value common-lisp:null))
   (null common-lisp:nil :type
    (common-lisp:or null-attribute-value common-lisp:null))
   (bool common-lisp:nil :type
    (common-lisp:or boolean-attribute-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attribute-value 'make-attribute-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape attribute-value))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "S"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's)))
    (aws-sdk/generator/shape::to-query-params "N"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'n)))
    (aws-sdk/generator/shape::to-query-params "B"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'b)))
    (aws-sdk/generator/shape::to-query-params "SS"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ss)))
    (aws-sdk/generator/shape::to-query-params "NS"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ns)))
    (aws-sdk/generator/shape::to-query-params "BS"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bs)))
    (aws-sdk/generator/shape::to-query-params "M"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'm)))
    (aws-sdk/generator/shape::to-query-params "L"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'l)))
    (aws-sdk/generator/shape::to-query-params "NULL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'null)))
    (aws-sdk/generator/shape::to-query-params "BOOL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bool))))))
(common-lisp:progn
 (common-lisp:deftype attribute-value-list ()
   '(trivial-types:proper-list attribute-value))
 (common-lisp:defun |make-attribute-value-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (attribute-value-update (:copier common-lisp:nil))
   (value common-lisp:nil :type
    (common-lisp:or attribute-value common-lisp:null))
   (action common-lisp:nil :type
    (common-lisp:or attribute-action common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attribute-value-update 'make-attribute-value-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attribute-value-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action))))))
(common-lisp:deftype backfilling () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (batch-get-item-input (:copier common-lisp:nil))
   (request-items
    (common-lisp:error
     #A((26) common-lisp:base-char . ":request-items is required"))
    :type (common-lisp:or batch-get-request-map common-lisp:null))
   (return-consumed-capacity common-lisp:nil :type
    (common-lisp:or return-consumed-capacity common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-item-input 'make-batch-get-item-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape batch-get-item-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RequestItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-items)))
    (aws-sdk/generator/shape::to-query-params "ReturnConsumedCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-consumed-capacity))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-get-item-output (:copier common-lisp:nil))
   (responses common-lisp:nil :type
    (common-lisp:or batch-get-response-map common-lisp:null))
   (unprocessed-keys common-lisp:nil :type
    (common-lisp:or batch-get-request-map common-lisp:null))
   (consumed-capacity common-lisp:nil :type
    (common-lisp:or consumed-capacity-multiple common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-item-output 'make-batch-get-item-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-item-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Responses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'responses)))
    (aws-sdk/generator/shape::to-query-params "UnprocessedKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unprocessed-keys)))
    (aws-sdk/generator/shape::to-query-params "ConsumedCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consumed-capacity))))))
(common-lisp:defstruct
    (batch-get-request-map
     (:constructor |make-batch-get-request-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:defstruct
    (batch-get-response-map
     (:constructor |make-batch-get-response-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (batch-write-item-input (:copier common-lisp:nil))
   (request-items
    (common-lisp:error
     #A((26) common-lisp:base-char . ":request-items is required"))
    :type (common-lisp:or batch-write-item-request-map common-lisp:null))
   (return-consumed-capacity common-lisp:nil :type
    (common-lisp:or return-consumed-capacity common-lisp:null))
   (return-item-collection-metrics common-lisp:nil :type
    (common-lisp:or return-item-collection-metrics common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-write-item-input 'make-batch-write-item-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-write-item-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RequestItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-items)))
    (aws-sdk/generator/shape::to-query-params "ReturnConsumedCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-consumed-capacity)))
    (aws-sdk/generator/shape::to-query-params "ReturnItemCollectionMetrics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-item-collection-metrics))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-write-item-output (:copier common-lisp:nil))
   (unprocessed-items common-lisp:nil :type
    (common-lisp:or batch-write-item-request-map common-lisp:null))
   (item-collection-metrics common-lisp:nil :type
    (common-lisp:or item-collection-metrics-per-table common-lisp:null))
   (consumed-capacity common-lisp:nil :type
    (common-lisp:or consumed-capacity-multiple common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-write-item-output 'make-batch-write-item-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-write-item-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UnprocessedItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unprocessed-items)))
    (aws-sdk/generator/shape::to-query-params "ItemCollectionMetrics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item-collection-metrics)))
    (aws-sdk/generator/shape::to-query-params "ConsumedCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consumed-capacity))))))
(common-lisp:defstruct
    (batch-write-item-request-map
     (:constructor |make-batch-write-item-request-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype binary-attribute-value ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:deftype binary-set-attribute-value ()
   '(trivial-types:proper-list binary-attribute-value))
 (common-lisp:defun |make-binary-set-attribute-value|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list binary-attribute-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype boolean-attribute-value () 'common-lisp:boolean)
(common-lisp:deftype boolean-object () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (capacity (:copier common-lisp:nil))
   (capacity-units common-lisp:nil :type
    (common-lisp:or consumed-capacity-units common-lisp:null)))
 (common-lisp:export (common-lisp:list 'capacity 'make-capacity))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape capacity))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CapacityUnits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'capacity-units))))))
(common-lisp:deftype comparison-operator () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (condition (:copier common-lisp:nil))
   (attribute-value-list common-lisp:nil :type
    (common-lisp:or attribute-value-list common-lisp:null))
   (comparison-operator
    (common-lisp:error
     #A((32) common-lisp:base-char . ":comparison-operator is required"))
    :type (common-lisp:or comparison-operator common-lisp:null)))
 (common-lisp:export (common-lisp:list 'condition 'make-condition))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape condition))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AttributeValueList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-value-list)))
    (aws-sdk/generator/shape::to-query-params "ComparisonOperator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comparison-operator))))))
(common-lisp:deftype condition-expression () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (conditional-check-failed-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'conditional-check-failed-exception
                    'make-conditional-check-failed-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          conditional-check-failed-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype conditional-operator () 'common-lisp:string)
(common-lisp:deftype consistent-read () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (consumed-capacity (:copier common-lisp:nil))
   (table-name common-lisp:nil :type
    (common-lisp:or table-name common-lisp:null))
   (capacity-units common-lisp:nil :type
    (common-lisp:or consumed-capacity-units common-lisp:null))
   (table common-lisp:nil :type (common-lisp:or capacity common-lisp:null))
   (local-secondary-indexes common-lisp:nil :type
    (common-lisp:or secondary-indexes-capacity-map common-lisp:null))
   (global-secondary-indexes common-lisp:nil :type
    (common-lisp:or secondary-indexes-capacity-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'consumed-capacity 'make-consumed-capacity))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape consumed-capacity))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TableName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-name)))
    (aws-sdk/generator/shape::to-query-params "CapacityUnits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'capacity-units)))
    (aws-sdk/generator/shape::to-query-params "Table"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table)))
    (aws-sdk/generator/shape::to-query-params "LocalSecondaryIndexes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'local-secondary-indexes)))
    (aws-sdk/generator/shape::to-query-params "GlobalSecondaryIndexes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'global-secondary-indexes))))))
(common-lisp:progn
 (common-lisp:deftype consumed-capacity-multiple ()
   '(trivial-types:proper-list consumed-capacity))
 (common-lisp:defun |make-consumed-capacity-multiple|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list consumed-capacity))
   aws-sdk/generator/shape::members))
(common-lisp:deftype consumed-capacity-units () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct
     (create-global-secondary-index-action (:copier common-lisp:nil))
   (index-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":index-name is required"))
    :type (common-lisp:or index-name common-lisp:null))
   (key-schema
    (common-lisp:error
     #A((23) common-lisp:base-char . ":key-schema is required"))
    :type (common-lisp:or key-schema common-lisp:null))
   (projection
    (common-lisp:error
     #A((23) common-lisp:base-char . ":projection is required"))
    :type (common-lisp:or projection common-lisp:null))
   (provisioned-throughput
    (common-lisp:error
     #A((35) common-lisp:base-char . ":provisioned-throughput is required"))
    :type (common-lisp:or provisioned-throughput common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-global-secondary-index-action
                    'make-create-global-secondary-index-action))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-global-secondary-index-action))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IndexName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-name)))
    (aws-sdk/generator/shape::to-query-params "KeySchema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-schema)))
    (aws-sdk/generator/shape::to-query-params "Projection"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'projection)))
    (aws-sdk/generator/shape::to-query-params "ProvisionedThroughput"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioned-throughput))))))
(common-lisp:progn
 (common-lisp:defstruct (create-table-input (:copier common-lisp:nil))
   (attribute-definitions
    (common-lisp:error
     #A((34) common-lisp:base-char . ":attribute-definitions is required"))
    :type (common-lisp:or attribute-definitions common-lisp:null))
   (table-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":table-name is required"))
    :type (common-lisp:or table-name common-lisp:null))
   (key-schema
    (common-lisp:error
     #A((23) common-lisp:base-char . ":key-schema is required"))
    :type (common-lisp:or key-schema common-lisp:null))
   (local-secondary-indexes common-lisp:nil :type
    (common-lisp:or local-secondary-index-list common-lisp:null))
   (global-secondary-indexes common-lisp:nil :type
    (common-lisp:or global-secondary-index-list common-lisp:null))
   (provisioned-throughput
    (common-lisp:error
     #A((35) common-lisp:base-char . ":provisioned-throughput is required"))
    :type (common-lisp:or provisioned-throughput common-lisp:null))
   (stream-specification common-lisp:nil :type
    (common-lisp:or stream-specification common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-table-input 'make-create-table-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-table-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AttributeDefinitions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-definitions)))
    (aws-sdk/generator/shape::to-query-params "TableName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-name)))
    (aws-sdk/generator/shape::to-query-params "KeySchema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-schema)))
    (aws-sdk/generator/shape::to-query-params "LocalSecondaryIndexes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'local-secondary-indexes)))
    (aws-sdk/generator/shape::to-query-params "GlobalSecondaryIndexes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'global-secondary-indexes)))
    (aws-sdk/generator/shape::to-query-params "ProvisionedThroughput"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioned-throughput)))
    (aws-sdk/generator/shape::to-query-params "StreamSpecification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stream-specification))))))
(common-lisp:progn
 (common-lisp:defstruct (create-table-output (:copier common-lisp:nil))
   (table-description common-lisp:nil :type
    (common-lisp:or table-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-table-output 'make-create-table-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-table-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TableDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-description))))))
(common-lisp:deftype date () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-global-secondary-index-action (:copier common-lisp:nil))
   (index-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":index-name is required"))
    :type (common-lisp:or index-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-global-secondary-index-action
                    'make-delete-global-secondary-index-action))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-global-secondary-index-action))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IndexName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-item-input (:copier common-lisp:nil))
   (table-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":table-name is required"))
    :type (common-lisp:or table-name common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or key common-lisp:null))
   (expected common-lisp:nil :type
    (common-lisp:or expected-attribute-map common-lisp:null))
   (conditional-operator common-lisp:nil :type
    (common-lisp:or conditional-operator common-lisp:null))
   (return-values common-lisp:nil :type
    (common-lisp:or return-value common-lisp:null))
   (return-consumed-capacity common-lisp:nil :type
    (common-lisp:or return-consumed-capacity common-lisp:null))
   (return-item-collection-metrics common-lisp:nil :type
    (common-lisp:or return-item-collection-metrics common-lisp:null))
   (condition-expression common-lisp:nil :type
    (common-lisp:or condition-expression common-lisp:null))
   (expression-attribute-names common-lisp:nil :type
    (common-lisp:or expression-attribute-name-map common-lisp:null))
   (expression-attribute-values common-lisp:nil :type
    (common-lisp:or expression-attribute-value-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-item-input 'make-delete-item-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-item-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TableName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-name)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Expected"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expected)))
    (aws-sdk/generator/shape::to-query-params "ConditionalOperator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'conditional-operator)))
    (aws-sdk/generator/shape::to-query-params "ReturnValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-values)))
    (aws-sdk/generator/shape::to-query-params "ReturnConsumedCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-consumed-capacity)))
    (aws-sdk/generator/shape::to-query-params "ReturnItemCollectionMetrics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-item-collection-metrics)))
    (aws-sdk/generator/shape::to-query-params "ConditionExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'condition-expression)))
    (aws-sdk/generator/shape::to-query-params "ExpressionAttributeNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expression-attribute-names)))
    (aws-sdk/generator/shape::to-query-params "ExpressionAttributeValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expression-attribute-values))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-item-output (:copier common-lisp:nil))
   (attributes common-lisp:nil :type
    (common-lisp:or attribute-map common-lisp:null))
   (consumed-capacity common-lisp:nil :type
    (common-lisp:or consumed-capacity common-lisp:null))
   (item-collection-metrics common-lisp:nil :type
    (common-lisp:or item-collection-metrics common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-item-output 'make-delete-item-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-item-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "ConsumedCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consumed-capacity)))
    (aws-sdk/generator/shape::to-query-params "ItemCollectionMetrics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item-collection-metrics))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-request (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or key common-lisp:null)))
 (common-lisp:export (common-lisp:list 'delete-request 'make-delete-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-table-input (:copier common-lisp:nil))
   (table-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":table-name is required"))
    :type (common-lisp:or table-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-table-input 'make-delete-table-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-table-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TableName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-table-output (:copier common-lisp:nil))
   (table-description common-lisp:nil :type
    (common-lisp:or table-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-table-output 'make-delete-table-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-table-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TableDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-description))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-limits-input (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-limits-input 'make-describe-limits-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-limits-input))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (describe-limits-output (:copier common-lisp:nil))
   (account-max-read-capacity-units common-lisp:nil :type
    (common-lisp:or positive-long-object common-lisp:null))
   (account-max-write-capacity-units common-lisp:nil :type
    (common-lisp:or positive-long-object common-lisp:null))
   (table-max-read-capacity-units common-lisp:nil :type
    (common-lisp:or positive-long-object common-lisp:null))
   (table-max-write-capacity-units common-lisp:nil :type
    (common-lisp:or positive-long-object common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-limits-output 'make-describe-limits-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-limits-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AccountMaxReadCapacityUnits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-max-read-capacity-units)))
    (aws-sdk/generator/shape::to-query-params "AccountMaxWriteCapacityUnits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-max-write-capacity-units)))
    (aws-sdk/generator/shape::to-query-params "TableMaxReadCapacityUnits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-max-read-capacity-units)))
    (aws-sdk/generator/shape::to-query-params "TableMaxWriteCapacityUnits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-max-write-capacity-units))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-table-input (:copier common-lisp:nil))
   (table-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":table-name is required"))
    :type (common-lisp:or table-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-table-input 'make-describe-table-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape describe-table-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TableName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-name))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-table-output (:copier common-lisp:nil))
   (table common-lisp:nil :type
    (common-lisp:or table-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-table-output 'make-describe-table-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-table-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Table"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-time-to-live-input (:copier common-lisp:nil))
   (table-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":table-name is required"))
    :type (common-lisp:or table-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-time-to-live-input
                    'make-describe-time-to-live-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-time-to-live-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TableName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-time-to-live-output (:copier common-lisp:nil))
   (time-to-live-description common-lisp:nil :type
    (common-lisp:or time-to-live-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-time-to-live-output
                    'make-describe-time-to-live-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-time-to-live-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TimeToLiveDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'time-to-live-description))))))
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:defstruct
    (expected-attribute-map
     (:constructor |make-expected-attribute-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (expected-attribute-value (:copier common-lisp:nil))
   (value common-lisp:nil :type
    (common-lisp:or attribute-value common-lisp:null))
   (exists common-lisp:nil :type
    (common-lisp:or boolean-object common-lisp:null))
   (comparison-operator common-lisp:nil :type
    (common-lisp:or comparison-operator common-lisp:null))
   (attribute-value-list common-lisp:nil :type
    (common-lisp:or attribute-value-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'expected-attribute-value 'make-expected-attribute-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          expected-attribute-value))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "Exists"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'exists)))
    (aws-sdk/generator/shape::to-query-params "ComparisonOperator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comparison-operator)))
    (aws-sdk/generator/shape::to-query-params "AttributeValueList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-value-list))))))
(common-lisp:defstruct
    (expression-attribute-name-map
     (:constructor |make-expression-attribute-name-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype expression-attribute-name-variable () 'common-lisp:string)
(common-lisp:defstruct
    (expression-attribute-value-map
     (:constructor |make-expression-attribute-value-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype expression-attribute-value-variable () 'common-lisp:string)
(common-lisp:defstruct
    (filter-condition-map
     (:constructor |make-filter-condition-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (get-item-input (:copier common-lisp:nil))
   (table-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":table-name is required"))
    :type (common-lisp:or table-name common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or key common-lisp:null))
   (attributes-to-get common-lisp:nil :type
    (common-lisp:or attribute-name-list common-lisp:null))
   (consistent-read common-lisp:nil :type
    (common-lisp:or consistent-read common-lisp:null))
   (return-consumed-capacity common-lisp:nil :type
    (common-lisp:or return-consumed-capacity common-lisp:null))
   (projection-expression common-lisp:nil :type
    (common-lisp:or projection-expression common-lisp:null))
   (expression-attribute-names common-lisp:nil :type
    (common-lisp:or expression-attribute-name-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-item-input 'make-get-item-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-item-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TableName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-name)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "AttributesToGet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes-to-get)))
    (aws-sdk/generator/shape::to-query-params "ConsistentRead"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consistent-read)))
    (aws-sdk/generator/shape::to-query-params "ReturnConsumedCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-consumed-capacity)))
    (aws-sdk/generator/shape::to-query-params "ProjectionExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'projection-expression)))
    (aws-sdk/generator/shape::to-query-params "ExpressionAttributeNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expression-attribute-names))))))
(common-lisp:progn
 (common-lisp:defstruct (get-item-output (:copier common-lisp:nil))
   (item common-lisp:nil :type (common-lisp:or attribute-map common-lisp:null))
   (consumed-capacity common-lisp:nil :type
    (common-lisp:or consumed-capacity common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-item-output 'make-get-item-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-item-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Item"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item)))
    (aws-sdk/generator/shape::to-query-params "ConsumedCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consumed-capacity))))))
(common-lisp:progn
 (common-lisp:defstruct (global-secondary-index (:copier common-lisp:nil))
   (index-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":index-name is required"))
    :type (common-lisp:or index-name common-lisp:null))
   (key-schema
    (common-lisp:error
     #A((23) common-lisp:base-char . ":key-schema is required"))
    :type (common-lisp:or key-schema common-lisp:null))
   (projection
    (common-lisp:error
     #A((23) common-lisp:base-char . ":projection is required"))
    :type (common-lisp:or projection common-lisp:null))
   (provisioned-throughput
    (common-lisp:error
     #A((35) common-lisp:base-char . ":provisioned-throughput is required"))
    :type (common-lisp:or provisioned-throughput common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'global-secondary-index 'make-global-secondary-index))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          global-secondary-index))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IndexName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-name)))
    (aws-sdk/generator/shape::to-query-params "KeySchema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-schema)))
    (aws-sdk/generator/shape::to-query-params "Projection"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'projection)))
    (aws-sdk/generator/shape::to-query-params "ProvisionedThroughput"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioned-throughput))))))
(common-lisp:progn
 (common-lisp:defstruct
     (global-secondary-index-description (:copier common-lisp:nil))
   (index-name common-lisp:nil :type
    (common-lisp:or index-name common-lisp:null))
   (key-schema common-lisp:nil :type
    (common-lisp:or key-schema common-lisp:null))
   (projection common-lisp:nil :type
    (common-lisp:or projection common-lisp:null))
   (index-status common-lisp:nil :type
    (common-lisp:or index-status common-lisp:null))
   (backfilling common-lisp:nil :type
    (common-lisp:or backfilling common-lisp:null))
   (provisioned-throughput common-lisp:nil :type
    (common-lisp:or provisioned-throughput-description common-lisp:null))
   (index-size-bytes common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (item-count common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (index-arn common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'global-secondary-index-description
                    'make-global-secondary-index-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          global-secondary-index-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IndexName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-name)))
    (aws-sdk/generator/shape::to-query-params "KeySchema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-schema)))
    (aws-sdk/generator/shape::to-query-params "Projection"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'projection)))
    (aws-sdk/generator/shape::to-query-params "IndexStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-status)))
    (aws-sdk/generator/shape::to-query-params "Backfilling"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'backfilling)))
    (aws-sdk/generator/shape::to-query-params "ProvisionedThroughput"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioned-throughput)))
    (aws-sdk/generator/shape::to-query-params "IndexSizeBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-size-bytes)))
    (aws-sdk/generator/shape::to-query-params "ItemCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item-count)))
    (aws-sdk/generator/shape::to-query-params "IndexArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-arn))))))
(common-lisp:progn
 (common-lisp:deftype global-secondary-index-description-list ()
   '(trivial-types:proper-list global-secondary-index-description))
 (common-lisp:defun |make-global-secondary-index-description-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            global-secondary-index-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype global-secondary-index-list ()
   '(trivial-types:proper-list global-secondary-index))
 (common-lisp:defun |make-global-secondary-index-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list global-secondary-index))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (global-secondary-index-update (:copier common-lisp:nil))
   (update common-lisp:nil :type
    (common-lisp:or update-global-secondary-index-action common-lisp:null))
   (create common-lisp:nil :type
    (common-lisp:or create-global-secondary-index-action common-lisp:null))
   (delete common-lisp:nil :type
    (common-lisp:or delete-global-secondary-index-action common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'global-secondary-index-update
                    'make-global-secondary-index-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          global-secondary-index-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Update"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'update)))
    (aws-sdk/generator/shape::to-query-params "Create"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'create)))
    (aws-sdk/generator/shape::to-query-params "Delete"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete))))))
(common-lisp:progn
 (common-lisp:deftype global-secondary-index-update-list ()
   '(trivial-types:proper-list global-secondary-index-update))
 (common-lisp:defun |make-global-secondary-index-update-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            global-secondary-index-update))
   aws-sdk/generator/shape::members))
(common-lisp:deftype index-name () 'common-lisp:string)
(common-lisp:deftype index-status () 'common-lisp:string)
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (internal-server-error (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'internal-server-error 'make-internal-server-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          internal-server-error))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:defstruct
    (item-collection-key-attribute-map
     (:constructor |make-item-collection-key-attribute-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (item-collection-metrics (:copier common-lisp:nil))
   (item-collection-key common-lisp:nil :type
    (common-lisp:or item-collection-key-attribute-map common-lisp:null))
   (size-estimate-range-gb common-lisp:nil :type
    (common-lisp:or item-collection-size-estimate-range common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'item-collection-metrics 'make-item-collection-metrics))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          item-collection-metrics))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ItemCollectionKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item-collection-key)))
    (aws-sdk/generator/shape::to-query-params "SizeEstimateRangeGB"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size-estimate-range-gb))))))
(common-lisp:progn
 (common-lisp:deftype item-collection-metrics-multiple ()
   '(trivial-types:proper-list item-collection-metrics))
 (common-lisp:defun |make-item-collection-metrics-multiple|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list item-collection-metrics))
   aws-sdk/generator/shape::members))
(common-lisp:defstruct
    (item-collection-metrics-per-table
     (:constructor |make-item-collection-metrics-per-table|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype item-collection-size-estimate-bound ()
  'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:deftype item-collection-size-estimate-range ()
   '(trivial-types:proper-list item-collection-size-estimate-bound))
 (common-lisp:defun |make-item-collection-size-estimate-range|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            item-collection-size-estimate-bound))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (item-collection-size-limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'item-collection-size-limit-exceeded-exception
                    'make-item-collection-size-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          item-collection-size-limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype item-list () '(trivial-types:proper-list attribute-map))
 (common-lisp:defun |make-item-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute-map))
   aws-sdk/generator/shape::members))
(common-lisp:defstruct
    (key
     (:constructor |make-key|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:defstruct
    (key-conditions
     (:constructor |make-key-conditions|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype key-expression () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype key-list () '(trivial-types:proper-list key))
 (common-lisp:defun |make-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype key-schema ()
   '(trivial-types:proper-list key-schema-element))
 (common-lisp:defun |make-key-schema|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list key-schema-element))
   aws-sdk/generator/shape::members))
(common-lisp:deftype key-schema-attribute-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (key-schema-element (:copier common-lisp:nil))
   (attribute-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":attribute-name is required"))
    :type (common-lisp:or key-schema-attribute-name common-lisp:null))
   (key-type
    (common-lisp:error
     #A((21) common-lisp:base-char . ":key-type is required"))
    :type (common-lisp:or key-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'key-schema-element 'make-key-schema-element))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape key-schema-element))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AttributeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-name)))
    (aws-sdk/generator/shape::to-query-params "KeyType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-type))))))
(common-lisp:deftype key-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (keys-and-attributes (:copier common-lisp:nil))
   (keys
    (common-lisp:error #A((17) common-lisp:base-char . ":keys is required"))
    :type (common-lisp:or key-list common-lisp:null))
   (attributes-to-get common-lisp:nil :type
    (common-lisp:or attribute-name-list common-lisp:null))
   (consistent-read common-lisp:nil :type
    (common-lisp:or consistent-read common-lisp:null))
   (projection-expression common-lisp:nil :type
    (common-lisp:or projection-expression common-lisp:null))
   (expression-attribute-names common-lisp:nil :type
    (common-lisp:or expression-attribute-name-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'keys-and-attributes 'make-keys-and-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape keys-and-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Keys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'keys)))
    (aws-sdk/generator/shape::to-query-params "AttributesToGet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes-to-get)))
    (aws-sdk/generator/shape::to-query-params "ConsistentRead"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consistent-read)))
    (aws-sdk/generator/shape::to-query-params "ProjectionExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'projection-expression)))
    (aws-sdk/generator/shape::to-query-params "ExpressionAttributeNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expression-attribute-names))))))
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype list-attribute-value ()
   '(trivial-types:proper-list attribute-value))
 (common-lisp:defun |make-list-attribute-value|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (list-tables-input (:copier common-lisp:nil))
   (exclusive-start-table-name common-lisp:nil :type
    (common-lisp:or table-name common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or list-tables-input-limit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tables-input 'make-list-tables-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-tables-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ExclusiveStartTableName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'exclusive-start-table-name)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:deftype list-tables-input-limit () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (list-tables-output (:copier common-lisp:nil))
   (table-names common-lisp:nil :type
    (common-lisp:or table-name-list common-lisp:null))
   (last-evaluated-table-name common-lisp:nil :type
    (common-lisp:or table-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tables-output 'make-list-tables-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-tables-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TableNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-names)))
    (aws-sdk/generator/shape::to-query-params "LastEvaluatedTableName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-evaluated-table-name))))))
(common-lisp:progn
 (common-lisp:defstruct (list-tags-of-resource-input (:copier common-lisp:nil))
   (resource-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":resource-arn is required"))
    :type (common-lisp:or resource-arn-string common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-of-resource-input
                    'make-list-tags-of-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-tags-of-resource-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-tags-of-resource-output (:copier common-lisp:nil))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-of-resource-output
                    'make-list-tags-of-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-tags-of-resource-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (local-secondary-index (:copier common-lisp:nil))
   (index-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":index-name is required"))
    :type (common-lisp:or index-name common-lisp:null))
   (key-schema
    (common-lisp:error
     #A((23) common-lisp:base-char . ":key-schema is required"))
    :type (common-lisp:or key-schema common-lisp:null))
   (projection
    (common-lisp:error
     #A((23) common-lisp:base-char . ":projection is required"))
    :type (common-lisp:or projection common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'local-secondary-index 'make-local-secondary-index))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          local-secondary-index))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IndexName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-name)))
    (aws-sdk/generator/shape::to-query-params "KeySchema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-schema)))
    (aws-sdk/generator/shape::to-query-params "Projection"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'projection))))))
(common-lisp:progn
 (common-lisp:defstruct
     (local-secondary-index-description (:copier common-lisp:nil))
   (index-name common-lisp:nil :type
    (common-lisp:or index-name common-lisp:null))
   (key-schema common-lisp:nil :type
    (common-lisp:or key-schema common-lisp:null))
   (projection common-lisp:nil :type
    (common-lisp:or projection common-lisp:null))
   (index-size-bytes common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (item-count common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (index-arn common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'local-secondary-index-description
                    'make-local-secondary-index-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          local-secondary-index-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IndexName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-name)))
    (aws-sdk/generator/shape::to-query-params "KeySchema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-schema)))
    (aws-sdk/generator/shape::to-query-params "Projection"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'projection)))
    (aws-sdk/generator/shape::to-query-params "IndexSizeBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-size-bytes)))
    (aws-sdk/generator/shape::to-query-params "ItemCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item-count)))
    (aws-sdk/generator/shape::to-query-params "IndexArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-arn))))))
(common-lisp:progn
 (common-lisp:deftype local-secondary-index-description-list ()
   '(trivial-types:proper-list local-secondary-index-description))
 (common-lisp:defun |make-local-secondary-index-description-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            local-secondary-index-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype local-secondary-index-list ()
   '(trivial-types:proper-list local-secondary-index))
 (common-lisp:defun |make-local-secondary-index-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list local-secondary-index))
   aws-sdk/generator/shape::members))
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:defstruct
    (map-attribute-value
     (:constructor |make-map-attribute-value|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype next-token-string () 'common-lisp:string)
(common-lisp:deftype non-key-attribute-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype non-key-attribute-name-list ()
   '(trivial-types:proper-list non-key-attribute-name))
 (common-lisp:defun |make-non-key-attribute-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list non-key-attribute-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype null-attribute-value () 'common-lisp:boolean)
(common-lisp:deftype number-attribute-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype number-set-attribute-value ()
   '(trivial-types:proper-list number-attribute-value))
 (common-lisp:defun |make-number-set-attribute-value|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list number-attribute-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype positive-integer-object () 'common-lisp:integer)
(common-lisp:deftype positive-long-object () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (projection (:copier common-lisp:nil))
   (projection-type common-lisp:nil :type
    (common-lisp:or projection-type common-lisp:null))
   (non-key-attributes common-lisp:nil :type
    (common-lisp:or non-key-attribute-name-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'projection 'make-projection))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape projection))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProjectionType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'projection-type)))
    (aws-sdk/generator/shape::to-query-params "NonKeyAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'non-key-attributes))))))
(common-lisp:deftype projection-expression () 'common-lisp:string)
(common-lisp:deftype projection-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (provisioned-throughput (:copier common-lisp:nil))
   (read-capacity-units
    (common-lisp:error
     #A((32) common-lisp:base-char . ":read-capacity-units is required"))
    :type (common-lisp:or positive-long-object common-lisp:null))
   (write-capacity-units
    (common-lisp:error
     #A((33) common-lisp:base-char . ":write-capacity-units is required"))
    :type (common-lisp:or positive-long-object common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'provisioned-throughput 'make-provisioned-throughput))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          provisioned-throughput))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ReadCapacityUnits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'read-capacity-units)))
    (aws-sdk/generator/shape::to-query-params "WriteCapacityUnits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'write-capacity-units))))))
(common-lisp:progn
 (common-lisp:defstruct
     (provisioned-throughput-description (:copier common-lisp:nil))
   (last-increase-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (last-decrease-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (number-of-decreases-today common-lisp:nil :type
    (common-lisp:or positive-long-object common-lisp:null))
   (read-capacity-units common-lisp:nil :type
    (common-lisp:or positive-long-object common-lisp:null))
   (write-capacity-units common-lisp:nil :type
    (common-lisp:or positive-long-object common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'provisioned-throughput-description
                    'make-provisioned-throughput-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          provisioned-throughput-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LastIncreaseDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-increase-date-time)))
    (aws-sdk/generator/shape::to-query-params "LastDecreaseDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-decrease-date-time)))
    (aws-sdk/generator/shape::to-query-params "NumberOfDecreasesToday"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'number-of-decreases-today)))
    (aws-sdk/generator/shape::to-query-params "ReadCapacityUnits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'read-capacity-units)))
    (aws-sdk/generator/shape::to-query-params "WriteCapacityUnits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'write-capacity-units))))))
(common-lisp:progn
 (common-lisp:defstruct
     (provisioned-throughput-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'provisioned-throughput-exceeded-exception
                    'make-provisioned-throughput-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          provisioned-throughput-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (put-item-input (:copier common-lisp:nil))
   (table-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":table-name is required"))
    :type (common-lisp:or table-name common-lisp:null))
   (item
    (common-lisp:error #A((17) common-lisp:base-char . ":item is required"))
    :type (common-lisp:or put-item-input-attribute-map common-lisp:null))
   (expected common-lisp:nil :type
    (common-lisp:or expected-attribute-map common-lisp:null))
   (return-values common-lisp:nil :type
    (common-lisp:or return-value common-lisp:null))
   (return-consumed-capacity common-lisp:nil :type
    (common-lisp:or return-consumed-capacity common-lisp:null))
   (return-item-collection-metrics common-lisp:nil :type
    (common-lisp:or return-item-collection-metrics common-lisp:null))
   (conditional-operator common-lisp:nil :type
    (common-lisp:or conditional-operator common-lisp:null))
   (condition-expression common-lisp:nil :type
    (common-lisp:or condition-expression common-lisp:null))
   (expression-attribute-names common-lisp:nil :type
    (common-lisp:or expression-attribute-name-map common-lisp:null))
   (expression-attribute-values common-lisp:nil :type
    (common-lisp:or expression-attribute-value-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'put-item-input 'make-put-item-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape put-item-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TableName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-name)))
    (aws-sdk/generator/shape::to-query-params "Item"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item)))
    (aws-sdk/generator/shape::to-query-params "Expected"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expected)))
    (aws-sdk/generator/shape::to-query-params "ReturnValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-values)))
    (aws-sdk/generator/shape::to-query-params "ReturnConsumedCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-consumed-capacity)))
    (aws-sdk/generator/shape::to-query-params "ReturnItemCollectionMetrics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-item-collection-metrics)))
    (aws-sdk/generator/shape::to-query-params "ConditionalOperator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'conditional-operator)))
    (aws-sdk/generator/shape::to-query-params "ConditionExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'condition-expression)))
    (aws-sdk/generator/shape::to-query-params "ExpressionAttributeNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expression-attribute-names)))
    (aws-sdk/generator/shape::to-query-params "ExpressionAttributeValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expression-attribute-values))))))
(common-lisp:defstruct
    (put-item-input-attribute-map
     (:constructor |make-put-item-input-attribute-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (put-item-output (:copier common-lisp:nil))
   (attributes common-lisp:nil :type
    (common-lisp:or attribute-map common-lisp:null))
   (consumed-capacity common-lisp:nil :type
    (common-lisp:or consumed-capacity common-lisp:null))
   (item-collection-metrics common-lisp:nil :type
    (common-lisp:or item-collection-metrics common-lisp:null)))
 (common-lisp:export (common-lisp:list 'put-item-output 'make-put-item-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape put-item-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "ConsumedCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consumed-capacity)))
    (aws-sdk/generator/shape::to-query-params "ItemCollectionMetrics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item-collection-metrics))))))
(common-lisp:progn
 (common-lisp:defstruct (put-request (:copier common-lisp:nil))
   (item
    (common-lisp:error #A((17) common-lisp:base-char . ":item is required"))
    :type (common-lisp:or put-item-input-attribute-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'put-request 'make-put-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape put-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Item"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item))))))
(common-lisp:progn
 (common-lisp:defstruct (query-input (:copier common-lisp:nil))
   (table-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":table-name is required"))
    :type (common-lisp:or table-name common-lisp:null))
   (index-name common-lisp:nil :type
    (common-lisp:or index-name common-lisp:null))
   (select common-lisp:nil :type (common-lisp:or select common-lisp:null))
   (attributes-to-get common-lisp:nil :type
    (common-lisp:or attribute-name-list common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-integer-object common-lisp:null))
   (consistent-read common-lisp:nil :type
    (common-lisp:or consistent-read common-lisp:null))
   (key-conditions common-lisp:nil :type
    (common-lisp:or key-conditions common-lisp:null))
   (query-filter common-lisp:nil :type
    (common-lisp:or filter-condition-map common-lisp:null))
   (conditional-operator common-lisp:nil :type
    (common-lisp:or conditional-operator common-lisp:null))
   (scan-index-forward common-lisp:nil :type
    (common-lisp:or boolean-object common-lisp:null))
   (exclusive-start-key common-lisp:nil :type
    (common-lisp:or key common-lisp:null))
   (return-consumed-capacity common-lisp:nil :type
    (common-lisp:or return-consumed-capacity common-lisp:null))
   (projection-expression common-lisp:nil :type
    (common-lisp:or projection-expression common-lisp:null))
   (filter-expression common-lisp:nil :type
    (common-lisp:or condition-expression common-lisp:null))
   (key-condition-expression common-lisp:nil :type
    (common-lisp:or key-expression common-lisp:null))
   (expression-attribute-names common-lisp:nil :type
    (common-lisp:or expression-attribute-name-map common-lisp:null))
   (expression-attribute-values common-lisp:nil :type
    (common-lisp:or expression-attribute-value-map common-lisp:null)))
 (common-lisp:export (common-lisp:list 'query-input 'make-query-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape query-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TableName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-name)))
    (aws-sdk/generator/shape::to-query-params "IndexName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-name)))
    (aws-sdk/generator/shape::to-query-params "Select"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'select)))
    (aws-sdk/generator/shape::to-query-params "AttributesToGet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes-to-get)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "ConsistentRead"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consistent-read)))
    (aws-sdk/generator/shape::to-query-params "KeyConditions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-conditions)))
    (aws-sdk/generator/shape::to-query-params "QueryFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'query-filter)))
    (aws-sdk/generator/shape::to-query-params "ConditionalOperator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'conditional-operator)))
    (aws-sdk/generator/shape::to-query-params "ScanIndexForward"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scan-index-forward)))
    (aws-sdk/generator/shape::to-query-params "ExclusiveStartKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'exclusive-start-key)))
    (aws-sdk/generator/shape::to-query-params "ReturnConsumedCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-consumed-capacity)))
    (aws-sdk/generator/shape::to-query-params "ProjectionExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'projection-expression)))
    (aws-sdk/generator/shape::to-query-params "FilterExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-expression)))
    (aws-sdk/generator/shape::to-query-params "KeyConditionExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-condition-expression)))
    (aws-sdk/generator/shape::to-query-params "ExpressionAttributeNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expression-attribute-names)))
    (aws-sdk/generator/shape::to-query-params "ExpressionAttributeValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expression-attribute-values))))))
(common-lisp:progn
 (common-lisp:defstruct (query-output (:copier common-lisp:nil))
   (items common-lisp:nil :type (common-lisp:or item-list common-lisp:null))
   (count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (scanned-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (last-evaluated-key common-lisp:nil :type
    (common-lisp:or key common-lisp:null))
   (consumed-capacity common-lisp:nil :type
    (common-lisp:or consumed-capacity common-lisp:null)))
 (common-lisp:export (common-lisp:list 'query-output 'make-query-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape query-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items)))
    (aws-sdk/generator/shape::to-query-params "Count"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'count)))
    (aws-sdk/generator/shape::to-query-params "ScannedCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scanned-count)))
    (aws-sdk/generator/shape::to-query-params "LastEvaluatedKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-evaluated-key)))
    (aws-sdk/generator/shape::to-query-params "ConsumedCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consumed-capacity))))))
(common-lisp:deftype resource-arn-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (resource-in-use-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-in-use-exception
                    'make-resource-in-use-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-in-use-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'make-resource-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype return-consumed-capacity () 'common-lisp:string)
(common-lisp:deftype return-item-collection-metrics () 'common-lisp:string)
(common-lisp:deftype return-value () 'common-lisp:string)
(common-lisp:deftype scalar-attribute-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (scan-input (:copier common-lisp:nil))
   (table-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":table-name is required"))
    :type (common-lisp:or table-name common-lisp:null))
   (index-name common-lisp:nil :type
    (common-lisp:or index-name common-lisp:null))
   (attributes-to-get common-lisp:nil :type
    (common-lisp:or attribute-name-list common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or positive-integer-object common-lisp:null))
   (select common-lisp:nil :type (common-lisp:or select common-lisp:null))
   (scan-filter common-lisp:nil :type
    (common-lisp:or filter-condition-map common-lisp:null))
   (conditional-operator common-lisp:nil :type
    (common-lisp:or conditional-operator common-lisp:null))
   (exclusive-start-key common-lisp:nil :type
    (common-lisp:or key common-lisp:null))
   (return-consumed-capacity common-lisp:nil :type
    (common-lisp:or return-consumed-capacity common-lisp:null))
   (total-segments common-lisp:nil :type
    (common-lisp:or scan-total-segments common-lisp:null))
   (segment common-lisp:nil :type
    (common-lisp:or scan-segment common-lisp:null))
   (projection-expression common-lisp:nil :type
    (common-lisp:or projection-expression common-lisp:null))
   (filter-expression common-lisp:nil :type
    (common-lisp:or condition-expression common-lisp:null))
   (expression-attribute-names common-lisp:nil :type
    (common-lisp:or expression-attribute-name-map common-lisp:null))
   (expression-attribute-values common-lisp:nil :type
    (common-lisp:or expression-attribute-value-map common-lisp:null))
   (consistent-read common-lisp:nil :type
    (common-lisp:or consistent-read common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scan-input 'make-scan-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape scan-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TableName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-name)))
    (aws-sdk/generator/shape::to-query-params "IndexName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-name)))
    (aws-sdk/generator/shape::to-query-params "AttributesToGet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes-to-get)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "Select"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'select)))
    (aws-sdk/generator/shape::to-query-params "ScanFilter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scan-filter)))
    (aws-sdk/generator/shape::to-query-params "ConditionalOperator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'conditional-operator)))
    (aws-sdk/generator/shape::to-query-params "ExclusiveStartKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'exclusive-start-key)))
    (aws-sdk/generator/shape::to-query-params "ReturnConsumedCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-consumed-capacity)))
    (aws-sdk/generator/shape::to-query-params "TotalSegments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'total-segments)))
    (aws-sdk/generator/shape::to-query-params "Segment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'segment)))
    (aws-sdk/generator/shape::to-query-params "ProjectionExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'projection-expression)))
    (aws-sdk/generator/shape::to-query-params "FilterExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter-expression)))
    (aws-sdk/generator/shape::to-query-params "ExpressionAttributeNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expression-attribute-names)))
    (aws-sdk/generator/shape::to-query-params "ExpressionAttributeValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expression-attribute-values)))
    (aws-sdk/generator/shape::to-query-params "ConsistentRead"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consistent-read))))))
(common-lisp:progn
 (common-lisp:defstruct (scan-output (:copier common-lisp:nil))
   (items common-lisp:nil :type (common-lisp:or item-list common-lisp:null))
   (count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (scanned-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (last-evaluated-key common-lisp:nil :type
    (common-lisp:or key common-lisp:null))
   (consumed-capacity common-lisp:nil :type
    (common-lisp:or consumed-capacity common-lisp:null)))
 (common-lisp:export (common-lisp:list 'scan-output 'make-scan-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape scan-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items)))
    (aws-sdk/generator/shape::to-query-params "Count"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'count)))
    (aws-sdk/generator/shape::to-query-params "ScannedCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scanned-count)))
    (aws-sdk/generator/shape::to-query-params "LastEvaluatedKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-evaluated-key)))
    (aws-sdk/generator/shape::to-query-params "ConsumedCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consumed-capacity))))))
(common-lisp:deftype scan-segment () 'common-lisp:integer)
(common-lisp:deftype scan-total-segments () 'common-lisp:integer)
(common-lisp:defstruct
    (secondary-indexes-capacity-map
     (:constructor |make-secondary-indexes-capacity-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype select () 'common-lisp:string)
(common-lisp:deftype stream-arn () 'common-lisp:string)
(common-lisp:deftype stream-enabled () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (stream-specification (:copier common-lisp:nil))
   (stream-enabled common-lisp:nil :type
    (common-lisp:or stream-enabled common-lisp:null))
   (stream-view-type common-lisp:nil :type
    (common-lisp:or stream-view-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stream-specification 'make-stream-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape stream-specification))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StreamEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stream-enabled)))
    (aws-sdk/generator/shape::to-query-params "StreamViewType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stream-view-type))))))
(common-lisp:deftype stream-view-type () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype string-attribute-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-set-attribute-value ()
   '(trivial-types:proper-list string-attribute-value))
 (common-lisp:defun |make-string-set-attribute-value|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string-attribute-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (table-description (:copier common-lisp:nil))
   (attribute-definitions common-lisp:nil :type
    (common-lisp:or attribute-definitions common-lisp:null))
   (table-name common-lisp:nil :type
    (common-lisp:or table-name common-lisp:null))
   (key-schema common-lisp:nil :type
    (common-lisp:or key-schema common-lisp:null))
   (table-status common-lisp:nil :type
    (common-lisp:or table-status common-lisp:null))
   (creation-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (provisioned-throughput common-lisp:nil :type
    (common-lisp:or provisioned-throughput-description common-lisp:null))
   (table-size-bytes common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (item-count common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (table-arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (local-secondary-indexes common-lisp:nil :type
    (common-lisp:or local-secondary-index-description-list common-lisp:null))
   (global-secondary-indexes common-lisp:nil :type
    (common-lisp:or global-secondary-index-description-list common-lisp:null))
   (stream-specification common-lisp:nil :type
    (common-lisp:or stream-specification common-lisp:null))
   (latest-stream-label common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (latest-stream-arn common-lisp:nil :type
    (common-lisp:or stream-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'table-description 'make-table-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape table-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AttributeDefinitions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-definitions)))
    (aws-sdk/generator/shape::to-query-params "TableName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-name)))
    (aws-sdk/generator/shape::to-query-params "KeySchema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-schema)))
    (aws-sdk/generator/shape::to-query-params "TableStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-status)))
    (aws-sdk/generator/shape::to-query-params "CreationDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date-time)))
    (aws-sdk/generator/shape::to-query-params "ProvisionedThroughput"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioned-throughput)))
    (aws-sdk/generator/shape::to-query-params "TableSizeBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-size-bytes)))
    (aws-sdk/generator/shape::to-query-params "ItemCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item-count)))
    (aws-sdk/generator/shape::to-query-params "TableArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-arn)))
    (aws-sdk/generator/shape::to-query-params "LocalSecondaryIndexes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'local-secondary-indexes)))
    (aws-sdk/generator/shape::to-query-params "GlobalSecondaryIndexes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'global-secondary-indexes)))
    (aws-sdk/generator/shape::to-query-params "StreamSpecification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stream-specification)))
    (aws-sdk/generator/shape::to-query-params "LatestStreamLabel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'latest-stream-label)))
    (aws-sdk/generator/shape::to-query-params "LatestStreamArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'latest-stream-arn))))))
(common-lisp:deftype table-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype table-name-list ()
   '(trivial-types:proper-list table-name))
 (common-lisp:defun |make-table-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list table-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype table-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (tag (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or tag-key-string common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or tag-value-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:deftype tag-key-list ()
   '(trivial-types:proper-list tag-key-string))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key-string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-key-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (tag-resource-input (:copier common-lisp:nil))
   (resource-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":resource-arn is required"))
    :type (common-lisp:or resource-arn-string common-lisp:null))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'tag-resource-input 'make-tag-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag-resource-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:deftype tag-value-string () 'common-lisp:string)
(common-lisp:deftype time-to-live-attribute-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (time-to-live-description (:copier common-lisp:nil))
   (time-to-live-status common-lisp:nil :type
    (common-lisp:or time-to-live-status common-lisp:null))
   (attribute-name common-lisp:nil :type
    (common-lisp:or time-to-live-attribute-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'time-to-live-description 'make-time-to-live-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          time-to-live-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TimeToLiveStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'time-to-live-status)))
    (aws-sdk/generator/shape::to-query-params "AttributeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-name))))))
(common-lisp:deftype time-to-live-enabled () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (time-to-live-specification (:copier common-lisp:nil))
   (enabled
    (common-lisp:error #A((20) common-lisp:base-char . ":enabled is required"))
    :type (common-lisp:or time-to-live-enabled common-lisp:null))
   (attribute-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":attribute-name is required"))
    :type (common-lisp:or time-to-live-attribute-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'time-to-live-specification
                    'make-time-to-live-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          time-to-live-specification))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "AttributeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-name))))))
(common-lisp:deftype time-to-live-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (untag-resource-input (:copier common-lisp:nil))
   (resource-arn
    (common-lisp:error
     #A((25) common-lisp:base-char . ":resource-arn is required"))
    :type (common-lisp:or resource-arn-string common-lisp:null))
   (tag-keys
    (common-lisp:error
     #A((21) common-lisp:base-char . ":tag-keys is required"))
    :type (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'untag-resource-input 'make-untag-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape untag-resource-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResourceArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-arn)))
    (aws-sdk/generator/shape::to-query-params "TagKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-keys))))))
(common-lisp:deftype update-expression () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (update-global-secondary-index-action (:copier common-lisp:nil))
   (index-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":index-name is required"))
    :type (common-lisp:or index-name common-lisp:null))
   (provisioned-throughput
    (common-lisp:error
     #A((35) common-lisp:base-char . ":provisioned-throughput is required"))
    :type (common-lisp:or provisioned-throughput common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-global-secondary-index-action
                    'make-update-global-secondary-index-action))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-global-secondary-index-action))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IndexName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'index-name)))
    (aws-sdk/generator/shape::to-query-params "ProvisionedThroughput"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioned-throughput))))))
(common-lisp:progn
 (common-lisp:defstruct (update-item-input (:copier common-lisp:nil))
   (table-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":table-name is required"))
    :type (common-lisp:or table-name common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or key common-lisp:null))
   (attribute-updates common-lisp:nil :type
    (common-lisp:or attribute-updates common-lisp:null))
   (expected common-lisp:nil :type
    (common-lisp:or expected-attribute-map common-lisp:null))
   (conditional-operator common-lisp:nil :type
    (common-lisp:or conditional-operator common-lisp:null))
   (return-values common-lisp:nil :type
    (common-lisp:or return-value common-lisp:null))
   (return-consumed-capacity common-lisp:nil :type
    (common-lisp:or return-consumed-capacity common-lisp:null))
   (return-item-collection-metrics common-lisp:nil :type
    (common-lisp:or return-item-collection-metrics common-lisp:null))
   (update-expression common-lisp:nil :type
    (common-lisp:or update-expression common-lisp:null))
   (condition-expression common-lisp:nil :type
    (common-lisp:or condition-expression common-lisp:null))
   (expression-attribute-names common-lisp:nil :type
    (common-lisp:or expression-attribute-name-map common-lisp:null))
   (expression-attribute-values common-lisp:nil :type
    (common-lisp:or expression-attribute-value-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-item-input 'make-update-item-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-item-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TableName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-name)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "AttributeUpdates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-updates)))
    (aws-sdk/generator/shape::to-query-params "Expected"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expected)))
    (aws-sdk/generator/shape::to-query-params "ConditionalOperator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'conditional-operator)))
    (aws-sdk/generator/shape::to-query-params "ReturnValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-values)))
    (aws-sdk/generator/shape::to-query-params "ReturnConsumedCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-consumed-capacity)))
    (aws-sdk/generator/shape::to-query-params "ReturnItemCollectionMetrics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'return-item-collection-metrics)))
    (aws-sdk/generator/shape::to-query-params "UpdateExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'update-expression)))
    (aws-sdk/generator/shape::to-query-params "ConditionExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'condition-expression)))
    (aws-sdk/generator/shape::to-query-params "ExpressionAttributeNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expression-attribute-names)))
    (aws-sdk/generator/shape::to-query-params "ExpressionAttributeValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expression-attribute-values))))))
(common-lisp:progn
 (common-lisp:defstruct (update-item-output (:copier common-lisp:nil))
   (attributes common-lisp:nil :type
    (common-lisp:or attribute-map common-lisp:null))
   (consumed-capacity common-lisp:nil :type
    (common-lisp:or consumed-capacity common-lisp:null))
   (item-collection-metrics common-lisp:nil :type
    (common-lisp:or item-collection-metrics common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-item-output 'make-update-item-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-item-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "ConsumedCapacity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consumed-capacity)))
    (aws-sdk/generator/shape::to-query-params "ItemCollectionMetrics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item-collection-metrics))))))
(common-lisp:progn
 (common-lisp:defstruct (update-table-input (:copier common-lisp:nil))
   (attribute-definitions common-lisp:nil :type
    (common-lisp:or attribute-definitions common-lisp:null))
   (table-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":table-name is required"))
    :type (common-lisp:or table-name common-lisp:null))
   (provisioned-throughput common-lisp:nil :type
    (common-lisp:or provisioned-throughput common-lisp:null))
   (global-secondary-index-updates common-lisp:nil :type
    (common-lisp:or global-secondary-index-update-list common-lisp:null))
   (stream-specification common-lisp:nil :type
    (common-lisp:or stream-specification common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-table-input 'make-update-table-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-table-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AttributeDefinitions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-definitions)))
    (aws-sdk/generator/shape::to-query-params "TableName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-name)))
    (aws-sdk/generator/shape::to-query-params "ProvisionedThroughput"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioned-throughput)))
    (aws-sdk/generator/shape::to-query-params "GlobalSecondaryIndexUpdates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'global-secondary-index-updates)))
    (aws-sdk/generator/shape::to-query-params "StreamSpecification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stream-specification))))))
(common-lisp:progn
 (common-lisp:defstruct (update-table-output (:copier common-lisp:nil))
   (table-description common-lisp:nil :type
    (common-lisp:or table-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-table-output 'make-update-table-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-table-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TableDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-description))))))
(common-lisp:progn
 (common-lisp:defstruct (update-time-to-live-input (:copier common-lisp:nil))
   (table-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":table-name is required"))
    :type (common-lisp:or table-name common-lisp:null))
   (time-to-live-specification
    (common-lisp:error
     #A((39) common-lisp:base-char
        . ":time-to-live-specification is required"))
    :type (common-lisp:or time-to-live-specification common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-time-to-live-input
                    'make-update-time-to-live-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-time-to-live-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TableName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-name)))
    (aws-sdk/generator/shape::to-query-params "TimeToLiveSpecification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'time-to-live-specification))))))
(common-lisp:progn
 (common-lisp:defstruct (update-time-to-live-output (:copier common-lisp:nil))
   (time-to-live-specification common-lisp:nil :type
    (common-lisp:or time-to-live-specification common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-time-to-live-output
                    'make-update-time-to-live-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-time-to-live-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TimeToLiveSpecification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'time-to-live-specification))))))
(common-lisp:progn
 (common-lisp:defstruct (write-request (:copier common-lisp:nil))
   (put-request common-lisp:nil :type
    (common-lisp:or put-request common-lisp:null))
   (delete-request common-lisp:nil :type
    (common-lisp:or delete-request common-lisp:null)))
 (common-lisp:export (common-lisp:list 'write-request 'make-write-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape write-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PutRequest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'put-request)))
    (aws-sdk/generator/shape::to-query-params "DeleteRequest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'delete-request))))))
(common-lisp:progn
 (common-lisp:deftype write-requests ()
   '(trivial-types:proper-list write-request))
 (common-lisp:defun |make-write-requests|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list write-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defun batch-get-item
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key request-items return-consumed-capacity)
   (common-lisp:declare
    (common-lisp:ignorable request-items return-consumed-capacity))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-get-item-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "dynamodb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"BatchGetItem")
                                  ("Version" ,@"2012-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BatchGetItemOutput" common-lisp:nil)))
 (common-lisp:export 'batch-get-item))
(common-lisp:progn
 (common-lisp:defun batch-write-item
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key request-items return-consumed-capacity
                     return-item-collection-metrics)
   (common-lisp:declare
    (common-lisp:ignorable request-items return-consumed-capacity
     return-item-collection-metrics))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-write-item-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "dynamodb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"BatchWriteItem")
                                  ("Version" ,@"2012-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BatchWriteItemOutput" common-lisp:nil)))
 (common-lisp:export 'batch-write-item))
(common-lisp:progn
 (common-lisp:defun create-table
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key attribute-definitions table-name
                     key-schema local-secondary-indexes
                     global-secondary-indexes provisioned-throughput
                     stream-specification)
   (common-lisp:declare
    (common-lisp:ignorable attribute-definitions table-name key-schema
     local-secondary-indexes global-secondary-indexes provisioned-throughput
     stream-specification))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-table-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "dynamodb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateTable")
                                  ("Version" ,@"2012-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateTableOutput" common-lisp:nil)))
 (common-lisp:export 'create-table))
(common-lisp:progn
 (common-lisp:defun delete-item
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key table-name key expected
                     conditional-operator return-values
                     return-consumed-capacity return-item-collection-metrics
                     condition-expression expression-attribute-names
                     expression-attribute-values)
   (common-lisp:declare
    (common-lisp:ignorable table-name key expected conditional-operator
     return-values return-consumed-capacity return-item-collection-metrics
     condition-expression expression-attribute-names
     expression-attribute-values))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-item-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "dynamodb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteItem")
                                  ("Version" ,@"2012-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteItemOutput" common-lisp:nil)))
 (common-lisp:export 'delete-item))
(common-lisp:progn
 (common-lisp:defun delete-table
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key table-name)
   (common-lisp:declare (common-lisp:ignorable table-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-table-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "dynamodb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteTable")
                                  ("Version" ,@"2012-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteTableOutput" common-lisp:nil)))
 (common-lisp:export 'delete-table))
(common-lisp:progn
 (common-lisp:defun describe-limits ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((8) common-lisp:base-char . "dynamodb") :method
                             :post :params
                             (common-lisp:cons "Action" "DescribeLimits"))
    "DescribeLimitsOutput" common-lisp:nil))
 (common-lisp:export 'describe-limits))
(common-lisp:progn
 (common-lisp:defun describe-table
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key table-name)
   (common-lisp:declare (common-lisp:ignorable table-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-table-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "dynamodb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeTable")
                                  ("Version" ,@"2012-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeTableOutput" common-lisp:nil)))
 (common-lisp:export 'describe-table))
(common-lisp:progn
 (common-lisp:defun describe-time-to-live
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key table-name)
   (common-lisp:declare (common-lisp:ignorable table-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-time-to-live-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "dynamodb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeTimeToLive")
                                  ("Version" ,@"2012-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeTimeToLiveOutput" common-lisp:nil)))
 (common-lisp:export 'describe-time-to-live))
(common-lisp:progn
 (common-lisp:defun get-item
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key table-name key attributes-to-get
                     consistent-read return-consumed-capacity
                     projection-expression expression-attribute-names)
   (common-lisp:declare
    (common-lisp:ignorable table-name key attributes-to-get consistent-read
     return-consumed-capacity projection-expression
     expression-attribute-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-item-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "dynamodb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetItem")
                                  ("Version" ,@"2012-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetItemOutput" common-lisp:nil)))
 (common-lisp:export 'get-item))
(common-lisp:progn
 (common-lisp:defun list-tables
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key exclusive-start-table-name limit)
   (common-lisp:declare
    (common-lisp:ignorable exclusive-start-table-name limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tables-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "dynamodb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListTables")
                                  ("Version" ,@"2012-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListTablesOutput" common-lisp:nil)))
 (common-lisp:export 'list-tables))
(common-lisp:progn
 (common-lisp:defun list-tags-of-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn next-token)
   (common-lisp:declare (common-lisp:ignorable resource-arn next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-of-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "dynamodb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListTagsOfResource")
                                  ("Version" ,@"2012-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListTagsOfResourceOutput" common-lisp:nil)))
 (common-lisp:export 'list-tags-of-resource))
(common-lisp:progn
 (common-lisp:defun put-item
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key table-name item expected return-values
                     return-consumed-capacity return-item-collection-metrics
                     conditional-operator condition-expression
                     expression-attribute-names expression-attribute-values)
   (common-lisp:declare
    (common-lisp:ignorable table-name item expected return-values
     return-consumed-capacity return-item-collection-metrics
     conditional-operator condition-expression expression-attribute-names
     expression-attribute-values))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-item-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "dynamodb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutItem")
                                  ("Version" ,@"2012-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutItemOutput" common-lisp:nil)))
 (common-lisp:export 'put-item))
(common-lisp:progn
 (common-lisp:defun query
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key table-name index-name select
                     attributes-to-get limit consistent-read key-conditions
                     query-filter conditional-operator scan-index-forward
                     exclusive-start-key return-consumed-capacity
                     projection-expression filter-expression
                     key-condition-expression expression-attribute-names
                     expression-attribute-values)
   (common-lisp:declare
    (common-lisp:ignorable table-name index-name select attributes-to-get limit
     consistent-read key-conditions query-filter conditional-operator
     scan-index-forward exclusive-start-key return-consumed-capacity
     projection-expression filter-expression key-condition-expression
     expression-attribute-names expression-attribute-values))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-query-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "dynamodb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"Query")
                                  ("Version" ,@"2012-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "QueryOutput" common-lisp:nil)))
 (common-lisp:export 'query))
(common-lisp:progn
 (common-lisp:defun scan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key table-name index-name attributes-to-get
                     limit select scan-filter conditional-operator
                     exclusive-start-key return-consumed-capacity
                     total-segments segment projection-expression
                     filter-expression expression-attribute-names
                     expression-attribute-values consistent-read)
   (common-lisp:declare
    (common-lisp:ignorable table-name index-name attributes-to-get limit select
     scan-filter conditional-operator exclusive-start-key
     return-consumed-capacity total-segments segment projection-expression
     filter-expression expression-attribute-names expression-attribute-values
     consistent-read))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-scan-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "dynamodb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"Scan")
                                  ("Version" ,@"2012-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ScanOutput" common-lisp:nil)))
 (common-lisp:export 'scan))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "dynamodb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"TagResource")
                                  ("Version" ,@"2012-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "dynamodb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UntagResource")
                                  ("Version" ,@"2012-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-item
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key table-name key attribute-updates expected
                     conditional-operator return-values
                     return-consumed-capacity return-item-collection-metrics
                     update-expression condition-expression
                     expression-attribute-names expression-attribute-values)
   (common-lisp:declare
    (common-lisp:ignorable table-name key attribute-updates expected
     conditional-operator return-values return-consumed-capacity
     return-item-collection-metrics update-expression condition-expression
     expression-attribute-names expression-attribute-values))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-item-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "dynamodb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateItem")
                                  ("Version" ,@"2012-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateItemOutput" common-lisp:nil)))
 (common-lisp:export 'update-item))
(common-lisp:progn
 (common-lisp:defun update-table
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key attribute-definitions table-name
                     provisioned-throughput global-secondary-index-updates
                     stream-specification)
   (common-lisp:declare
    (common-lisp:ignorable attribute-definitions table-name
     provisioned-throughput global-secondary-index-updates
     stream-specification))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-table-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "dynamodb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateTable")
                                  ("Version" ,@"2012-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateTableOutput" common-lisp:nil)))
 (common-lisp:export 'update-table))
(common-lisp:progn
 (common-lisp:defun update-time-to-live
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key table-name time-to-live-specification)
   (common-lisp:declare
    (common-lisp:ignorable table-name time-to-live-specification))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-time-to-live-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((8) common-lisp:base-char . "dynamodb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateTimeToLive")
                                  ("Version" ,@"2012-08-10"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateTimeToLiveOutput" common-lisp:nil)))
 (common-lisp:export 'update-time-to-live))