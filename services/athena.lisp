;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/athena
  (:use)
  (:nicknames #:aws/athena)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/athena)

(common-lisp:progn
 (common-lisp:defstruct (batch-get-named-query-input (:copier common-lisp:nil))
   (named-query-ids
    (common-lisp:error
     #A((28) common-lisp:base-char . ":named-query-ids is required"))
    :type (common-lisp:or named-query-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-named-query-input
                    'make-batch-get-named-query-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-named-query-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NamedQueryIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'named-query-ids))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-named-query-output (:copier common-lisp:nil))
   (named-queries common-lisp:nil :type
    (common-lisp:or named-query-list common-lisp:null))
   (unprocessed-named-query-ids common-lisp:nil :type
    (common-lisp:or unprocessed-named-query-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-named-query-output
                    'make-batch-get-named-query-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-named-query-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NamedQueries"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'named-queries)))
    (aws-sdk/generator/shape::to-query-params "UnprocessedNamedQueryIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unprocessed-named-query-ids))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-query-execution-input (:copier common-lisp:nil))
   (query-execution-ids
    (common-lisp:error
     #A((32) common-lisp:base-char . ":query-execution-ids is required"))
    :type (common-lisp:or query-execution-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-query-execution-input
                    'make-batch-get-query-execution-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-query-execution-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QueryExecutionIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'query-execution-ids))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-get-query-execution-output (:copier common-lisp:nil))
   (query-executions common-lisp:nil :type
    (common-lisp:or query-execution-list common-lisp:null))
   (unprocessed-query-execution-ids common-lisp:nil :type
    (common-lisp:or unprocessed-query-execution-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-query-execution-output
                    'make-batch-get-query-execution-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-query-execution-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QueryExecutions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'query-executions)))
    (aws-sdk/generator/shape::to-query-params "UnprocessedQueryExecutionIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unprocessed-query-execution-ids))))))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (column-info (:copier common-lisp:nil))
   (catalog-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (schema-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (table-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (label common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or string common-lisp:null))
   (precision common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (scale common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (nullable common-lisp:nil :type
    (common-lisp:or column-nullable common-lisp:null))
   (case-sensitive common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'column-info 'make-column-info))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape column-info))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CatalogName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'catalog-name)))
    (aws-sdk/generator/shape::to-query-params "SchemaName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema-name)))
    (aws-sdk/generator/shape::to-query-params "TableName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'table-name)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Label"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'label)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Precision"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'precision)))
    (aws-sdk/generator/shape::to-query-params "Scale"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scale)))
    (aws-sdk/generator/shape::to-query-params "Nullable"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'nullable)))
    (aws-sdk/generator/shape::to-query-params "CaseSensitive"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'case-sensitive))))))
(common-lisp:progn
 (common-lisp:deftype column-info-list ()
   '(trivial-types:proper-list column-info))
 (common-lisp:defun |make-column-info-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list column-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype column-nullable () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (create-named-query-input (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name-string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description-string common-lisp:null))
   (database
    (common-lisp:error
     #A((21) common-lisp:base-char . ":database is required"))
    :type (common-lisp:or database-string common-lisp:null))
   (query-string
    (common-lisp:error
     #A((25) common-lisp:base-char . ":query-string is required"))
    :type (common-lisp:or query-string common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or idempotency-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-named-query-input 'make-create-named-query-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-named-query-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Database"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'database)))
    (aws-sdk/generator/shape::to-query-params "QueryString"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'query-string)))
    (aws-sdk/generator/shape::to-query-params "ClientRequestToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-request-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-named-query-output (:copier common-lisp:nil))
   (named-query-id common-lisp:nil :type
    (common-lisp:or named-query-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-named-query-output
                    'make-create-named-query-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-named-query-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NamedQueryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'named-query-id))))))
(common-lisp:deftype database-string () 'common-lisp:string)
(common-lisp:deftype date () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (datum (:copier common-lisp:nil))
   (var-char-value common-lisp:nil :type
    (common-lisp:or |datumString| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'datum 'make-datum))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape datum))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "VarCharValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'var-char-value))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-named-query-input (:copier common-lisp:nil))
   (named-query-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":named-query-id is required"))
    :type (common-lisp:or named-query-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-named-query-input 'make-delete-named-query-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-named-query-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NamedQueryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'named-query-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-named-query-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-named-query-output
                    'make-delete-named-query-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-named-query-output))
   (common-lisp:append)))
(common-lisp:deftype description-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (encryption-configuration (:copier common-lisp:nil))
   (encryption-option
    (common-lisp:error
     #A((30) common-lisp:base-char . ":encryption-option is required"))
    :type (common-lisp:or encryption-option common-lisp:null))
   (kms-key common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'encryption-configuration 'make-encryption-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          encryption-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EncryptionOption"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encryption-option)))
    (aws-sdk/generator/shape::to-query-params "KmsKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kms-key))))))
(common-lisp:deftype encryption-option () 'common-lisp:string)
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (get-named-query-input (:copier common-lisp:nil))
   (named-query-id
    (common-lisp:error
     #A((27) common-lisp:base-char . ":named-query-id is required"))
    :type (common-lisp:or named-query-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-named-query-input 'make-get-named-query-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-named-query-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NamedQueryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'named-query-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-named-query-output (:copier common-lisp:nil))
   (named-query common-lisp:nil :type
    (common-lisp:or named-query common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-named-query-output 'make-get-named-query-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-named-query-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NamedQuery"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'named-query))))))
(common-lisp:progn
 (common-lisp:defstruct (get-query-execution-input (:copier common-lisp:nil))
   (query-execution-id
    (common-lisp:error
     #A((31) common-lisp:base-char . ":query-execution-id is required"))
    :type (common-lisp:or query-execution-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-query-execution-input
                    'make-get-query-execution-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-query-execution-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QueryExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'query-execution-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-query-execution-output (:copier common-lisp:nil))
   (query-execution common-lisp:nil :type
    (common-lisp:or query-execution common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-query-execution-output
                    'make-get-query-execution-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-query-execution-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QueryExecution"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'query-execution))))))
(common-lisp:progn
 (common-lisp:defstruct (get-query-results-input (:copier common-lisp:nil))
   (query-execution-id
    (common-lisp:error
     #A((31) common-lisp:base-char . ":query-execution-id is required"))
    :type (common-lisp:or query-execution-id common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-query-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-query-results-input 'make-get-query-results-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-query-results-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QueryExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'query-execution-id)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (get-query-results-output (:copier common-lisp:nil))
   (result-set common-lisp:nil :type
    (common-lisp:or result-set common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-query-results-output 'make-get-query-results-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-query-results-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ResultSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result-set)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype idempotency-token () 'common-lisp:string)
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (internal-server-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'make-internal-server-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          internal-server-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-request-exception (:copier common-lisp:nil))
   (athena-error-code common-lisp:nil :type
    (common-lisp:or error-code common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-exception
                    'make-invalid-request-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-request-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AthenaErrorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'athena-error-code)))
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (list-named-queries-input (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-named-queries-count common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-named-queries-input 'make-list-named-queries-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-named-queries-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (list-named-queries-output (:copier common-lisp:nil))
   (named-query-ids common-lisp:nil :type
    (common-lisp:or named-query-id-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-named-queries-output
                    'make-list-named-queries-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-named-queries-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NamedQueryIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'named-query-ids)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-query-executions-input (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-query-executions-count common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-query-executions-input
                    'make-list-query-executions-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-query-executions-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-query-executions-output (:copier common-lisp:nil))
   (query-execution-ids common-lisp:nil :type
    (common-lisp:or query-execution-id-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-query-executions-output
                    'make-list-query-executions-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-query-executions-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QueryExecutionIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'query-execution-ids)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:deftype max-named-queries-count () 'common-lisp:integer)
(common-lisp:deftype max-query-executions-count () 'common-lisp:integer)
(common-lisp:deftype max-query-results () 'common-lisp:integer)
(common-lisp:deftype name-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (named-query (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or name-string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description-string common-lisp:null))
   (database
    (common-lisp:error
     #A((21) common-lisp:base-char . ":database is required"))
    :type (common-lisp:or database-string common-lisp:null))
   (query-string
    (common-lisp:error
     #A((25) common-lisp:base-char . ":query-string is required"))
    :type (common-lisp:or query-string common-lisp:null))
   (named-query-id common-lisp:nil :type
    (common-lisp:or named-query-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'named-query 'make-named-query))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape named-query))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Database"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'database)))
    (aws-sdk/generator/shape::to-query-params "QueryString"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'query-string)))
    (aws-sdk/generator/shape::to-query-params "NamedQueryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'named-query-id))))))
(common-lisp:deftype named-query-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype named-query-id-list ()
   '(trivial-types:proper-list named-query-id))
 (common-lisp:defun |make-named-query-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list named-query-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype named-query-list ()
   '(trivial-types:proper-list named-query))
 (common-lisp:defun |make-named-query-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list named-query))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (query-execution (:copier common-lisp:nil))
   (query-execution-id common-lisp:nil :type
    (common-lisp:or query-execution-id common-lisp:null))
   (query common-lisp:nil :type (common-lisp:or query-string common-lisp:null))
   (result-configuration common-lisp:nil :type
    (common-lisp:or result-configuration common-lisp:null))
   (query-execution-context common-lisp:nil :type
    (common-lisp:or query-execution-context common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or query-execution-status common-lisp:null))
   (statistics common-lisp:nil :type
    (common-lisp:or query-execution-statistics common-lisp:null)))
 (common-lisp:export (common-lisp:list 'query-execution 'make-query-execution))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape query-execution))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QueryExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'query-execution-id)))
    (aws-sdk/generator/shape::to-query-params "Query"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'query)))
    (aws-sdk/generator/shape::to-query-params "ResultConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result-configuration)))
    (aws-sdk/generator/shape::to-query-params "QueryExecutionContext"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'query-execution-context)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "Statistics"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'statistics))))))
(common-lisp:progn
 (common-lisp:defstruct (query-execution-context (:copier common-lisp:nil))
   (database common-lisp:nil :type
    (common-lisp:or database-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'query-execution-context 'make-query-execution-context))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          query-execution-context))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Database"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'database))))))
(common-lisp:deftype query-execution-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype query-execution-id-list ()
   '(trivial-types:proper-list query-execution-id))
 (common-lisp:defun |make-query-execution-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list query-execution-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype query-execution-list ()
   '(trivial-types:proper-list query-execution))
 (common-lisp:defun |make-query-execution-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list query-execution))
   aws-sdk/generator/shape::members))
(common-lisp:deftype query-execution-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (query-execution-statistics (:copier common-lisp:nil))
   (engine-execution-time-in-millis common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (data-scanned-in-bytes common-lisp:nil :type
    (common-lisp:or long common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'query-execution-statistics
                    'make-query-execution-statistics))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          query-execution-statistics))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EngineExecutionTimeInMillis"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'engine-execution-time-in-millis)))
    (aws-sdk/generator/shape::to-query-params "DataScannedInBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-scanned-in-bytes))))))
(common-lisp:progn
 (common-lisp:defstruct (query-execution-status (:copier common-lisp:nil))
   (state common-lisp:nil :type
    (common-lisp:or query-execution-state common-lisp:null))
   (state-change-reason common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (submission-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (completion-date-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'query-execution-status 'make-query-execution-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          query-execution-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "StateChangeReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state-change-reason)))
    (aws-sdk/generator/shape::to-query-params "SubmissionDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'submission-date-time)))
    (aws-sdk/generator/shape::to-query-params "CompletionDateTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'completion-date-time))))))
(common-lisp:deftype query-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (result-configuration (:copier common-lisp:nil))
   (output-location
    (common-lisp:error
     #A((28) common-lisp:base-char . ":output-location is required"))
    :type (common-lisp:or string common-lisp:null))
   (encryption-configuration common-lisp:nil :type
    (common-lisp:or encryption-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'result-configuration 'make-result-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape result-configuration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OutputLocation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'output-location)))
    (aws-sdk/generator/shape::to-query-params "EncryptionConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'encryption-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct (result-set (:copier common-lisp:nil))
   (rows common-lisp:nil :type (common-lisp:or row-list common-lisp:null))
   (result-set-metadata common-lisp:nil :type
    (common-lisp:or result-set-metadata common-lisp:null)))
 (common-lisp:export (common-lisp:list 'result-set 'make-result-set))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape result-set))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Rows"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rows)))
    (aws-sdk/generator/shape::to-query-params "ResultSetMetadata"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result-set-metadata))))))
(common-lisp:progn
 (common-lisp:defstruct (result-set-metadata (:copier common-lisp:nil))
   (column-info common-lisp:nil :type
    (common-lisp:or column-info-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'result-set-metadata 'make-result-set-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape result-set-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ColumnInfo"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'column-info))))))
(common-lisp:progn
 (common-lisp:defstruct (row (:copier common-lisp:nil))
   (data common-lisp:nil :type (common-lisp:or |datumList| common-lisp:null)))
 (common-lisp:export (common-lisp:list 'row 'make-row))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape row))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Data"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data))))))
(common-lisp:progn
 (common-lisp:deftype row-list () '(trivial-types:proper-list row))
 (common-lisp:defun |make-row-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list row))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (start-query-execution-input (:copier common-lisp:nil))
   (query-string
    (common-lisp:error
     #A((25) common-lisp:base-char . ":query-string is required"))
    :type (common-lisp:or query-string common-lisp:null))
   (client-request-token common-lisp:nil :type
    (common-lisp:or idempotency-token common-lisp:null))
   (query-execution-context common-lisp:nil :type
    (common-lisp:or query-execution-context common-lisp:null))
   (result-configuration
    (common-lisp:error
     #A((33) common-lisp:base-char . ":result-configuration is required"))
    :type (common-lisp:or result-configuration common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-query-execution-input
                    'make-start-query-execution-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-query-execution-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QueryString"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'query-string)))
    (aws-sdk/generator/shape::to-query-params "ClientRequestToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-request-token)))
    (aws-sdk/generator/shape::to-query-params "QueryExecutionContext"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'query-execution-context)))
    (aws-sdk/generator/shape::to-query-params "ResultConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (start-query-execution-output (:copier common-lisp:nil))
   (query-execution-id common-lisp:nil :type
    (common-lisp:or query-execution-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'start-query-execution-output
                    'make-start-query-execution-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          start-query-execution-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QueryExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'query-execution-id))))))
(common-lisp:progn
 (common-lisp:defstruct (stop-query-execution-input (:copier common-lisp:nil))
   (query-execution-id
    (common-lisp:error
     #A((31) common-lisp:base-char . ":query-execution-id is required"))
    :type (common-lisp:or query-execution-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'stop-query-execution-input
                    'make-stop-query-execution-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-query-execution-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QueryExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'query-execution-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (stop-query-execution-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'stop-query-execution-output
                    'make-stop-query-execution-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          stop-query-execution-output))
   (common-lisp:append)))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype throttle-reason () 'common-lisp:string)
(common-lisp:deftype token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (too-many-requests-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null))
   (reason common-lisp:nil :type
    (common-lisp:or throttle-reason common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'make-too-many-requests-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-requests-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "Reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason))))))
(common-lisp:progn
 (common-lisp:defstruct (unprocessed-named-query-id (:copier common-lisp:nil))
   (named-query-id common-lisp:nil :type
    (common-lisp:or named-query-id common-lisp:null))
   (error-code common-lisp:nil :type
    (common-lisp:or error-code common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unprocessed-named-query-id
                    'make-unprocessed-named-query-id))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unprocessed-named-query-id))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NamedQueryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'named-query-id)))
    (aws-sdk/generator/shape::to-query-params "ErrorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code)))
    (aws-sdk/generator/shape::to-query-params "ErrorMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-message))))))
(common-lisp:progn
 (common-lisp:deftype unprocessed-named-query-id-list ()
   '(trivial-types:proper-list unprocessed-named-query-id))
 (common-lisp:defun |make-unprocessed-named-query-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            unprocessed-named-query-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (unprocessed-query-execution-id (:copier common-lisp:nil))
   (query-execution-id common-lisp:nil :type
    (common-lisp:or query-execution-id common-lisp:null))
   (error-code common-lisp:nil :type
    (common-lisp:or error-code common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unprocessed-query-execution-id
                    'make-unprocessed-query-execution-id))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unprocessed-query-execution-id))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QueryExecutionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'query-execution-id)))
    (aws-sdk/generator/shape::to-query-params "ErrorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code)))
    (aws-sdk/generator/shape::to-query-params "ErrorMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-message))))))
(common-lisp:progn
 (common-lisp:deftype unprocessed-query-execution-id-list ()
   '(trivial-types:proper-list unprocessed-query-execution-id))
 (common-lisp:defun |make-unprocessed-query-execution-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            unprocessed-query-execution-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |datumList| () '(trivial-types:proper-list datum))
 (common-lisp:defun |make-datumlist|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list datum))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |datumString| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun batch-get-named-query
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key named-query-ids)
   (common-lisp:declare (common-lisp:ignorable named-query-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-get-named-query-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "athena") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"BatchGetNamedQuery")
                                  ("Version" ,@"2017-05-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BatchGetNamedQueryOutput" common-lisp:nil)))
 (common-lisp:export 'batch-get-named-query))
(common-lisp:progn
 (common-lisp:defun batch-get-query-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key query-execution-ids)
   (common-lisp:declare (common-lisp:ignorable query-execution-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-get-query-execution-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "athena") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"BatchGetQueryExecution")
                                  ("Version" ,@"2017-05-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BatchGetQueryExecutionOutput" common-lisp:nil)))
 (common-lisp:export 'batch-get-query-execution))
(common-lisp:progn
 (common-lisp:defun create-named-query
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description database query-string
                     client-request-token)
   (common-lisp:declare
    (common-lisp:ignorable name description database query-string
     client-request-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-named-query-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "athena") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateNamedQuery")
                                  ("Version" ,@"2017-05-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateNamedQueryOutput" common-lisp:nil)))
 (common-lisp:export 'create-named-query))
(common-lisp:progn
 (common-lisp:defun delete-named-query
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key named-query-id)
   (common-lisp:declare (common-lisp:ignorable named-query-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-named-query-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "athena") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteNamedQuery")
                                  ("Version" ,@"2017-05-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteNamedQueryOutput" common-lisp:nil)))
 (common-lisp:export 'delete-named-query))
(common-lisp:progn
 (common-lisp:defun get-named-query
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key named-query-id)
   (common-lisp:declare (common-lisp:ignorable named-query-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-named-query-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "athena") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetNamedQuery")
                                  ("Version" ,@"2017-05-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetNamedQueryOutput" common-lisp:nil)))
 (common-lisp:export 'get-named-query))
(common-lisp:progn
 (common-lisp:defun get-query-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key query-execution-id)
   (common-lisp:declare (common-lisp:ignorable query-execution-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-query-execution-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "athena") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetQueryExecution")
                                  ("Version" ,@"2017-05-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetQueryExecutionOutput" common-lisp:nil)))
 (common-lisp:export 'get-query-execution))
(common-lisp:progn
 (common-lisp:defun get-query-results
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key query-execution-id next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable query-execution-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-query-results-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "athena") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetQueryResults")
                                  ("Version" ,@"2017-05-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetQueryResultsOutput" common-lisp:nil)))
 (common-lisp:export 'get-query-results))
(common-lisp:progn
 (common-lisp:defun list-named-queries
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-named-queries-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "athena") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListNamedQueries")
                                  ("Version" ,@"2017-05-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListNamedQueriesOutput" common-lisp:nil)))
 (common-lisp:export 'list-named-queries))
(common-lisp:progn
 (common-lisp:defun list-query-executions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-query-executions-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "athena") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListQueryExecutions")
                                  ("Version" ,@"2017-05-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListQueryExecutionsOutput" common-lisp:nil)))
 (common-lisp:export 'list-query-executions))
(common-lisp:progn
 (common-lisp:defun start-query-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key query-string client-request-token
                     query-execution-context result-configuration)
   (common-lisp:declare
    (common-lisp:ignorable query-string client-request-token
     query-execution-context result-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-query-execution-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "athena") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"StartQueryExecution")
                                  ("Version" ,@"2017-05-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StartQueryExecutionOutput" common-lisp:nil)))
 (common-lisp:export 'start-query-execution))
(common-lisp:progn
 (common-lisp:defun stop-query-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key query-execution-id)
   (common-lisp:declare (common-lisp:ignorable query-execution-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-query-execution-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "athena") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"StopQueryExecution")
                                  ("Version" ,@"2017-05-18"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "StopQueryExecutionOutput" common-lisp:nil)))
 (common-lisp:export 'stop-query-execution))