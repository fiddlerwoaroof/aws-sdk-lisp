;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/apigateway
  (:use)
  (:nicknames #:aws/apigateway)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/apigateway)

(common-lisp:progn
 (common-lisp:defstruct (account (:copier common-lisp:nil))
   (cloudwatch-role-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (throttle-settings common-lisp:nil :type
    (common-lisp:or throttle-settings common-lisp:null))
   (features common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (api-key-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'account 'make-account))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape account))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "cloudwatchRoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cloudwatch-role-arn)))
    (aws-sdk/generator/shape::to-query-params "throttleSettings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'throttle-settings)))
    (aws-sdk/generator/shape::to-query-params "features"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'features)))
    (aws-sdk/generator/shape::to-query-params "apiKeyVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'api-key-version))))))
(common-lisp:progn
 (common-lisp:defstruct (api-key (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (customer-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (stage-keys common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'api-key 'make-api-key))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape api-key))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "customerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'customer-id)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "lastUpdatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-date)))
    (aws-sdk/generator/shape::to-query-params "stageKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stage-keys))))))
(common-lisp:progn
 (common-lisp:defstruct (api-key-ids (:copier common-lisp:nil))
   (ids common-lisp:nil :type (common-lisp:or list-of-string common-lisp:null))
   (warnings common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'api-key-ids 'make-api-key-ids))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape api-key-ids))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ids"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ids)))
    (aws-sdk/generator/shape::to-query-params "warnings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'warnings))))))
(common-lisp:progn
 (common-lisp:defstruct (api-keys (:copier common-lisp:nil))
   (warnings common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-api-key common-lisp:null)))
 (common-lisp:export (common-lisp:list 'api-keys 'make-api-keys))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape api-keys))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "warnings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'warnings)))
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:deftype api-keys-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (api-stage (:copier common-lisp:nil))
   (api-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stage common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'api-stage 'make-api-stage))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape api-stage))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "apiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'api-id)))
    (aws-sdk/generator/shape::to-query-params "stage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stage))))))
(common-lisp:progn
 (common-lisp:defstruct (authorizer (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or authorizer-type common-lisp:null))
   (provider-arns common-lisp:nil :type
    (common-lisp:or list-of-arns common-lisp:null))
   (auth-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (authorizer-uri common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (authorizer-credentials common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (identity-source common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (identity-validation-expression common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (authorizer-result-ttl-in-seconds common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'authorizer 'make-authorizer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape authorizer))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "providerARNs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider-arns)))
    (aws-sdk/generator/shape::to-query-params "authType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auth-type)))
    (aws-sdk/generator/shape::to-query-params "authorizerUri"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authorizer-uri)))
    (aws-sdk/generator/shape::to-query-params "authorizerCredentials"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authorizer-credentials)))
    (aws-sdk/generator/shape::to-query-params "identitySource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-source)))
    (aws-sdk/generator/shape::to-query-params "identityValidationExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-validation-expression)))
    (aws-sdk/generator/shape::to-query-params "authorizerResultTtlInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authorizer-result-ttl-in-seconds))))))
(common-lisp:deftype authorizer-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (authorizers (:copier common-lisp:nil))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-authorizer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'authorizers 'make-authorizers))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape authorizers))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (bad-request-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'make-bad-request-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          bad-request-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (base-path-mapping (:copier common-lisp:nil))
   (base-path common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (rest-api-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stage common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'base-path-mapping 'make-base-path-mapping))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape base-path-mapping))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "basePath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'base-path)))
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "stage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stage))))))
(common-lisp:progn
 (common-lisp:defstruct (base-path-mappings (:copier common-lisp:nil))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-base-path-mapping common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'base-path-mappings 'make-base-path-mappings))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape base-path-mappings))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:deftype blob ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype cache-cluster-size () 'common-lisp:string)
(common-lisp:deftype cache-cluster-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (client-certificate (:copier common-lisp:nil))
   (client-certificate-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (pem-encoded-certificate common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (expiration-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'client-certificate 'make-client-certificate))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape client-certificate))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "clientCertificateId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-certificate-id)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "pemEncodedCertificate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'pem-encoded-certificate)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "expirationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expiration-date))))))
(common-lisp:progn
 (common-lisp:defstruct (client-certificates (:copier common-lisp:nil))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-client-certificate common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'client-certificates 'make-client-certificates))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape client-certificates))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (conflict-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'make-conflict-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape conflict-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype content-handling-strategy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (create-api-key-request (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (enabled common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (generate-distinct-id common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stage-keys common-lisp:nil :type
    (common-lisp:or list-of-stage-keys common-lisp:null))
   (customer-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-api-key-request 'make-create-api-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-api-key-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "generateDistinctId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'generate-distinct-id)))
    (aws-sdk/generator/shape::to-query-params "value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "stageKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stage-keys)))
    (aws-sdk/generator/shape::to-query-params "customerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'customer-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-authorizer-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or authorizer-type common-lisp:null))
   (provider-arns common-lisp:nil :type
    (common-lisp:or list-of-arns common-lisp:null))
   (auth-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (authorizer-uri common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (authorizer-credentials common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (identity-source
    (common-lisp:error
     #A((27) common-lisp:base-char . ":identitysource is required"))
    :type (common-lisp:or string common-lisp:null))
   (identity-validation-expression common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (authorizer-result-ttl-in-seconds common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-authorizer-request
                    'make-create-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-authorizer-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "providerARNs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provider-arns)))
    (aws-sdk/generator/shape::to-query-params "authType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auth-type)))
    (aws-sdk/generator/shape::to-query-params "authorizerUri"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authorizer-uri)))
    (aws-sdk/generator/shape::to-query-params "authorizerCredentials"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authorizer-credentials)))
    (aws-sdk/generator/shape::to-query-params "identitySource"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-source)))
    (aws-sdk/generator/shape::to-query-params "identityValidationExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-validation-expression)))
    (aws-sdk/generator/shape::to-query-params "authorizerResultTtlInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authorizer-result-ttl-in-seconds))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-base-path-mapping-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":domainname is required"))
    :type (common-lisp:or string common-lisp:null))
   (base-path common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (stage common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-base-path-mapping-request
                    'make-create-base-path-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-base-path-mapping-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "basePath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'base-path)))
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "stage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stage))))))
(common-lisp:progn
 (common-lisp:defstruct (create-deployment-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (stage-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stage-description common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cache-cluster-enabled common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null))
   (cache-cluster-size common-lisp:nil :type
    (common-lisp:or cache-cluster-size common-lisp:null))
   (variables common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-deployment-request
                    'make-create-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-deployment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "stageName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stage-name)))
    (aws-sdk/generator/shape::to-query-params "stageDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stage-description)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "cacheClusterEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cache-cluster-enabled)))
    (aws-sdk/generator/shape::to-query-params "cacheClusterSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cache-cluster-size)))
    (aws-sdk/generator/shape::to-query-params "variables"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'variables))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-documentation-part-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (location
    (common-lisp:error
     #A((21) common-lisp:base-char . ":location is required"))
    :type (common-lisp:or documentation-part-location common-lisp:null))
   (properties
    (common-lisp:error
     #A((23) common-lisp:base-char . ":properties is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-documentation-part-request
                    'make-create-documentation-part-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-documentation-part-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "properties"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'properties))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-documentation-version-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (documentation-version
    (common-lisp:error
     #A((33) common-lisp:base-char . ":documentationversion is required"))
    :type (common-lisp:or string common-lisp:null))
   (stage-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-documentation-version-request
                    'make-create-documentation-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-documentation-version-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "documentationVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'documentation-version)))
    (aws-sdk/generator/shape::to-query-params "stageName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stage-name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:defstruct (create-domain-name-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":domainname is required"))
    :type (common-lisp:or string common-lisp:null))
   (certificate-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (certificate-body common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (certificate-private-key common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (certificate-chain common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (certificate-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-domain-name-request
                    'make-create-domain-name-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-domain-name-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "certificateName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'certificate-name)))
    (aws-sdk/generator/shape::to-query-params "certificateBody"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'certificate-body)))
    (aws-sdk/generator/shape::to-query-params "certificatePrivateKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'certificate-private-key)))
    (aws-sdk/generator/shape::to-query-params "certificateChain"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'certificate-chain)))
    (aws-sdk/generator/shape::to-query-params "certificateArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'certificate-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (create-model-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (schema common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (content-type
    (common-lisp:error
     #A((24) common-lisp:base-char . ":contenttype is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-model-request 'make-create-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-model-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "schema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema)))
    (aws-sdk/generator/shape::to-query-params "contentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-type))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-request-validator-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (validate-request-body common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (validate-request-parameters common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-request-validator-request
                    'make-create-request-validator-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-request-validator-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "validateRequestBody"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'validate-request-body)))
    (aws-sdk/generator/shape::to-query-params "validateRequestParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'validate-request-parameters))))))
(common-lisp:progn
 (common-lisp:defstruct (create-resource-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (parent-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":parentid is required"))
    :type (common-lisp:or string common-lisp:null))
   (path-part
    (common-lisp:error
     #A((21) common-lisp:base-char . ":pathpart is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-resource-request 'make-create-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "parentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-id)))
    (aws-sdk/generator/shape::to-query-params "pathPart"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path-part))))))
(common-lisp:progn
 (common-lisp:defstruct (create-rest-api-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (clone-from common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (binary-media-types common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-rest-api-request 'make-create-rest-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-rest-api-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "cloneFrom"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'clone-from)))
    (aws-sdk/generator/shape::to-query-params "binaryMediaTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'binary-media-types))))))
(common-lisp:progn
 (common-lisp:defstruct (create-stage-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (stage-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":stagename is required"))
    :type (common-lisp:or string common-lisp:null))
   (deployment-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":deploymentid is required"))
    :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cache-cluster-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (cache-cluster-size common-lisp:nil :type
    (common-lisp:or cache-cluster-size common-lisp:null))
   (variables common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (documentation-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-stage-request 'make-create-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-stage-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "stageName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stage-name)))
    (aws-sdk/generator/shape::to-query-params "deploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-id)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "cacheClusterEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cache-cluster-enabled)))
    (aws-sdk/generator/shape::to-query-params "cacheClusterSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cache-cluster-size)))
    (aws-sdk/generator/shape::to-query-params "variables"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'variables)))
    (aws-sdk/generator/shape::to-query-params "documentationVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'documentation-version))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-usage-plan-key-request (:copier common-lisp:nil))
   (usage-plan-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":usageplanid is required"))
    :type (common-lisp:or string common-lisp:null))
   (key-id
    (common-lisp:error #A((18) common-lisp:base-char . ":keyid is required"))
    :type (common-lisp:or string common-lisp:null))
   (key-type
    (common-lisp:error #A((20) common-lisp:base-char . ":keytype is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-usage-plan-key-request
                    'make-create-usage-plan-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-usage-plan-key-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "usagePlanId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'usage-plan-id)))
    (aws-sdk/generator/shape::to-query-params "keyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "keyType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-type))))))
(common-lisp:progn
 (common-lisp:defstruct (create-usage-plan-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (api-stages common-lisp:nil :type
    (common-lisp:or list-of-api-stage common-lisp:null))
   (throttle common-lisp:nil :type
    (common-lisp:or throttle-settings common-lisp:null))
   (quota common-lisp:nil :type
    (common-lisp:or quota-settings common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-usage-plan-request
                    'make-create-usage-plan-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-usage-plan-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "apiStages"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'api-stages)))
    (aws-sdk/generator/shape::to-query-params "throttle"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'throttle)))
    (aws-sdk/generator/shape::to-query-params "quota"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quota))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-api-key-request (:copier common-lisp:nil))
   (api-key
    (common-lisp:error #A((19) common-lisp:base-char . ":apikey is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-api-key-request 'make-delete-api-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-api-key-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "apiKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'api-key))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-authorizer-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (authorizer-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":authorizerid is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-authorizer-request
                    'make-delete-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-authorizer-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "authorizerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authorizer-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-base-path-mapping-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":domainname is required"))
    :type (common-lisp:or string common-lisp:null))
   (base-path
    (common-lisp:error
     #A((21) common-lisp:base-char . ":basepath is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-base-path-mapping-request
                    'make-delete-base-path-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-base-path-mapping-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "basePath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'base-path))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-client-certificate-request (:copier common-lisp:nil))
   (client-certificate-id
    (common-lisp:error
     #A((32) common-lisp:base-char . ":clientcertificateid is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-client-certificate-request
                    'make-delete-client-certificate-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-client-certificate-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "clientCertificateId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-certificate-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-deployment-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (deployment-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":deploymentid is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-deployment-request
                    'make-delete-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-deployment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "deploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-documentation-part-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (documentation-part-id
    (common-lisp:error
     #A((32) common-lisp:base-char . ":documentationpartid is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-documentation-part-request
                    'make-delete-documentation-part-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-documentation-part-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "documentationPartId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'documentation-part-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-documentation-version-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (documentation-version
    (common-lisp:error
     #A((33) common-lisp:base-char . ":documentationversion is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-documentation-version-request
                    'make-delete-documentation-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-documentation-version-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "documentationVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'documentation-version))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-domain-name-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":domainname is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-domain-name-request
                    'make-delete-domain-name-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-domain-name-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-gateway-response-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (response-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":responsetype is required"))
    :type (common-lisp:or gateway-response-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-gateway-response-request
                    'make-delete-gateway-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-gateway-response-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "responseType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-type))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-integration-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":resourceid is required"))
    :type (common-lisp:or string common-lisp:null))
   (http-method
    (common-lisp:error
     #A((23) common-lisp:base-char . ":httpmethod is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-integration-request
                    'make-delete-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-integration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "resourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "httpMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-method))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-integration-response-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":resourceid is required"))
    :type (common-lisp:or string common-lisp:null))
   (http-method
    (common-lisp:error
     #A((23) common-lisp:base-char . ":httpmethod is required"))
    :type (common-lisp:or string common-lisp:null))
   (status-code
    (common-lisp:error
     #A((23) common-lisp:base-char . ":statuscode is required"))
    :type (common-lisp:or status-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-integration-response-request
                    'make-delete-integration-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-integration-response-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "resourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "httpMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-method)))
    (aws-sdk/generator/shape::to-query-params "statusCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-code))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-method-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":resourceid is required"))
    :type (common-lisp:or string common-lisp:null))
   (http-method
    (common-lisp:error
     #A((23) common-lisp:base-char . ":httpmethod is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-method-request 'make-delete-method-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-method-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "resourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "httpMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-method))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-method-response-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":resourceid is required"))
    :type (common-lisp:or string common-lisp:null))
   (http-method
    (common-lisp:error
     #A((23) common-lisp:base-char . ":httpmethod is required"))
    :type (common-lisp:or string common-lisp:null))
   (status-code
    (common-lisp:error
     #A((23) common-lisp:base-char . ":statuscode is required"))
    :type (common-lisp:or status-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-method-response-request
                    'make-delete-method-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-method-response-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "resourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "httpMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-method)))
    (aws-sdk/generator/shape::to-query-params "statusCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-code))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-model-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (model-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":modelname is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-model-request 'make-delete-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-model-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "modelName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'model-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-request-validator-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (request-validator-id
    (common-lisp:error
     #A((31) common-lisp:base-char . ":requestvalidatorid is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-request-validator-request
                    'make-delete-request-validator-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-request-validator-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "requestValidatorId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-validator-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-resource-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":resourceid is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-resource-request 'make-delete-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "resourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-rest-api-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-rest-api-request 'make-delete-rest-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-rest-api-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-stage-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (stage-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":stagename is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-stage-request 'make-delete-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-stage-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "stageName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stage-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-usage-plan-key-request (:copier common-lisp:nil))
   (usage-plan-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":usageplanid is required"))
    :type (common-lisp:or string common-lisp:null))
   (key-id
    (common-lisp:error #A((18) common-lisp:base-char . ":keyid is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-usage-plan-key-request
                    'make-delete-usage-plan-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-usage-plan-key-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "usagePlanId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'usage-plan-id)))
    (aws-sdk/generator/shape::to-query-params "keyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-usage-plan-request (:copier common-lisp:nil))
   (usage-plan-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":usageplanid is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-usage-plan-request
                    'make-delete-usage-plan-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-usage-plan-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "usagePlanId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'usage-plan-id))))))
(common-lisp:progn
 (common-lisp:defstruct (deployment (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (api-summary common-lisp:nil :type
    (common-lisp:or path-to-map-of-method-snapshot common-lisp:null)))
 (common-lisp:export (common-lisp:list 'deployment 'make-deployment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape deployment))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "apiSummary"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'api-summary))))))
(common-lisp:progn
 (common-lisp:defstruct (deployments (:copier common-lisp:nil))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-deployment common-lisp:null)))
 (common-lisp:export (common-lisp:list 'deployments 'make-deployments))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape deployments))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (documentation-part (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (location common-lisp:nil :type
    (common-lisp:or documentation-part-location common-lisp:null))
   (properties common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'documentation-part 'make-documentation-part))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape documentation-part))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "properties"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'properties))))))
(common-lisp:progn
 (common-lisp:defstruct (documentation-part-ids (:copier common-lisp:nil))
   (ids common-lisp:nil :type (common-lisp:or list-of-string common-lisp:null))
   (warnings common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'documentation-part-ids 'make-documentation-part-ids))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          documentation-part-ids))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ids"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ids)))
    (aws-sdk/generator/shape::to-query-params "warnings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'warnings))))))
(common-lisp:progn
 (common-lisp:defstruct (documentation-part-location (:copier common-lisp:nil))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or documentation-part-type common-lisp:null))
   (path common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (method common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status-code common-lisp:nil :type
    (common-lisp:or documentation-part-location-status-code common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'documentation-part-location
                    'make-documentation-part-location))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          documentation-part-location))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "path"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path)))
    (aws-sdk/generator/shape::to-query-params "method"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'method)))
    (aws-sdk/generator/shape::to-query-params "statusCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-code)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:deftype documentation-part-location-status-code ()
  'common-lisp:string)
(common-lisp:deftype documentation-part-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (documentation-parts (:copier common-lisp:nil))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-documentation-part common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'documentation-parts 'make-documentation-parts))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape documentation-parts))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (documentation-version (:copier common-lisp:nil))
   (version common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'documentation-version 'make-documentation-version))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          documentation-version))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:defstruct (documentation-versions (:copier common-lisp:nil))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-documentation-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'documentation-versions 'make-documentation-versions))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          documentation-versions))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (domain-name (:copier common-lisp:nil))
   (domain-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (certificate-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (certificate-arn common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (certificate-upload-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (distribution-domain-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'domain-name 'make-domain-name))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape domain-name))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "certificateName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'certificate-name)))
    (aws-sdk/generator/shape::to-query-params "certificateArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'certificate-arn)))
    (aws-sdk/generator/shape::to-query-params "certificateUploadDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'certificate-upload-date)))
    (aws-sdk/generator/shape::to-query-params "distributionDomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'distribution-domain-name))))))
(common-lisp:progn
 (common-lisp:defstruct (domain-names (:copier common-lisp:nil))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-domain-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'domain-names 'make-domain-names))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape domain-names))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defstruct (export-response (:copier common-lisp:nil))
   (content-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (content-disposition common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or blob common-lisp:null)))
 (common-lisp:export (common-lisp:list 'export-response 'make-export-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape export-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "contentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-type)))
    (aws-sdk/generator/shape::to-query-params "contentDisposition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-disposition)))
    (aws-sdk/generator/shape::to-query-params "body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body))))))
(common-lisp:progn
 (common-lisp:defstruct
     (flush-stage-authorizers-cache-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (stage-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":stagename is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'flush-stage-authorizers-cache-request
                    'make-flush-stage-authorizers-cache-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          flush-stage-authorizers-cache-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "stageName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stage-name))))))
(common-lisp:progn
 (common-lisp:defstruct (flush-stage-cache-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (stage-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":stagename is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'flush-stage-cache-request
                    'make-flush-stage-cache-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          flush-stage-cache-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "stageName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stage-name))))))
(common-lisp:progn
 (common-lisp:defstruct (gateway-response (:copier common-lisp:nil))
   (response-type common-lisp:nil :type
    (common-lisp:or gateway-response-type common-lisp:null))
   (status-code common-lisp:nil :type
    (common-lisp:or status-code common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (response-templates common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (default-response common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'gateway-response 'make-gateway-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape gateway-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "responseType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-type)))
    (aws-sdk/generator/shape::to-query-params "statusCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-code)))
    (aws-sdk/generator/shape::to-query-params "responseParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-parameters)))
    (aws-sdk/generator/shape::to-query-params "responseTemplates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-templates)))
    (aws-sdk/generator/shape::to-query-params "defaultResponse"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-response))))))
(common-lisp:deftype gateway-response-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (gateway-responses (:copier common-lisp:nil))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-gateway-response common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'gateway-responses 'make-gateway-responses))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape gateway-responses))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct
     (generate-client-certificate-request (:copier common-lisp:nil))
   (description common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'generate-client-certificate-request
                    'make-generate-client-certificate-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          generate-client-certificate-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:defstruct (get-account-request (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-account-request 'make-get-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-account-request))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (get-api-key-request (:copier common-lisp:nil))
   (api-key
    (common-lisp:error #A((19) common-lisp:base-char . ":apikey is required"))
    :type (common-lisp:or string common-lisp:null))
   (include-value common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-api-key-request 'make-get-api-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-api-key-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "apiKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'api-key)))
    (aws-sdk/generator/shape::to-query-params "includeValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'include-value))))))
(common-lisp:progn
 (common-lisp:defstruct (get-api-keys-request (:copier common-lisp:nil))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (name-query common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (customer-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (include-values common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-api-keys-request 'make-get-api-keys-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-api-keys-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "nameQuery"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name-query)))
    (aws-sdk/generator/shape::to-query-params "customerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'customer-id)))
    (aws-sdk/generator/shape::to-query-params "includeValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'include-values))))))
(common-lisp:progn
 (common-lisp:defstruct (get-authorizer-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (authorizer-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":authorizerid is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-authorizer-request 'make-get-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-authorizer-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "authorizerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authorizer-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-authorizers-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-authorizers-request 'make-get-authorizers-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-authorizers-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-base-path-mapping-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":domainname is required"))
    :type (common-lisp:or string common-lisp:null))
   (base-path
    (common-lisp:error
     #A((21) common-lisp:base-char . ":basepath is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-base-path-mapping-request
                    'make-get-base-path-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-base-path-mapping-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "basePath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'base-path))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-base-path-mappings-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":domainname is required"))
    :type (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-base-path-mappings-request
                    'make-get-base-path-mappings-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-base-path-mappings-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-client-certificate-request (:copier common-lisp:nil))
   (client-certificate-id
    (common-lisp:error
     #A((32) common-lisp:base-char . ":clientcertificateid is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-client-certificate-request
                    'make-get-client-certificate-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-client-certificate-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "clientCertificateId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-certificate-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-client-certificates-request (:copier common-lisp:nil))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-client-certificates-request
                    'make-get-client-certificates-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-client-certificates-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct (get-deployment-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (deployment-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":deploymentid is required"))
    :type (common-lisp:or string common-lisp:null))
   (embed common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deployment-request 'make-get-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-deployment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "deploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-id)))
    (aws-sdk/generator/shape::to-query-params "embed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'embed))))))
(common-lisp:progn
 (common-lisp:defstruct (get-deployments-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-deployments-request 'make-get-deployments-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-deployments-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-documentation-part-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (documentation-part-id
    (common-lisp:error
     #A((32) common-lisp:base-char . ":documentationpartid is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-documentation-part-request
                    'make-get-documentation-part-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-documentation-part-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "documentationPartId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'documentation-part-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-documentation-parts-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or documentation-part-type common-lisp:null))
   (name-query common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (path common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-documentation-parts-request
                    'make-get-documentation-parts-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-documentation-parts-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "nameQuery"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name-query)))
    (aws-sdk/generator/shape::to-query-params "path"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path)))
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-documentation-version-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (documentation-version
    (common-lisp:error
     #A((33) common-lisp:base-char . ":documentationversion is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-documentation-version-request
                    'make-get-documentation-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-documentation-version-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "documentationVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'documentation-version))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-documentation-versions-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-documentation-versions-request
                    'make-get-documentation-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-documentation-versions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct (get-domain-name-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":domainname is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-name-request 'make-get-domain-name-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-domain-name-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name))))))
(common-lisp:progn
 (common-lisp:defstruct (get-domain-names-request (:copier common-lisp:nil))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-domain-names-request 'make-get-domain-names-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-domain-names-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct (get-export-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (stage-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":stagename is required"))
    :type (common-lisp:or string common-lisp:null))
   (export-type
    (common-lisp:error
     #A((23) common-lisp:base-char . ":exporttype is required"))
    :type (common-lisp:or string common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (accepts common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-export-request 'make-get-export-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-export-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "stageName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stage-name)))
    (aws-sdk/generator/shape::to-query-params "exportType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'export-type)))
    (aws-sdk/generator/shape::to-query-params "parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "accepts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accepts))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-gateway-response-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (response-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":responsetype is required"))
    :type (common-lisp:or gateway-response-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-gateway-response-request
                    'make-get-gateway-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-gateway-response-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "responseType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-type))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-gateway-responses-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-gateway-responses-request
                    'make-get-gateway-responses-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-gateway-responses-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct (get-integration-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":resourceid is required"))
    :type (common-lisp:or string common-lisp:null))
   (http-method
    (common-lisp:error
     #A((23) common-lisp:base-char . ":httpmethod is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-integration-request 'make-get-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-integration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "resourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "httpMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-method))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-integration-response-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":resourceid is required"))
    :type (common-lisp:or string common-lisp:null))
   (http-method
    (common-lisp:error
     #A((23) common-lisp:base-char . ":httpmethod is required"))
    :type (common-lisp:or string common-lisp:null))
   (status-code
    (common-lisp:error
     #A((23) common-lisp:base-char . ":statuscode is required"))
    :type (common-lisp:or status-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-integration-response-request
                    'make-get-integration-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-integration-response-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "resourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "httpMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-method)))
    (aws-sdk/generator/shape::to-query-params "statusCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-code))))))
(common-lisp:progn
 (common-lisp:defstruct (get-method-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":resourceid is required"))
    :type (common-lisp:or string common-lisp:null))
   (http-method
    (common-lisp:error
     #A((23) common-lisp:base-char . ":httpmethod is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-method-request 'make-get-method-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-method-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "resourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "httpMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-method))))))
(common-lisp:progn
 (common-lisp:defstruct (get-method-response-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":resourceid is required"))
    :type (common-lisp:or string common-lisp:null))
   (http-method
    (common-lisp:error
     #A((23) common-lisp:base-char . ":httpmethod is required"))
    :type (common-lisp:or string common-lisp:null))
   (status-code
    (common-lisp:error
     #A((23) common-lisp:base-char . ":statuscode is required"))
    :type (common-lisp:or status-code common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-method-response-request
                    'make-get-method-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-method-response-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "resourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "httpMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-method)))
    (aws-sdk/generator/shape::to-query-params "statusCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-code))))))
(common-lisp:progn
 (common-lisp:defstruct (get-model-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (model-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":modelname is required"))
    :type (common-lisp:or string common-lisp:null))
   (flatten common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-model-request 'make-get-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-model-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "modelName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'model-name)))
    (aws-sdk/generator/shape::to-query-params "flatten"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'flatten))))))
(common-lisp:progn
 (common-lisp:defstruct (get-model-template-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (model-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":modelname is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-model-template-request
                    'make-get-model-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-model-template-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "modelName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'model-name))))))
(common-lisp:progn
 (common-lisp:defstruct (get-models-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-models-request 'make-get-models-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-models-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-request-validator-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (request-validator-id
    (common-lisp:error
     #A((31) common-lisp:base-char . ":requestvalidatorid is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-request-validator-request
                    'make-get-request-validator-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-request-validator-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "requestValidatorId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-validator-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-request-validators-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-request-validators-request
                    'make-get-request-validators-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-request-validators-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct (get-resource-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":resourceid is required"))
    :type (common-lisp:or string common-lisp:null))
   (embed common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-resource-request 'make-get-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "resourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "embed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'embed))))))
(common-lisp:progn
 (common-lisp:defstruct (get-resources-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (embed common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-resources-request 'make-get-resources-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-resources-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "embed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'embed))))))
(common-lisp:progn
 (common-lisp:defstruct (get-rest-api-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-rest-api-request 'make-get-rest-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-rest-api-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-rest-apis-request (:copier common-lisp:nil))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-rest-apis-request 'make-get-rest-apis-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-rest-apis-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct (get-sdk-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (stage-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":stagename is required"))
    :type (common-lisp:or string common-lisp:null))
   (sdk-type
    (common-lisp:error #A((20) common-lisp:base-char . ":sdktype is required"))
    :type (common-lisp:or string common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-sdk-request 'make-get-sdk-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-sdk-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "stageName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stage-name)))
    (aws-sdk/generator/shape::to-query-params "sdkType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sdk-type)))
    (aws-sdk/generator/shape::to-query-params "parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters))))))
(common-lisp:progn
 (common-lisp:defstruct (get-sdk-type-request (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-sdk-type-request 'make-get-sdk-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-sdk-type-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-sdk-types-request (:copier common-lisp:nil))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-sdk-types-request 'make-get-sdk-types-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-sdk-types-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct (get-stage-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (stage-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":stagename is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-stage-request 'make-get-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-stage-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "stageName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stage-name))))))
(common-lisp:progn
 (common-lisp:defstruct (get-stages-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (deployment-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-stages-request 'make-get-stages-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-stages-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "deploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-usage-plan-key-request (:copier common-lisp:nil))
   (usage-plan-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":usageplanid is required"))
    :type (common-lisp:or string common-lisp:null))
   (key-id
    (common-lisp:error #A((18) common-lisp:base-char . ":keyid is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-usage-plan-key-request
                    'make-get-usage-plan-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-usage-plan-key-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "usagePlanId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'usage-plan-id)))
    (aws-sdk/generator/shape::to-query-params "keyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-usage-plan-keys-request (:copier common-lisp:nil))
   (usage-plan-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":usageplanid is required"))
    :type (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null))
   (name-query common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-usage-plan-keys-request
                    'make-get-usage-plan-keys-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-usage-plan-keys-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "usagePlanId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'usage-plan-id)))
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "nameQuery"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name-query))))))
(common-lisp:progn
 (common-lisp:defstruct (get-usage-plan-request (:copier common-lisp:nil))
   (usage-plan-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":usageplanid is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-usage-plan-request 'make-get-usage-plan-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-usage-plan-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "usagePlanId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'usage-plan-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-usage-plans-request (:copier common-lisp:nil))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (key-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-usage-plans-request 'make-get-usage-plans-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-usage-plans-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "keyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct (get-usage-request (:copier common-lisp:nil))
   (usage-plan-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":usageplanid is required"))
    :type (common-lisp:or string common-lisp:null))
   (key-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (start-date
    (common-lisp:error
     #A((22) common-lisp:base-char . ":startdate is required"))
    :type (common-lisp:or string common-lisp:null))
   (end-date
    (common-lisp:error #A((20) common-lisp:base-char . ":enddate is required"))
    :type (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or nullable-integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-usage-request 'make-get-usage-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-usage-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "usagePlanId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'usage-plan-id)))
    (aws-sdk/generator/shape::to-query-params "keyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "startDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-date)))
    (aws-sdk/generator/shape::to-query-params "endDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-date)))
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct (import-api-keys-request (:copier common-lisp:nil))
   (body
    (common-lisp:error #A((17) common-lisp:base-char . ":body is required"))
    :type (common-lisp:or blob common-lisp:null))
   (format
    (common-lisp:error #A((19) common-lisp:base-char . ":format is required"))
    :type (common-lisp:or api-keys-format common-lisp:null))
   (fail-on-warnings common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-api-keys-request 'make-import-api-keys-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          import-api-keys-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body)))
    (aws-sdk/generator/shape::to-query-params "format"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'format)))
    (aws-sdk/generator/shape::to-query-params "failOnWarnings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fail-on-warnings))))))
(common-lisp:progn
 (common-lisp:defstruct
     (import-documentation-parts-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (mode common-lisp:nil :type (common-lisp:or put-mode common-lisp:null))
   (fail-on-warnings common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (body
    (common-lisp:error #A((17) common-lisp:base-char . ":body is required"))
    :type (common-lisp:or blob common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-documentation-parts-request
                    'make-import-documentation-parts-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          import-documentation-parts-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "mode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mode)))
    (aws-sdk/generator/shape::to-query-params "failOnWarnings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fail-on-warnings)))
    (aws-sdk/generator/shape::to-query-params "body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body))))))
(common-lisp:progn
 (common-lisp:defstruct (import-rest-api-request (:copier common-lisp:nil))
   (fail-on-warnings common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (body
    (common-lisp:error #A((17) common-lisp:base-char . ":body is required"))
    :type (common-lisp:or blob common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'import-rest-api-request 'make-import-rest-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          import-rest-api-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "failOnWarnings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fail-on-warnings)))
    (aws-sdk/generator/shape::to-query-params "parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body))))))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (integration (:copier common-lisp:nil))
   (type common-lisp:nil :type
    (common-lisp:or integration-type common-lisp:null))
   (http-method common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (uri common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (credentials common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (request-templates common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (passthrough-behavior common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (content-handling common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null))
   (cache-namespace common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-key-parameters common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (integration-responses common-lisp:nil :type
    (common-lisp:or map-of-integration-response common-lisp:null)))
 (common-lisp:export (common-lisp:list 'integration 'make-integration))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape integration))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "httpMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-method)))
    (aws-sdk/generator/shape::to-query-params "uri"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uri)))
    (aws-sdk/generator/shape::to-query-params "credentials"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'credentials)))
    (aws-sdk/generator/shape::to-query-params "requestParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-parameters)))
    (aws-sdk/generator/shape::to-query-params "requestTemplates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-templates)))
    (aws-sdk/generator/shape::to-query-params "passthroughBehavior"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'passthrough-behavior)))
    (aws-sdk/generator/shape::to-query-params "contentHandling"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-handling)))
    (aws-sdk/generator/shape::to-query-params "cacheNamespace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cache-namespace)))
    (aws-sdk/generator/shape::to-query-params "cacheKeyParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cache-key-parameters)))
    (aws-sdk/generator/shape::to-query-params "integrationResponses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'integration-responses))))))
(common-lisp:progn
 (common-lisp:defstruct (integration-response (:copier common-lisp:nil))
   (status-code common-lisp:nil :type
    (common-lisp:or status-code common-lisp:null))
   (selection-pattern common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (response-templates common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (content-handling common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'integration-response 'make-integration-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape integration-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "statusCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-code)))
    (aws-sdk/generator/shape::to-query-params "selectionPattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'selection-pattern)))
    (aws-sdk/generator/shape::to-query-params "responseParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-parameters)))
    (aws-sdk/generator/shape::to-query-params "responseTemplates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-templates)))
    (aws-sdk/generator/shape::to-query-params "contentHandling"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-handling))))))
(common-lisp:deftype integration-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil))
   (retry-after-seconds common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "retryAfterSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'retry-after-seconds)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype list-of-arns ()
   '(trivial-types:proper-list provider-arn))
 (common-lisp:defun |make-list-of-arns|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list provider-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-api-key () '(trivial-types:proper-list api-key))
 (common-lisp:defun |make-list-of-api-key|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list api-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-api-stage ()
   '(trivial-types:proper-list api-stage))
 (common-lisp:defun |make-list-of-api-stage|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list api-stage))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-authorizer ()
   '(trivial-types:proper-list authorizer))
 (common-lisp:defun |make-list-of-authorizer|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list authorizer))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-base-path-mapping ()
   '(trivial-types:proper-list base-path-mapping))
 (common-lisp:defun |make-list-of-base-path-mapping|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list base-path-mapping))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-client-certificate ()
   '(trivial-types:proper-list client-certificate))
 (common-lisp:defun |make-list-of-client-certificate|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list client-certificate))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-deployment ()
   '(trivial-types:proper-list deployment))
 (common-lisp:defun |make-list-of-deployment|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deployment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-documentation-part ()
   '(trivial-types:proper-list documentation-part))
 (common-lisp:defun |make-list-of-documentation-part|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list documentation-part))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-documentation-version ()
   '(trivial-types:proper-list documentation-version))
 (common-lisp:defun |make-list-of-documentation-version|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list documentation-version))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-domain-name ()
   '(trivial-types:proper-list domain-name))
 (common-lisp:defun |make-list-of-domain-name|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list domain-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-gateway-response ()
   '(trivial-types:proper-list gateway-response))
 (common-lisp:defun |make-list-of-gateway-response|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list gateway-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-long () '(trivial-types:proper-list long))
 (common-lisp:defun |make-list-of-long|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list long))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-model () '(trivial-types:proper-list model))
 (common-lisp:defun |make-list-of-model|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list model))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-patch-operation ()
   '(trivial-types:proper-list patch-operation))
 (common-lisp:defun |make-list-of-patch-operation|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list patch-operation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-request-validator ()
   '(trivial-types:proper-list request-validator))
 (common-lisp:defun |make-list-of-request-validator|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list request-validator))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-resource ()
   '(trivial-types:proper-list resource))
 (common-lisp:defun |make-list-of-resource|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-rest-api ()
   '(trivial-types:proper-list rest-api))
 (common-lisp:defun |make-list-of-rest-api|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rest-api))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-sdk-configuration-property ()
   '(trivial-types:proper-list sdk-configuration-property))
 (common-lisp:defun |make-list-of-sdk-configuration-property|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            sdk-configuration-property))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-sdk-type ()
   '(trivial-types:proper-list sdk-type))
 (common-lisp:defun |make-list-of-sdk-type|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sdk-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-stage () '(trivial-types:proper-list stage))
 (common-lisp:defun |make-list-of-stage|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stage))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-stage-keys ()
   '(trivial-types:proper-list stage-key))
 (common-lisp:defun |make-list-of-stage-keys|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stage-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-string () '(trivial-types:proper-list string))
 (common-lisp:defun |make-list-of-string|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-usage ()
   '(trivial-types:proper-list list-of-long))
 (common-lisp:defun |make-list-of-usage|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list list-of-long))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-usage-plan ()
   '(trivial-types:proper-list usage-plan))
 (common-lisp:defun |make-list-of-usage-plan|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list usage-plan))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-usage-plan-key ()
   '(trivial-types:proper-list usage-plan-key))
 (common-lisp:defun |make-list-of-usage-plan-key|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list usage-plan-key))
   aws-sdk/generator/shape::members))
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:defstruct
    (map-of-header-values
     (:constructor |make-map-of-header-values|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:defstruct
    (map-of-integration-response
     (:constructor |make-map-of-integration-response|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:defstruct
    (map-of-key-usages
     (:constructor |make-map-of-key-usages|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:defstruct
    (map-of-method
     (:constructor |make-map-of-method|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:defstruct
    (map-of-method-response
     (:constructor |make-map-of-method-response|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:defstruct
    (map-of-method-settings
     (:constructor |make-map-of-method-settings|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:defstruct
    (map-of-method-snapshot
     (:constructor |make-map-of-method-snapshot|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:defstruct
    (map-of-string-to-boolean
     (:constructor |make-map-of-string-to-boolean|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:defstruct
    (map-of-string-to-list
     (:constructor |make-map-of-string-to-list|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:defstruct
    (map-of-string-to-string
     (:constructor |make-map-of-string-to-string|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defstruct (method (:copier common-lisp:nil))
   (http-method common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (authorization-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (authorizer-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (api-key-required common-lisp:nil :type
    (common-lisp:or nullable-boolean common-lisp:null))
   (request-validator-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (operation-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-boolean common-lisp:null))
   (request-models common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (method-responses common-lisp:nil :type
    (common-lisp:or map-of-method-response common-lisp:null))
   (method-integration common-lisp:nil :type
    (common-lisp:or integration common-lisp:null)))
 (common-lisp:export (common-lisp:list 'method 'make-method))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape method))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "httpMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-method)))
    (aws-sdk/generator/shape::to-query-params "authorizationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authorization-type)))
    (aws-sdk/generator/shape::to-query-params "authorizerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authorizer-id)))
    (aws-sdk/generator/shape::to-query-params "apiKeyRequired"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'api-key-required)))
    (aws-sdk/generator/shape::to-query-params "requestValidatorId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-validator-id)))
    (aws-sdk/generator/shape::to-query-params "operationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operation-name)))
    (aws-sdk/generator/shape::to-query-params "requestParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-parameters)))
    (aws-sdk/generator/shape::to-query-params "requestModels"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-models)))
    (aws-sdk/generator/shape::to-query-params "methodResponses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'method-responses)))
    (aws-sdk/generator/shape::to-query-params "methodIntegration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'method-integration))))))
(common-lisp:progn
 (common-lisp:defstruct (method-response (:copier common-lisp:nil))
   (status-code common-lisp:nil :type
    (common-lisp:or status-code common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-boolean common-lisp:null))
   (response-models common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'method-response 'make-method-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape method-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "statusCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-code)))
    (aws-sdk/generator/shape::to-query-params "responseParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-parameters)))
    (aws-sdk/generator/shape::to-query-params "responseModels"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-models))))))
(common-lisp:progn
 (common-lisp:defstruct (method-setting (:copier common-lisp:nil))
   (metrics-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (logging-level common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (data-trace-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (throttling-burst-limit common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (throttling-rate-limit common-lisp:nil :type
    (common-lisp:or double common-lisp:null))
   (caching-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (cache-ttl-in-seconds common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (cache-data-encrypted common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (require-authorization-for-cache-control common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (unauthorized-cache-control-header-strategy common-lisp:nil :type
    (common-lisp:or unauthorized-cache-control-header-strategy
                    common-lisp:null)))
 (common-lisp:export (common-lisp:list 'method-setting 'make-method-setting))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape method-setting))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "metricsEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metrics-enabled)))
    (aws-sdk/generator/shape::to-query-params "loggingLevel"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'logging-level)))
    (aws-sdk/generator/shape::to-query-params "dataTraceEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-trace-enabled)))
    (aws-sdk/generator/shape::to-query-params "throttlingBurstLimit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'throttling-burst-limit)))
    (aws-sdk/generator/shape::to-query-params "throttlingRateLimit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'throttling-rate-limit)))
    (aws-sdk/generator/shape::to-query-params "cachingEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'caching-enabled)))
    (aws-sdk/generator/shape::to-query-params "cacheTtlInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cache-ttl-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "cacheDataEncrypted"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cache-data-encrypted)))
    (aws-sdk/generator/shape::to-query-params
     "requireAuthorizationForCacheControl"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'require-authorization-for-cache-control)))
    (aws-sdk/generator/shape::to-query-params
     "unauthorizedCacheControlHeaderStrategy"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'unauthorized-cache-control-header-strategy))))))
(common-lisp:progn
 (common-lisp:defstruct (method-snapshot (:copier common-lisp:nil))
   (authorization-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (api-key-required common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'method-snapshot 'make-method-snapshot))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape method-snapshot))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "authorizationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authorization-type)))
    (aws-sdk/generator/shape::to-query-params "apiKeyRequired"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'api-key-required))))))
(common-lisp:progn
 (common-lisp:defstruct (model (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (schema common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (content-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'model 'make-model))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape model))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "schema"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schema)))
    (aws-sdk/generator/shape::to-query-params "contentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-type))))))
(common-lisp:progn
 (common-lisp:defstruct (models (:copier common-lisp:nil))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-model common-lisp:null)))
 (common-lisp:export (common-lisp:list 'models 'make-models))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape models))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'make-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype nullable-boolean () 'common-lisp:boolean)
(common-lisp:deftype nullable-integer () 'common-lisp:integer)
(common-lisp:deftype op () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (patch-operation (:copier common-lisp:nil))
   (op common-lisp:nil :type (common-lisp:or op common-lisp:null))
   (path common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (from common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'patch-operation 'make-patch-operation))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape patch-operation))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "op"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'op)))
    (aws-sdk/generator/shape::to-query-params "path"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path)))
    (aws-sdk/generator/shape::to-query-params "value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "from"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'from))))))
(common-lisp:defstruct
    (path-to-map-of-method-snapshot
     (:constructor |make-path-to-map-of-method-snapshot|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype provider-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (put-gateway-response-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (response-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":responsetype is required"))
    :type (common-lisp:or gateway-response-type common-lisp:null))
   (status-code common-lisp:nil :type
    (common-lisp:or status-code common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (response-templates common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-gateway-response-request
                    'make-put-gateway-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-gateway-response-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "responseType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-type)))
    (aws-sdk/generator/shape::to-query-params "statusCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-code)))
    (aws-sdk/generator/shape::to-query-params "responseParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-parameters)))
    (aws-sdk/generator/shape::to-query-params "responseTemplates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-templates))))))
(common-lisp:progn
 (common-lisp:defstruct (put-integration-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":resourceid is required"))
    :type (common-lisp:or string common-lisp:null))
   (http-method
    (common-lisp:error
     #A((23) common-lisp:base-char . ":httpmethod is required"))
    :type (common-lisp:or string common-lisp:null))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or integration-type common-lisp:null))
   (integration-http-method common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (uri common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (credentials common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (request-templates common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (passthrough-behavior common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-namespace common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (cache-key-parameters common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (content-handling common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-integration-request 'make-put-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-integration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "resourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "httpMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-method)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "integrationHttpMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'integration-http-method)))
    (aws-sdk/generator/shape::to-query-params "uri"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uri)))
    (aws-sdk/generator/shape::to-query-params "credentials"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'credentials)))
    (aws-sdk/generator/shape::to-query-params "requestParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-parameters)))
    (aws-sdk/generator/shape::to-query-params "requestTemplates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-templates)))
    (aws-sdk/generator/shape::to-query-params "passthroughBehavior"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'passthrough-behavior)))
    (aws-sdk/generator/shape::to-query-params "cacheNamespace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cache-namespace)))
    (aws-sdk/generator/shape::to-query-params "cacheKeyParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cache-key-parameters)))
    (aws-sdk/generator/shape::to-query-params "contentHandling"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-handling))))))
(common-lisp:progn
 (common-lisp:defstruct
     (put-integration-response-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":resourceid is required"))
    :type (common-lisp:or string common-lisp:null))
   (http-method
    (common-lisp:error
     #A((23) common-lisp:base-char . ":httpmethod is required"))
    :type (common-lisp:or string common-lisp:null))
   (status-code
    (common-lisp:error
     #A((23) common-lisp:base-char . ":statuscode is required"))
    :type (common-lisp:or status-code common-lisp:null))
   (selection-pattern common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (response-templates common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (content-handling common-lisp:nil :type
    (common-lisp:or content-handling-strategy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-integration-response-request
                    'make-put-integration-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-integration-response-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "resourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "httpMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-method)))
    (aws-sdk/generator/shape::to-query-params "statusCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-code)))
    (aws-sdk/generator/shape::to-query-params "selectionPattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'selection-pattern)))
    (aws-sdk/generator/shape::to-query-params "responseParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-parameters)))
    (aws-sdk/generator/shape::to-query-params "responseTemplates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-templates)))
    (aws-sdk/generator/shape::to-query-params "contentHandling"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-handling))))))
(common-lisp:progn
 (common-lisp:defstruct (put-method-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":resourceid is required"))
    :type (common-lisp:or string common-lisp:null))
   (http-method
    (common-lisp:error
     #A((23) common-lisp:base-char . ":httpmethod is required"))
    :type (common-lisp:or string common-lisp:null))
   (authorization-type
    (common-lisp:error
     #A((30) common-lisp:base-char . ":authorizationtype is required"))
    :type (common-lisp:or string common-lisp:null))
   (authorizer-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (api-key-required common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (operation-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (request-parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-boolean common-lisp:null))
   (request-models common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (request-validator-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-method-request 'make-put-method-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape put-method-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "resourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "httpMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-method)))
    (aws-sdk/generator/shape::to-query-params "authorizationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authorization-type)))
    (aws-sdk/generator/shape::to-query-params "authorizerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authorizer-id)))
    (aws-sdk/generator/shape::to-query-params "apiKeyRequired"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'api-key-required)))
    (aws-sdk/generator/shape::to-query-params "operationName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'operation-name)))
    (aws-sdk/generator/shape::to-query-params "requestParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-parameters)))
    (aws-sdk/generator/shape::to-query-params "requestModels"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-models)))
    (aws-sdk/generator/shape::to-query-params "requestValidatorId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-validator-id))))))
(common-lisp:progn
 (common-lisp:defstruct (put-method-response-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":resourceid is required"))
    :type (common-lisp:or string common-lisp:null))
   (http-method
    (common-lisp:error
     #A((23) common-lisp:base-char . ":httpmethod is required"))
    :type (common-lisp:or string common-lisp:null))
   (status-code
    (common-lisp:error
     #A((23) common-lisp:base-char . ":statuscode is required"))
    :type (common-lisp:or status-code common-lisp:null))
   (response-parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-boolean common-lisp:null))
   (response-models common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-method-response-request
                    'make-put-method-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-method-response-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "resourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "httpMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-method)))
    (aws-sdk/generator/shape::to-query-params "statusCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-code)))
    (aws-sdk/generator/shape::to-query-params "responseParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-parameters)))
    (aws-sdk/generator/shape::to-query-params "responseModels"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-models))))))
(common-lisp:deftype put-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (put-rest-api-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (mode common-lisp:nil :type (common-lisp:or put-mode common-lisp:null))
   (fail-on-warnings common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (body
    (common-lisp:error #A((17) common-lisp:base-char . ":body is required"))
    :type (common-lisp:or blob common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-rest-api-request 'make-put-rest-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape put-rest-api-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "mode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'mode)))
    (aws-sdk/generator/shape::to-query-params "failOnWarnings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fail-on-warnings)))
    (aws-sdk/generator/shape::to-query-params "parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters)))
    (aws-sdk/generator/shape::to-query-params "body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body))))))
(common-lisp:deftype quota-period-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (quota-settings (:copier common-lisp:nil))
   (limit common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (offset common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (period common-lisp:nil :type
    (common-lisp:or quota-period-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'quota-settings 'make-quota-settings))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape quota-settings))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "offset"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'offset)))
    (aws-sdk/generator/shape::to-query-params "period"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'period))))))
(common-lisp:progn
 (common-lisp:defstruct (request-validator (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (validate-request-body common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (validate-request-parameters common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'request-validator 'make-request-validator))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape request-validator))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "validateRequestBody"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'validate-request-body)))
    (aws-sdk/generator/shape::to-query-params "validateRequestParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'validate-request-parameters))))))
(common-lisp:progn
 (common-lisp:defstruct (request-validators (:copier common-lisp:nil))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-request-validator common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'request-validators 'make-request-validators))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape request-validators))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (resource (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (parent-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (path-part common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (path common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resource-methods common-lisp:nil :type
    (common-lisp:or map-of-method common-lisp:null)))
 (common-lisp:export (common-lisp:list 'resource 'make-resource))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape resource))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "parentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-id)))
    (aws-sdk/generator/shape::to-query-params "pathPart"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path-part)))
    (aws-sdk/generator/shape::to-query-params "path"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path)))
    (aws-sdk/generator/shape::to-query-params "resourceMethods"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-methods))))))
(common-lisp:progn
 (common-lisp:defstruct (resources (:copier common-lisp:nil))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-resource common-lisp:null)))
 (common-lisp:export (common-lisp:list 'resources 'make-resources))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape resources))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (rest-api (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (warnings common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null))
   (binary-media-types common-lisp:nil :type
    (common-lisp:or list-of-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rest-api 'make-rest-api))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape rest-api))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "warnings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'warnings)))
    (aws-sdk/generator/shape::to-query-params "binaryMediaTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'binary-media-types))))))
(common-lisp:progn
 (common-lisp:defstruct (rest-apis (:copier common-lisp:nil))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-rest-api common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rest-apis 'make-rest-apis))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape rest-apis))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (sdk-configuration-property (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (friendly-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (required common-lisp:nil :type (common-lisp:or boolean common-lisp:null))
   (default-value common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sdk-configuration-property
                    'make-sdk-configuration-property))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          sdk-configuration-property))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "friendlyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'friendly-name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "required"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'required)))
    (aws-sdk/generator/shape::to-query-params "defaultValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-value))))))
(common-lisp:progn
 (common-lisp:defstruct (sdk-response (:copier common-lisp:nil))
   (content-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (content-disposition common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or blob common-lisp:null)))
 (common-lisp:export (common-lisp:list 'sdk-response 'make-sdk-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape sdk-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "contentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-type)))
    (aws-sdk/generator/shape::to-query-params "contentDisposition"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-disposition)))
    (aws-sdk/generator/shape::to-query-params "body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body))))))
(common-lisp:progn
 (common-lisp:defstruct (sdk-type (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (friendly-name common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (configuration-properties common-lisp:nil :type
    (common-lisp:or list-of-sdk-configuration-property common-lisp:null)))
 (common-lisp:export (common-lisp:list 'sdk-type 'make-sdk-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape sdk-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "friendlyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'friendly-name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "configurationProperties"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'configuration-properties))))))
(common-lisp:progn
 (common-lisp:defstruct (sdk-types (:copier common-lisp:nil))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-sdk-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'sdk-types 'make-sdk-types))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape sdk-types))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct
     (service-unavailable-exception (:copier common-lisp:nil))
   (retry-after-seconds common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'make-service-unavailable-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          service-unavailable-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "retryAfterSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'retry-after-seconds)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (stage (:copier common-lisp:nil))
   (deployment-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (client-certificate-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (stage-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (cache-cluster-enabled common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (cache-cluster-size common-lisp:nil :type
    (common-lisp:or cache-cluster-size common-lisp:null))
   (cache-cluster-status common-lisp:nil :type
    (common-lisp:or cache-cluster-status common-lisp:null))
   (method-settings common-lisp:nil :type
    (common-lisp:or map-of-method-settings common-lisp:null))
   (variables common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (documentation-version common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stage 'make-stage))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape stage))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "deploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-id)))
    (aws-sdk/generator/shape::to-query-params "clientCertificateId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-certificate-id)))
    (aws-sdk/generator/shape::to-query-params "stageName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stage-name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "cacheClusterEnabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cache-cluster-enabled)))
    (aws-sdk/generator/shape::to-query-params "cacheClusterSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cache-cluster-size)))
    (aws-sdk/generator/shape::to-query-params "cacheClusterStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cache-cluster-status)))
    (aws-sdk/generator/shape::to-query-params "methodSettings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'method-settings)))
    (aws-sdk/generator/shape::to-query-params "variables"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'variables)))
    (aws-sdk/generator/shape::to-query-params "documentationVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'documentation-version)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "lastUpdatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-date))))))
(common-lisp:progn
 (common-lisp:defstruct (stage-key (:copier common-lisp:nil))
   (rest-api-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stage-name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stage-key 'make-stage-key))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape stage-key))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "stageName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stage-name))))))
(common-lisp:progn
 (common-lisp:defstruct (stages (:copier common-lisp:nil))
   (item common-lisp:nil :type
    (common-lisp:or list-of-stage common-lisp:null)))
 (common-lisp:export (common-lisp:list 'stages 'make-stages))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape stages))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "item"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item))))))
(common-lisp:deftype status-code () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (template (:copier common-lisp:nil))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'template 'make-template))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape template))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:defstruct
     (test-invoke-authorizer-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (authorizer-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":authorizerid is required"))
    :type (common-lisp:or string common-lisp:null))
   (headers common-lisp:nil :type
    (common-lisp:or map-of-header-values common-lisp:null))
   (path-with-query-string common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (stage-variables common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null))
   (additional-context common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-invoke-authorizer-request
                    'make-test-invoke-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          test-invoke-authorizer-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "authorizerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authorizer-id)))
    (aws-sdk/generator/shape::to-query-params "headers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'headers)))
    (aws-sdk/generator/shape::to-query-params "pathWithQueryString"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path-with-query-string)))
    (aws-sdk/generator/shape::to-query-params "body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body)))
    (aws-sdk/generator/shape::to-query-params "stageVariables"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stage-variables)))
    (aws-sdk/generator/shape::to-query-params "additionalContext"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'additional-context))))))
(common-lisp:progn
 (common-lisp:defstruct
     (test-invoke-authorizer-response (:copier common-lisp:nil))
   (client-status common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (log common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (latency common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (principal-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (policy common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (authorization common-lisp:nil :type
    (common-lisp:or map-of-string-to-list common-lisp:null))
   (claims common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-invoke-authorizer-response
                    'make-test-invoke-authorizer-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          test-invoke-authorizer-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "clientStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-status)))
    (aws-sdk/generator/shape::to-query-params "log"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log)))
    (aws-sdk/generator/shape::to-query-params "latency"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'latency)))
    (aws-sdk/generator/shape::to-query-params "principalId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'principal-id)))
    (aws-sdk/generator/shape::to-query-params "policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy)))
    (aws-sdk/generator/shape::to-query-params "authorization"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authorization)))
    (aws-sdk/generator/shape::to-query-params "claims"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'claims))))))
(common-lisp:progn
 (common-lisp:defstruct (test-invoke-method-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":resourceid is required"))
    :type (common-lisp:or string common-lisp:null))
   (http-method
    (common-lisp:error
     #A((23) common-lisp:base-char . ":httpmethod is required"))
    :type (common-lisp:or string common-lisp:null))
   (path-with-query-string common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (headers common-lisp:nil :type
    (common-lisp:or map-of-header-values common-lisp:null))
   (client-certificate-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (stage-variables common-lisp:nil :type
    (common-lisp:or map-of-string-to-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-invoke-method-request
                    'make-test-invoke-method-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          test-invoke-method-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "resourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "httpMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-method)))
    (aws-sdk/generator/shape::to-query-params "pathWithQueryString"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'path-with-query-string)))
    (aws-sdk/generator/shape::to-query-params "body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body)))
    (aws-sdk/generator/shape::to-query-params "headers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'headers)))
    (aws-sdk/generator/shape::to-query-params "clientCertificateId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-certificate-id)))
    (aws-sdk/generator/shape::to-query-params "stageVariables"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stage-variables))))))
(common-lisp:progn
 (common-lisp:defstruct (test-invoke-method-response (:copier common-lisp:nil))
   (status common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (headers common-lisp:nil :type
    (common-lisp:or map-of-header-values common-lisp:null))
   (log common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (latency common-lisp:nil :type (common-lisp:or long common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-invoke-method-response
                    'make-test-invoke-method-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          test-invoke-method-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body)))
    (aws-sdk/generator/shape::to-query-params "headers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'headers)))
    (aws-sdk/generator/shape::to-query-params "log"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'log)))
    (aws-sdk/generator/shape::to-query-params "latency"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'latency))))))
(common-lisp:progn
 (common-lisp:defstruct (throttle-settings (:copier common-lisp:nil))
   (burst-limit common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (rate-limit common-lisp:nil :type (common-lisp:or double common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'throttle-settings 'make-throttle-settings))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape throttle-settings))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "burstLimit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'burst-limit)))
    (aws-sdk/generator/shape::to-query-params "rateLimit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rate-limit))))))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (too-many-requests-exception (:copier common-lisp:nil))
   (retry-after-seconds common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'make-too-many-requests-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-requests-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "retryAfterSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'retry-after-seconds)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype unauthorized-cache-control-header-strategy ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (unauthorized-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unauthorized-exception 'make-unauthorized-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unauthorized-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (update-account-request (:copier common-lisp:nil))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-account-request 'make-update-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-account-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "patchOperations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-operations))))))
(common-lisp:progn
 (common-lisp:defstruct (update-api-key-request (:copier common-lisp:nil))
   (api-key
    (common-lisp:error #A((19) common-lisp:base-char . ":apikey is required"))
    :type (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-api-key-request 'make-update-api-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-api-key-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "apiKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'api-key)))
    (aws-sdk/generator/shape::to-query-params "patchOperations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-operations))))))
(common-lisp:progn
 (common-lisp:defstruct (update-authorizer-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (authorizer-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":authorizerid is required"))
    :type (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-authorizer-request
                    'make-update-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-authorizer-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "authorizerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authorizer-id)))
    (aws-sdk/generator/shape::to-query-params "patchOperations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-operations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-base-path-mapping-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":domainname is required"))
    :type (common-lisp:or string common-lisp:null))
   (base-path
    (common-lisp:error
     #A((21) common-lisp:base-char . ":basepath is required"))
    :type (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-base-path-mapping-request
                    'make-update-base-path-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-base-path-mapping-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "basePath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'base-path)))
    (aws-sdk/generator/shape::to-query-params "patchOperations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-operations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-client-certificate-request (:copier common-lisp:nil))
   (client-certificate-id
    (common-lisp:error
     #A((32) common-lisp:base-char . ":clientcertificateid is required"))
    :type (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-client-certificate-request
                    'make-update-client-certificate-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-client-certificate-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "clientCertificateId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-certificate-id)))
    (aws-sdk/generator/shape::to-query-params "patchOperations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-operations))))))
(common-lisp:progn
 (common-lisp:defstruct (update-deployment-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (deployment-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":deploymentid is required"))
    :type (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-deployment-request
                    'make-update-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-deployment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "deploymentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deployment-id)))
    (aws-sdk/generator/shape::to-query-params "patchOperations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-operations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-documentation-part-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (documentation-part-id
    (common-lisp:error
     #A((32) common-lisp:base-char . ":documentationpartid is required"))
    :type (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-documentation-part-request
                    'make-update-documentation-part-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-documentation-part-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "documentationPartId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'documentation-part-id)))
    (aws-sdk/generator/shape::to-query-params "patchOperations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-operations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-documentation-version-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (documentation-version
    (common-lisp:error
     #A((33) common-lisp:base-char . ":documentationversion is required"))
    :type (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-documentation-version-request
                    'make-update-documentation-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-documentation-version-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "documentationVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'documentation-version)))
    (aws-sdk/generator/shape::to-query-params "patchOperations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-operations))))))
(common-lisp:progn
 (common-lisp:defstruct (update-domain-name-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":domainname is required"))
    :type (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-domain-name-request
                    'make-update-domain-name-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-domain-name-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "domainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "patchOperations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-operations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-gateway-response-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (response-type
    (common-lisp:error
     #A((25) common-lisp:base-char . ":responsetype is required"))
    :type (common-lisp:or gateway-response-type common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-gateway-response-request
                    'make-update-gateway-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-gateway-response-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "responseType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-type)))
    (aws-sdk/generator/shape::to-query-params "patchOperations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-operations))))))
(common-lisp:progn
 (common-lisp:defstruct (update-integration-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":resourceid is required"))
    :type (common-lisp:or string common-lisp:null))
   (http-method
    (common-lisp:error
     #A((23) common-lisp:base-char . ":httpmethod is required"))
    :type (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-integration-request
                    'make-update-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-integration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "resourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "httpMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-method)))
    (aws-sdk/generator/shape::to-query-params "patchOperations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-operations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-integration-response-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":resourceid is required"))
    :type (common-lisp:or string common-lisp:null))
   (http-method
    (common-lisp:error
     #A((23) common-lisp:base-char . ":httpmethod is required"))
    :type (common-lisp:or string common-lisp:null))
   (status-code
    (common-lisp:error
     #A((23) common-lisp:base-char . ":statuscode is required"))
    :type (common-lisp:or status-code common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-integration-response-request
                    'make-update-integration-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-integration-response-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "resourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "httpMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-method)))
    (aws-sdk/generator/shape::to-query-params "statusCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-code)))
    (aws-sdk/generator/shape::to-query-params "patchOperations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-operations))))))
(common-lisp:progn
 (common-lisp:defstruct (update-method-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":resourceid is required"))
    :type (common-lisp:or string common-lisp:null))
   (http-method
    (common-lisp:error
     #A((23) common-lisp:base-char . ":httpmethod is required"))
    :type (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-method-request 'make-update-method-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-method-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "resourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "httpMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-method)))
    (aws-sdk/generator/shape::to-query-params "patchOperations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-operations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-method-response-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":resourceid is required"))
    :type (common-lisp:or string common-lisp:null))
   (http-method
    (common-lisp:error
     #A((23) common-lisp:base-char . ":httpmethod is required"))
    :type (common-lisp:or string common-lisp:null))
   (status-code
    (common-lisp:error
     #A((23) common-lisp:base-char . ":statuscode is required"))
    :type (common-lisp:or status-code common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-method-response-request
                    'make-update-method-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-method-response-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "resourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "httpMethod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'http-method)))
    (aws-sdk/generator/shape::to-query-params "statusCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-code)))
    (aws-sdk/generator/shape::to-query-params "patchOperations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-operations))))))
(common-lisp:progn
 (common-lisp:defstruct (update-model-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (model-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":modelname is required"))
    :type (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-model-request 'make-update-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-model-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "modelName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'model-name)))
    (aws-sdk/generator/shape::to-query-params "patchOperations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-operations))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-request-validator-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (request-validator-id
    (common-lisp:error
     #A((31) common-lisp:base-char . ":requestvalidatorid is required"))
    :type (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-request-validator-request
                    'make-update-request-validator-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-request-validator-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "requestValidatorId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request-validator-id)))
    (aws-sdk/generator/shape::to-query-params "patchOperations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-operations))))))
(common-lisp:progn
 (common-lisp:defstruct (update-resource-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (resource-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":resourceid is required"))
    :type (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-resource-request 'make-update-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-resource-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "resourceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resource-id)))
    (aws-sdk/generator/shape::to-query-params "patchOperations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-operations))))))
(common-lisp:progn
 (common-lisp:defstruct (update-rest-api-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-rest-api-request 'make-update-rest-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-rest-api-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "patchOperations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-operations))))))
(common-lisp:progn
 (common-lisp:defstruct (update-stage-request (:copier common-lisp:nil))
   (rest-api-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":restapiid is required"))
    :type (common-lisp:or string common-lisp:null))
   (stage-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":stagename is required"))
    :type (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-stage-request 'make-update-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-stage-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "restApiId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rest-api-id)))
    (aws-sdk/generator/shape::to-query-params "stageName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stage-name)))
    (aws-sdk/generator/shape::to-query-params "patchOperations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-operations))))))
(common-lisp:progn
 (common-lisp:defstruct (update-usage-plan-request (:copier common-lisp:nil))
   (usage-plan-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":usageplanid is required"))
    :type (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-usage-plan-request
                    'make-update-usage-plan-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-usage-plan-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "usagePlanId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'usage-plan-id)))
    (aws-sdk/generator/shape::to-query-params "patchOperations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-operations))))))
(common-lisp:progn
 (common-lisp:defstruct (update-usage-request (:copier common-lisp:nil))
   (usage-plan-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":usageplanid is required"))
    :type (common-lisp:or string common-lisp:null))
   (key-id
    (common-lisp:error #A((18) common-lisp:base-char . ":keyid is required"))
    :type (common-lisp:or string common-lisp:null))
   (patch-operations common-lisp:nil :type
    (common-lisp:or list-of-patch-operation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-usage-request 'make-update-usage-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-usage-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "usagePlanId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'usage-plan-id)))
    (aws-sdk/generator/shape::to-query-params "keyId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key-id)))
    (aws-sdk/generator/shape::to-query-params "patchOperations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'patch-operations))))))
(common-lisp:progn
 (common-lisp:defstruct (usage (:copier common-lisp:nil))
   (usage-plan-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (start-date common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (end-date common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or map-of-key-usages common-lisp:null)))
 (common-lisp:export (common-lisp:list 'usage 'make-usage))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape usage))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "usagePlanId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'usage-plan-id)))
    (aws-sdk/generator/shape::to-query-params "startDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-date)))
    (aws-sdk/generator/shape::to-query-params "endDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-date)))
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (usage-plan (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (api-stages common-lisp:nil :type
    (common-lisp:or list-of-api-stage common-lisp:null))
   (throttle common-lisp:nil :type
    (common-lisp:or throttle-settings common-lisp:null))
   (quota common-lisp:nil :type
    (common-lisp:or quota-settings common-lisp:null))
   (product-code common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'usage-plan 'make-usage-plan))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape usage-plan))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "apiStages"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'api-stages)))
    (aws-sdk/generator/shape::to-query-params "throttle"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'throttle)))
    (aws-sdk/generator/shape::to-query-params "quota"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'quota)))
    (aws-sdk/generator/shape::to-query-params "productCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'product-code))))))
(common-lisp:progn
 (common-lisp:defstruct (usage-plan-key (:copier common-lisp:nil))
   (id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'usage-plan-key 'make-usage-plan-key))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape usage-plan-key))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (usage-plan-keys (:copier common-lisp:nil))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-usage-plan-key common-lisp:null)))
 (common-lisp:export (common-lisp:list 'usage-plan-keys 'make-usage-plan-keys))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape usage-plan-keys))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct (usage-plans (:copier common-lisp:nil))
   (position common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (items common-lisp:nil :type
    (common-lisp:or list-of-usage-plan common-lisp:null)))
 (common-lisp:export (common-lisp:list 'usage-plans 'make-usage-plans))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape usage-plans))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "position"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'position)))
    (aws-sdk/generator/shape::to-query-params "items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defun create-api-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description enabled
                     generate-distinct-id value stage-keys customer-id)
   (common-lisp:declare
    (common-lisp:ignorable name description enabled generate-distinct-id value
     stage-keys customer-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-api-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateApiKey")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ApiKey" common-lisp:nil)))
 (common-lisp:export 'create-api-key))
(common-lisp:progn
 (common-lisp:defun create-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id name type provider-arns
                     auth-type authorizer-uri authorizer-credentials
                     identity-source identity-validation-expression
                     authorizer-result-ttl-in-seconds)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id name type provider-arns auth-type
     authorizer-uri authorizer-credentials identity-source
     identity-validation-expression authorizer-result-ttl-in-seconds))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/authorizers"
                                                   restapi_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateAuthorizer")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Authorizer" common-lisp:nil)))
 (common-lisp:export 'create-authorizer))
(common-lisp:progn
 (common-lisp:defun create-base-path-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name base-path rest-api-id stage)
   (common-lisp:declare
    (common-lisp:ignorable domain-name base-path rest-api-id stage))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-base-path-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/domainnames/~a/basepathmappings"
                                                   domain_name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateBasePathMapping")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BasePathMapping" common-lisp:nil)))
 (common-lisp:export 'create-base-path-mapping))
(common-lisp:progn
 (common-lisp:defun create-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name stage-description
                     description cache-cluster-enabled cache-cluster-size
                     variables)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id stage-name stage-description description
     cache-cluster-enabled cache-cluster-size variables))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/deployments"
                                                   restapi_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateDeployment")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Deployment" common-lisp:nil)))
 (common-lisp:export 'create-deployment))
(common-lisp:progn
 (common-lisp:defun create-documentation-part
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id location properties)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id location properties))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-documentation-part-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/documentation/parts"
                                                   restapi_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateDocumentationPart")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DocumentationPart" common-lisp:nil)))
 (common-lisp:export 'create-documentation-part))
(common-lisp:progn
 (common-lisp:defun create-documentation-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-version
                     stage-name description)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-version stage-name
     description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-documentation-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/documentation/versions"
                                                   restapi_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateDocumentationVersion")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DocumentationVersion" common-lisp:nil)))
 (common-lisp:export 'create-documentation-version))
(common-lisp:progn
 (common-lisp:defun create-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name certificate-name
                     certificate-body certificate-private-key certificate-chain
                     certificate-arn)
   (common-lisp:declare
    (common-lisp:ignorable domain-name certificate-name certificate-body
     certificate-private-key certificate-chain certificate-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateDomainName")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DomainName" common-lisp:nil)))
 (common-lisp:export 'create-domain-name))
(common-lisp:progn
 (common-lisp:defun create-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id name description schema
                     content-type)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id name description schema content-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/models"
                                                   restapi_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateModel")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Model" common-lisp:nil)))
 (common-lisp:export 'create-model))
(common-lisp:progn
 (common-lisp:defun create-request-validator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id name validate-request-body
                     validate-request-parameters)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id name validate-request-body
     validate-request-parameters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-request-validator-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/requestvalidators"
                                                   restapi_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateRequestValidator")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RequestValidator" common-lisp:nil)))
 (common-lisp:export 'create-request-validator))
(common-lisp:progn
 (common-lisp:defun create-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id parent-id path-part)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id parent-id path-part))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/resources/~a"
                                                   restapi_id parent_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateResource")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Resource" common-lisp:nil)))
 (common-lisp:export 'create-resource))
(common-lisp:progn
 (common-lisp:defun create-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description version clone-from
                     binary-media-types)
   (common-lisp:declare
    (common-lisp:ignorable name description version clone-from
     binary-media-types))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateRestApi")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RestApi" common-lisp:nil)))
 (common-lisp:export 'create-rest-api))
(common-lisp:progn
 (common-lisp:defun create-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name deployment-id
                     description cache-cluster-enabled cache-cluster-size
                     variables documentation-version)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id stage-name deployment-id description
     cache-cluster-enabled cache-cluster-size variables documentation-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/stages"
                                                   restapi_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateStage")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Stage" common-lisp:nil)))
 (common-lisp:export 'create-stage))
(common-lisp:progn
 (common-lisp:defun create-usage-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description api-stages throttle
                     quota)
   (common-lisp:declare
    (common-lisp:ignorable name description api-stages throttle quota))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-usage-plan-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateUsagePlan")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UsagePlan" common-lisp:nil)))
 (common-lisp:export 'create-usage-plan))
(common-lisp:progn
 (common-lisp:defun create-usage-plan-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id key-id key-type)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id key-id key-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-usage-plan-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/usageplans/~a/keys"
                                                   usageplanid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateUsagePlanKey")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UsagePlanKey" common-lisp:nil)))
 (common-lisp:export 'create-usage-plan-key))
(common-lisp:progn
 (common-lisp:defun delete-api-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-key)
   (common-lisp:declare (common-lisp:ignorable api-key))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-api-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/apikeys/~a" api_key)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteApiKey")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-api-key))
(common-lisp:progn
 (common-lisp:defun delete-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id authorizer-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id authorizer-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/authorizers/~a"
                                                   restapi_id authorizer_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteAuthorizer")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-authorizer))
(common-lisp:progn
 (common-lisp:defun delete-base-path-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name base-path)
   (common-lisp:declare (common-lisp:ignorable domain-name base-path))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-base-path-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/domainnames/~a/basepathmappings/~a"
                                                   domain_name base_path)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteBasePathMapping")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-base-path-mapping))
(common-lisp:progn
 (common-lisp:defun delete-client-certificate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-certificate-id)
   (common-lisp:declare (common-lisp:ignorable client-certificate-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-client-certificate-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/clientcertificates/~a"
                                                   clientcertificate_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteClientCertificate")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-client-certificate))
(common-lisp:progn
 (common-lisp:defun delete-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id deployment-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id deployment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/deployments/~a"
                                                   restapi_id deployment_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteDeployment")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-deployment))
(common-lisp:progn
 (common-lisp:defun delete-documentation-part
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-part-id)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-part-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-documentation-part-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/documentation/parts/~a"
                                                   restapi_id part_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteDocumentationPart")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-documentation-part))
(common-lisp:progn
 (common-lisp:defun delete-documentation-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-version)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-documentation-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/documentation/versions/~a"
                                                   restapi_id doc_version)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteDocumentationVersion")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-documentation-version))
(common-lisp:progn
 (common-lisp:defun delete-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/domainnames/~a"
                                                   domain_name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteDomainName")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-domain-name))
(common-lisp:progn
 (common-lisp:defun delete-gateway-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id response-type)
   (common-lisp:declare (common-lisp:ignorable rest-api-id response-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-gateway-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/gatewayresponses/~a"
                                                   restapi_id response_type)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteGatewayResponse")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-gateway-response))
(common-lisp:progn
 (common-lisp:defun delete-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/resources/~a/methods/~a/integration"
                                                   restapi_id resource_id
                                                   http_method)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteIntegration")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-integration))
(common-lisp:progn
 (common-lisp:defun delete-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-integration-response-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/resources/~a/methods/~a/integration/responses/~a"
                                                   restapi_id resource_id
                                                   http_method status_code)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteIntegrationResponse")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-integration-response))
(common-lisp:progn
 (common-lisp:defun delete-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-method-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/resources/~a/methods/~a"
                                                   restapi_id resource_id
                                                   http_method)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteMethod")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-method))
(common-lisp:progn
 (common-lisp:defun delete-method-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-method-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/resources/~a/methods/~a/responses/~a"
                                                   restapi_id resource_id
                                                   http_method status_code)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteMethodResponse")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-method-response))
(common-lisp:progn
 (common-lisp:defun delete-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id model-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id model-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/models/~a"
                                                   restapi_id model_name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteModel")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-model))
(common-lisp:progn
 (common-lisp:defun delete-request-validator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id request-validator-id)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id request-validator-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-request-validator-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/requestvalidators/~a"
                                                   restapi_id
                                                   requestvalidator_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteRequestValidator")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-request-validator))
(common-lisp:progn
 (common-lisp:defun delete-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id resource-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/resources/~a"
                                                   restapi_id resource_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteResource")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-resource))
(common-lisp:progn
 (common-lisp:defun delete-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a" restapi_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteRestApi")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-rest-api))
(common-lisp:progn
 (common-lisp:defun delete-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/stages/~a"
                                                   restapi_id stage_name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteStage")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-stage))
(common-lisp:progn
 (common-lisp:defun delete-usage-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-usage-plan-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/usageplans/~a"
                                                   usageplanid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteUsagePlan")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-usage-plan))
(common-lisp:progn
 (common-lisp:defun delete-usage-plan-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id key-id)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id key-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-usage-plan-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/usageplans/~a/keys/~a"
                                                   usageplanid keyid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteUsagePlanKey")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-usage-plan-key))
(common-lisp:progn
 (common-lisp:defun flush-stage-authorizers-cache
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-flush-stage-authorizers-cache-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/stages/~a/cache/authorizers"
                                                   restapi_id stage_name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"FlushStageAuthorizersCache")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'flush-stage-authorizers-cache))
(common-lisp:progn
 (common-lisp:defun flush-stage-cache
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-flush-stage-cache-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/stages/~a/cache/data"
                                                   restapi_id stage_name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"FlushStageCache")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'flush-stage-cache))
(common-lisp:progn
 (common-lisp:defun generate-client-certificate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description)
   (common-lisp:declare (common-lisp:ignorable description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-generate-client-certificate-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GenerateClientCertificate")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ClientCertificate" common-lisp:nil)))
 (common-lisp:export 'generate-client-certificate))
(common-lisp:progn
 (common-lisp:defun get-account ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((10) common-lisp:base-char . "apigateway")
                             :method :get :params
                             (common-lisp:cons "Action" "GetAccount"))
    "Account" common-lisp:nil))
 (common-lisp:export 'get-account))
(common-lisp:progn
 (common-lisp:defun get-api-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-key include-value)
   (common-lisp:declare (common-lisp:ignorable api-key include-value))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-api-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/apikeys/~a" api_key)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetApiKey")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ApiKey" common-lisp:nil)))
 (common-lisp:export 'get-api-key))
(common-lisp:progn
 (common-lisp:defun get-api-keys
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit name-query customer-id
                     include-values)
   (common-lisp:declare
    (common-lisp:ignorable position limit name-query customer-id
     include-values))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-api-keys-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"GetApiKeys")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ApiKeys" common-lisp:nil)))
 (common-lisp:export 'get-api-keys))
(common-lisp:progn
 (common-lisp:defun get-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id authorizer-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id authorizer-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/authorizers/~a"
                                                   restapi_id authorizer_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetAuthorizer")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Authorizer" common-lisp:nil)))
 (common-lisp:export 'get-authorizer))
(common-lisp:progn
 (common-lisp:defun get-authorizers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-authorizers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/authorizers"
                                                   restapi_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetAuthorizers")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Authorizers" common-lisp:nil)))
 (common-lisp:export 'get-authorizers))
(common-lisp:progn
 (common-lisp:defun get-base-path-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name base-path)
   (common-lisp:declare (common-lisp:ignorable domain-name base-path))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-base-path-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/domainnames/~a/basepathmappings/~a"
                                                   domain_name base_path)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBasePathMapping")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BasePathMapping" common-lisp:nil)))
 (common-lisp:export 'get-base-path-mapping))
(common-lisp:progn
 (common-lisp:defun get-base-path-mappings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name position limit)
   (common-lisp:declare (common-lisp:ignorable domain-name position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-base-path-mappings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/domainnames/~a/basepathmappings"
                                                   domain_name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBasePathMappings")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BasePathMappings" common-lisp:nil)))
 (common-lisp:export 'get-base-path-mappings))
(common-lisp:progn
 (common-lisp:defun get-client-certificate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-certificate-id)
   (common-lisp:declare (common-lisp:ignorable client-certificate-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-client-certificate-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/clientcertificates/~a"
                                                   clientcertificate_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetClientCertificate")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ClientCertificate" common-lisp:nil)))
 (common-lisp:export 'get-client-certificate))
(common-lisp:progn
 (common-lisp:defun get-client-certificates
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit)
   (common-lisp:declare (common-lisp:ignorable position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-client-certificates-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"GetClientCertificates")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ClientCertificates" common-lisp:nil)))
 (common-lisp:export 'get-client-certificates))
(common-lisp:progn
 (common-lisp:defun get-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id deployment-id embed)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id deployment-id embed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/deployments/~a"
                                                   restapi_id deployment_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetDeployment")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Deployment" common-lisp:nil)))
 (common-lisp:export 'get-deployment))
(common-lisp:progn
 (common-lisp:defun get-deployments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-deployments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/deployments"
                                                   restapi_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetDeployments")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Deployments" common-lisp:nil)))
 (common-lisp:export 'get-deployments))
(common-lisp:progn
 (common-lisp:defun get-documentation-part
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-part-id)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-part-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-documentation-part-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/documentation/parts/~a"
                                                   restapi_id part_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetDocumentationPart")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DocumentationPart" common-lisp:nil)))
 (common-lisp:export 'get-documentation-part))
(common-lisp:progn
 (common-lisp:defun get-documentation-parts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id type name-query path position
                     limit)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id type name-query path position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-documentation-parts-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/documentation/parts"
                                                   restapi_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetDocumentationParts")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DocumentationParts" common-lisp:nil)))
 (common-lisp:export 'get-documentation-parts))
(common-lisp:progn
 (common-lisp:defun get-documentation-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-version)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-documentation-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/documentation/versions/~a"
                                                   restapi_id doc_version)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetDocumentationVersion")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DocumentationVersion" common-lisp:nil)))
 (common-lisp:export 'get-documentation-version))
(common-lisp:progn
 (common-lisp:defun get-documentation-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-documentation-versions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/documentation/versions"
                                                   restapi_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetDocumentationVersions")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DocumentationVersions" common-lisp:nil)))
 (common-lisp:export 'get-documentation-versions))
(common-lisp:progn
 (common-lisp:defun get-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/domainnames/~a"
                                                   domain_name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetDomainName")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DomainName" common-lisp:nil)))
 (common-lisp:export 'get-domain-name))
(common-lisp:progn
 (common-lisp:defun get-domain-names
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit)
   (common-lisp:declare (common-lisp:ignorable position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-domain-names-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"GetDomainNames")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DomainNames" common-lisp:nil)))
 (common-lisp:export 'get-domain-names))
(common-lisp:progn
 (common-lisp:defun get-export
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name export-type
                     parameters accepts)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id stage-name export-type parameters
     accepts))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-export-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/stages/~a/exports/~a"
                                                   restapi_id stage_name
                                                   export_type)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetExport")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ExportResponse" common-lisp:nil)))
 (common-lisp:export 'get-export))
(common-lisp:progn
 (common-lisp:defun get-gateway-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id response-type)
   (common-lisp:declare (common-lisp:ignorable rest-api-id response-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-gateway-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/gatewayresponses/~a"
                                                   restapi_id response_type)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetGatewayResponse")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GatewayResponse" common-lisp:nil)))
 (common-lisp:export 'get-gateway-response))
(common-lisp:progn
 (common-lisp:defun get-gateway-responses
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-gateway-responses-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/gatewayresponses"
                                                   restapi_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetGatewayResponses")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GatewayResponses" common-lisp:nil)))
 (common-lisp:export 'get-gateway-responses))
(common-lisp:progn
 (common-lisp:defun get-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/resources/~a/methods/~a/integration"
                                                   restapi_id resource_id
                                                   http_method)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetIntegration")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Integration" common-lisp:nil)))
 (common-lisp:export 'get-integration))
(common-lisp:progn
 (common-lisp:defun get-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-integration-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/resources/~a/methods/~a/integration/responses/~a"
                                                   restapi_id resource_id
                                                   http_method status_code)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetIntegrationResponse")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "IntegrationResponse" common-lisp:nil)))
 (common-lisp:export 'get-integration-response))
(common-lisp:progn
 (common-lisp:defun get-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-method-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/resources/~a/methods/~a"
                                                   restapi_id resource_id
                                                   http_method)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetMethod")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Method" common-lisp:nil)))
 (common-lisp:export 'get-method))
(common-lisp:progn
 (common-lisp:defun get-method-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-method-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/resources/~a/methods/~a/responses/~a"
                                                   restapi_id resource_id
                                                   http_method status_code)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetMethodResponse")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "MethodResponse" common-lisp:nil)))
 (common-lisp:export 'get-method-response))
(common-lisp:progn
 (common-lisp:defun get-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id model-name flatten)
   (common-lisp:declare (common-lisp:ignorable rest-api-id model-name flatten))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/models/~a"
                                                   restapi_id model_name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetModel")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Model" common-lisp:nil)))
 (common-lisp:export 'get-model))
(common-lisp:progn
 (common-lisp:defun get-model-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id model-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id model-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-model-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/models/~a/default_template"
                                                   restapi_id model_name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetModelTemplate")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Template" common-lisp:nil)))
 (common-lisp:export 'get-model-template))
(common-lisp:progn
 (common-lisp:defun get-models
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-models-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/models"
                                                   restapi_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetModels")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Models" common-lisp:nil)))
 (common-lisp:export 'get-models))
(common-lisp:progn
 (common-lisp:defun get-request-validator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id request-validator-id)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id request-validator-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-request-validator-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/requestvalidators/~a"
                                                   restapi_id
                                                   requestvalidator_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetRequestValidator")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RequestValidator" common-lisp:nil)))
 (common-lisp:export 'get-request-validator))
(common-lisp:progn
 (common-lisp:defun get-request-validators
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-request-validators-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/requestvalidators"
                                                   restapi_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetRequestValidators")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RequestValidators" common-lisp:nil)))
 (common-lisp:export 'get-request-validators))
(common-lisp:progn
 (common-lisp:defun get-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id embed)
   (common-lisp:declare (common-lisp:ignorable rest-api-id resource-id embed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/resources/~a"
                                                   restapi_id resource_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetResource")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Resource" common-lisp:nil)))
 (common-lisp:export 'get-resource))
(common-lisp:progn
 (common-lisp:defun get-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit embed)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id position limit embed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resources-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/resources"
                                                   restapi_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetResources")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Resources" common-lisp:nil)))
 (common-lisp:export 'get-resources))
(common-lisp:progn
 (common-lisp:defun get-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a" restapi_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetRestApi")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RestApi" common-lisp:nil)))
 (common-lisp:export 'get-rest-api))
(common-lisp:progn
 (common-lisp:defun get-rest-apis
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit)
   (common-lisp:declare (common-lisp:ignorable position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-rest-apis-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"GetRestApis")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RestApis" common-lisp:nil)))
 (common-lisp:export 'get-rest-apis))
(common-lisp:progn
 (common-lisp:defun get-sdk
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name sdk-type
                     parameters)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id stage-name sdk-type parameters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-sdk-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/stages/~a/sdks/~a"
                                                   restapi_id stage_name
                                                   sdk_type)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetSdk")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SdkResponse" common-lisp:nil)))
 (common-lisp:export 'get-sdk))
(common-lisp:progn
 (common-lisp:defun get-sdk-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-sdk-type-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/sdktypes/~a" sdktype_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetSdkType")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SdkType" common-lisp:nil)))
 (common-lisp:export 'get-sdk-type))
(common-lisp:progn
 (common-lisp:defun get-sdk-types
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit)
   (common-lisp:declare (common-lisp:ignorable position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-sdk-types-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"GetSdkTypes")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SdkTypes" common-lisp:nil)))
 (common-lisp:export 'get-sdk-types))
(common-lisp:progn
 (common-lisp:defun get-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/stages/~a"
                                                   restapi_id stage_name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetStage")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Stage" common-lisp:nil)))
 (common-lisp:export 'get-stage))
(common-lisp:progn
 (common-lisp:defun get-stages
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id deployment-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id deployment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-stages-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/stages"
                                                   restapi_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetStages")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Stages" common-lisp:nil)))
 (common-lisp:export 'get-stages))
(common-lisp:progn
 (common-lisp:defun get-usage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id key-id start-date end-date
                     position limit)
   (common-lisp:declare
    (common-lisp:ignorable usage-plan-id key-id start-date end-date position
     limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-usage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/usageplans/~a/usage"
                                                   usageplanid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetUsage")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Usage" common-lisp:nil)))
 (common-lisp:export 'get-usage))
(common-lisp:progn
 (common-lisp:defun get-usage-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-usage-plan-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/usageplans/~a"
                                                   usageplanid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetUsagePlan")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UsagePlan" common-lisp:nil)))
 (common-lisp:export 'get-usage-plan))
(common-lisp:progn
 (common-lisp:defun get-usage-plan-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id key-id)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id key-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-usage-plan-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/usageplans/~a/keys/~a"
                                                   usageplanid keyid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetUsagePlanKey")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UsagePlanKey" common-lisp:nil)))
 (common-lisp:export 'get-usage-plan-key))
(common-lisp:progn
 (common-lisp:defun get-usage-plan-keys
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id position limit name-query)
   (common-lisp:declare
    (common-lisp:ignorable usage-plan-id position limit name-query))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-usage-plan-keys-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/usageplans/~a/keys"
                                                   usageplanid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetUsagePlanKeys")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UsagePlanKeys" common-lisp:nil)))
 (common-lisp:export 'get-usage-plan-keys))
(common-lisp:progn
 (common-lisp:defun get-usage-plans
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position key-id limit)
   (common-lisp:declare (common-lisp:ignorable position key-id limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-usage-plans-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"GetUsagePlans")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UsagePlans" common-lisp:nil)))
 (common-lisp:export 'get-usage-plans))
(common-lisp:progn
 (common-lisp:defun import-api-keys
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key body format fail-on-warnings)
   (common-lisp:declare (common-lisp:ignorable body format fail-on-warnings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-import-api-keys-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ImportApiKeys")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ApiKeyIds" common-lisp:nil)))
 (common-lisp:export 'import-api-keys))
(common-lisp:progn
 (common-lisp:defun import-documentation-parts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id mode fail-on-warnings body)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id mode fail-on-warnings body))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-import-documentation-parts-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/documentation/parts"
                                                   restapi_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ImportDocumentationParts")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DocumentationPartIds" common-lisp:nil)))
 (common-lisp:export 'import-documentation-parts))
(common-lisp:progn
 (common-lisp:defun import-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fail-on-warnings parameters body)
   (common-lisp:declare
    (common-lisp:ignorable fail-on-warnings parameters body))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-import-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ImportRestApi")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RestApi" common-lisp:nil)))
 (common-lisp:export 'import-rest-api))
(common-lisp:progn
 (common-lisp:defun put-gateway-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id response-type status-code
                     response-parameters response-templates)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id response-type status-code
     response-parameters response-templates))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-gateway-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/gatewayresponses/~a"
                                                   restapi_id response_type)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutGatewayResponse")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GatewayResponse" common-lisp:nil)))
 (common-lisp:export 'put-gateway-response))
(common-lisp:progn
 (common-lisp:defun put-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method type
                     integration-http-method uri credentials request-parameters
                     request-templates passthrough-behavior cache-namespace
                     cache-key-parameters content-handling)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method type
     integration-http-method uri credentials request-parameters
     request-templates passthrough-behavior cache-namespace
     cache-key-parameters content-handling))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/resources/~a/methods/~a/integration"
                                                   restapi_id resource_id
                                                   http_method)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutIntegration")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Integration" common-lisp:nil)))
 (common-lisp:export 'put-integration))
(common-lisp:progn
 (common-lisp:defun put-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code selection-pattern response-parameters
                     response-templates content-handling)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code
     selection-pattern response-parameters response-templates
     content-handling))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-integration-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/resources/~a/methods/~a/integration/responses/~a"
                                                   restapi_id resource_id
                                                   http_method status_code)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutIntegrationResponse")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "IntegrationResponse" common-lisp:nil)))
 (common-lisp:export 'put-integration-response))
(common-lisp:progn
 (common-lisp:defun put-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     authorization-type authorizer-id api-key-required
                     operation-name request-parameters request-models
                     request-validator-id)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method
     authorization-type authorizer-id api-key-required operation-name
     request-parameters request-models request-validator-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-method-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/resources/~a/methods/~a"
                                                   restapi_id resource_id
                                                   http_method)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutMethod")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Method" common-lisp:nil)))
 (common-lisp:export 'put-method))
(common-lisp:progn
 (common-lisp:defun put-method-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code response-parameters response-models)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code
     response-parameters response-models))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-method-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/resources/~a/methods/~a/responses/~a"
                                                   restapi_id resource_id
                                                   http_method status_code)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutMethodResponse")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "MethodResponse" common-lisp:nil)))
 (common-lisp:export 'put-method-response))
(common-lisp:progn
 (common-lisp:defun put-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id mode fail-on-warnings
                     parameters body)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id mode fail-on-warnings parameters body))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a" restapi_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutRestApi")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RestApi" common-lisp:nil)))
 (common-lisp:export 'put-rest-api))
(common-lisp:progn
 (common-lisp:defun test-invoke-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id authorizer-id headers
                     path-with-query-string body stage-variables
                     additional-context)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id authorizer-id headers
     path-with-query-string body stage-variables additional-context))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-test-invoke-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/authorizers/~a"
                                                   restapi_id authorizer_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"TestInvokeAuthorizer")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "TestInvokeAuthorizerResponse" common-lisp:nil)))
 (common-lisp:export 'test-invoke-authorizer))
(common-lisp:progn
 (common-lisp:defun test-invoke-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     path-with-query-string body headers client-certificate-id
                     stage-variables)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method
     path-with-query-string body headers client-certificate-id
     stage-variables))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-test-invoke-method-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/resources/~a/methods/~a"
                                                   restapi_id resource_id
                                                   http_method)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"TestInvokeMethod")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "TestInvokeMethodResponse" common-lisp:nil)))
 (common-lisp:export 'test-invoke-method))
(common-lisp:progn
 (common-lisp:defun update-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key patch-operations)
   (common-lisp:declare (common-lisp:ignorable patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-account-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :patch :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateAccount")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Account" common-lisp:nil)))
 (common-lisp:export 'update-account))
(common-lisp:progn
 (common-lisp:defun update-api-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-key patch-operations)
   (common-lisp:declare (common-lisp:ignorable api-key patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-api-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/apikeys/~a" api_key)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateApiKey")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ApiKey" common-lisp:nil)))
 (common-lisp:export 'update-api-key))
(common-lisp:progn
 (common-lisp:defun update-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id authorizer-id
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id authorizer-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/authorizers/~a"
                                                   restapi_id authorizer_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateAuthorizer")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Authorizer" common-lisp:nil)))
 (common-lisp:export 'update-authorizer))
(common-lisp:progn
 (common-lisp:defun update-base-path-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name base-path patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable domain-name base-path patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-base-path-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/domainnames/~a/basepathmappings/~a"
                                                   domain_name base_path)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateBasePathMapping")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BasePathMapping" common-lisp:nil)))
 (common-lisp:export 'update-base-path-mapping))
(common-lisp:progn
 (common-lisp:defun update-client-certificate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-certificate-id patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable client-certificate-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-client-certificate-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/clientcertificates/~a"
                                                   clientcertificate_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateClientCertificate")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ClientCertificate" common-lisp:nil)))
 (common-lisp:export 'update-client-certificate))
(common-lisp:progn
 (common-lisp:defun update-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id deployment-id
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id deployment-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/deployments/~a"
                                                   restapi_id deployment_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateDeployment")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Deployment" common-lisp:nil)))
 (common-lisp:export 'update-deployment))
(common-lisp:progn
 (common-lisp:defun update-documentation-part
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-part-id
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-part-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-documentation-part-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/documentation/parts/~a"
                                                   restapi_id part_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateDocumentationPart")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DocumentationPart" common-lisp:nil)))
 (common-lisp:export 'update-documentation-part))
(common-lisp:progn
 (common-lisp:defun update-documentation-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-version
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-version patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-documentation-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/documentation/versions/~a"
                                                   restapi_id doc_version)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateDocumentationVersion")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DocumentationVersion" common-lisp:nil)))
 (common-lisp:export 'update-documentation-version))
(common-lisp:progn
 (common-lisp:defun update-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name patch-operations)
   (common-lisp:declare (common-lisp:ignorable domain-name patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/domainnames/~a"
                                                   domain_name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateDomainName")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DomainName" common-lisp:nil)))
 (common-lisp:export 'update-domain-name))
(common-lisp:progn
 (common-lisp:defun update-gateway-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id response-type
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id response-type patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-gateway-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/gatewayresponses/~a"
                                                   restapi_id response_type)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateGatewayResponse")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GatewayResponse" common-lisp:nil)))
 (common-lisp:export 'update-gateway-response))
(common-lisp:progn
 (common-lisp:defun update-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method
     patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/resources/~a/methods/~a/integration"
                                                   restapi_id resource_id
                                                   http_method)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateIntegration")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Integration" common-lisp:nil)))
 (common-lisp:export 'update-integration))
(common-lisp:progn
 (common-lisp:defun update-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code
     patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-integration-response-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/resources/~a/methods/~a/integration/responses/~a"
                                                   restapi_id resource_id
                                                   http_method status_code)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateIntegrationResponse")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "IntegrationResponse" common-lisp:nil)))
 (common-lisp:export 'update-integration-response))
(common-lisp:progn
 (common-lisp:defun update-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method
     patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-method-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/resources/~a/methods/~a"
                                                   restapi_id resource_id
                                                   http_method)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateMethod")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Method" common-lisp:nil)))
 (common-lisp:export 'update-method))
(common-lisp:progn
 (common-lisp:defun update-method-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code
     patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-method-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/resources/~a/methods/~a/responses/~a"
                                                   restapi_id resource_id
                                                   http_method status_code)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateMethodResponse")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "MethodResponse" common-lisp:nil)))
 (common-lisp:export 'update-method-response))
(common-lisp:progn
 (common-lisp:defun update-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id model-name patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id model-name patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/models/~a"
                                                   restapi_id model_name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateModel")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Model" common-lisp:nil)))
 (common-lisp:export 'update-model))
(common-lisp:progn
 (common-lisp:defun update-request-validator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id request-validator-id
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id request-validator-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-request-validator-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/requestvalidators/~a"
                                                   restapi_id
                                                   requestvalidator_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateRequestValidator")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RequestValidator" common-lisp:nil)))
 (common-lisp:export 'update-request-validator))
(common-lisp:progn
 (common-lisp:defun update-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/resources/~a"
                                                   restapi_id resource_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateResource")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Resource" common-lisp:nil)))
 (common-lisp:export 'update-resource))
(common-lisp:progn
 (common-lisp:defun update-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id patch-operations)
   (common-lisp:declare (common-lisp:ignorable rest-api-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a" restapi_id)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateRestApi")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RestApi" common-lisp:nil)))
 (common-lisp:export 'update-rest-api))
(common-lisp:progn
 (common-lisp:defun update-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id stage-name patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/restapis/~a/stages/~a"
                                                   restapi_id stage_name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateStage")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Stage" common-lisp:nil)))
 (common-lisp:export 'update-stage))
(common-lisp:progn
 (common-lisp:defun update-usage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id key-id patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable usage-plan-id key-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-usage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/usageplans/~a/keys/~a/usage"
                                                   usageplanid keyid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateUsage")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "Usage" common-lisp:nil)))
 (common-lisp:export 'update-usage))
(common-lisp:progn
 (common-lisp:defun update-usage-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id patch-operations)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-usage-plan-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "apigateway")
                               :method :patch :path
                               (common-lisp:format common-lisp:nil
                                                   "/usageplans/~a"
                                                   usageplanid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateUsagePlan")
                                  ("Version" ,@"2015-07-09"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UsagePlan" common-lisp:nil)))
 (common-lisp:export 'update-usage-plan))