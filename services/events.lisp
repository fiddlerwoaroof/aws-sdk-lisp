;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/events
  (:use)
  (:nicknames #:aws/events)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/events)

(common-lisp:deftype action () 'common-lisp:string)
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct
     (concurrent-modification-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'concurrent-modification-exception
                    'make-concurrent-modification-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          concurrent-modification-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-rule-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or rule-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-rule-request 'make-delete-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-rule-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-event-bus-request (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'describe-event-bus-request
                    'make-describe-event-bus-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-event-bus-request))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (describe-event-bus-response (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (policy common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-event-bus-response
                    'make-describe-event-bus-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-event-bus-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "Policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-rule-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or rule-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-rule-request 'make-describe-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-rule-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-rule-response (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or rule-name common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or rule-arn common-lisp:null))
   (event-pattern common-lisp:nil :type
    (common-lisp:or event-pattern common-lisp:null))
   (schedule-expression common-lisp:nil :type
    (common-lisp:or schedule-expression common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or rule-state common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or rule-description common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-rule-response 'make-describe-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-rule-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "EventPattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-pattern)))
    (aws-sdk/generator/shape::to-query-params "ScheduleExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schedule-expression)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "RoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (disable-rule-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or rule-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disable-rule-request 'make-disable-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape disable-rule-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (ecs-parameters (:copier common-lisp:nil))
   (task-definition-arn
    (common-lisp:error
     #A((32) common-lisp:base-char . ":task-definition-arn is required"))
    :type (common-lisp:or arn common-lisp:null))
   (task-count common-lisp:nil :type
    (common-lisp:or limit-min1 common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ecs-parameters 'make-ecs-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape ecs-parameters))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TaskDefinitionArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-definition-arn)))
    (aws-sdk/generator/shape::to-query-params "TaskCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'task-count))))))
(common-lisp:progn
 (common-lisp:defstruct (enable-rule-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or rule-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enable-rule-request 'make-enable-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape enable-rule-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:deftype event-id () 'common-lisp:string)
(common-lisp:deftype event-pattern () 'common-lisp:string)
(common-lisp:deftype event-resource () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype event-resource-list ()
   '(trivial-types:proper-list event-resource))
 (common-lisp:defun |make-event-resource-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-resource))
   aws-sdk/generator/shape::members))
(common-lisp:deftype event-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (input-transformer (:copier common-lisp:nil))
   (input-paths-map common-lisp:nil :type
    (common-lisp:or transformer-paths common-lisp:null))
   (input-template
    (common-lisp:error
     #A((27) common-lisp:base-char . ":input-template is required"))
    :type (common-lisp:or transformer-input common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'input-transformer 'make-input-transformer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape input-transformer))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InputPathsMap"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-paths-map)))
    (aws-sdk/generator/shape::to-query-params "InputTemplate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-template))))))
(common-lisp:deftype input-transformer-path-key () 'common-lisp:string)
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (internal-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'internal-exception 'make-internal-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape internal-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-event-pattern-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-event-pattern-exception
                    'make-invalid-event-pattern-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-event-pattern-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (kinesis-parameters (:copier common-lisp:nil))
   (partition-key-path
    (common-lisp:error
     #A((31) common-lisp:base-char . ":partition-key-path is required"))
    :type (common-lisp:or target-partition-key-path common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'kinesis-parameters 'make-kinesis-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape kinesis-parameters))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PartitionKeyPath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'partition-key-path))))))
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append)))
(common-lisp:deftype limit-max100 () 'common-lisp:integer)
(common-lisp:deftype limit-min1 () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (list-rule-names-by-target-request (:copier common-lisp:nil))
   (target-arn
    (common-lisp:error
     #A((23) common-lisp:base-char . ":target-arn is required"))
    :type (common-lisp:or target-arn common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or limit-max100 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-rule-names-by-target-request
                    'make-list-rule-names-by-target-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-rule-names-by-target-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-arn)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-rule-names-by-target-response (:copier common-lisp:nil))
   (rule-names common-lisp:nil :type
    (common-lisp:or rule-name-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-rule-names-by-target-response
                    'make-list-rule-names-by-target-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-rule-names-by-target-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-names)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-rules-request (:copier common-lisp:nil))
   (name-prefix common-lisp:nil :type
    (common-lisp:or rule-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or limit-max100 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-rules-request 'make-list-rules-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-rules-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NamePrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name-prefix)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct (list-rules-response (:copier common-lisp:nil))
   (rules common-lisp:nil :type
    (common-lisp:or rule-response-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-rules-response 'make-list-rules-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-rules-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-targets-by-rule-request (:copier common-lisp:nil))
   (rule
    (common-lisp:error #A((17) common-lisp:base-char . ":rule is required"))
    :type (common-lisp:or rule-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or limit-max100 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-targets-by-rule-request
                    'make-list-targets-by-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-targets-by-rule-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Rule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-targets-by-rule-response (:copier common-lisp:nil))
   (targets common-lisp:nil :type
    (common-lisp:or target-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-targets-by-rule-response
                    'make-list-targets-by-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-targets-by-rule-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (policy-length-exceeded-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'policy-length-exceeded-exception
                    'make-policy-length-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          policy-length-exceeded-exception))
   (common-lisp:append)))
(common-lisp:deftype principal () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (put-events-request (:copier common-lisp:nil))
   (entries
    (common-lisp:error #A((20) common-lisp:base-char . ":entries is required"))
    :type (common-lisp:or put-events-request-entry-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-events-request 'make-put-events-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape put-events-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Entries"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'entries))))))
(common-lisp:progn
 (common-lisp:defstruct (put-events-request-entry (:copier common-lisp:nil))
   (time common-lisp:nil :type (common-lisp:or event-time common-lisp:null))
   (source common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (resources common-lisp:nil :type
    (common-lisp:or event-resource-list common-lisp:null))
   (detail-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (detail common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-events-request-entry 'make-put-events-request-entry))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-events-request-entry))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Time"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'time)))
    (aws-sdk/generator/shape::to-query-params "Source"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source)))
    (aws-sdk/generator/shape::to-query-params "Resources"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'resources)))
    (aws-sdk/generator/shape::to-query-params "DetailType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'detail-type)))
    (aws-sdk/generator/shape::to-query-params "Detail"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'detail))))))
(common-lisp:progn
 (common-lisp:deftype put-events-request-entry-list ()
   '(trivial-types:proper-list put-events-request-entry))
 (common-lisp:defun |make-put-events-request-entry-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            put-events-request-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (put-events-response (:copier common-lisp:nil))
   (failed-entry-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (entries common-lisp:nil :type
    (common-lisp:or put-events-result-entry-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-events-response 'make-put-events-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape put-events-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FailedEntryCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-entry-count)))
    (aws-sdk/generator/shape::to-query-params "Entries"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'entries))))))
(common-lisp:progn
 (common-lisp:defstruct (put-events-result-entry (:copier common-lisp:nil))
   (event-id common-lisp:nil :type (common-lisp:or event-id common-lisp:null))
   (error-code common-lisp:nil :type
    (common-lisp:or error-code common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-events-result-entry 'make-put-events-result-entry))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-events-result-entry))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EventId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-id)))
    (aws-sdk/generator/shape::to-query-params "ErrorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code)))
    (aws-sdk/generator/shape::to-query-params "ErrorMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-message))))))
(common-lisp:progn
 (common-lisp:deftype put-events-result-entry-list ()
   '(trivial-types:proper-list put-events-result-entry))
 (common-lisp:defun |make-put-events-result-entry-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list put-events-result-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (put-permission-request (:copier common-lisp:nil))
   (action
    (common-lisp:error #A((19) common-lisp:base-char . ":action is required"))
    :type (common-lisp:or action common-lisp:null))
   (principal
    (common-lisp:error
     #A((22) common-lisp:base-char . ":principal is required"))
    :type (common-lisp:or principal common-lisp:null))
   (statement-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":statement-id is required"))
    :type (common-lisp:or statement-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-permission-request 'make-put-permission-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-permission-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action)))
    (aws-sdk/generator/shape::to-query-params "Principal"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'principal)))
    (aws-sdk/generator/shape::to-query-params "StatementId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'statement-id))))))
(common-lisp:progn
 (common-lisp:defstruct (put-rule-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or rule-name common-lisp:null))
   (schedule-expression common-lisp:nil :type
    (common-lisp:or schedule-expression common-lisp:null))
   (event-pattern common-lisp:nil :type
    (common-lisp:or event-pattern common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or rule-state common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or rule-description common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-rule-request 'make-put-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape put-rule-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "ScheduleExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schedule-expression)))
    (aws-sdk/generator/shape::to-query-params "EventPattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-pattern)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "RoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (put-rule-response (:copier common-lisp:nil))
   (rule-arn common-lisp:nil :type (common-lisp:or rule-arn common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-rule-response 'make-put-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape put-rule-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-arn))))))
(common-lisp:progn
 (common-lisp:defstruct (put-targets-request (:copier common-lisp:nil))
   (rule
    (common-lisp:error #A((17) common-lisp:base-char . ":rule is required"))
    :type (common-lisp:or rule-name common-lisp:null))
   (targets
    (common-lisp:error #A((20) common-lisp:base-char . ":targets is required"))
    :type (common-lisp:or target-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-targets-request 'make-put-targets-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape put-targets-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Rule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule)))
    (aws-sdk/generator/shape::to-query-params "Targets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'targets))))))
(common-lisp:progn
 (common-lisp:defstruct (put-targets-response (:copier common-lisp:nil))
   (failed-entry-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (failed-entries common-lisp:nil :type
    (common-lisp:or put-targets-result-entry-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-targets-response 'make-put-targets-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape put-targets-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FailedEntryCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-entry-count)))
    (aws-sdk/generator/shape::to-query-params "FailedEntries"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-entries))))))
(common-lisp:progn
 (common-lisp:defstruct (put-targets-result-entry (:copier common-lisp:nil))
   (target-id common-lisp:nil :type
    (common-lisp:or target-id common-lisp:null))
   (error-code common-lisp:nil :type
    (common-lisp:or error-code common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-targets-result-entry 'make-put-targets-result-entry))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-targets-result-entry))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-id)))
    (aws-sdk/generator/shape::to-query-params "ErrorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code)))
    (aws-sdk/generator/shape::to-query-params "ErrorMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-message))))))
(common-lisp:progn
 (common-lisp:deftype put-targets-result-entry-list ()
   '(trivial-types:proper-list put-targets-result-entry))
 (common-lisp:defun |make-put-targets-result-entry-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            put-targets-result-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (remove-permission-request (:copier common-lisp:nil))
   (statement-id
    (common-lisp:error
     #A((25) common-lisp:base-char . ":statement-id is required"))
    :type (common-lisp:or statement-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-permission-request
                    'make-remove-permission-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          remove-permission-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StatementId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'statement-id))))))
(common-lisp:progn
 (common-lisp:defstruct (remove-targets-request (:copier common-lisp:nil))
   (rule
    (common-lisp:error #A((17) common-lisp:base-char . ":rule is required"))
    :type (common-lisp:or rule-name common-lisp:null))
   (ids (common-lisp:error #A((16) common-lisp:base-char . ":ids is required"))
    :type (common-lisp:or target-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-targets-request 'make-remove-targets-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          remove-targets-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Rule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule)))
    (aws-sdk/generator/shape::to-query-params "Ids"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ids))))))
(common-lisp:progn
 (common-lisp:defstruct (remove-targets-response (:copier common-lisp:nil))
   (failed-entry-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (failed-entries common-lisp:nil :type
    (common-lisp:or remove-targets-result-entry-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-targets-response 'make-remove-targets-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          remove-targets-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FailedEntryCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-entry-count)))
    (aws-sdk/generator/shape::to-query-params "FailedEntries"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failed-entries))))))
(common-lisp:progn
 (common-lisp:defstruct (remove-targets-result-entry (:copier common-lisp:nil))
   (target-id common-lisp:nil :type
    (common-lisp:or target-id common-lisp:null))
   (error-code common-lisp:nil :type
    (common-lisp:or error-code common-lisp:null))
   (error-message common-lisp:nil :type
    (common-lisp:or error-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-targets-result-entry
                    'make-remove-targets-result-entry))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          remove-targets-result-entry))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TargetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-id)))
    (aws-sdk/generator/shape::to-query-params "ErrorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code)))
    (aws-sdk/generator/shape::to-query-params "ErrorMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-message))))))
(common-lisp:progn
 (common-lisp:deftype remove-targets-result-entry-list ()
   '(trivial-types:proper-list remove-targets-result-entry))
 (common-lisp:defun |make-remove-targets-result-entry-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            remove-targets-result-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'make-resource-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-not-found-exception))
   (common-lisp:append)))
(common-lisp:deftype role-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (rule (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or rule-name common-lisp:null))
   (arn common-lisp:nil :type (common-lisp:or rule-arn common-lisp:null))
   (event-pattern common-lisp:nil :type
    (common-lisp:or event-pattern common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or rule-state common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or rule-description common-lisp:null))
   (schedule-expression common-lisp:nil :type
    (common-lisp:or schedule-expression common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or role-arn common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rule 'make-rule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape rule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "EventPattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-pattern)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "ScheduleExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'schedule-expression)))
    (aws-sdk/generator/shape::to-query-params "RoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:deftype rule-arn () 'common-lisp:string)
(common-lisp:deftype rule-description () 'common-lisp:string)
(common-lisp:deftype rule-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype rule-name-list () '(trivial-types:proper-list rule-name))
 (common-lisp:defun |make-rule-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rule-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype rule-response-list () '(trivial-types:proper-list rule))
 (common-lisp:defun |make-rule-response-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rule))
   aws-sdk/generator/shape::members))
(common-lisp:deftype rule-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (run-command-parameters (:copier common-lisp:nil))
   (run-command-targets
    (common-lisp:error
     #A((32) common-lisp:base-char . ":run-command-targets is required"))
    :type (common-lisp:or run-command-targets common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'run-command-parameters 'make-run-command-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          run-command-parameters))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RunCommandTargets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'run-command-targets))))))
(common-lisp:progn
 (common-lisp:defstruct (run-command-target (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or run-command-target-key common-lisp:null))
   (values
    (common-lisp:error #A((19) common-lisp:base-char . ":values is required"))
    :type (common-lisp:or run-command-target-values common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'run-command-target 'make-run-command-target))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape run-command-target))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values))))))
(common-lisp:deftype run-command-target-key () 'common-lisp:string)
(common-lisp:deftype run-command-target-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype run-command-target-values ()
   '(trivial-types:proper-list run-command-target-value))
 (common-lisp:defun |make-run-command-target-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            run-command-target-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype run-command-targets ()
   '(trivial-types:proper-list run-command-target))
 (common-lisp:defun |make-run-command-targets|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list run-command-target))
   aws-sdk/generator/shape::members))
(common-lisp:deftype schedule-expression () 'common-lisp:string)
(common-lisp:deftype statement-id () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (target (:copier common-lisp:nil))
   (id (common-lisp:error #A((15) common-lisp:base-char . ":id is required"))
    :type (common-lisp:or target-id common-lisp:null))
   (arn (common-lisp:error #A((16) common-lisp:base-char . ":arn is required"))
    :type (common-lisp:or target-arn common-lisp:null))
   (role-arn common-lisp:nil :type (common-lisp:or role-arn common-lisp:null))
   (input common-lisp:nil :type (common-lisp:or target-input common-lisp:null))
   (input-path common-lisp:nil :type
    (common-lisp:or target-input-path common-lisp:null))
   (input-transformer common-lisp:nil :type
    (common-lisp:or input-transformer common-lisp:null))
   (kinesis-parameters common-lisp:nil :type
    (common-lisp:or kinesis-parameters common-lisp:null))
   (run-command-parameters common-lisp:nil :type
    (common-lisp:or run-command-parameters common-lisp:null))
   (ecs-parameters common-lisp:nil :type
    (common-lisp:or ecs-parameters common-lisp:null)))
 (common-lisp:export (common-lisp:list 'target 'make-target))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape target))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Id"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'id)))
    (aws-sdk/generator/shape::to-query-params "Arn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'arn)))
    (aws-sdk/generator/shape::to-query-params "RoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "Input"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input)))
    (aws-sdk/generator/shape::to-query-params "InputPath"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-path)))
    (aws-sdk/generator/shape::to-query-params "InputTransformer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'input-transformer)))
    (aws-sdk/generator/shape::to-query-params "KinesisParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'kinesis-parameters)))
    (aws-sdk/generator/shape::to-query-params "RunCommandParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'run-command-parameters)))
    (aws-sdk/generator/shape::to-query-params "EcsParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ecs-parameters))))))
(common-lisp:deftype target-arn () 'common-lisp:string)
(common-lisp:deftype target-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype target-id-list () '(trivial-types:proper-list target-id))
 (common-lisp:defun |make-target-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list target-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype target-input () 'common-lisp:string)
(common-lisp:deftype target-input-path () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype target-list () '(trivial-types:proper-list target))
 (common-lisp:defun |make-target-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list target))
   aws-sdk/generator/shape::members))
(common-lisp:deftype target-partition-key-path () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (test-event-pattern-request (:copier common-lisp:nil))
   (event-pattern
    (common-lisp:error
     #A((26) common-lisp:base-char . ":event-pattern is required"))
    :type (common-lisp:or event-pattern common-lisp:null))
   (event
    (common-lisp:error #A((18) common-lisp:base-char . ":event is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-event-pattern-request
                    'make-test-event-pattern-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          test-event-pattern-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "EventPattern"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-pattern)))
    (aws-sdk/generator/shape::to-query-params "Event"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event))))))
(common-lisp:progn
 (common-lisp:defstruct (test-event-pattern-response (:copier common-lisp:nil))
   (result common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'test-event-pattern-response
                    'make-test-event-pattern-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          test-event-pattern-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Result"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result))))))
(common-lisp:deftype transformer-input () 'common-lisp:string)
(common-lisp:defstruct
    (transformer-paths
     (:constructor |make-transformer-paths|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:progn
 (common-lisp:defun delete-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "events") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteRule")
                                  ("Version" ,@"2015-10-07"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-rule))
(common-lisp:progn
 (common-lisp:defun describe-event-bus ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service #A((6) common-lisp:base-char . "events")
                             :method :post :params
                             (common-lisp:cons "Action" "DescribeEventBus"))
    "DescribeEventBusResponse" common-lisp:nil))
 (common-lisp:export 'describe-event-bus))
(common-lisp:progn
 (common-lisp:defun describe-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "events") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeRule")
                                  ("Version" ,@"2015-10-07"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeRuleResponse" common-lisp:nil)))
 (common-lisp:export 'describe-rule))
(common-lisp:progn
 (common-lisp:defun disable-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disable-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "events") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"DisableRule")
                                  ("Version" ,@"2015-10-07"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'disable-rule))
(common-lisp:progn
 (common-lisp:defun enable-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-enable-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "events") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"EnableRule")
                                  ("Version" ,@"2015-10-07"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'enable-rule))
(common-lisp:progn
 (common-lisp:defun list-rule-names-by-target
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-arn next-token limit)
   (common-lisp:declare (common-lisp:ignorable target-arn next-token limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-rule-names-by-target-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "events") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListRuleNamesByTarget")
                                  ("Version" ,@"2015-10-07"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListRuleNamesByTargetResponse" common-lisp:nil)))
 (common-lisp:export 'list-rule-names-by-target))
(common-lisp:progn
 (common-lisp:defun list-rules
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name-prefix next-token limit)
   (common-lisp:declare (common-lisp:ignorable name-prefix next-token limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-rules-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "events") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListRules")
                                  ("Version" ,@"2015-10-07"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListRulesResponse" common-lisp:nil)))
 (common-lisp:export 'list-rules))
(common-lisp:progn
 (common-lisp:defun list-targets-by-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule next-token limit)
   (common-lisp:declare (common-lisp:ignorable rule next-token limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-targets-by-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "events") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListTargetsByRule")
                                  ("Version" ,@"2015-10-07"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListTargetsByRuleResponse" common-lisp:nil)))
 (common-lisp:export 'list-targets-by-rule))
(common-lisp:progn
 (common-lisp:defun put-events
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key entries)
   (common-lisp:declare (common-lisp:ignorable entries))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-events-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "events") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutEvents")
                                  ("Version" ,@"2015-10-07"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutEventsResponse" common-lisp:nil)))
 (common-lisp:export 'put-events))
(common-lisp:progn
 (common-lisp:defun put-permission
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key action principal statement-id)
   (common-lisp:declare (common-lisp:ignorable action principal statement-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-permission-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "events") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutPermission")
                                  ("Version" ,@"2015-10-07"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-permission))
(common-lisp:progn
 (common-lisp:defun put-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name schedule-expression event-pattern
                     state description role-arn)
   (common-lisp:declare
    (common-lisp:ignorable name schedule-expression event-pattern state
     description role-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "events") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutRule")
                                  ("Version" ,@"2015-10-07"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutRuleResponse" common-lisp:nil)))
 (common-lisp:export 'put-rule))
(common-lisp:progn
 (common-lisp:defun put-targets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule targets)
   (common-lisp:declare (common-lisp:ignorable rule targets))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-targets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "events") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutTargets")
                                  ("Version" ,@"2015-10-07"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutTargetsResponse" common-lisp:nil)))
 (common-lisp:export 'put-targets))
(common-lisp:progn
 (common-lisp:defun remove-permission
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key statement-id)
   (common-lisp:declare (common-lisp:ignorable statement-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-permission-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "events") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"RemovePermission")
                                  ("Version" ,@"2015-10-07"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'remove-permission))
(common-lisp:progn
 (common-lisp:defun remove-targets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule ids)
   (common-lisp:declare (common-lisp:ignorable rule ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-targets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "events") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"RemoveTargets")
                                  ("Version" ,@"2015-10-07"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RemoveTargetsResponse" common-lisp:nil)))
 (common-lisp:export 'remove-targets))
(common-lisp:progn
 (common-lisp:defun test-event-pattern
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key event-pattern event)
   (common-lisp:declare (common-lisp:ignorable event-pattern event))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-test-event-pattern-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((6) common-lisp:base-char . "events") :method
                               :post :params
                               (common-lisp:append
                                `(("Action" ,@"TestEventPattern")
                                  ("Version" ,@"2015-10-07"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "TestEventPatternResponse" common-lisp:nil)))
 (common-lisp:export 'test-event-pattern))