;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/ecr
  (:use)
  (:nicknames #:aws/ecr)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/ecr)

(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (authorization-data (:copier common-lisp:nil))
   (authorization-token common-lisp:nil :type
    (common-lisp:or base64 common-lisp:null))
   (expires-at common-lisp:nil :type
    (common-lisp:or expiration-timestamp common-lisp:null))
   (proxy-endpoint common-lisp:nil :type
    (common-lisp:or proxy-endpoint common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'authorization-data 'make-authorization-data))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape authorization-data))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "authorizationToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authorization-token)))
    (aws-sdk/generator/shape::to-query-params "expiresAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expires-at)))
    (aws-sdk/generator/shape::to-query-params "proxyEndpoint"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'proxy-endpoint))))))
(common-lisp:progn
 (common-lisp:deftype authorization-data-list ()
   '(trivial-types:proper-list authorization-data))
 (common-lisp:defun |make-authorization-data-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list authorization-data))
   aws-sdk/generator/shape::members))
(common-lisp:deftype base64 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (batch-check-layer-availability-request (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null))
   (layer-digests
    (common-lisp:error
     #A((25) common-lisp:base-char . ":layerdigests is required"))
    :type
    (common-lisp:or batched-operation-layer-digest-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-check-layer-availability-request
                    'make-batch-check-layer-availability-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-check-layer-availability-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "layerDigests"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-digests))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-check-layer-availability-response (:copier common-lisp:nil))
   (layers common-lisp:nil :type (common-lisp:or layer-list common-lisp:null))
   (failures common-lisp:nil :type
    (common-lisp:or layer-failure-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-check-layer-availability-response
                    'make-batch-check-layer-availability-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-check-layer-availability-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "layers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layers)))
    (aws-sdk/generator/shape::to-query-params "failures"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failures))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-delete-image-request (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null))
   (image-ids
    (common-lisp:error
     #A((21) common-lisp:base-char . ":imageids is required"))
    :type (common-lisp:or image-identifier-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-delete-image-request
                    'make-batch-delete-image-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-delete-image-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "imageIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-delete-image-response (:copier common-lisp:nil))
   (image-ids common-lisp:nil :type
    (common-lisp:or image-identifier-list common-lisp:null))
   (failures common-lisp:nil :type
    (common-lisp:or image-failure-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-delete-image-response
                    'make-batch-delete-image-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-delete-image-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "imageIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-ids)))
    (aws-sdk/generator/shape::to-query-params "failures"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failures))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-get-image-request (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null))
   (image-ids
    (common-lisp:error
     #A((21) common-lisp:base-char . ":imageids is required"))
    :type (common-lisp:or image-identifier-list common-lisp:null))
   (accepted-media-types common-lisp:nil :type
    (common-lisp:or media-type-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-image-request 'make-batch-get-image-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-image-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "imageIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-ids)))
    (aws-sdk/generator/shape::to-query-params "acceptedMediaTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accepted-media-types))))))
(common-lisp:progn
 (common-lisp:defstruct (batch-get-image-response (:copier common-lisp:nil))
   (images common-lisp:nil :type (common-lisp:or image-list common-lisp:null))
   (failures common-lisp:nil :type
    (common-lisp:or image-failure-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-get-image-response 'make-batch-get-image-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-get-image-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "images"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'images)))
    (aws-sdk/generator/shape::to-query-params "failures"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failures))))))
(common-lisp:deftype batched-operation-layer-digest () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype batched-operation-layer-digest-list ()
   '(trivial-types:proper-list batched-operation-layer-digest))
 (common-lisp:defun |make-batched-operation-layer-digest-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batched-operation-layer-digest))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (complete-layer-upload-request (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null))
   (upload-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":uploadid is required"))
    :type (common-lisp:or upload-id common-lisp:null))
   (layer-digests
    (common-lisp:error
     #A((25) common-lisp:base-char . ":layerdigests is required"))
    :type (common-lisp:or layer-digest-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'complete-layer-upload-request
                    'make-complete-layer-upload-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          complete-layer-upload-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "uploadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-id)))
    (aws-sdk/generator/shape::to-query-params "layerDigests"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-digests))))))
(common-lisp:progn
 (common-lisp:defstruct
     (complete-layer-upload-response (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name common-lisp:nil :type
    (common-lisp:or repository-name common-lisp:null))
   (upload-id common-lisp:nil :type
    (common-lisp:or upload-id common-lisp:null))
   (layer-digest common-lisp:nil :type
    (common-lisp:or layer-digest common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'complete-layer-upload-response
                    'make-complete-layer-upload-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          complete-layer-upload-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "uploadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-id)))
    (aws-sdk/generator/shape::to-query-params "layerDigest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-digest))))))
(common-lisp:progn
 (common-lisp:defstruct (create-repository-request (:copier common-lisp:nil))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-repository-request
                    'make-create-repository-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-repository-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name))))))
(common-lisp:progn
 (common-lisp:defstruct (create-repository-response (:copier common-lisp:nil))
   (repository common-lisp:nil :type
    (common-lisp:or repository common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-repository-response
                    'make-create-repository-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-repository-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repository"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository))))))
(common-lisp:deftype creation-timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (delete-repository-policy-request (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-repository-policy-request
                    'make-delete-repository-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-repository-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-repository-policy-response (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name common-lisp:nil :type
    (common-lisp:or repository-name common-lisp:null))
   (policy-text common-lisp:nil :type
    (common-lisp:or repository-policy-text common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-repository-policy-response
                    'make-delete-repository-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-repository-policy-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "policyText"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-text))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-repository-request (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null))
   (force common-lisp:nil :type (common-lisp:or force-flag common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-repository-request
                    'make-delete-repository-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-repository-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "force"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'force))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-repository-response (:copier common-lisp:nil))
   (repository common-lisp:nil :type
    (common-lisp:or repository common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-repository-response
                    'make-delete-repository-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-repository-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repository"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-images-filter (:copier common-lisp:nil))
   (tag-status common-lisp:nil :type
    (common-lisp:or tag-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-images-filter 'make-describe-images-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-images-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "tagStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-status))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-images-request (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null))
   (image-ids common-lisp:nil :type
    (common-lisp:or image-identifier-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (filter common-lisp:nil :type
    (common-lisp:or describe-images-filter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-images-request 'make-describe-images-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-images-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "imageIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-ids)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "filter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-images-response (:copier common-lisp:nil))
   (image-details common-lisp:nil :type
    (common-lisp:or image-detail-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-images-response 'make-describe-images-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-images-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "imageDetails"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-details)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-repositories-request (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-names common-lisp:nil :type
    (common-lisp:or repository-name-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-repositories-request
                    'make-describe-repositories-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-repositories-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-names)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-repositories-response (:copier common-lisp:nil))
   (repositories common-lisp:nil :type
    (common-lisp:or repository-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-repositories-response
                    'make-describe-repositories-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-repositories-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositories"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repositories)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (empty-upload-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'empty-upload-exception 'make-empty-upload-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          empty-upload-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype exception-message () 'common-lisp:string)
(common-lisp:deftype expiration-timestamp () 'common-lisp:string)
(common-lisp:deftype force-flag () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:deftype get-authorization-token-registry-id-list ()
   '(trivial-types:proper-list registry-id))
 (common-lisp:defun |make-get-authorization-token-registry-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list registry-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (get-authorization-token-request (:copier common-lisp:nil))
   (registry-ids common-lisp:nil :type
    (common-lisp:or get-authorization-token-registry-id-list
                    common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-authorization-token-request
                    'make-get-authorization-token-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-authorization-token-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-ids))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-authorization-token-response (:copier common-lisp:nil))
   (authorization-data common-lisp:nil :type
    (common-lisp:or authorization-data-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-authorization-token-response
                    'make-get-authorization-token-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-authorization-token-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "authorizationData"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'authorization-data))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-download-url-for-layer-request (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null))
   (layer-digest
    (common-lisp:error
     #A((24) common-lisp:base-char . ":layerdigest is required"))
    :type (common-lisp:or layer-digest common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-download-url-for-layer-request
                    'make-get-download-url-for-layer-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-download-url-for-layer-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "layerDigest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-digest))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-download-url-for-layer-response (:copier common-lisp:nil))
   (download-url common-lisp:nil :type (common-lisp:or url common-lisp:null))
   (layer-digest common-lisp:nil :type
    (common-lisp:or layer-digest common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-download-url-for-layer-response
                    'make-get-download-url-for-layer-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-download-url-for-layer-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "downloadUrl"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'download-url)))
    (aws-sdk/generator/shape::to-query-params "layerDigest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-digest))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-repository-policy-request (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-repository-policy-request
                    'make-get-repository-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-repository-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-repository-policy-response (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name common-lisp:nil :type
    (common-lisp:or repository-name common-lisp:null))
   (policy-text common-lisp:nil :type
    (common-lisp:or repository-policy-text common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-repository-policy-response
                    'make-get-repository-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-repository-policy-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "policyText"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-text))))))
(common-lisp:progn
 (common-lisp:defstruct (image (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name common-lisp:nil :type
    (common-lisp:or repository-name common-lisp:null))
   (image-id common-lisp:nil :type
    (common-lisp:or image-identifier common-lisp:null))
   (image-manifest common-lisp:nil :type
    (common-lisp:or image-manifest common-lisp:null)))
 (common-lisp:export (common-lisp:list 'image 'make-image))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape image))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "imageId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-id)))
    (aws-sdk/generator/shape::to-query-params "imageManifest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-manifest))))))
(common-lisp:progn
 (common-lisp:defstruct
     (image-already-exists-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'image-already-exists-exception
                    'make-image-already-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          image-already-exists-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (image-detail (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name common-lisp:nil :type
    (common-lisp:or repository-name common-lisp:null))
   (image-digest common-lisp:nil :type
    (common-lisp:or image-digest common-lisp:null))
   (image-tags common-lisp:nil :type
    (common-lisp:or image-tag-list common-lisp:null))
   (image-size-in-bytes common-lisp:nil :type
    (common-lisp:or image-size-in-bytes common-lisp:null))
   (image-pushed-at common-lisp:nil :type
    (common-lisp:or push-timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'image-detail 'make-image-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape image-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "imageDigest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-digest)))
    (aws-sdk/generator/shape::to-query-params "imageTags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-tags)))
    (aws-sdk/generator/shape::to-query-params "imageSizeInBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-size-in-bytes)))
    (aws-sdk/generator/shape::to-query-params "imagePushedAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-pushed-at))))))
(common-lisp:progn
 (common-lisp:deftype image-detail-list ()
   '(trivial-types:proper-list image-detail))
 (common-lisp:defun |make-image-detail-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list image-detail))
   aws-sdk/generator/shape::members))
(common-lisp:deftype image-digest () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (image-failure (:copier common-lisp:nil))
   (image-id common-lisp:nil :type
    (common-lisp:or image-identifier common-lisp:null))
   (failure-code common-lisp:nil :type
    (common-lisp:or image-failure-code common-lisp:null))
   (failure-reason common-lisp:nil :type
    (common-lisp:or image-failure-reason common-lisp:null)))
 (common-lisp:export (common-lisp:list 'image-failure 'make-image-failure))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape image-failure))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "imageId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-id)))
    (aws-sdk/generator/shape::to-query-params "failureCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failure-code)))
    (aws-sdk/generator/shape::to-query-params "failureReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failure-reason))))))
(common-lisp:deftype image-failure-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype image-failure-list ()
   '(trivial-types:proper-list image-failure))
 (common-lisp:defun |make-image-failure-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list image-failure))
   aws-sdk/generator/shape::members))
(common-lisp:deftype image-failure-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (image-identifier (:copier common-lisp:nil))
   (image-digest common-lisp:nil :type
    (common-lisp:or image-digest common-lisp:null))
   (image-tag common-lisp:nil :type
    (common-lisp:or image-tag common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'image-identifier 'make-image-identifier))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape image-identifier))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "imageDigest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-digest)))
    (aws-sdk/generator/shape::to-query-params "imageTag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-tag))))))
(common-lisp:progn
 (common-lisp:deftype image-identifier-list ()
   '(trivial-types:proper-list image-identifier))
 (common-lisp:defun |make-image-identifier-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list image-identifier))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype image-list () '(trivial-types:proper-list image))
 (common-lisp:defun |make-image-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list image))
   aws-sdk/generator/shape::members))
(common-lisp:deftype image-manifest () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (image-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'image-not-found-exception
                    'make-image-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          image-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype image-size-in-bytes () 'common-lisp:integer)
(common-lisp:deftype image-tag () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype image-tag-list () '(trivial-types:proper-list image-tag))
 (common-lisp:defun |make-image-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list image-tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (initiate-layer-upload-request (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'initiate-layer-upload-request
                    'make-initiate-layer-upload-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          initiate-layer-upload-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (initiate-layer-upload-response (:copier common-lisp:nil))
   (upload-id common-lisp:nil :type
    (common-lisp:or upload-id common-lisp:null))
   (part-size common-lisp:nil :type
    (common-lisp:or part-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'initiate-layer-upload-response
                    'make-initiate-layer-upload-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          initiate-layer-upload-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "uploadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-id)))
    (aws-sdk/generator/shape::to-query-params "partSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'part-size))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-layer-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-layer-exception 'make-invalid-layer-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-layer-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-layer-part-exception (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name common-lisp:nil :type
    (common-lisp:or repository-name common-lisp:null))
   (upload-id common-lisp:nil :type
    (common-lisp:or upload-id common-lisp:null))
   (last-valid-byte-received common-lisp:nil :type
    (common-lisp:or part-size common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-layer-part-exception
                    'make-invalid-layer-part-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-layer-part-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "uploadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-id)))
    (aws-sdk/generator/shape::to-query-params "lastValidByteReceived"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-valid-byte-received)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-parameter-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-exception
                    'make-invalid-parameter-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-parameter-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (layer (:copier common-lisp:nil))
   (layer-digest common-lisp:nil :type
    (common-lisp:or layer-digest common-lisp:null))
   (layer-availability common-lisp:nil :type
    (common-lisp:or layer-availability common-lisp:null))
   (layer-size common-lisp:nil :type
    (common-lisp:or layer-size-in-bytes common-lisp:null))
   (media-type common-lisp:nil :type
    (common-lisp:or media-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'layer 'make-layer))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape layer))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "layerDigest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-digest)))
    (aws-sdk/generator/shape::to-query-params "layerAvailability"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-availability)))
    (aws-sdk/generator/shape::to-query-params "layerSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-size)))
    (aws-sdk/generator/shape::to-query-params "mediaType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'media-type))))))
(common-lisp:progn
 (common-lisp:defstruct
     (layer-already-exists-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'layer-already-exists-exception
                    'make-layer-already-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          layer-already-exists-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype layer-availability () 'common-lisp:string)
(common-lisp:deftype layer-digest () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype layer-digest-list ()
   '(trivial-types:proper-list layer-digest))
 (common-lisp:defun |make-layer-digest-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list layer-digest))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (layer-failure (:copier common-lisp:nil))
   (layer-digest common-lisp:nil :type
    (common-lisp:or batched-operation-layer-digest common-lisp:null))
   (failure-code common-lisp:nil :type
    (common-lisp:or layer-failure-code common-lisp:null))
   (failure-reason common-lisp:nil :type
    (common-lisp:or layer-failure-reason common-lisp:null)))
 (common-lisp:export (common-lisp:list 'layer-failure 'make-layer-failure))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape layer-failure))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "layerDigest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-digest)))
    (aws-sdk/generator/shape::to-query-params "failureCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failure-code)))
    (aws-sdk/generator/shape::to-query-params "failureReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failure-reason))))))
(common-lisp:deftype layer-failure-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype layer-failure-list ()
   '(trivial-types:proper-list layer-failure))
 (common-lisp:defun |make-layer-failure-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list layer-failure))
   aws-sdk/generator/shape::members))
(common-lisp:deftype layer-failure-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (layer-inaccessible-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'layer-inaccessible-exception
                    'make-layer-inaccessible-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          layer-inaccessible-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype layer-list () '(trivial-types:proper-list layer))
 (common-lisp:defun |make-layer-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list layer))
   aws-sdk/generator/shape::members))
(common-lisp:deftype layer-part-blob ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:defstruct
     (layer-part-too-small-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'layer-part-too-small-exception
                    'make-layer-part-too-small-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          layer-part-too-small-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype layer-size-in-bytes () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (layers-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'layers-not-found-exception
                    'make-layers-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          layers-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (list-images-filter (:copier common-lisp:nil))
   (tag-status common-lisp:nil :type
    (common-lisp:or tag-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-images-filter 'make-list-images-filter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-images-filter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "tagStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-status))))))
(common-lisp:progn
 (common-lisp:defstruct (list-images-request (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (filter common-lisp:nil :type
    (common-lisp:or list-images-filter common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-images-request 'make-list-images-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-images-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "filter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'filter))))))
(common-lisp:progn
 (common-lisp:defstruct (list-images-response (:copier common-lisp:nil))
   (image-ids common-lisp:nil :type
    (common-lisp:or image-identifier-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-images-response 'make-list-images-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-images-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "imageIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-ids)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype media-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype media-type-list ()
   '(trivial-types:proper-list media-type))
 (common-lisp:defun |make-media-type-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list media-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype part-size () 'common-lisp:integer)
(common-lisp:deftype proxy-endpoint () 'common-lisp:string)
(common-lisp:deftype push-timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (put-image-request (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null))
   (image-manifest
    (common-lisp:error
     #A((26) common-lisp:base-char . ":imagemanifest is required"))
    :type (common-lisp:or image-manifest common-lisp:null))
   (image-tag common-lisp:nil :type
    (common-lisp:or image-tag common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-image-request 'make-put-image-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape put-image-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "imageManifest"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-manifest)))
    (aws-sdk/generator/shape::to-query-params "imageTag"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image-tag))))))
(common-lisp:progn
 (common-lisp:defstruct (put-image-response (:copier common-lisp:nil))
   (image common-lisp:nil :type (common-lisp:or image common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-image-response 'make-put-image-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape put-image-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "image"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'image))))))
(common-lisp:deftype registry-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (repository (:copier common-lisp:nil))
   (repository-arn common-lisp:nil :type (common-lisp:or arn common-lisp:null))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name common-lisp:nil :type
    (common-lisp:or repository-name common-lisp:null))
   (repository-uri common-lisp:nil :type (common-lisp:or url common-lisp:null))
   (created-at common-lisp:nil :type
    (common-lisp:or creation-timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'repository 'make-repository))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape repository))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "repositoryArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-arn)))
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "repositoryUri"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-uri)))
    (aws-sdk/generator/shape::to-query-params "createdAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-at))))))
(common-lisp:progn
 (common-lisp:defstruct
     (repository-already-exists-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'repository-already-exists-exception
                    'make-repository-already-exists-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          repository-already-exists-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype repository-list ()
   '(trivial-types:proper-list repository))
 (common-lisp:defun |make-repository-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list repository))
   aws-sdk/generator/shape::members))
(common-lisp:deftype repository-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype repository-name-list ()
   '(trivial-types:proper-list repository-name))
 (common-lisp:defun |make-repository-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list repository-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (repository-not-empty-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'repository-not-empty-exception
                    'make-repository-not-empty-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          repository-not-empty-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (repository-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'repository-not-found-exception
                    'make-repository-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          repository-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (repository-policy-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'repository-policy-not-found-exception
                    'make-repository-policy-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          repository-policy-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype repository-policy-text () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (server-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'server-exception 'make-server-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape server-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (set-repository-policy-request (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null))
   (policy-text
    (common-lisp:error
     #A((23) common-lisp:base-char . ":policytext is required"))
    :type (common-lisp:or repository-policy-text common-lisp:null))
   (force common-lisp:nil :type (common-lisp:or force-flag common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-repository-policy-request
                    'make-set-repository-policy-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-repository-policy-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "policyText"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-text)))
    (aws-sdk/generator/shape::to-query-params "force"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'force))))))
(common-lisp:progn
 (common-lisp:defstruct
     (set-repository-policy-response (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name common-lisp:nil :type
    (common-lisp:or repository-name common-lisp:null))
   (policy-text common-lisp:nil :type
    (common-lisp:or repository-policy-text common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-repository-policy-response
                    'make-set-repository-policy-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-repository-policy-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "policyText"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-text))))))
(common-lisp:deftype tag-status () 'common-lisp:string)
(common-lisp:deftype upload-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (upload-layer-part-request (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name
    (common-lisp:error
     #A((27) common-lisp:base-char . ":repositoryname is required"))
    :type (common-lisp:or repository-name common-lisp:null))
   (upload-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":uploadid is required"))
    :type (common-lisp:or upload-id common-lisp:null))
   (part-first-byte
    (common-lisp:error
     #A((26) common-lisp:base-char . ":partfirstbyte is required"))
    :type (common-lisp:or part-size common-lisp:null))
   (part-last-byte
    (common-lisp:error
     #A((25) common-lisp:base-char . ":partlastbyte is required"))
    :type (common-lisp:or part-size common-lisp:null))
   (layer-part-blob
    (common-lisp:error
     #A((26) common-lisp:base-char . ":layerpartblob is required"))
    :type (common-lisp:or layer-part-blob common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'upload-layer-part-request
                    'make-upload-layer-part-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          upload-layer-part-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "uploadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-id)))
    (aws-sdk/generator/shape::to-query-params "partFirstByte"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'part-first-byte)))
    (aws-sdk/generator/shape::to-query-params "partLastByte"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'part-last-byte)))
    (aws-sdk/generator/shape::to-query-params "layerPartBlob"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'layer-part-blob))))))
(common-lisp:progn
 (common-lisp:defstruct (upload-layer-part-response (:copier common-lisp:nil))
   (registry-id common-lisp:nil :type
    (common-lisp:or registry-id common-lisp:null))
   (repository-name common-lisp:nil :type
    (common-lisp:or repository-name common-lisp:null))
   (upload-id common-lisp:nil :type
    (common-lisp:or upload-id common-lisp:null))
   (last-byte-received common-lisp:nil :type
    (common-lisp:or part-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'upload-layer-part-response
                    'make-upload-layer-part-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          upload-layer-part-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "registryId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'registry-id)))
    (aws-sdk/generator/shape::to-query-params "repositoryName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'repository-name)))
    (aws-sdk/generator/shape::to-query-params "uploadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-id)))
    (aws-sdk/generator/shape::to-query-params "lastByteReceived"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-byte-received))))))
(common-lisp:progn
 (common-lisp:defstruct (upload-not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'upload-not-found-exception
                    'make-upload-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          upload-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype url () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun batch-check-layer-availability
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key registry-id repository-name
                     layer-digests)
   (common-lisp:declare
    (common-lisp:ignorable registry-id repository-name layer-digests))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-check-layer-availability-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ecr" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"BatchCheckLayerAvailability")
                                  ("Version" ,@"2015-09-21"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BatchCheckLayerAvailabilityResponse" common-lisp:nil)))
 (common-lisp:export 'batch-check-layer-availability))
(common-lisp:progn
 (common-lisp:defun batch-delete-image
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key registry-id repository-name image-ids)
   (common-lisp:declare
    (common-lisp:ignorable registry-id repository-name image-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-delete-image-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ecr" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"BatchDeleteImage")
                                  ("Version" ,@"2015-09-21"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BatchDeleteImageResponse" common-lisp:nil)))
 (common-lisp:export 'batch-delete-image))
(common-lisp:progn
 (common-lisp:defun batch-get-image
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key registry-id repository-name image-ids
                     accepted-media-types)
   (common-lisp:declare
    (common-lisp:ignorable registry-id repository-name image-ids
     accepted-media-types))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-get-image-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ecr" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"BatchGetImage")
                                  ("Version" ,@"2015-09-21"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BatchGetImageResponse" common-lisp:nil)))
 (common-lisp:export 'batch-get-image))
(common-lisp:progn
 (common-lisp:defun complete-layer-upload
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key registry-id repository-name upload-id
                     layer-digests)
   (common-lisp:declare
    (common-lisp:ignorable registry-id repository-name upload-id
     layer-digests))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-complete-layer-upload-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ecr" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CompleteLayerUpload")
                                  ("Version" ,@"2015-09-21"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CompleteLayerUploadResponse" common-lisp:nil)))
 (common-lisp:export 'complete-layer-upload))
(common-lisp:progn
 (common-lisp:defun create-repository
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key repository-name)
   (common-lisp:declare (common-lisp:ignorable repository-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-repository-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ecr" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateRepository")
                                  ("Version" ,@"2015-09-21"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateRepositoryResponse" common-lisp:nil)))
 (common-lisp:export 'create-repository))
(common-lisp:progn
 (common-lisp:defun delete-repository
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key registry-id repository-name force)
   (common-lisp:declare
    (common-lisp:ignorable registry-id repository-name force))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-repository-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ecr" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteRepository")
                                  ("Version" ,@"2015-09-21"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteRepositoryResponse" common-lisp:nil)))
 (common-lisp:export 'delete-repository))
(common-lisp:progn
 (common-lisp:defun delete-repository-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key registry-id repository-name)
   (common-lisp:declare (common-lisp:ignorable registry-id repository-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-repository-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ecr" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteRepositoryPolicy")
                                  ("Version" ,@"2015-09-21"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteRepositoryPolicyResponse" common-lisp:nil)))
 (common-lisp:export 'delete-repository-policy))
(common-lisp:progn
 (common-lisp:defun describe-images
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key registry-id repository-name image-ids
                     next-token max-results filter)
   (common-lisp:declare
    (common-lisp:ignorable registry-id repository-name image-ids next-token
     max-results filter))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-images-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ecr" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeImages")
                                  ("Version" ,@"2015-09-21"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeImagesResponse" common-lisp:nil)))
 (common-lisp:export 'describe-images))
(common-lisp:progn
 (common-lisp:defun describe-repositories
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key registry-id repository-names next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable registry-id repository-names next-token
     max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-repositories-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ecr" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeRepositories")
                                  ("Version" ,@"2015-09-21"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeRepositoriesResponse" common-lisp:nil)))
 (common-lisp:export 'describe-repositories))
(common-lisp:progn
 (common-lisp:defun get-authorization-token
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key registry-ids)
   (common-lisp:declare (common-lisp:ignorable registry-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-authorization-token-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ecr" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetAuthorizationToken")
                                  ("Version" ,@"2015-09-21"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetAuthorizationTokenResponse" common-lisp:nil)))
 (common-lisp:export 'get-authorization-token))
(common-lisp:progn
 (common-lisp:defun get-download-url-for-layer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key registry-id repository-name layer-digest)
   (common-lisp:declare
    (common-lisp:ignorable registry-id repository-name layer-digest))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-download-url-for-layer-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ecr" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetDownloadUrlForLayer")
                                  ("Version" ,@"2015-09-21"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDownloadUrlForLayerResponse" common-lisp:nil)))
 (common-lisp:export 'get-download-url-for-layer))
(common-lisp:progn
 (common-lisp:defun get-repository-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key registry-id repository-name)
   (common-lisp:declare (common-lisp:ignorable registry-id repository-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-repository-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ecr" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetRepositoryPolicy")
                                  ("Version" ,@"2015-09-21"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetRepositoryPolicyResponse" common-lisp:nil)))
 (common-lisp:export 'get-repository-policy))
(common-lisp:progn
 (common-lisp:defun initiate-layer-upload
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key registry-id repository-name)
   (common-lisp:declare (common-lisp:ignorable registry-id repository-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-initiate-layer-upload-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ecr" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"InitiateLayerUpload")
                                  ("Version" ,@"2015-09-21"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "InitiateLayerUploadResponse" common-lisp:nil)))
 (common-lisp:export 'initiate-layer-upload))
(common-lisp:progn
 (common-lisp:defun list-images
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key registry-id repository-name next-token
                     max-results filter)
   (common-lisp:declare
    (common-lisp:ignorable registry-id repository-name next-token max-results
     filter))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-images-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ecr" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListImages")
                                  ("Version" ,@"2015-09-21"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListImagesResponse" common-lisp:nil)))
 (common-lisp:export 'list-images))
(common-lisp:progn
 (common-lisp:defun put-image
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key registry-id repository-name
                     image-manifest image-tag)
   (common-lisp:declare
    (common-lisp:ignorable registry-id repository-name image-manifest
     image-tag))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-image-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ecr" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutImage")
                                  ("Version" ,@"2015-09-21"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutImageResponse" common-lisp:nil)))
 (common-lisp:export 'put-image))
(common-lisp:progn
 (common-lisp:defun set-repository-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key registry-id repository-name policy-text
                     force)
   (common-lisp:declare
    (common-lisp:ignorable registry-id repository-name policy-text force))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-repository-policy-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ecr" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SetRepositoryPolicy")
                                  ("Version" ,@"2015-09-21"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SetRepositoryPolicyResponse" common-lisp:nil)))
 (common-lisp:export 'set-repository-policy))
(common-lisp:progn
 (common-lisp:defun upload-layer-part
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key registry-id repository-name upload-id
                     part-first-byte part-last-byte layer-part-blob)
   (common-lisp:declare
    (common-lisp:ignorable registry-id repository-name upload-id
     part-first-byte part-last-byte layer-part-blob))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-upload-layer-part-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service "ecr" :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UploadLayerPart")
                                  ("Version" ,@"2015-09-21"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UploadLayerPartResponse" common-lisp:nil)))
 (common-lisp:export 'upload-layer-part))