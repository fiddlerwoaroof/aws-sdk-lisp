;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/waf
  (:use)
  (:nicknames #:aws/waf)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/waf)

(common-lisp:deftype action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (activated-rule (:copier common-lisp:nil))
   (priority
    (common-lisp:error
     #A((21) common-lisp:base-char . ":priority is required"))
    :type (common-lisp:or rule-priority common-lisp:null))
   (rule-id
    (common-lisp:error #A((20) common-lisp:base-char . ":rule-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (action
    (common-lisp:error #A((19) common-lisp:base-char . ":action is required"))
    :type (common-lisp:or waf-action common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or waf-rule-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'activated-rule 'make-activated-rule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape activated-rule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Priority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'priority)))
    (aws-sdk/generator/shape::to-query-params "RuleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-id)))
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type))))))
(common-lisp:progn
 (common-lisp:deftype activated-rules ()
   '(trivial-types:proper-list activated-rule))
 (common-lisp:defun |make-activated-rules|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list activated-rule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (byte-match-set (:copier common-lisp:nil))
   (byte-match-set-id
    (common-lisp:error
     #A((30) common-lisp:base-char . ":byte-match-set-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (byte-match-tuples
    (common-lisp:error
     #A((30) common-lisp:base-char . ":byte-match-tuples is required"))
    :type (common-lisp:or byte-match-tuples common-lisp:null)))
 (common-lisp:export (common-lisp:list 'byte-match-set 'make-byte-match-set))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape byte-match-set))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ByteMatchSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'byte-match-set-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "ByteMatchTuples"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'byte-match-tuples))))))
(common-lisp:progn
 (common-lisp:deftype byte-match-set-summaries ()
   '(trivial-types:proper-list byte-match-set-summary))
 (common-lisp:defun |make-byte-match-set-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list byte-match-set-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (byte-match-set-summary (:copier common-lisp:nil))
   (byte-match-set-id
    (common-lisp:error
     #A((30) common-lisp:base-char . ":byte-match-set-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'byte-match-set-summary 'make-byte-match-set-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          byte-match-set-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ByteMatchSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'byte-match-set-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (byte-match-set-update (:copier common-lisp:nil))
   (action
    (common-lisp:error #A((19) common-lisp:base-char . ":action is required"))
    :type (common-lisp:or change-action common-lisp:null))
   (byte-match-tuple
    (common-lisp:error
     #A((29) common-lisp:base-char . ":byte-match-tuple is required"))
    :type (common-lisp:or byte-match-tuple common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'byte-match-set-update 'make-byte-match-set-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          byte-match-set-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action)))
    (aws-sdk/generator/shape::to-query-params "ByteMatchTuple"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'byte-match-tuple))))))
(common-lisp:progn
 (common-lisp:deftype byte-match-set-updates ()
   '(trivial-types:proper-list byte-match-set-update))
 (common-lisp:defun |make-byte-match-set-updates|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list byte-match-set-update))
   aws-sdk/generator/shape::members))
(common-lisp:deftype byte-match-target-string ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:defstruct (byte-match-tuple (:copier common-lisp:nil))
   (field-to-match
    (common-lisp:error
     #A((27) common-lisp:base-char . ":field-to-match is required"))
    :type (common-lisp:or field-to-match common-lisp:null))
   (target-string
    (common-lisp:error
     #A((26) common-lisp:base-char . ":target-string is required"))
    :type (common-lisp:or byte-match-target-string common-lisp:null))
   (text-transformation
    (common-lisp:error
     #A((32) common-lisp:base-char . ":text-transformation is required"))
    :type (common-lisp:or text-transformation common-lisp:null))
   (positional-constraint
    (common-lisp:error
     #A((34) common-lisp:base-char . ":positional-constraint is required"))
    :type (common-lisp:or positional-constraint common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'byte-match-tuple 'make-byte-match-tuple))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape byte-match-tuple))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FieldToMatch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'field-to-match)))
    (aws-sdk/generator/shape::to-query-params "TargetString"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-string)))
    (aws-sdk/generator/shape::to-query-params "TextTransformation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'text-transformation)))
    (aws-sdk/generator/shape::to-query-params "PositionalConstraint"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'positional-constraint))))))
(common-lisp:progn
 (common-lisp:deftype byte-match-tuples ()
   '(trivial-types:proper-list byte-match-tuple))
 (common-lisp:defun |make-byte-match-tuples|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list byte-match-tuple))
   aws-sdk/generator/shape::members))
(common-lisp:deftype change-action () 'common-lisp:string)
(common-lisp:deftype change-token () 'common-lisp:string)
(common-lisp:deftype change-token-status () 'common-lisp:string)
(common-lisp:deftype comparison-operator () 'common-lisp:string)
(common-lisp:deftype country () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (create-byte-match-set-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-byte-match-set-request
                    'make-create-byte-match-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-byte-match-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-byte-match-set-response (:copier common-lisp:nil))
   (byte-match-set common-lisp:nil :type
    (common-lisp:or byte-match-set common-lisp:null))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-byte-match-set-response
                    'make-create-byte-match-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-byte-match-set-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ByteMatchSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'byte-match-set)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-ipset-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-ipset-request 'make-create-ipset-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-ipset-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-ipset-response (:copier common-lisp:nil))
   (ipset common-lisp:nil :type (common-lisp:or ipset common-lisp:null))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-ipset-response 'make-create-ipset-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-ipset-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IPSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ipset)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-rate-based-rule-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (metric-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":metric-name is required"))
    :type (common-lisp:or metric-name common-lisp:null))
   (rate-key
    (common-lisp:error
     #A((21) common-lisp:base-char . ":rate-key is required"))
    :type (common-lisp:or rate-key common-lisp:null))
   (rate-limit
    (common-lisp:error
     #A((23) common-lisp:base-char . ":rate-limit is required"))
    :type (common-lisp:or rate-limit common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-rate-based-rule-request
                    'make-create-rate-based-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-rate-based-rule-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "MetricName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-name)))
    (aws-sdk/generator/shape::to-query-params "RateKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rate-key)))
    (aws-sdk/generator/shape::to-query-params "RateLimit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rate-limit)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-rate-based-rule-response (:copier common-lisp:nil))
   (rule common-lisp:nil :type
    (common-lisp:or rate-based-rule common-lisp:null))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-rate-based-rule-response
                    'make-create-rate-based-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-rate-based-rule-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Rule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-rule-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (metric-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":metric-name is required"))
    :type (common-lisp:or metric-name common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-rule-request 'make-create-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-rule-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "MetricName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-name)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-rule-response (:copier common-lisp:nil))
   (rule common-lisp:nil :type (common-lisp:or rule common-lisp:null))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-rule-response 'make-create-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-rule-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Rule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-size-constraint-set-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-size-constraint-set-request
                    'make-create-size-constraint-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-size-constraint-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-size-constraint-set-response (:copier common-lisp:nil))
   (size-constraint-set common-lisp:nil :type
    (common-lisp:or size-constraint-set common-lisp:null))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-size-constraint-set-response
                    'make-create-size-constraint-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-size-constraint-set-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SizeConstraintSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size-constraint-set)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-sql-injection-match-set-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-sql-injection-match-set-request
                    'make-create-sql-injection-match-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-sql-injection-match-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-sql-injection-match-set-response (:copier common-lisp:nil))
   (sql-injection-match-set common-lisp:nil :type
    (common-lisp:or sql-injection-match-set common-lisp:null))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-sql-injection-match-set-response
                    'make-create-sql-injection-match-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-sql-injection-match-set-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SqlInjectionMatchSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sql-injection-match-set)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-web-aclrequest (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (metric-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":metric-name is required"))
    :type (common-lisp:or metric-name common-lisp:null))
   (default-action
    (common-lisp:error
     #A((27) common-lisp:base-char . ":default-action is required"))
    :type (common-lisp:or waf-action common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-web-aclrequest 'make-create-web-aclrequest))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-web-aclrequest))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "MetricName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-name)))
    (aws-sdk/generator/shape::to-query-params "DefaultAction"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-action)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct (create-web-aclresponse (:copier common-lisp:nil))
   (web-acl common-lisp:nil :type (common-lisp:or web-acl common-lisp:null))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-web-aclresponse 'make-create-web-aclresponse))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-web-aclresponse))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WebACL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'web-acl)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-xss-match-set-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or resource-name common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-xss-match-set-request
                    'make-create-xss-match-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-xss-match-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-xss-match-set-response (:copier common-lisp:nil))
   (xss-match-set common-lisp:nil :type
    (common-lisp:or xss-match-set common-lisp:null))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-xss-match-set-response
                    'make-create-xss-match-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-xss-match-set-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "XssMatchSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'xss-match-set)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-byte-match-set-request (:copier common-lisp:nil))
   (byte-match-set-id
    (common-lisp:error
     #A((30) common-lisp:base-char . ":byte-match-set-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-byte-match-set-request
                    'make-delete-byte-match-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-byte-match-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ByteMatchSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'byte-match-set-id)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-byte-match-set-response (:copier common-lisp:nil))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-byte-match-set-response
                    'make-delete-byte-match-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-byte-match-set-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-ipset-request (:copier common-lisp:nil))
   (ipset-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":ipset-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-ipset-request 'make-delete-ipset-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-ipset-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IPSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ipset-id)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-ipset-response (:copier common-lisp:nil))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-ipset-response 'make-delete-ipset-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-ipset-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-rate-based-rule-request (:copier common-lisp:nil))
   (rule-id
    (common-lisp:error #A((20) common-lisp:base-char . ":rule-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-rate-based-rule-request
                    'make-delete-rate-based-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-rate-based-rule-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-id)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-rate-based-rule-response (:copier common-lisp:nil))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-rate-based-rule-response
                    'make-delete-rate-based-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-rate-based-rule-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-rule-request (:copier common-lisp:nil))
   (rule-id
    (common-lisp:error #A((20) common-lisp:base-char . ":rule-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-rule-request 'make-delete-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-rule-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-id)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-rule-response (:copier common-lisp:nil))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-rule-response 'make-delete-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-rule-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-size-constraint-set-request (:copier common-lisp:nil))
   (size-constraint-set-id
    (common-lisp:error
     #A((35) common-lisp:base-char . ":size-constraint-set-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-size-constraint-set-request
                    'make-delete-size-constraint-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-size-constraint-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SizeConstraintSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size-constraint-set-id)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-size-constraint-set-response (:copier common-lisp:nil))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-size-constraint-set-response
                    'make-delete-size-constraint-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-size-constraint-set-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-sql-injection-match-set-request (:copier common-lisp:nil))
   (sql-injection-match-set-id
    (common-lisp:error
     #A((39) common-lisp:base-char
        . ":sql-injection-match-set-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-sql-injection-match-set-request
                    'make-delete-sql-injection-match-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-sql-injection-match-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SqlInjectionMatchSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sql-injection-match-set-id)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-sql-injection-match-set-response (:copier common-lisp:nil))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-sql-injection-match-set-response
                    'make-delete-sql-injection-match-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-sql-injection-match-set-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-web-aclrequest (:copier common-lisp:nil))
   (web-aclid
    (common-lisp:error
     #A((22) common-lisp:base-char . ":web-aclid is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-web-aclrequest 'make-delete-web-aclrequest))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-web-aclrequest))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WebACLId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'web-aclid)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-web-aclresponse (:copier common-lisp:nil))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-web-aclresponse 'make-delete-web-aclresponse))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-web-aclresponse))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-xss-match-set-request (:copier common-lisp:nil))
   (xss-match-set-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":xss-match-set-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-xss-match-set-request
                    'make-delete-xss-match-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-xss-match-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "XssMatchSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'xss-match-set-id)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-xss-match-set-response (:copier common-lisp:nil))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-xss-match-set-response
                    'make-delete-xss-match-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-xss-match-set-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct (field-to-match (:copier common-lisp:nil))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or match-field-type common-lisp:null))
   (data common-lisp:nil :type
    (common-lisp:or match-field-data common-lisp:null)))
 (common-lisp:export (common-lisp:list 'field-to-match 'make-field-to-match))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape field-to-match))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Data"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data))))))
(common-lisp:progn
 (common-lisp:defstruct (get-byte-match-set-request (:copier common-lisp:nil))
   (byte-match-set-id
    (common-lisp:error
     #A((30) common-lisp:base-char . ":byte-match-set-id is required"))
    :type (common-lisp:or resource-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-byte-match-set-request
                    'make-get-byte-match-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-byte-match-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ByteMatchSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'byte-match-set-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-byte-match-set-response (:copier common-lisp:nil))
   (byte-match-set common-lisp:nil :type
    (common-lisp:or byte-match-set common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-byte-match-set-response
                    'make-get-byte-match-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-byte-match-set-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ByteMatchSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'byte-match-set))))))
(common-lisp:progn
 (common-lisp:defstruct (get-change-token-request (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-change-token-request 'make-get-change-token-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-change-token-request))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (get-change-token-response (:copier common-lisp:nil))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-change-token-response
                    'make-get-change-token-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-change-token-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-change-token-status-request (:copier common-lisp:nil))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-change-token-status-request
                    'make-get-change-token-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-change-token-status-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-change-token-status-response (:copier common-lisp:nil))
   (change-token-status common-lisp:nil :type
    (common-lisp:or change-token-status common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-change-token-status-response
                    'make-get-change-token-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-change-token-status-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChangeTokenStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token-status))))))
(common-lisp:progn
 (common-lisp:defstruct (get-ipset-request (:copier common-lisp:nil))
   (ipset-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":ipset-id is required"))
    :type (common-lisp:or resource-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-ipset-request 'make-get-ipset-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-ipset-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IPSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ipset-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-ipset-response (:copier common-lisp:nil))
   (ipset common-lisp:nil :type (common-lisp:or ipset common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-ipset-response 'make-get-ipset-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-ipset-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IPSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ipset))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-rate-based-rule-managed-keys-request (:copier common-lisp:nil))
   (rule-id
    (common-lisp:error #A((20) common-lisp:base-char . ":rule-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or next-marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-rate-based-rule-managed-keys-request
                    'make-get-rate-based-rule-managed-keys-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-rate-based-rule-managed-keys-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-id)))
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-rate-based-rule-managed-keys-response (:copier common-lisp:nil))
   (managed-keys common-lisp:nil :type
    (common-lisp:or managed-keys common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or next-marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-rate-based-rule-managed-keys-response
                    'make-get-rate-based-rule-managed-keys-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-rate-based-rule-managed-keys-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ManagedKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'managed-keys)))
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker))))))
(common-lisp:progn
 (common-lisp:defstruct (get-rate-based-rule-request (:copier common-lisp:nil))
   (rule-id
    (common-lisp:error #A((20) common-lisp:base-char . ":rule-id is required"))
    :type (common-lisp:or resource-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-rate-based-rule-request
                    'make-get-rate-based-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-rate-based-rule-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-rate-based-rule-response (:copier common-lisp:nil))
   (rule common-lisp:nil :type
    (common-lisp:or rate-based-rule common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-rate-based-rule-response
                    'make-get-rate-based-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-rate-based-rule-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Rule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule))))))
(common-lisp:progn
 (common-lisp:defstruct (get-rule-request (:copier common-lisp:nil))
   (rule-id
    (common-lisp:error #A((20) common-lisp:base-char . ":rule-id is required"))
    :type (common-lisp:or resource-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-rule-request 'make-get-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-rule-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-rule-response (:copier common-lisp:nil))
   (rule common-lisp:nil :type (common-lisp:or rule common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-rule-response 'make-get-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-rule-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Rule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule))))))
(common-lisp:deftype get-sampled-requests-max-items () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (get-sampled-requests-request (:copier common-lisp:nil))
   (web-acl-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":web-acl-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (rule-id
    (common-lisp:error #A((20) common-lisp:base-char . ":rule-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (time-window
    (common-lisp:error
     #A((24) common-lisp:base-char . ":time-window is required"))
    :type (common-lisp:or time-window common-lisp:null))
   (max-items
    (common-lisp:error
     #A((22) common-lisp:base-char . ":max-items is required"))
    :type (common-lisp:or get-sampled-requests-max-items common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-sampled-requests-request
                    'make-get-sampled-requests-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-sampled-requests-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WebAclId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'web-acl-id)))
    (aws-sdk/generator/shape::to-query-params "RuleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-id)))
    (aws-sdk/generator/shape::to-query-params "TimeWindow"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'time-window)))
    (aws-sdk/generator/shape::to-query-params "MaxItems"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-items))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-sampled-requests-response (:copier common-lisp:nil))
   (sampled-requests common-lisp:nil :type
    (common-lisp:or sampled-httprequests common-lisp:null))
   (population-size common-lisp:nil :type
    (common-lisp:or population-size common-lisp:null))
   (time-window common-lisp:nil :type
    (common-lisp:or time-window common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-sampled-requests-response
                    'make-get-sampled-requests-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-sampled-requests-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SampledRequests"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sampled-requests)))
    (aws-sdk/generator/shape::to-query-params "PopulationSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'population-size)))
    (aws-sdk/generator/shape::to-query-params "TimeWindow"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'time-window))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-size-constraint-set-request (:copier common-lisp:nil))
   (size-constraint-set-id
    (common-lisp:error
     #A((35) common-lisp:base-char . ":size-constraint-set-id is required"))
    :type (common-lisp:or resource-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-size-constraint-set-request
                    'make-get-size-constraint-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-size-constraint-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SizeConstraintSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size-constraint-set-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-size-constraint-set-response (:copier common-lisp:nil))
   (size-constraint-set common-lisp:nil :type
    (common-lisp:or size-constraint-set common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-size-constraint-set-response
                    'make-get-size-constraint-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-size-constraint-set-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SizeConstraintSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size-constraint-set))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-sql-injection-match-set-request (:copier common-lisp:nil))
   (sql-injection-match-set-id
    (common-lisp:error
     #A((39) common-lisp:base-char
        . ":sql-injection-match-set-id is required"))
    :type (common-lisp:or resource-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-sql-injection-match-set-request
                    'make-get-sql-injection-match-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-sql-injection-match-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SqlInjectionMatchSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sql-injection-match-set-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-sql-injection-match-set-response (:copier common-lisp:nil))
   (sql-injection-match-set common-lisp:nil :type
    (common-lisp:or sql-injection-match-set common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-sql-injection-match-set-response
                    'make-get-sql-injection-match-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-sql-injection-match-set-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SqlInjectionMatchSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sql-injection-match-set))))))
(common-lisp:progn
 (common-lisp:defstruct (get-web-aclrequest (:copier common-lisp:nil))
   (web-aclid
    (common-lisp:error
     #A((22) common-lisp:base-char . ":web-aclid is required"))
    :type (common-lisp:or resource-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-web-aclrequest 'make-get-web-aclrequest))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-web-aclrequest))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WebACLId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'web-aclid))))))
(common-lisp:progn
 (common-lisp:defstruct (get-web-aclresponse (:copier common-lisp:nil))
   (web-acl common-lisp:nil :type (common-lisp:or web-acl common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-web-aclresponse 'make-get-web-aclresponse))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-web-aclresponse))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WebACL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'web-acl))))))
(common-lisp:progn
 (common-lisp:defstruct (get-xss-match-set-request (:copier common-lisp:nil))
   (xss-match-set-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":xss-match-set-id is required"))
    :type (common-lisp:or resource-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-xss-match-set-request
                    'make-get-xss-match-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-xss-match-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "XssMatchSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'xss-match-set-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-xss-match-set-response (:copier common-lisp:nil))
   (xss-match-set common-lisp:nil :type
    (common-lisp:or xss-match-set common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-xss-match-set-response
                    'make-get-xss-match-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-xss-match-set-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "XssMatchSet"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'xss-match-set))))))
(common-lisp:progn
 (common-lisp:defstruct (httpheader (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or header-name common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or header-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'httpheader 'make-httpheader))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape httpheader))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:deftype httpheaders () '(trivial-types:proper-list httpheader))
 (common-lisp:defun |make-httpheaders|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list httpheader))
   aws-sdk/generator/shape::members))
(common-lisp:deftype httpmethod () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (httprequest (:copier common-lisp:nil))
   (client-ip common-lisp:nil :type (common-lisp:or ipstring common-lisp:null))
   (country common-lisp:nil :type (common-lisp:or country common-lisp:null))
   (uri common-lisp:nil :type (common-lisp:or uristring common-lisp:null))
   (method common-lisp:nil :type (common-lisp:or httpmethod common-lisp:null))
   (httpversion common-lisp:nil :type
    (common-lisp:or httpversion common-lisp:null))
   (headers common-lisp:nil :type
    (common-lisp:or httpheaders common-lisp:null)))
 (common-lisp:export (common-lisp:list 'httprequest 'make-httprequest))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape httprequest))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ClientIP"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-ip)))
    (aws-sdk/generator/shape::to-query-params "Country"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'country)))
    (aws-sdk/generator/shape::to-query-params "URI"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uri)))
    (aws-sdk/generator/shape::to-query-params "Method"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'method)))
    (aws-sdk/generator/shape::to-query-params "HTTPVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'httpversion)))
    (aws-sdk/generator/shape::to-query-params "Headers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'headers))))))
(common-lisp:deftype httpversion () 'common-lisp:string)
(common-lisp:deftype header-name () 'common-lisp:string)
(common-lisp:deftype header-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (ipset (:copier common-lisp:nil))
   (ipset-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":ipset-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (ipset-descriptors
    (common-lisp:error
     #A((30) common-lisp:base-char . ":ipset-descriptors is required"))
    :type (common-lisp:or ipset-descriptors common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ipset 'make-ipset))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape ipset))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IPSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ipset-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "IPSetDescriptors"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ipset-descriptors))))))
(common-lisp:progn
 (common-lisp:defstruct (ipset-descriptor (:copier common-lisp:nil))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or ipset-descriptor-type common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or ipset-descriptor-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'ipset-descriptor 'make-ipset-descriptor))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape ipset-descriptor))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype ipset-descriptor-type () 'common-lisp:string)
(common-lisp:deftype ipset-descriptor-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ipset-descriptors ()
   '(trivial-types:proper-list ipset-descriptor))
 (common-lisp:defun |make-ipset-descriptors|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ipset-descriptor))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype ipset-summaries ()
   '(trivial-types:proper-list ipset-summary))
 (common-lisp:defun |make-ipset-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ipset-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (ipset-summary (:copier common-lisp:nil))
   (ipset-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":ipset-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ipset-summary 'make-ipset-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape ipset-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IPSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ipset-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (ipset-update (:copier common-lisp:nil))
   (action
    (common-lisp:error #A((19) common-lisp:base-char . ":action is required"))
    :type (common-lisp:or change-action common-lisp:null))
   (ipset-descriptor
    (common-lisp:error
     #A((29) common-lisp:base-char . ":ipset-descriptor is required"))
    :type (common-lisp:or ipset-descriptor common-lisp:null)))
 (common-lisp:export (common-lisp:list 'ipset-update 'make-ipset-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape ipset-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action)))
    (aws-sdk/generator/shape::to-query-params "IPSetDescriptor"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ipset-descriptor))))))
(common-lisp:progn
 (common-lisp:deftype ipset-updates ()
   '(trivial-types:proper-list ipset-update))
 (common-lisp:defun |make-ipset-updates|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ipset-update))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ipstring () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (list-byte-match-sets-request (:copier common-lisp:nil))
   (next-marker common-lisp:nil :type
    (common-lisp:or next-marker common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or pagination-limit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-byte-match-sets-request
                    'make-list-byte-match-sets-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-byte-match-sets-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-byte-match-sets-response (:copier common-lisp:nil))
   (next-marker common-lisp:nil :type
    (common-lisp:or next-marker common-lisp:null))
   (byte-match-sets common-lisp:nil :type
    (common-lisp:or byte-match-set-summaries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-byte-match-sets-response
                    'make-list-byte-match-sets-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-byte-match-sets-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "ByteMatchSets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'byte-match-sets))))))
(common-lisp:progn
 (common-lisp:defstruct (list-ipsets-request (:copier common-lisp:nil))
   (next-marker common-lisp:nil :type
    (common-lisp:or next-marker common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or pagination-limit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-ipsets-request 'make-list-ipsets-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-ipsets-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct (list-ipsets-response (:copier common-lisp:nil))
   (next-marker common-lisp:nil :type
    (common-lisp:or next-marker common-lisp:null))
   (ipsets common-lisp:nil :type
    (common-lisp:or ipset-summaries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-ipsets-response 'make-list-ipsets-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-ipsets-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "IPSets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ipsets))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-rate-based-rules-request (:copier common-lisp:nil))
   (next-marker common-lisp:nil :type
    (common-lisp:or next-marker common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or pagination-limit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-rate-based-rules-request
                    'make-list-rate-based-rules-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-rate-based-rules-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-rate-based-rules-response (:copier common-lisp:nil))
   (next-marker common-lisp:nil :type
    (common-lisp:or next-marker common-lisp:null))
   (rules common-lisp:nil :type
    (common-lisp:or rule-summaries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-rate-based-rules-response
                    'make-list-rate-based-rules-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-rate-based-rules-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "Rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules))))))
(common-lisp:progn
 (common-lisp:defstruct (list-rules-request (:copier common-lisp:nil))
   (next-marker common-lisp:nil :type
    (common-lisp:or next-marker common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or pagination-limit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-rules-request 'make-list-rules-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-rules-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct (list-rules-response (:copier common-lisp:nil))
   (next-marker common-lisp:nil :type
    (common-lisp:or next-marker common-lisp:null))
   (rules common-lisp:nil :type
    (common-lisp:or rule-summaries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-rules-response 'make-list-rules-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-rules-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "Rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-size-constraint-sets-request (:copier common-lisp:nil))
   (next-marker common-lisp:nil :type
    (common-lisp:or next-marker common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or pagination-limit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-size-constraint-sets-request
                    'make-list-size-constraint-sets-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-size-constraint-sets-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-size-constraint-sets-response (:copier common-lisp:nil))
   (next-marker common-lisp:nil :type
    (common-lisp:or next-marker common-lisp:null))
   (size-constraint-sets common-lisp:nil :type
    (common-lisp:or size-constraint-set-summaries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-size-constraint-sets-response
                    'make-list-size-constraint-sets-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-size-constraint-sets-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "SizeConstraintSets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size-constraint-sets))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-sql-injection-match-sets-request (:copier common-lisp:nil))
   (next-marker common-lisp:nil :type
    (common-lisp:or next-marker common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or pagination-limit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-sql-injection-match-sets-request
                    'make-list-sql-injection-match-sets-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-sql-injection-match-sets-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-sql-injection-match-sets-response (:copier common-lisp:nil))
   (next-marker common-lisp:nil :type
    (common-lisp:or next-marker common-lisp:null))
   (sql-injection-match-sets common-lisp:nil :type
    (common-lisp:or sql-injection-match-set-summaries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-sql-injection-match-sets-response
                    'make-list-sql-injection-match-sets-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-sql-injection-match-sets-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "SqlInjectionMatchSets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sql-injection-match-sets))))))
(common-lisp:progn
 (common-lisp:defstruct (list-web-acls-request (:copier common-lisp:nil))
   (next-marker common-lisp:nil :type
    (common-lisp:or next-marker common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or pagination-limit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-web-acls-request 'make-list-web-acls-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-web-acls-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct (list-web-acls-response (:copier common-lisp:nil))
   (next-marker common-lisp:nil :type
    (common-lisp:or next-marker common-lisp:null))
   (web-acls common-lisp:nil :type
    (common-lisp:or web-aclsummaries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-web-acls-response 'make-list-web-acls-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-web-acls-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "WebACLs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'web-acls))))))
(common-lisp:progn
 (common-lisp:defstruct (list-xss-match-sets-request (:copier common-lisp:nil))
   (next-marker common-lisp:nil :type
    (common-lisp:or next-marker common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or pagination-limit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-xss-match-sets-request
                    'make-list-xss-match-sets-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-xss-match-sets-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-xss-match-sets-response (:copier common-lisp:nil))
   (next-marker common-lisp:nil :type
    (common-lisp:or next-marker common-lisp:null))
   (xss-match-sets common-lisp:nil :type
    (common-lisp:or xss-match-set-summaries common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-xss-match-sets-response
                    'make-list-xss-match-sets-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-xss-match-sets-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker)))
    (aws-sdk/generator/shape::to-query-params "XssMatchSets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'xss-match-sets))))))
(common-lisp:deftype managed-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype managed-keys () '(trivial-types:proper-list managed-key))
 (common-lisp:defun |make-managed-keys|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list managed-key))
   aws-sdk/generator/shape::members))
(common-lisp:deftype match-field-data () 'common-lisp:string)
(common-lisp:deftype match-field-type () 'common-lisp:string)
(common-lisp:deftype metric-name () 'common-lisp:string)
(common-lisp:deftype negated () 'common-lisp:boolean)
(common-lisp:deftype next-marker () 'common-lisp:string)
(common-lisp:deftype pagination-limit () 'common-lisp:integer)
(common-lisp:deftype parameter-exception-field () 'common-lisp:string)
(common-lisp:deftype parameter-exception-parameter () 'common-lisp:string)
(common-lisp:deftype parameter-exception-reason () 'common-lisp:string)
(common-lisp:deftype population-size () 'common-lisp:integer)
(common-lisp:deftype positional-constraint () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (predicate (:copier common-lisp:nil))
   (negated
    (common-lisp:error #A((20) common-lisp:base-char . ":negated is required"))
    :type (common-lisp:or negated common-lisp:null))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or predicate-type common-lisp:null))
   (data-id
    (common-lisp:error #A((20) common-lisp:base-char . ":data-id is required"))
    :type (common-lisp:or resource-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'predicate 'make-predicate))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape predicate))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Negated"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'negated)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "DataId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-id))))))
(common-lisp:deftype predicate-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype predicates () '(trivial-types:proper-list predicate))
 (common-lisp:defun |make-predicates|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list predicate))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (rate-based-rule (:copier common-lisp:nil))
   (rule-id
    (common-lisp:error #A((20) common-lisp:base-char . ":rule-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (metric-name common-lisp:nil :type
    (common-lisp:or metric-name common-lisp:null))
   (match-predicates
    (common-lisp:error
     #A((29) common-lisp:base-char . ":match-predicates is required"))
    :type (common-lisp:or predicates common-lisp:null))
   (rate-key
    (common-lisp:error
     #A((21) common-lisp:base-char . ":rate-key is required"))
    :type (common-lisp:or rate-key common-lisp:null))
   (rate-limit
    (common-lisp:error
     #A((23) common-lisp:base-char . ":rate-limit is required"))
    :type (common-lisp:or rate-limit common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rate-based-rule 'make-rate-based-rule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape rate-based-rule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "MetricName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-name)))
    (aws-sdk/generator/shape::to-query-params "MatchPredicates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'match-predicates)))
    (aws-sdk/generator/shape::to-query-params "RateKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rate-key)))
    (aws-sdk/generator/shape::to-query-params "RateLimit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rate-limit))))))
(common-lisp:deftype rate-key () 'common-lisp:string)
(common-lisp:deftype rate-limit () 'common-lisp:integer)
(common-lisp:deftype resource-id () 'common-lisp:string)
(common-lisp:deftype resource-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (rule (:copier common-lisp:nil))
   (rule-id
    (common-lisp:error #A((20) common-lisp:base-char . ":rule-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (metric-name common-lisp:nil :type
    (common-lisp:or metric-name common-lisp:null))
   (predicates
    (common-lisp:error
     #A((23) common-lisp:base-char . ":predicates is required"))
    :type (common-lisp:or predicates common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rule 'make-rule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape rule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "MetricName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-name)))
    (aws-sdk/generator/shape::to-query-params "Predicates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'predicates))))))
(common-lisp:deftype rule-priority () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype rule-summaries ()
   '(trivial-types:proper-list rule-summary))
 (common-lisp:defun |make-rule-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rule-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (rule-summary (:copier common-lisp:nil))
   (rule-id
    (common-lisp:error #A((20) common-lisp:base-char . ":rule-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rule-summary 'make-rule-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape rule-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (rule-update (:copier common-lisp:nil))
   (action
    (common-lisp:error #A((19) common-lisp:base-char . ":action is required"))
    :type (common-lisp:or change-action common-lisp:null))
   (predicate
    (common-lisp:error
     #A((22) common-lisp:base-char . ":predicate is required"))
    :type (common-lisp:or predicate common-lisp:null)))
 (common-lisp:export (common-lisp:list 'rule-update 'make-rule-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape rule-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action)))
    (aws-sdk/generator/shape::to-query-params "Predicate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'predicate))))))
(common-lisp:progn
 (common-lisp:deftype rule-updates () '(trivial-types:proper-list rule-update))
 (common-lisp:defun |make-rule-updates|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rule-update))
   aws-sdk/generator/shape::members))
(common-lisp:deftype sample-weight () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (sampled-httprequest (:copier common-lisp:nil))
   (request
    (common-lisp:error #A((20) common-lisp:base-char . ":request is required"))
    :type (common-lisp:or httprequest common-lisp:null))
   (weight
    (common-lisp:error #A((19) common-lisp:base-char . ":weight is required"))
    :type (common-lisp:or sample-weight common-lisp:null))
   (timestamp common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (action common-lisp:nil :type (common-lisp:or action common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sampled-httprequest 'make-sampled-httprequest))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape sampled-httprequest))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Request"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'request)))
    (aws-sdk/generator/shape::to-query-params "Weight"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'weight)))
    (aws-sdk/generator/shape::to-query-params "Timestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timestamp)))
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action))))))
(common-lisp:progn
 (common-lisp:deftype sampled-httprequests ()
   '(trivial-types:proper-list sampled-httprequest))
 (common-lisp:defun |make-sampled-httprequests|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sampled-httprequest))
   aws-sdk/generator/shape::members))
(common-lisp:deftype size () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (size-constraint (:copier common-lisp:nil))
   (field-to-match
    (common-lisp:error
     #A((27) common-lisp:base-char . ":field-to-match is required"))
    :type (common-lisp:or field-to-match common-lisp:null))
   (text-transformation
    (common-lisp:error
     #A((32) common-lisp:base-char . ":text-transformation is required"))
    :type (common-lisp:or text-transformation common-lisp:null))
   (comparison-operator
    (common-lisp:error
     #A((32) common-lisp:base-char . ":comparison-operator is required"))
    :type (common-lisp:or comparison-operator common-lisp:null))
   (size
    (common-lisp:error #A((17) common-lisp:base-char . ":size is required"))
    :type (common-lisp:or size common-lisp:null)))
 (common-lisp:export (common-lisp:list 'size-constraint 'make-size-constraint))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape size-constraint))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FieldToMatch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'field-to-match)))
    (aws-sdk/generator/shape::to-query-params "TextTransformation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'text-transformation)))
    (aws-sdk/generator/shape::to-query-params "ComparisonOperator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comparison-operator)))
    (aws-sdk/generator/shape::to-query-params "Size"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size))))))
(common-lisp:progn
 (common-lisp:defstruct (size-constraint-set (:copier common-lisp:nil))
   (size-constraint-set-id
    (common-lisp:error
     #A((35) common-lisp:base-char . ":size-constraint-set-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (size-constraints
    (common-lisp:error
     #A((29) common-lisp:base-char . ":size-constraints is required"))
    :type (common-lisp:or size-constraints common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'size-constraint-set 'make-size-constraint-set))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape size-constraint-set))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SizeConstraintSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size-constraint-set-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "SizeConstraints"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size-constraints))))))
(common-lisp:progn
 (common-lisp:deftype size-constraint-set-summaries ()
   '(trivial-types:proper-list size-constraint-set-summary))
 (common-lisp:defun |make-size-constraint-set-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            size-constraint-set-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (size-constraint-set-summary (:copier common-lisp:nil))
   (size-constraint-set-id
    (common-lisp:error
     #A((35) common-lisp:base-char . ":size-constraint-set-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'size-constraint-set-summary
                    'make-size-constraint-set-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          size-constraint-set-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SizeConstraintSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size-constraint-set-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (size-constraint-set-update (:copier common-lisp:nil))
   (action
    (common-lisp:error #A((19) common-lisp:base-char . ":action is required"))
    :type (common-lisp:or change-action common-lisp:null))
   (size-constraint
    (common-lisp:error
     #A((28) common-lisp:base-char . ":size-constraint is required"))
    :type (common-lisp:or size-constraint common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'size-constraint-set-update
                    'make-size-constraint-set-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          size-constraint-set-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action)))
    (aws-sdk/generator/shape::to-query-params "SizeConstraint"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size-constraint))))))
(common-lisp:progn
 (common-lisp:deftype size-constraint-set-updates ()
   '(trivial-types:proper-list size-constraint-set-update))
 (common-lisp:defun |make-size-constraint-set-updates|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            size-constraint-set-update))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype size-constraints ()
   '(trivial-types:proper-list size-constraint))
 (common-lisp:defun |make-size-constraints|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list size-constraint))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (sql-injection-match-set (:copier common-lisp:nil))
   (sql-injection-match-set-id
    (common-lisp:error
     #A((39) common-lisp:base-char
        . ":sql-injection-match-set-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (sql-injection-match-tuples
    (common-lisp:error
     #A((39) common-lisp:base-char
        . ":sql-injection-match-tuples is required"))
    :type (common-lisp:or sql-injection-match-tuples common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sql-injection-match-set 'make-sql-injection-match-set))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          sql-injection-match-set))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SqlInjectionMatchSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sql-injection-match-set-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "SqlInjectionMatchTuples"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sql-injection-match-tuples))))))
(common-lisp:progn
 (common-lisp:deftype sql-injection-match-set-summaries ()
   '(trivial-types:proper-list sql-injection-match-set-summary))
 (common-lisp:defun |make-sql-injection-match-set-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            sql-injection-match-set-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (sql-injection-match-set-summary (:copier common-lisp:nil))
   (sql-injection-match-set-id
    (common-lisp:error
     #A((39) common-lisp:base-char
        . ":sql-injection-match-set-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sql-injection-match-set-summary
                    'make-sql-injection-match-set-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          sql-injection-match-set-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SqlInjectionMatchSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sql-injection-match-set-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (sql-injection-match-set-update (:copier common-lisp:nil))
   (action
    (common-lisp:error #A((19) common-lisp:base-char . ":action is required"))
    :type (common-lisp:or change-action common-lisp:null))
   (sql-injection-match-tuple
    (common-lisp:error
     #A((38) common-lisp:base-char . ":sql-injection-match-tuple is required"))
    :type (common-lisp:or sql-injection-match-tuple common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sql-injection-match-set-update
                    'make-sql-injection-match-set-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          sql-injection-match-set-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action)))
    (aws-sdk/generator/shape::to-query-params "SqlInjectionMatchTuple"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sql-injection-match-tuple))))))
(common-lisp:progn
 (common-lisp:deftype sql-injection-match-set-updates ()
   '(trivial-types:proper-list sql-injection-match-set-update))
 (common-lisp:defun |make-sql-injection-match-set-updates|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            sql-injection-match-set-update))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (sql-injection-match-tuple (:copier common-lisp:nil))
   (field-to-match
    (common-lisp:error
     #A((27) common-lisp:base-char . ":field-to-match is required"))
    :type (common-lisp:or field-to-match common-lisp:null))
   (text-transformation
    (common-lisp:error
     #A((32) common-lisp:base-char . ":text-transformation is required"))
    :type (common-lisp:or text-transformation common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'sql-injection-match-tuple
                    'make-sql-injection-match-tuple))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          sql-injection-match-tuple))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FieldToMatch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'field-to-match)))
    (aws-sdk/generator/shape::to-query-params "TextTransformation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'text-transformation))))))
(common-lisp:progn
 (common-lisp:deftype sql-injection-match-tuples ()
   '(trivial-types:proper-list sql-injection-match-tuple))
 (common-lisp:defun |make-sql-injection-match-tuples|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            sql-injection-match-tuple))
   aws-sdk/generator/shape::members))
(common-lisp:deftype text-transformation () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (time-window (:copier common-lisp:nil))
   (start-time
    (common-lisp:error
     #A((23) common-lisp:base-char . ":start-time is required"))
    :type (common-lisp:or timestamp common-lisp:null))
   (end-time
    (common-lisp:error
     #A((21) common-lisp:base-char . ":end-time is required"))
    :type (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'time-window 'make-time-window))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape time-window))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-time)))
    (aws-sdk/generator/shape::to-query-params "EndTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-time))))))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype uristring () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (update-byte-match-set-request (:copier common-lisp:nil))
   (byte-match-set-id
    (common-lisp:error
     #A((30) common-lisp:base-char . ":byte-match-set-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null))
   (updates
    (common-lisp:error #A((20) common-lisp:base-char . ":updates is required"))
    :type (common-lisp:or byte-match-set-updates common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-byte-match-set-request
                    'make-update-byte-match-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-byte-match-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ByteMatchSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'byte-match-set-id)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token)))
    (aws-sdk/generator/shape::to-query-params "Updates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'updates))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-byte-match-set-response (:copier common-lisp:nil))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-byte-match-set-response
                    'make-update-byte-match-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-byte-match-set-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct (update-ipset-request (:copier common-lisp:nil))
   (ipset-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":ipset-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null))
   (updates
    (common-lisp:error #A((20) common-lisp:base-char . ":updates is required"))
    :type (common-lisp:or ipset-updates common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-ipset-request 'make-update-ipset-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-ipset-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IPSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'ipset-id)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token)))
    (aws-sdk/generator/shape::to-query-params "Updates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'updates))))))
(common-lisp:progn
 (common-lisp:defstruct (update-ipset-response (:copier common-lisp:nil))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-ipset-response 'make-update-ipset-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-ipset-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-rate-based-rule-request (:copier common-lisp:nil))
   (rule-id
    (common-lisp:error #A((20) common-lisp:base-char . ":rule-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null))
   (updates
    (common-lisp:error #A((20) common-lisp:base-char . ":updates is required"))
    :type (common-lisp:or rule-updates common-lisp:null))
   (rate-limit
    (common-lisp:error
     #A((23) common-lisp:base-char . ":rate-limit is required"))
    :type (common-lisp:or rate-limit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-rate-based-rule-request
                    'make-update-rate-based-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-rate-based-rule-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-id)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token)))
    (aws-sdk/generator/shape::to-query-params "Updates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'updates)))
    (aws-sdk/generator/shape::to-query-params "RateLimit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rate-limit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-rate-based-rule-response (:copier common-lisp:nil))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-rate-based-rule-response
                    'make-update-rate-based-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-rate-based-rule-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct (update-rule-request (:copier common-lisp:nil))
   (rule-id
    (common-lisp:error #A((20) common-lisp:base-char . ":rule-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null))
   (updates
    (common-lisp:error #A((20) common-lisp:base-char . ":updates is required"))
    :type (common-lisp:or rule-updates common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-rule-request 'make-update-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-rule-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RuleId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rule-id)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token)))
    (aws-sdk/generator/shape::to-query-params "Updates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'updates))))))
(common-lisp:progn
 (common-lisp:defstruct (update-rule-response (:copier common-lisp:nil))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-rule-response 'make-update-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-rule-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-size-constraint-set-request (:copier common-lisp:nil))
   (size-constraint-set-id
    (common-lisp:error
     #A((35) common-lisp:base-char . ":size-constraint-set-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null))
   (updates
    (common-lisp:error #A((20) common-lisp:base-char . ":updates is required"))
    :type (common-lisp:or size-constraint-set-updates common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-size-constraint-set-request
                    'make-update-size-constraint-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-size-constraint-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SizeConstraintSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size-constraint-set-id)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token)))
    (aws-sdk/generator/shape::to-query-params "Updates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'updates))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-size-constraint-set-response (:copier common-lisp:nil))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-size-constraint-set-response
                    'make-update-size-constraint-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-size-constraint-set-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-sql-injection-match-set-request (:copier common-lisp:nil))
   (sql-injection-match-set-id
    (common-lisp:error
     #A((39) common-lisp:base-char
        . ":sql-injection-match-set-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null))
   (updates
    (common-lisp:error #A((20) common-lisp:base-char . ":updates is required"))
    :type (common-lisp:or sql-injection-match-set-updates common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-sql-injection-match-set-request
                    'make-update-sql-injection-match-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-sql-injection-match-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SqlInjectionMatchSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sql-injection-match-set-id)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token)))
    (aws-sdk/generator/shape::to-query-params "Updates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'updates))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-sql-injection-match-set-response (:copier common-lisp:nil))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-sql-injection-match-set-response
                    'make-update-sql-injection-match-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-sql-injection-match-set-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct (update-web-aclrequest (:copier common-lisp:nil))
   (web-aclid
    (common-lisp:error
     #A((22) common-lisp:base-char . ":web-aclid is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null))
   (updates common-lisp:nil :type
    (common-lisp:or web-aclupdates common-lisp:null))
   (default-action common-lisp:nil :type
    (common-lisp:or waf-action common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-web-aclrequest 'make-update-web-aclrequest))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-web-aclrequest))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WebACLId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'web-aclid)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token)))
    (aws-sdk/generator/shape::to-query-params "Updates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'updates)))
    (aws-sdk/generator/shape::to-query-params "DefaultAction"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-action))))))
(common-lisp:progn
 (common-lisp:defstruct (update-web-aclresponse (:copier common-lisp:nil))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-web-aclresponse 'make-update-web-aclresponse))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-web-aclresponse))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-xss-match-set-request (:copier common-lisp:nil))
   (xss-match-set-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":xss-match-set-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (change-token
    (common-lisp:error
     #A((25) common-lisp:base-char . ":change-token is required"))
    :type (common-lisp:or change-token common-lisp:null))
   (updates
    (common-lisp:error #A((20) common-lisp:base-char . ":updates is required"))
    :type (common-lisp:or xss-match-set-updates common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-xss-match-set-request
                    'make-update-xss-match-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-xss-match-set-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "XssMatchSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'xss-match-set-id)))
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token)))
    (aws-sdk/generator/shape::to-query-params "Updates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'updates))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-xss-match-set-response (:copier common-lisp:nil))
   (change-token common-lisp:nil :type
    (common-lisp:or change-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-xss-match-set-response
                    'make-update-xss-match-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-xss-match-set-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ChangeToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'change-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (wafdisallowed-name-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |errorMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'wafdisallowed-name-exception
                    'make-wafdisallowed-name-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          wafdisallowed-name-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (wafinternal-error-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |errorMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'wafinternal-error-exception
                    'make-wafinternal-error-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          wafinternal-error-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (wafinvalid-account-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'wafinvalid-account-exception
                    'make-wafinvalid-account-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          wafinvalid-account-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (wafinvalid-operation-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |errorMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'wafinvalid-operation-exception
                    'make-wafinvalid-operation-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          wafinvalid-operation-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (wafinvalid-parameter-exception (:copier common-lisp:nil))
   (field common-lisp:nil :type
    (common-lisp:or parameter-exception-field common-lisp:null))
   (parameter common-lisp:nil :type
    (common-lisp:or parameter-exception-parameter common-lisp:null))
   (reason common-lisp:nil :type
    (common-lisp:or parameter-exception-reason common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'wafinvalid-parameter-exception
                    'make-wafinvalid-parameter-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          wafinvalid-parameter-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "field"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'field)))
    (aws-sdk/generator/shape::to-query-params "parameter"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameter)))
    (aws-sdk/generator/shape::to-query-params "reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason))))))
(common-lisp:progn
 (common-lisp:defstruct
     (waflimits-exceeded-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |errorMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'waflimits-exceeded-exception
                    'make-waflimits-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          waflimits-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (wafnon-empty-entity-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |errorMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'wafnon-empty-entity-exception
                    'make-wafnon-empty-entity-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          wafnon-empty-entity-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (wafnonexistent-container-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |errorMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'wafnonexistent-container-exception
                    'make-wafnonexistent-container-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          wafnonexistent-container-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (wafnonexistent-item-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |errorMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'wafnonexistent-item-exception
                    'make-wafnonexistent-item-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          wafnonexistent-item-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (wafreferenced-item-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |errorMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'wafreferenced-item-exception
                    'make-wafreferenced-item-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          wafreferenced-item-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (wafstale-data-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or |errorMessage| common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'wafstale-data-exception 'make-wafstale-data-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          wafstale-data-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (waf-action (:copier common-lisp:nil))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or waf-action-type common-lisp:null)))
 (common-lisp:export (common-lisp:list 'waf-action 'make-waf-action))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape waf-action))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type))))))
(common-lisp:deftype waf-action-type () 'common-lisp:string)
(common-lisp:deftype waf-rule-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (web-acl (:copier common-lisp:nil))
   (web-aclid
    (common-lisp:error
     #A((22) common-lisp:base-char . ":web-aclid is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (metric-name common-lisp:nil :type
    (common-lisp:or metric-name common-lisp:null))
   (default-action
    (common-lisp:error
     #A((27) common-lisp:base-char . ":default-action is required"))
    :type (common-lisp:or waf-action common-lisp:null))
   (rules
    (common-lisp:error #A((18) common-lisp:base-char . ":rules is required"))
    :type (common-lisp:or activated-rules common-lisp:null)))
 (common-lisp:export (common-lisp:list 'web-acl 'make-web-acl))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape web-acl))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WebACLId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'web-aclid)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "MetricName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'metric-name)))
    (aws-sdk/generator/shape::to-query-params "DefaultAction"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-action)))
    (aws-sdk/generator/shape::to-query-params "Rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules))))))
(common-lisp:progn
 (common-lisp:deftype web-aclsummaries ()
   '(trivial-types:proper-list web-aclsummary))
 (common-lisp:defun |make-web-aclsummaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list web-aclsummary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (web-aclsummary (:copier common-lisp:nil))
   (web-aclid
    (common-lisp:error
     #A((22) common-lisp:base-char . ":web-aclid is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export (common-lisp:list 'web-aclsummary 'make-web-aclsummary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape web-aclsummary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WebACLId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'web-aclid)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (web-aclupdate (:copier common-lisp:nil))
   (action
    (common-lisp:error #A((19) common-lisp:base-char . ":action is required"))
    :type (common-lisp:or change-action common-lisp:null))
   (activated-rule
    (common-lisp:error
     #A((27) common-lisp:base-char . ":activated-rule is required"))
    :type (common-lisp:or activated-rule common-lisp:null)))
 (common-lisp:export (common-lisp:list 'web-aclupdate 'make-web-aclupdate))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape web-aclupdate))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action)))
    (aws-sdk/generator/shape::to-query-params "ActivatedRule"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'activated-rule))))))
(common-lisp:progn
 (common-lisp:deftype web-aclupdates ()
   '(trivial-types:proper-list web-aclupdate))
 (common-lisp:defun |make-web-aclupdates|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list web-aclupdate))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (xss-match-set (:copier common-lisp:nil))
   (xss-match-set-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":xss-match-set-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or resource-name common-lisp:null))
   (xss-match-tuples
    (common-lisp:error
     #A((29) common-lisp:base-char . ":xss-match-tuples is required"))
    :type (common-lisp:or xss-match-tuples common-lisp:null)))
 (common-lisp:export (common-lisp:list 'xss-match-set 'make-xss-match-set))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape xss-match-set))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "XssMatchSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'xss-match-set-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "XssMatchTuples"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'xss-match-tuples))))))
(common-lisp:progn
 (common-lisp:deftype xss-match-set-summaries ()
   '(trivial-types:proper-list xss-match-set-summary))
 (common-lisp:defun |make-xss-match-set-summaries|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list xss-match-set-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (xss-match-set-summary (:copier common-lisp:nil))
   (xss-match-set-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":xss-match-set-id is required"))
    :type (common-lisp:or resource-id common-lisp:null))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or resource-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'xss-match-set-summary 'make-xss-match-set-summary))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          xss-match-set-summary))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "XssMatchSetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'xss-match-set-id)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (xss-match-set-update (:copier common-lisp:nil))
   (action
    (common-lisp:error #A((19) common-lisp:base-char . ":action is required"))
    :type (common-lisp:or change-action common-lisp:null))
   (xss-match-tuple
    (common-lisp:error
     #A((28) common-lisp:base-char . ":xss-match-tuple is required"))
    :type (common-lisp:or xss-match-tuple common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'xss-match-set-update 'make-xss-match-set-update))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape xss-match-set-update))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action)))
    (aws-sdk/generator/shape::to-query-params "XssMatchTuple"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'xss-match-tuple))))))
(common-lisp:progn
 (common-lisp:deftype xss-match-set-updates ()
   '(trivial-types:proper-list xss-match-set-update))
 (common-lisp:defun |make-xss-match-set-updates|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list xss-match-set-update))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (xss-match-tuple (:copier common-lisp:nil))
   (field-to-match
    (common-lisp:error
     #A((27) common-lisp:base-char . ":field-to-match is required"))
    :type (common-lisp:or field-to-match common-lisp:null))
   (text-transformation
    (common-lisp:error
     #A((32) common-lisp:base-char . ":text-transformation is required"))
    :type (common-lisp:or text-transformation common-lisp:null)))
 (common-lisp:export (common-lisp:list 'xss-match-tuple 'make-xss-match-tuple))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape xss-match-tuple))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FieldToMatch"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'field-to-match)))
    (aws-sdk/generator/shape::to-query-params "TextTransformation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'text-transformation))))))
(common-lisp:progn
 (common-lisp:deftype xss-match-tuples ()
   '(trivial-types:proper-list xss-match-tuple))
 (common-lisp:defun |make-xss-match-tuples|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list xss-match-tuple))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |errorMessage| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-byte-match-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name change-token)
   (common-lisp:declare (common-lisp:ignorable name change-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-byte-match-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateByteMatchSet")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateByteMatchSetResponse" common-lisp:nil)))
 (common-lisp:export 'create-byte-match-set))
(common-lisp:progn
 (common-lisp:defun create-ipset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name change-token)
   (common-lisp:declare (common-lisp:ignorable name change-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-ipset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateIPSet")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateIPSetResponse" common-lisp:nil)))
 (common-lisp:export 'create-ipset))
(common-lisp:progn
 (common-lisp:defun create-rate-based-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name metric-name rate-key rate-limit
                     change-token)
   (common-lisp:declare
    (common-lisp:ignorable name metric-name rate-key rate-limit change-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-rate-based-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateRateBasedRule")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateRateBasedRuleResponse" common-lisp:nil)))
 (common-lisp:export 'create-rate-based-rule))
(common-lisp:progn
 (common-lisp:defun create-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name metric-name change-token)
   (common-lisp:declare (common-lisp:ignorable name metric-name change-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateRule")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateRuleResponse" common-lisp:nil)))
 (common-lisp:export 'create-rule))
(common-lisp:progn
 (common-lisp:defun create-size-constraint-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name change-token)
   (common-lisp:declare (common-lisp:ignorable name change-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-size-constraint-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateSizeConstraintSet")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateSizeConstraintSetResponse" common-lisp:nil)))
 (common-lisp:export 'create-size-constraint-set))
(common-lisp:progn
 (common-lisp:defun create-sql-injection-match-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name change-token)
   (common-lisp:declare (common-lisp:ignorable name change-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-sql-injection-match-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateSqlInjectionMatchSet")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateSqlInjectionMatchSetResponse" common-lisp:nil)))
 (common-lisp:export 'create-sql-injection-match-set))
(common-lisp:progn
 (common-lisp:defun create-web-acl
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name metric-name default-action
                     change-token)
   (common-lisp:declare
    (common-lisp:ignorable name metric-name default-action change-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-web-aclrequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateWebACL")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateWebACLResponse" common-lisp:nil)))
 (common-lisp:export 'create-web-acl))
(common-lisp:progn
 (common-lisp:defun create-xss-match-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name change-token)
   (common-lisp:declare (common-lisp:ignorable name change-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-xss-match-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateXssMatchSet")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateXssMatchSetResponse" common-lisp:nil)))
 (common-lisp:export 'create-xss-match-set))
(common-lisp:progn
 (common-lisp:defun delete-byte-match-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key byte-match-set-id change-token)
   (common-lisp:declare (common-lisp:ignorable byte-match-set-id change-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-byte-match-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteByteMatchSet")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteByteMatchSetResponse" common-lisp:nil)))
 (common-lisp:export 'delete-byte-match-set))
(common-lisp:progn
 (common-lisp:defun delete-ipset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ipset-id change-token)
   (common-lisp:declare (common-lisp:ignorable ipset-id change-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-ipset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteIPSet")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteIPSetResponse" common-lisp:nil)))
 (common-lisp:export 'delete-ipset))
(common-lisp:progn
 (common-lisp:defun delete-rate-based-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-id change-token)
   (common-lisp:declare (common-lisp:ignorable rule-id change-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-rate-based-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteRateBasedRule")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteRateBasedRuleResponse" common-lisp:nil)))
 (common-lisp:export 'delete-rate-based-rule))
(common-lisp:progn
 (common-lisp:defun delete-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-id change-token)
   (common-lisp:declare (common-lisp:ignorable rule-id change-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteRule")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteRuleResponse" common-lisp:nil)))
 (common-lisp:export 'delete-rule))
(common-lisp:progn
 (common-lisp:defun delete-size-constraint-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key size-constraint-set-id change-token)
   (common-lisp:declare
    (common-lisp:ignorable size-constraint-set-id change-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-size-constraint-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteSizeConstraintSet")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteSizeConstraintSetResponse" common-lisp:nil)))
 (common-lisp:export 'delete-size-constraint-set))
(common-lisp:progn
 (common-lisp:defun delete-sql-injection-match-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sql-injection-match-set-id change-token)
   (common-lisp:declare
    (common-lisp:ignorable sql-injection-match-set-id change-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-sql-injection-match-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteSqlInjectionMatchSet")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteSqlInjectionMatchSetResponse" common-lisp:nil)))
 (common-lisp:export 'delete-sql-injection-match-set))
(common-lisp:progn
 (common-lisp:defun delete-web-acl
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key web-aclid change-token)
   (common-lisp:declare (common-lisp:ignorable web-aclid change-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-web-aclrequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteWebACL")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteWebACLResponse" common-lisp:nil)))
 (common-lisp:export 'delete-web-acl))
(common-lisp:progn
 (common-lisp:defun delete-xss-match-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key xss-match-set-id change-token)
   (common-lisp:declare (common-lisp:ignorable xss-match-set-id change-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-xss-match-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteXssMatchSet")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteXssMatchSetResponse" common-lisp:nil)))
 (common-lisp:export 'delete-xss-match-set))
(common-lisp:progn
 (common-lisp:defun get-byte-match-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key byte-match-set-id)
   (common-lisp:declare (common-lisp:ignorable byte-match-set-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-byte-match-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetByteMatchSet")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetByteMatchSetResponse" common-lisp:nil)))
 (common-lisp:export 'get-byte-match-set))
(common-lisp:progn
 (common-lisp:defun get-change-token ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                             :method :post :params
                             (common-lisp:cons "Action" "GetChangeToken"))
    "GetChangeTokenResponse" common-lisp:nil))
 (common-lisp:export 'get-change-token))
(common-lisp:progn
 (common-lisp:defun get-change-token-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key change-token)
   (common-lisp:declare (common-lisp:ignorable change-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-change-token-status-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetChangeTokenStatus")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetChangeTokenStatusResponse" common-lisp:nil)))
 (common-lisp:export 'get-change-token-status))
(common-lisp:progn
 (common-lisp:defun get-ipset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ipset-id)
   (common-lisp:declare (common-lisp:ignorable ipset-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-ipset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetIPSet")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetIPSetResponse" common-lisp:nil)))
 (common-lisp:export 'get-ipset))
(common-lisp:progn
 (common-lisp:defun get-rate-based-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-id)
   (common-lisp:declare (common-lisp:ignorable rule-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-rate-based-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetRateBasedRule")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetRateBasedRuleResponse" common-lisp:nil)))
 (common-lisp:export 'get-rate-based-rule))
(common-lisp:progn
 (common-lisp:defun get-rate-based-rule-managed-keys
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-id next-marker)
   (common-lisp:declare (common-lisp:ignorable rule-id next-marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-rate-based-rule-managed-keys-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetRateBasedRuleManagedKeys")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetRateBasedRuleManagedKeysResponse" common-lisp:nil)))
 (common-lisp:export 'get-rate-based-rule-managed-keys))
(common-lisp:progn
 (common-lisp:defun get-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-id)
   (common-lisp:declare (common-lisp:ignorable rule-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetRule")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetRuleResponse" common-lisp:nil)))
 (common-lisp:export 'get-rule))
(common-lisp:progn
 (common-lisp:defun get-sampled-requests
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key web-acl-id rule-id time-window max-items)
   (common-lisp:declare
    (common-lisp:ignorable web-acl-id rule-id time-window max-items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-sampled-requests-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetSampledRequests")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetSampledRequestsResponse" common-lisp:nil)))
 (common-lisp:export 'get-sampled-requests))
(common-lisp:progn
 (common-lisp:defun get-size-constraint-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key size-constraint-set-id)
   (common-lisp:declare (common-lisp:ignorable size-constraint-set-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-size-constraint-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetSizeConstraintSet")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetSizeConstraintSetResponse" common-lisp:nil)))
 (common-lisp:export 'get-size-constraint-set))
(common-lisp:progn
 (common-lisp:defun get-sql-injection-match-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sql-injection-match-set-id)
   (common-lisp:declare (common-lisp:ignorable sql-injection-match-set-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-sql-injection-match-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetSqlInjectionMatchSet")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetSqlInjectionMatchSetResponse" common-lisp:nil)))
 (common-lisp:export 'get-sql-injection-match-set))
(common-lisp:progn
 (common-lisp:defun get-web-acl
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key web-aclid)
   (common-lisp:declare (common-lisp:ignorable web-aclid))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-web-aclrequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetWebACL")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetWebACLResponse" common-lisp:nil)))
 (common-lisp:export 'get-web-acl))
(common-lisp:progn
 (common-lisp:defun get-xss-match-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key xss-match-set-id)
   (common-lisp:declare (common-lisp:ignorable xss-match-set-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-xss-match-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetXssMatchSet")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetXssMatchSetResponse" common-lisp:nil)))
 (common-lisp:export 'get-xss-match-set))
(common-lisp:progn
 (common-lisp:defun list-byte-match-sets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-marker limit)
   (common-lisp:declare (common-lisp:ignorable next-marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-byte-match-sets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListByteMatchSets")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListByteMatchSetsResponse" common-lisp:nil)))
 (common-lisp:export 'list-byte-match-sets))
(common-lisp:progn
 (common-lisp:defun list-ipsets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-marker limit)
   (common-lisp:declare (common-lisp:ignorable next-marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-ipsets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListIPSets")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListIPSetsResponse" common-lisp:nil)))
 (common-lisp:export 'list-ipsets))
(common-lisp:progn
 (common-lisp:defun list-rate-based-rules
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-marker limit)
   (common-lisp:declare (common-lisp:ignorable next-marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-rate-based-rules-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListRateBasedRules")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListRateBasedRulesResponse" common-lisp:nil)))
 (common-lisp:export 'list-rate-based-rules))
(common-lisp:progn
 (common-lisp:defun list-rules
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-marker limit)
   (common-lisp:declare (common-lisp:ignorable next-marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-rules-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListRules")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListRulesResponse" common-lisp:nil)))
 (common-lisp:export 'list-rules))
(common-lisp:progn
 (common-lisp:defun list-size-constraint-sets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-marker limit)
   (common-lisp:declare (common-lisp:ignorable next-marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-size-constraint-sets-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListSizeConstraintSets")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListSizeConstraintSetsResponse" common-lisp:nil)))
 (common-lisp:export 'list-size-constraint-sets))
(common-lisp:progn
 (common-lisp:defun list-sql-injection-match-sets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-marker limit)
   (common-lisp:declare (common-lisp:ignorable next-marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-sql-injection-match-sets-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListSqlInjectionMatchSets")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListSqlInjectionMatchSetsResponse" common-lisp:nil)))
 (common-lisp:export 'list-sql-injection-match-sets))
(common-lisp:progn
 (common-lisp:defun list-web-acls
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-marker limit)
   (common-lisp:declare (common-lisp:ignorable next-marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-web-acls-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListWebACLs")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListWebACLsResponse" common-lisp:nil)))
 (common-lisp:export 'list-web-acls))
(common-lisp:progn
 (common-lisp:defun list-xss-match-sets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-marker limit)
   (common-lisp:declare (common-lisp:ignorable next-marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-xss-match-sets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListXssMatchSets")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListXssMatchSetsResponse" common-lisp:nil)))
 (common-lisp:export 'list-xss-match-sets))
(common-lisp:progn
 (common-lisp:defun update-byte-match-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key byte-match-set-id change-token updates)
   (common-lisp:declare
    (common-lisp:ignorable byte-match-set-id change-token updates))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-byte-match-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateByteMatchSet")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateByteMatchSetResponse" common-lisp:nil)))
 (common-lisp:export 'update-byte-match-set))
(common-lisp:progn
 (common-lisp:defun update-ipset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ipset-id change-token updates)
   (common-lisp:declare (common-lisp:ignorable ipset-id change-token updates))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-ipset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateIPSet")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateIPSetResponse" common-lisp:nil)))
 (common-lisp:export 'update-ipset))
(common-lisp:progn
 (common-lisp:defun update-rate-based-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-id change-token updates rate-limit)
   (common-lisp:declare
    (common-lisp:ignorable rule-id change-token updates rate-limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-rate-based-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateRateBasedRule")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateRateBasedRuleResponse" common-lisp:nil)))
 (common-lisp:export 'update-rate-based-rule))
(common-lisp:progn
 (common-lisp:defun update-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rule-id change-token updates)
   (common-lisp:declare (common-lisp:ignorable rule-id change-token updates))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateRule")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateRuleResponse" common-lisp:nil)))
 (common-lisp:export 'update-rule))
(common-lisp:progn
 (common-lisp:defun update-size-constraint-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key size-constraint-set-id change-token
                     updates)
   (common-lisp:declare
    (common-lisp:ignorable size-constraint-set-id change-token updates))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-size-constraint-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateSizeConstraintSet")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateSizeConstraintSetResponse" common-lisp:nil)))
 (common-lisp:export 'update-size-constraint-set))
(common-lisp:progn
 (common-lisp:defun update-sql-injection-match-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sql-injection-match-set-id change-token
                     updates)
   (common-lisp:declare
    (common-lisp:ignorable sql-injection-match-set-id change-token updates))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-sql-injection-match-set-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateSqlInjectionMatchSet")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateSqlInjectionMatchSetResponse" common-lisp:nil)))
 (common-lisp:export 'update-sql-injection-match-set))
(common-lisp:progn
 (common-lisp:defun update-web-acl
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key web-aclid change-token updates
                     default-action)
   (common-lisp:declare
    (common-lisp:ignorable web-aclid change-token updates default-action))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-web-aclrequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateWebACL")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateWebACLResponse" common-lisp:nil)))
 (common-lisp:export 'update-web-acl))
(common-lisp:progn
 (common-lisp:defun update-xss-match-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key xss-match-set-id change-token updates)
   (common-lisp:declare
    (common-lisp:ignorable xss-match-set-id change-token updates))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-xss-match-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "waf")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateXssMatchSet")
                                  ("Version" ,@"2015-08-24"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateXssMatchSetResponse" common-lisp:nil)))
 (common-lisp:export 'update-xss-match-set))