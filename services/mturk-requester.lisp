;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/mturk-requester
  (:use)
  (:nicknames #:aws/mturk-requester)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/mturk-requester)

(common-lisp:progn
 (common-lisp:defstruct
     (accept-qualification-request-request (:copier common-lisp:nil))
   (qualification-request-id
    (common-lisp:error
     #A((37) common-lisp:base-char . ":qualification-request-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (integer-value common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'accept-qualification-request-request
                    'make-accept-qualification-request-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          accept-qualification-request-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QualificationRequestId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-request-id)))
    (aws-sdk/generator/shape::to-query-params "IntegerValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'integer-value))))))
(common-lisp:progn
 (common-lisp:defstruct
     (accept-qualification-request-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'accept-qualification-request-response
                    'make-accept-qualification-request-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          accept-qualification-request-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (approve-assignment-request (:copier common-lisp:nil))
   (assignment-id
    (common-lisp:error
     #A((26) common-lisp:base-char . ":assignment-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (requester-feedback common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (override-rejection common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'approve-assignment-request
                    'make-approve-assignment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          approve-assignment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AssignmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assignment-id)))
    (aws-sdk/generator/shape::to-query-params "RequesterFeedback"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'requester-feedback)))
    (aws-sdk/generator/shape::to-query-params "OverrideRejection"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'override-rejection))))))
(common-lisp:progn
 (common-lisp:defstruct
     (approve-assignment-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'approve-assignment-response
                    'make-approve-assignment-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          approve-assignment-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (assignment (:copier common-lisp:nil))
   (assignment-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (worker-id common-lisp:nil :type
    (common-lisp:or customer-id common-lisp:null))
   (hitid common-lisp:nil :type (common-lisp:or entity-id common-lisp:null))
   (assignment-status common-lisp:nil :type
    (common-lisp:or assignment-status common-lisp:null))
   (auto-approval-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (accept-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (submit-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (approval-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (rejection-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (deadline common-lisp:nil :type (common-lisp:or timestamp common-lisp:null))
   (answer common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (requester-feedback common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'assignment 'make-assignment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape assignment))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AssignmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assignment-id)))
    (aws-sdk/generator/shape::to-query-params "WorkerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'worker-id)))
    (aws-sdk/generator/shape::to-query-params "HITId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitid)))
    (aws-sdk/generator/shape::to-query-params "AssignmentStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assignment-status)))
    (aws-sdk/generator/shape::to-query-params "AutoApprovalTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-approval-time)))
    (aws-sdk/generator/shape::to-query-params "AcceptTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-time)))
    (aws-sdk/generator/shape::to-query-params "SubmitTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'submit-time)))
    (aws-sdk/generator/shape::to-query-params "ApprovalTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'approval-time)))
    (aws-sdk/generator/shape::to-query-params "RejectionTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rejection-time)))
    (aws-sdk/generator/shape::to-query-params "Deadline"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'deadline)))
    (aws-sdk/generator/shape::to-query-params "Answer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'answer)))
    (aws-sdk/generator/shape::to-query-params "RequesterFeedback"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'requester-feedback))))))
(common-lisp:progn
 (common-lisp:deftype assignment-list ()
   '(trivial-types:proper-list assignment))
 (common-lisp:defun |make-assignment-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list assignment))
   aws-sdk/generator/shape::members))
(common-lisp:deftype assignment-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype assignment-status-list ()
   '(trivial-types:proper-list assignment-status))
 (common-lisp:defun |make-assignment-status-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list assignment-status))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-qualification-with-worker-request (:copier common-lisp:nil))
   (qualification-type-id
    (common-lisp:error
     #A((34) common-lisp:base-char . ":qualification-type-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (worker-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":worker-id is required"))
    :type (common-lisp:or customer-id common-lisp:null))
   (integer-value common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (send-notification common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'associate-qualification-with-worker-request
                    'make-associate-qualification-with-worker-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          associate-qualification-with-worker-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QualificationTypeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-type-id)))
    (aws-sdk/generator/shape::to-query-params "WorkerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'worker-id)))
    (aws-sdk/generator/shape::to-query-params "IntegerValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'integer-value)))
    (aws-sdk/generator/shape::to-query-params "SendNotification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'send-notification))))))
(common-lisp:progn
 (common-lisp:defstruct
     (associate-qualification-with-worker-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'associate-qualification-with-worker-response
                    'make-associate-qualification-with-worker-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          associate-qualification-with-worker-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (bonus-payment (:copier common-lisp:nil))
   (worker-id common-lisp:nil :type
    (common-lisp:or customer-id common-lisp:null))
   (bonus-amount common-lisp:nil :type
    (common-lisp:or numeric-value common-lisp:null))
   (assignment-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (reason common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (grant-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'bonus-payment 'make-bonus-payment))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape bonus-payment))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WorkerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'worker-id)))
    (aws-sdk/generator/shape::to-query-params "BonusAmount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bonus-amount)))
    (aws-sdk/generator/shape::to-query-params "AssignmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assignment-id)))
    (aws-sdk/generator/shape::to-query-params "Reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason)))
    (aws-sdk/generator/shape::to-query-params "GrantTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-time))))))
(common-lisp:progn
 (common-lisp:deftype bonus-payment-list ()
   '(trivial-types:proper-list bonus-payment))
 (common-lisp:defun |make-bonus-payment-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list bonus-payment))
   aws-sdk/generator/shape::members))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype comparator () 'common-lisp:string)
(common-lisp:deftype country-parameters () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (create-additional-assignments-for-hitrequest (:copier common-lisp:nil))
   (hitid
    (common-lisp:error #A((18) common-lisp:base-char . ":hitid is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (number-of-additional-assignments common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (unique-request-token common-lisp:nil :type
    (common-lisp:or idempotency-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-additional-assignments-for-hitrequest
                    'make-create-additional-assignments-for-hitrequest))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-additional-assignments-for-hitrequest))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HITId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitid)))
    (aws-sdk/generator/shape::to-query-params "NumberOfAdditionalAssignments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'number-of-additional-assignments)))
    (aws-sdk/generator/shape::to-query-params "UniqueRequestToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unique-request-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-additional-assignments-for-hitresponse (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-additional-assignments-for-hitresponse
                    'make-create-additional-assignments-for-hitresponse))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-additional-assignments-for-hitresponse))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (create-hitrequest (:copier common-lisp:nil))
   (max-assignments common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (auto-approval-delay-in-seconds common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (lifetime-in-seconds
    (common-lisp:error
     #A((32) common-lisp:base-char . ":lifetime-in-seconds is required"))
    :type (common-lisp:or long common-lisp:null))
   (assignment-duration-in-seconds
    (common-lisp:error
     #A((43) common-lisp:base-char
        . ":assignment-duration-in-seconds is required"))
    :type (common-lisp:or long common-lisp:null))
   (reward
    (common-lisp:error #A((19) common-lisp:base-char . ":reward is required"))
    :type (common-lisp:or numeric-value common-lisp:null))
   (title
    (common-lisp:error #A((18) common-lisp:base-char . ":title is required"))
    :type (common-lisp:or string common-lisp:null))
   (keywords common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description
    (common-lisp:error
     #A((24) common-lisp:base-char . ":description is required"))
    :type (common-lisp:or string common-lisp:null))
   (question common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (requester-annotation common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (qualification-requirements common-lisp:nil :type
    (common-lisp:or qualification-requirement-list common-lisp:null))
   (unique-request-token common-lisp:nil :type
    (common-lisp:or idempotency-token common-lisp:null))
   (assignment-review-policy common-lisp:nil :type
    (common-lisp:or review-policy common-lisp:null))
   (hitreview-policy common-lisp:nil :type
    (common-lisp:or review-policy common-lisp:null))
   (hitlayout-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (hitlayout-parameters common-lisp:nil :type
    (common-lisp:or hitlayout-parameter-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-hitrequest 'make-create-hitrequest))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-hitrequest))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MaxAssignments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-assignments)))
    (aws-sdk/generator/shape::to-query-params "AutoApprovalDelayInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-approval-delay-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "LifetimeInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifetime-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "AssignmentDurationInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assignment-duration-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "Reward"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reward)))
    (aws-sdk/generator/shape::to-query-params "Title"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'title)))
    (aws-sdk/generator/shape::to-query-params "Keywords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'keywords)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Question"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'question)))
    (aws-sdk/generator/shape::to-query-params "RequesterAnnotation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'requester-annotation)))
    (aws-sdk/generator/shape::to-query-params "QualificationRequirements"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-requirements)))
    (aws-sdk/generator/shape::to-query-params "UniqueRequestToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unique-request-token)))
    (aws-sdk/generator/shape::to-query-params "AssignmentReviewPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assignment-review-policy)))
    (aws-sdk/generator/shape::to-query-params "HITReviewPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitreview-policy)))
    (aws-sdk/generator/shape::to-query-params "HITLayoutId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitlayout-id)))
    (aws-sdk/generator/shape::to-query-params "HITLayoutParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitlayout-parameters))))))
(common-lisp:progn
 (common-lisp:defstruct (create-hitresponse (:copier common-lisp:nil))
   (hit common-lisp:nil :type (common-lisp:or hit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-hitresponse 'make-create-hitresponse))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-hitresponse))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HIT"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hit))))))
(common-lisp:progn
 (common-lisp:defstruct (create-hittype-request (:copier common-lisp:nil))
   (auto-approval-delay-in-seconds common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (assignment-duration-in-seconds
    (common-lisp:error
     #A((43) common-lisp:base-char
        . ":assignment-duration-in-seconds is required"))
    :type (common-lisp:or long common-lisp:null))
   (reward
    (common-lisp:error #A((19) common-lisp:base-char . ":reward is required"))
    :type (common-lisp:or numeric-value common-lisp:null))
   (title
    (common-lisp:error #A((18) common-lisp:base-char . ":title is required"))
    :type (common-lisp:or string common-lisp:null))
   (keywords common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description
    (common-lisp:error
     #A((24) common-lisp:base-char . ":description is required"))
    :type (common-lisp:or string common-lisp:null))
   (qualification-requirements common-lisp:nil :type
    (common-lisp:or qualification-requirement-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-hittype-request 'make-create-hittype-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-hittype-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AutoApprovalDelayInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-approval-delay-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "AssignmentDurationInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assignment-duration-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "Reward"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reward)))
    (aws-sdk/generator/shape::to-query-params "Title"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'title)))
    (aws-sdk/generator/shape::to-query-params "Keywords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'keywords)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "QualificationRequirements"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-requirements))))))
(common-lisp:progn
 (common-lisp:defstruct (create-hittype-response (:copier common-lisp:nil))
   (hittype-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-hittype-response 'make-create-hittype-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-hittype-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HITTypeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hittype-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-hitwith-hittype-request (:copier common-lisp:nil))
   (hittype-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":hittype-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (max-assignments common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (lifetime-in-seconds
    (common-lisp:error
     #A((32) common-lisp:base-char . ":lifetime-in-seconds is required"))
    :type (common-lisp:or long common-lisp:null))
   (question common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (requester-annotation common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (unique-request-token common-lisp:nil :type
    (common-lisp:or idempotency-token common-lisp:null))
   (assignment-review-policy common-lisp:nil :type
    (common-lisp:or review-policy common-lisp:null))
   (hitreview-policy common-lisp:nil :type
    (common-lisp:or review-policy common-lisp:null))
   (hitlayout-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (hitlayout-parameters common-lisp:nil :type
    (common-lisp:or hitlayout-parameter-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-hitwith-hittype-request
                    'make-create-hitwith-hittype-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-hitwith-hittype-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HITTypeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hittype-id)))
    (aws-sdk/generator/shape::to-query-params "MaxAssignments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-assignments)))
    (aws-sdk/generator/shape::to-query-params "LifetimeInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lifetime-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "Question"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'question)))
    (aws-sdk/generator/shape::to-query-params "RequesterAnnotation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'requester-annotation)))
    (aws-sdk/generator/shape::to-query-params "UniqueRequestToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unique-request-token)))
    (aws-sdk/generator/shape::to-query-params "AssignmentReviewPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assignment-review-policy)))
    (aws-sdk/generator/shape::to-query-params "HITReviewPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitreview-policy)))
    (aws-sdk/generator/shape::to-query-params "HITLayoutId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitlayout-id)))
    (aws-sdk/generator/shape::to-query-params "HITLayoutParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitlayout-parameters))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-hitwith-hittype-response (:copier common-lisp:nil))
   (hit common-lisp:nil :type (common-lisp:or hit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-hitwith-hittype-response
                    'make-create-hitwith-hittype-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-hitwith-hittype-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HIT"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-qualification-type-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (keywords common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description
    (common-lisp:error
     #A((24) common-lisp:base-char . ":description is required"))
    :type (common-lisp:or string common-lisp:null))
   (qualification-type-status
    (common-lisp:error
     #A((38) common-lisp:base-char . ":qualification-type-status is required"))
    :type (common-lisp:or qualification-type-status common-lisp:null))
   (retry-delay-in-seconds common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (test common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (answer-key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (test-duration-in-seconds common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (auto-granted common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (auto-granted-value common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-qualification-type-request
                    'make-create-qualification-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-qualification-type-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Keywords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'keywords)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "QualificationTypeStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-type-status)))
    (aws-sdk/generator/shape::to-query-params "RetryDelayInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'retry-delay-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "Test"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'test)))
    (aws-sdk/generator/shape::to-query-params "AnswerKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'answer-key)))
    (aws-sdk/generator/shape::to-query-params "TestDurationInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'test-duration-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "AutoGranted"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-granted)))
    (aws-sdk/generator/shape::to-query-params "AutoGrantedValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-granted-value))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-qualification-type-response (:copier common-lisp:nil))
   (qualification-type common-lisp:nil :type
    (common-lisp:or qualification-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-qualification-type-response
                    'make-create-qualification-type-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-qualification-type-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QualificationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-type))))))
(common-lisp:progn
 (common-lisp:defstruct (create-worker-block-request (:copier common-lisp:nil))
   (worker-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":worker-id is required"))
    :type (common-lisp:or customer-id common-lisp:null))
   (reason
    (common-lisp:error #A((19) common-lisp:base-char . ":reason is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-worker-block-request
                    'make-create-worker-block-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-worker-block-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WorkerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'worker-id)))
    (aws-sdk/generator/shape::to-query-params "Reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-worker-block-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-worker-block-response
                    'make-create-worker-block-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-worker-block-response))
   (common-lisp:append)))
(common-lisp:deftype customer-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype customer-id-list ()
   '(trivial-types:proper-list customer-id))
 (common-lisp:defun |make-customer-id-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list customer-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (delete-hitrequest (:copier common-lisp:nil))
   (hitid
    (common-lisp:error #A((18) common-lisp:base-char . ":hitid is required"))
    :type (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-hitrequest 'make-delete-hitrequest))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-hitrequest))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HITId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitid))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-hitresponse (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-hitresponse 'make-delete-hitresponse))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-hitresponse))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-qualification-type-request (:copier common-lisp:nil))
   (qualification-type-id
    (common-lisp:error
     #A((34) common-lisp:base-char . ":qualification-type-id is required"))
    :type (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-qualification-type-request
                    'make-delete-qualification-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-qualification-type-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QualificationTypeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-type-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-qualification-type-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-qualification-type-response
                    'make-delete-qualification-type-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-qualification-type-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (delete-worker-block-request (:copier common-lisp:nil))
   (worker-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":worker-id is required"))
    :type (common-lisp:or customer-id common-lisp:null))
   (reason common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-worker-block-request
                    'make-delete-worker-block-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-worker-block-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WorkerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'worker-id)))
    (aws-sdk/generator/shape::to-query-params "Reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-worker-block-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-worker-block-response
                    'make-delete-worker-block-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-worker-block-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-qualification-from-worker-request (:copier common-lisp:nil))
   (worker-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":worker-id is required"))
    :type (common-lisp:or customer-id common-lisp:null))
   (qualification-type-id
    (common-lisp:error
     #A((34) common-lisp:base-char . ":qualification-type-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (reason common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'disassociate-qualification-from-worker-request
                    'make-disassociate-qualification-from-worker-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disassociate-qualification-from-worker-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WorkerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'worker-id)))
    (aws-sdk/generator/shape::to-query-params "QualificationTypeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-type-id)))
    (aws-sdk/generator/shape::to-query-params "Reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason))))))
(common-lisp:progn
 (common-lisp:defstruct
     (disassociate-qualification-from-worker-response
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'disassociate-qualification-from-worker-response
                    'make-disassociate-qualification-from-worker-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          disassociate-qualification-from-worker-response))
   (common-lisp:append)))
(common-lisp:deftype entity-id () 'common-lisp:string)
(common-lisp:deftype event-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype event-type-list ()
   '(trivial-types:proper-list event-type))
 (common-lisp:defun |make-event-type-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype exception-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-account-balance-request (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'get-account-balance-request
                    'make-get-account-balance-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-account-balance-request))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (get-account-balance-response (:copier common-lisp:nil))
   (available-balance common-lisp:nil :type
    (common-lisp:or numeric-value common-lisp:null))
   (on-hold-balance common-lisp:nil :type
    (common-lisp:or numeric-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-account-balance-response
                    'make-get-account-balance-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-account-balance-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AvailableBalance"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'available-balance)))
    (aws-sdk/generator/shape::to-query-params "OnHoldBalance"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'on-hold-balance))))))
(common-lisp:progn
 (common-lisp:defstruct (get-assignment-request (:copier common-lisp:nil))
   (assignment-id
    (common-lisp:error
     #A((26) common-lisp:base-char . ":assignment-id is required"))
    :type (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-assignment-request 'make-get-assignment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-assignment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AssignmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assignment-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-assignment-response (:copier common-lisp:nil))
   (assignment common-lisp:nil :type
    (common-lisp:or assignment common-lisp:null))
   (hit common-lisp:nil :type (common-lisp:or hit common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-assignment-response 'make-get-assignment-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-assignment-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Assignment"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assignment)))
    (aws-sdk/generator/shape::to-query-params "HIT"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hit))))))
(common-lisp:progn
 (common-lisp:defstruct (get-file-upload-urlrequest (:copier common-lisp:nil))
   (assignment-id
    (common-lisp:error
     #A((26) common-lisp:base-char . ":assignment-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (question-identifier
    (common-lisp:error
     #A((32) common-lisp:base-char . ":question-identifier is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-file-upload-urlrequest
                    'make-get-file-upload-urlrequest))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-file-upload-urlrequest))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AssignmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assignment-id)))
    (aws-sdk/generator/shape::to-query-params "QuestionIdentifier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'question-identifier))))))
(common-lisp:progn
 (common-lisp:defstruct (get-file-upload-urlresponse (:copier common-lisp:nil))
   (file-upload-url common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-file-upload-urlresponse
                    'make-get-file-upload-urlresponse))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-file-upload-urlresponse))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "FileUploadURL"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'file-upload-url))))))
(common-lisp:progn
 (common-lisp:defstruct (get-hitrequest (:copier common-lisp:nil))
   (hitid
    (common-lisp:error #A((18) common-lisp:base-char . ":hitid is required"))
    :type (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-hitrequest 'make-get-hitrequest))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-hitrequest))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HITId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitid))))))
(common-lisp:progn
 (common-lisp:defstruct (get-hitresponse (:copier common-lisp:nil))
   (hit common-lisp:nil :type (common-lisp:or hit common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-hitresponse 'make-get-hitresponse))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-hitresponse))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HIT"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-qualification-score-request (:copier common-lisp:nil))
   (qualification-type-id
    (common-lisp:error
     #A((34) common-lisp:base-char . ":qualification-type-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (worker-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":worker-id is required"))
    :type (common-lisp:or customer-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-qualification-score-request
                    'make-get-qualification-score-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-qualification-score-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QualificationTypeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-type-id)))
    (aws-sdk/generator/shape::to-query-params "WorkerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'worker-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-qualification-score-response (:copier common-lisp:nil))
   (qualification common-lisp:nil :type
    (common-lisp:or qualification common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-qualification-score-response
                    'make-get-qualification-score-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-qualification-score-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Qualification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-qualification-type-request (:copier common-lisp:nil))
   (qualification-type-id
    (common-lisp:error
     #A((34) common-lisp:base-char . ":qualification-type-id is required"))
    :type (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-qualification-type-request
                    'make-get-qualification-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-qualification-type-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QualificationTypeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-type-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-qualification-type-response (:copier common-lisp:nil))
   (qualification-type common-lisp:nil :type
    (common-lisp:or qualification-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-qualification-type-response
                    'make-get-qualification-type-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-qualification-type-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QualificationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-type))))))
(common-lisp:progn
 (common-lisp:defstruct (hit (:copier common-lisp:nil))
   (hitid common-lisp:nil :type (common-lisp:or entity-id common-lisp:null))
   (hittype-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (hitgroup-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (hitlayout-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (title common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (question common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (keywords common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (hitstatus common-lisp:nil :type
    (common-lisp:or hitstatus common-lisp:null))
   (max-assignments common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (reward common-lisp:nil :type
    (common-lisp:or numeric-value common-lisp:null))
   (auto-approval-delay-in-seconds common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (expiration common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (assignment-duration-in-seconds common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (requester-annotation common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (qualification-requirements common-lisp:nil :type
    (common-lisp:or qualification-requirement-list common-lisp:null))
   (hitreview-status common-lisp:nil :type
    (common-lisp:or hitreview-status common-lisp:null))
   (number-of-assignments-pending common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (number-of-assignments-available common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (number-of-assignments-completed common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export (common-lisp:list 'hit 'make-hit))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape hit))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HITId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitid)))
    (aws-sdk/generator/shape::to-query-params "HITTypeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hittype-id)))
    (aws-sdk/generator/shape::to-query-params "HITGroupId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitgroup-id)))
    (aws-sdk/generator/shape::to-query-params "HITLayoutId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitlayout-id)))
    (aws-sdk/generator/shape::to-query-params "CreationTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-time)))
    (aws-sdk/generator/shape::to-query-params "Title"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'title)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Question"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'question)))
    (aws-sdk/generator/shape::to-query-params "Keywords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'keywords)))
    (aws-sdk/generator/shape::to-query-params "HITStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitstatus)))
    (aws-sdk/generator/shape::to-query-params "MaxAssignments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-assignments)))
    (aws-sdk/generator/shape::to-query-params "Reward"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reward)))
    (aws-sdk/generator/shape::to-query-params "AutoApprovalDelayInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-approval-delay-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "Expiration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expiration)))
    (aws-sdk/generator/shape::to-query-params "AssignmentDurationInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assignment-duration-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "RequesterAnnotation"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'requester-annotation)))
    (aws-sdk/generator/shape::to-query-params "QualificationRequirements"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-requirements)))
    (aws-sdk/generator/shape::to-query-params "HITReviewStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitreview-status)))
    (aws-sdk/generator/shape::to-query-params "NumberOfAssignmentsPending"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'number-of-assignments-pending)))
    (aws-sdk/generator/shape::to-query-params "NumberOfAssignmentsAvailable"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'number-of-assignments-available)))
    (aws-sdk/generator/shape::to-query-params "NumberOfAssignmentsCompleted"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'number-of-assignments-completed))))))
(common-lisp:progn
 (common-lisp:defstruct (hitlayout-parameter (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'hitlayout-parameter 'make-hitlayout-parameter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape hitlayout-parameter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:deftype hitlayout-parameter-list ()
   '(trivial-types:proper-list hitlayout-parameter))
 (common-lisp:defun |make-hitlayout-parameter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list hitlayout-parameter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype hitlist () '(trivial-types:proper-list hit))
 (common-lisp:defun |make-hitlist|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list hit))
   aws-sdk/generator/shape::members))
(common-lisp:deftype hitreview-status () 'common-lisp:string)
(common-lisp:deftype hitstatus () 'common-lisp:string)
(common-lisp:deftype idempotency-token () 'common-lisp:string)
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype integer-list () '(trivial-types:proper-list integer))
 (common-lisp:defun |make-integer-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list integer))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (list-assignments-for-hitrequest (:copier common-lisp:nil))
   (hitid
    (common-lisp:error #A((18) common-lisp:base-char . ":hitid is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-size common-lisp:null))
   (assignment-statuses common-lisp:nil :type
    (common-lisp:or assignment-status-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-assignments-for-hitrequest
                    'make-list-assignments-for-hitrequest))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-assignments-for-hitrequest))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HITId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitid)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "AssignmentStatuses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assignment-statuses))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-assignments-for-hitresponse (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (num-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (assignments common-lisp:nil :type
    (common-lisp:or assignment-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-assignments-for-hitresponse
                    'make-list-assignments-for-hitresponse))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-assignments-for-hitresponse))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "NumResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'num-results)))
    (aws-sdk/generator/shape::to-query-params "Assignments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assignments))))))
(common-lisp:progn
 (common-lisp:defstruct (list-bonus-payments-request (:copier common-lisp:nil))
   (hitid common-lisp:nil :type (common-lisp:or entity-id common-lisp:null))
   (assignment-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-bonus-payments-request
                    'make-list-bonus-payments-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-bonus-payments-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HITId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitid)))
    (aws-sdk/generator/shape::to-query-params "AssignmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assignment-id)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-bonus-payments-response (:copier common-lisp:nil))
   (num-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (bonus-payments common-lisp:nil :type
    (common-lisp:or bonus-payment-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-bonus-payments-response
                    'make-list-bonus-payments-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-bonus-payments-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NumResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'num-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "BonusPayments"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bonus-payments))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-hits-for-qualification-type-request (:copier common-lisp:nil))
   (qualification-type-id
    (common-lisp:error
     #A((34) common-lisp:base-char . ":qualification-type-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-hits-for-qualification-type-request
                    'make-list-hits-for-qualification-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-hits-for-qualification-type-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QualificationTypeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-type-id)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-hits-for-qualification-type-response (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (num-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (hits common-lisp:nil :type (common-lisp:or hitlist common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-hits-for-qualification-type-response
                    'make-list-hits-for-qualification-type-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-hits-for-qualification-type-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "NumResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'num-results)))
    (aws-sdk/generator/shape::to-query-params "HITs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hits))))))
(common-lisp:progn
 (common-lisp:defstruct (list-hits-request (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-hits-request 'make-list-hits-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-hits-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (list-hits-response (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (num-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (hits common-lisp:nil :type (common-lisp:or hitlist common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-hits-response 'make-list-hits-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-hits-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "NumResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'num-results)))
    (aws-sdk/generator/shape::to-query-params "HITs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hits))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-qualification-requests-request (:copier common-lisp:nil))
   (qualification-type-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-qualification-requests-request
                    'make-list-qualification-requests-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-qualification-requests-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QualificationTypeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-type-id)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-qualification-requests-response (:copier common-lisp:nil))
   (num-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (qualification-requests common-lisp:nil :type
    (common-lisp:or qualification-request-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-qualification-requests-response
                    'make-list-qualification-requests-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-qualification-requests-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NumResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'num-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "QualificationRequests"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-requests))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-qualification-types-request (:copier common-lisp:nil))
   (query common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (must-be-requestable
    (common-lisp:error
     #A((32) common-lisp:base-char . ":must-be-requestable is required"))
    :type (common-lisp:or boolean common-lisp:null))
   (must-be-owned-by-caller common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-qualification-types-request
                    'make-list-qualification-types-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-qualification-types-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Query"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'query)))
    (aws-sdk/generator/shape::to-query-params "MustBeRequestable"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'must-be-requestable)))
    (aws-sdk/generator/shape::to-query-params "MustBeOwnedByCaller"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'must-be-owned-by-caller)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-qualification-types-response (:copier common-lisp:nil))
   (num-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (qualification-types common-lisp:nil :type
    (common-lisp:or qualification-type-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-qualification-types-response
                    'make-list-qualification-types-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-qualification-types-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NumResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'num-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "QualificationTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-types))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-review-policy-results-for-hitrequest (:copier common-lisp:nil))
   (hitid
    (common-lisp:error #A((18) common-lisp:base-char . ":hitid is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (policy-levels common-lisp:nil :type
    (common-lisp:or review-policy-level-list common-lisp:null))
   (retrieve-actions common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (retrieve-results common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-review-policy-results-for-hitrequest
                    'make-list-review-policy-results-for-hitrequest))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-review-policy-results-for-hitrequest))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HITId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitid)))
    (aws-sdk/generator/shape::to-query-params "PolicyLevels"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-levels)))
    (aws-sdk/generator/shape::to-query-params "RetrieveActions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'retrieve-actions)))
    (aws-sdk/generator/shape::to-query-params "RetrieveResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'retrieve-results)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-review-policy-results-for-hitresponse (:copier common-lisp:nil))
   (hitid common-lisp:nil :type (common-lisp:or entity-id common-lisp:null))
   (assignment-review-policy common-lisp:nil :type
    (common-lisp:or review-policy common-lisp:null))
   (hitreview-policy common-lisp:nil :type
    (common-lisp:or review-policy common-lisp:null))
   (assignment-review-report common-lisp:nil :type
    (common-lisp:or review-report common-lisp:null))
   (hitreview-report common-lisp:nil :type
    (common-lisp:or review-report common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-review-policy-results-for-hitresponse
                    'make-list-review-policy-results-for-hitresponse))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-review-policy-results-for-hitresponse))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HITId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitid)))
    (aws-sdk/generator/shape::to-query-params "AssignmentReviewPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assignment-review-policy)))
    (aws-sdk/generator/shape::to-query-params "HITReviewPolicy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitreview-policy)))
    (aws-sdk/generator/shape::to-query-params "AssignmentReviewReport"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assignment-review-report)))
    (aws-sdk/generator/shape::to-query-params "HITReviewReport"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitreview-report)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-reviewable-hits-request (:copier common-lisp:nil))
   (hittype-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or reviewable-hitstatus common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-reviewable-hits-request
                    'make-list-reviewable-hits-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-reviewable-hits-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HITTypeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hittype-id)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-reviewable-hits-response (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (num-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (hits common-lisp:nil :type (common-lisp:or hitlist common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-reviewable-hits-response
                    'make-list-reviewable-hits-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-reviewable-hits-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "NumResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'num-results)))
    (aws-sdk/generator/shape::to-query-params "HITs"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hits))))))
(common-lisp:progn
 (common-lisp:defstruct (list-worker-blocks-request (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-worker-blocks-request
                    'make-list-worker-blocks-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-worker-blocks-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (list-worker-blocks-response (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (num-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (worker-blocks common-lisp:nil :type
    (common-lisp:or worker-block-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-worker-blocks-response
                    'make-list-worker-blocks-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-worker-blocks-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "NumResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'num-results)))
    (aws-sdk/generator/shape::to-query-params "WorkerBlocks"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'worker-blocks))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-workers-with-qualification-type-request (:copier common-lisp:nil))
   (qualification-type-id
    (common-lisp:error
     #A((34) common-lisp:base-char . ":qualification-type-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or qualification-status common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or result-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-workers-with-qualification-type-request
                    'make-list-workers-with-qualification-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-workers-with-qualification-type-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QualificationTypeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-type-id)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-workers-with-qualification-type-response (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or pagination-token common-lisp:null))
   (num-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (qualifications common-lisp:nil :type
    (common-lisp:or qualification-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-workers-with-qualification-type-response
                    'make-list-workers-with-qualification-type-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-workers-with-qualification-type-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "NumResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'num-results)))
    (aws-sdk/generator/shape::to-query-params "Qualifications"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualifications))))))
(common-lisp:progn
 (common-lisp:defstruct (locale (:copier common-lisp:nil))
   (country
    (common-lisp:error #A((20) common-lisp:base-char . ":country is required"))
    :type (common-lisp:or country-parameters common-lisp:null))
   (subdivision common-lisp:nil :type
    (common-lisp:or country-parameters common-lisp:null)))
 (common-lisp:export (common-lisp:list 'locale 'make-locale))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape locale))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Country"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'country)))
    (aws-sdk/generator/shape::to-query-params "Subdivision"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subdivision))))))
(common-lisp:progn
 (common-lisp:deftype locale-list () '(trivial-types:proper-list locale))
 (common-lisp:defun |make-locale-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list locale))
   aws-sdk/generator/shape::members))
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (notification-specification (:copier common-lisp:nil))
   (destination
    (common-lisp:error
     #A((24) common-lisp:base-char . ":destination is required"))
    :type (common-lisp:or string common-lisp:null))
   (transport
    (common-lisp:error
     #A((22) common-lisp:base-char . ":transport is required"))
    :type (common-lisp:or notification-transport common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (event-types common-lisp:nil :type
    (common-lisp:or event-type-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'notification-specification
                    'make-notification-specification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          notification-specification))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Destination"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'destination)))
    (aws-sdk/generator/shape::to-query-params "Transport"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'transport)))
    (aws-sdk/generator/shape::to-query-params "Version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "EventTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'event-types))))))
(common-lisp:deftype notification-transport () 'common-lisp:string)
(common-lisp:deftype notify-workers-failure-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (notify-workers-failure-status (:copier common-lisp:nil))
   (notify-workers-failure-code common-lisp:nil :type
    (common-lisp:or notify-workers-failure-code common-lisp:null))
   (notify-workers-failure-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (worker-id common-lisp:nil :type
    (common-lisp:or customer-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'notify-workers-failure-status
                    'make-notify-workers-failure-status))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          notify-workers-failure-status))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NotifyWorkersFailureCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notify-workers-failure-code)))
    (aws-sdk/generator/shape::to-query-params "NotifyWorkersFailureMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notify-workers-failure-message)))
    (aws-sdk/generator/shape::to-query-params "WorkerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'worker-id))))))
(common-lisp:progn
 (common-lisp:deftype notify-workers-failure-status-list ()
   '(trivial-types:proper-list notify-workers-failure-status))
 (common-lisp:defun |make-notify-workers-failure-status-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            notify-workers-failure-status))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (notify-workers-request (:copier common-lisp:nil))
   (subject
    (common-lisp:error #A((20) common-lisp:base-char . ":subject is required"))
    :type (common-lisp:or string common-lisp:null))
   (message-text
    (common-lisp:error
     #A((25) common-lisp:base-char . ":message-text is required"))
    :type (common-lisp:or string common-lisp:null))
   (worker-ids
    (common-lisp:error
     #A((23) common-lisp:base-char . ":worker-ids is required"))
    :type (common-lisp:or customer-id-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'notify-workers-request 'make-notify-workers-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          notify-workers-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Subject"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subject)))
    (aws-sdk/generator/shape::to-query-params "MessageText"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message-text)))
    (aws-sdk/generator/shape::to-query-params "WorkerIds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'worker-ids))))))
(common-lisp:progn
 (common-lisp:defstruct (notify-workers-response (:copier common-lisp:nil))
   (notify-workers-failure-statuses common-lisp:nil :type
    (common-lisp:or notify-workers-failure-status-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'notify-workers-response 'make-notify-workers-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          notify-workers-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NotifyWorkersFailureStatuses"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notify-workers-failure-statuses))))))
(common-lisp:deftype numeric-value () 'common-lisp:string)
(common-lisp:deftype pagination-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (parameter-map-entry (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (values common-lisp:nil :type
    (common-lisp:or string-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'parameter-map-entry 'make-parameter-map-entry))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape parameter-map-entry))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values))))))
(common-lisp:progn
 (common-lisp:deftype parameter-map-entry-list ()
   '(trivial-types:proper-list parameter-map-entry))
 (common-lisp:defun |make-parameter-map-entry-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list parameter-map-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (policy-parameter (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (values common-lisp:nil :type (common-lisp:or string-list common-lisp:null))
   (map-entries common-lisp:nil :type
    (common-lisp:or parameter-map-entry-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'policy-parameter 'make-policy-parameter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape policy-parameter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Values"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'values)))
    (aws-sdk/generator/shape::to-query-params "MapEntries"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'map-entries))))))
(common-lisp:progn
 (common-lisp:deftype policy-parameter-list ()
   '(trivial-types:proper-list policy-parameter))
 (common-lisp:defun |make-policy-parameter-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list policy-parameter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (qualification (:copier common-lisp:nil))
   (qualification-type-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (worker-id common-lisp:nil :type
    (common-lisp:or customer-id common-lisp:null))
   (grant-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (integer-value common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (locale-value common-lisp:nil :type
    (common-lisp:or locale common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or qualification-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'qualification 'make-qualification))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape qualification))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QualificationTypeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-type-id)))
    (aws-sdk/generator/shape::to-query-params "WorkerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'worker-id)))
    (aws-sdk/generator/shape::to-query-params "GrantTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'grant-time)))
    (aws-sdk/generator/shape::to-query-params "IntegerValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'integer-value)))
    (aws-sdk/generator/shape::to-query-params "LocaleValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'locale-value)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status))))))
(common-lisp:progn
 (common-lisp:deftype qualification-list ()
   '(trivial-types:proper-list qualification))
 (common-lisp:defun |make-qualification-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list qualification))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (qualification-request (:copier common-lisp:nil))
   (qualification-request-id common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (qualification-type-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (worker-id common-lisp:nil :type
    (common-lisp:or customer-id common-lisp:null))
   (test common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (answer common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (submit-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'qualification-request 'make-qualification-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          qualification-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QualificationRequestId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-request-id)))
    (aws-sdk/generator/shape::to-query-params "QualificationTypeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-type-id)))
    (aws-sdk/generator/shape::to-query-params "WorkerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'worker-id)))
    (aws-sdk/generator/shape::to-query-params "Test"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'test)))
    (aws-sdk/generator/shape::to-query-params "Answer"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'answer)))
    (aws-sdk/generator/shape::to-query-params "SubmitTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'submit-time))))))
(common-lisp:progn
 (common-lisp:deftype qualification-request-list ()
   '(trivial-types:proper-list qualification-request))
 (common-lisp:defun |make-qualification-request-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list qualification-request))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (qualification-requirement (:copier common-lisp:nil))
   (qualification-type-id
    (common-lisp:error
     #A((34) common-lisp:base-char . ":qualification-type-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (comparator
    (common-lisp:error
     #A((23) common-lisp:base-char . ":comparator is required"))
    :type (common-lisp:or comparator common-lisp:null))
   (integer-values common-lisp:nil :type
    (common-lisp:or integer-list common-lisp:null))
   (locale-values common-lisp:nil :type
    (common-lisp:or locale-list common-lisp:null))
   (required-to-preview common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'qualification-requirement
                    'make-qualification-requirement))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          qualification-requirement))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QualificationTypeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-type-id)))
    (aws-sdk/generator/shape::to-query-params "Comparator"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'comparator)))
    (aws-sdk/generator/shape::to-query-params "IntegerValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'integer-values)))
    (aws-sdk/generator/shape::to-query-params "LocaleValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'locale-values)))
    (aws-sdk/generator/shape::to-query-params "RequiredToPreview"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'required-to-preview))))))
(common-lisp:progn
 (common-lisp:deftype qualification-requirement-list ()
   '(trivial-types:proper-list qualification-requirement))
 (common-lisp:defun |make-qualification-requirement-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            qualification-requirement))
   aws-sdk/generator/shape::members))
(common-lisp:deftype qualification-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (qualification-type (:copier common-lisp:nil))
   (qualification-type-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (creation-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (keywords common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (qualification-type-status common-lisp:nil :type
    (common-lisp:or qualification-type-status common-lisp:null))
   (test common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (test-duration-in-seconds common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (answer-key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (retry-delay-in-seconds common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (is-requestable common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (auto-granted common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (auto-granted-value common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'qualification-type 'make-qualification-type))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape qualification-type))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QualificationTypeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-type-id)))
    (aws-sdk/generator/shape::to-query-params "CreationTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-time)))
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "Keywords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'keywords)))
    (aws-sdk/generator/shape::to-query-params "QualificationTypeStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-type-status)))
    (aws-sdk/generator/shape::to-query-params "Test"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'test)))
    (aws-sdk/generator/shape::to-query-params "TestDurationInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'test-duration-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "AnswerKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'answer-key)))
    (aws-sdk/generator/shape::to-query-params "RetryDelayInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'retry-delay-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "IsRequestable"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'is-requestable)))
    (aws-sdk/generator/shape::to-query-params "AutoGranted"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-granted)))
    (aws-sdk/generator/shape::to-query-params "AutoGrantedValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-granted-value))))))
(common-lisp:progn
 (common-lisp:deftype qualification-type-list ()
   '(trivial-types:proper-list qualification-type))
 (common-lisp:defun |make-qualification-type-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list qualification-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype qualification-type-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (reject-assignment-request (:copier common-lisp:nil))
   (assignment-id
    (common-lisp:error
     #A((26) common-lisp:base-char . ":assignment-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (requester-feedback common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reject-assignment-request
                    'make-reject-assignment-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          reject-assignment-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AssignmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assignment-id)))
    (aws-sdk/generator/shape::to-query-params "RequesterFeedback"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'requester-feedback))))))
(common-lisp:progn
 (common-lisp:defstruct (reject-assignment-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'reject-assignment-response
                    'make-reject-assignment-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          reject-assignment-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (reject-qualification-request-request (:copier common-lisp:nil))
   (qualification-request-id
    (common-lisp:error
     #A((37) common-lisp:base-char . ":qualification-request-id is required"))
    :type (common-lisp:or string common-lisp:null))
   (reason common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'reject-qualification-request-request
                    'make-reject-qualification-request-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          reject-qualification-request-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QualificationRequestId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-request-id)))
    (aws-sdk/generator/shape::to-query-params "Reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason))))))
(common-lisp:progn
 (common-lisp:defstruct
     (reject-qualification-request-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'reject-qualification-request-response
                    'make-reject-qualification-request-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          reject-qualification-request-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (request-error (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null))
   (turk-error-code common-lisp:nil :type
    (common-lisp:or turk-error-code common-lisp:null)))
 (common-lisp:export (common-lisp:list 'request-error 'make-request-error))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape request-error))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "TurkErrorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'turk-error-code))))))
(common-lisp:deftype result-size () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (review-action-detail (:copier common-lisp:nil))
   (action-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (action-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (target-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (target-type common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or review-action-status common-lisp:null))
   (complete-time common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (result common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (error-code common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'review-action-detail 'make-review-action-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape review-action-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ActionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action-id)))
    (aws-sdk/generator/shape::to-query-params "ActionName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action-name)))
    (aws-sdk/generator/shape::to-query-params "TargetId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-id)))
    (aws-sdk/generator/shape::to-query-params "TargetType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target-type)))
    (aws-sdk/generator/shape::to-query-params "Status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "CompleteTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'complete-time)))
    (aws-sdk/generator/shape::to-query-params "Result"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'result)))
    (aws-sdk/generator/shape::to-query-params "ErrorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'error-code))))))
(common-lisp:progn
 (common-lisp:deftype review-action-detail-list ()
   '(trivial-types:proper-list review-action-detail))
 (common-lisp:defun |make-review-action-detail-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list review-action-detail))
   aws-sdk/generator/shape::members))
(common-lisp:deftype review-action-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (review-policy (:copier common-lisp:nil))
   (policy-name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (parameters common-lisp:nil :type
    (common-lisp:or policy-parameter-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'review-policy 'make-review-policy))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape review-policy))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-name)))
    (aws-sdk/generator/shape::to-query-params "Parameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parameters))))))
(common-lisp:deftype review-policy-level () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype review-policy-level-list ()
   '(trivial-types:proper-list review-policy-level))
 (common-lisp:defun |make-review-policy-level-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list review-policy-level))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (review-report (:copier common-lisp:nil))
   (review-results common-lisp:nil :type
    (common-lisp:or review-result-detail-list common-lisp:null))
   (review-actions common-lisp:nil :type
    (common-lisp:or review-action-detail-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'review-report 'make-review-report))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape review-report))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ReviewResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'review-results)))
    (aws-sdk/generator/shape::to-query-params "ReviewActions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'review-actions))))))
(common-lisp:progn
 (common-lisp:defstruct (review-result-detail (:copier common-lisp:nil))
   (action-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (subject-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (subject-type common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (question-id common-lisp:nil :type
    (common-lisp:or entity-id common-lisp:null))
   (key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'review-result-detail 'make-review-result-detail))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape review-result-detail))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ActionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action-id)))
    (aws-sdk/generator/shape::to-query-params "SubjectId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subject-id)))
    (aws-sdk/generator/shape::to-query-params "SubjectType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subject-type)))
    (aws-sdk/generator/shape::to-query-params "QuestionId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'question-id)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:deftype review-result-detail-list ()
   '(trivial-types:proper-list review-result-detail))
 (common-lisp:defun |make-review-result-detail-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list review-result-detail))
   aws-sdk/generator/shape::members))
(common-lisp:deftype reviewable-hitstatus () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (send-bonus-request (:copier common-lisp:nil))
   (worker-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":worker-id is required"))
    :type (common-lisp:or customer-id common-lisp:null))
   (bonus-amount
    (common-lisp:error
     #A((25) common-lisp:base-char . ":bonus-amount is required"))
    :type (common-lisp:or numeric-value common-lisp:null))
   (assignment-id
    (common-lisp:error
     #A((26) common-lisp:base-char . ":assignment-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (reason common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (unique-request-token common-lisp:nil :type
    (common-lisp:or idempotency-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-bonus-request 'make-send-bonus-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape send-bonus-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WorkerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'worker-id)))
    (aws-sdk/generator/shape::to-query-params "BonusAmount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bonus-amount)))
    (aws-sdk/generator/shape::to-query-params "AssignmentId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'assignment-id)))
    (aws-sdk/generator/shape::to-query-params "Reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason)))
    (aws-sdk/generator/shape::to-query-params "UniqueRequestToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unique-request-token))))))
(common-lisp:progn
 (common-lisp:defstruct (send-bonus-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'send-bonus-response 'make-send-bonus-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape send-bonus-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (send-test-event-notification-request (:copier common-lisp:nil))
   (notification
    (common-lisp:error
     #A((25) common-lisp:base-char . ":notification is required"))
    :type (common-lisp:or notification-specification common-lisp:null))
   (test-event-type
    (common-lisp:error
     #A((28) common-lisp:base-char . ":test-event-type is required"))
    :type (common-lisp:or event-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'send-test-event-notification-request
                    'make-send-test-event-notification-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          send-test-event-notification-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Notification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification)))
    (aws-sdk/generator/shape::to-query-params "TestEventType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'test-event-type))))))
(common-lisp:progn
 (common-lisp:defstruct
     (send-test-event-notification-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'send-test-event-notification-response
                    'make-send-test-event-notification-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          send-test-event-notification-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (service-fault (:copier common-lisp:nil))
   (message common-lisp:nil :type
    (common-lisp:or exception-message common-lisp:null))
   (turk-error-code common-lisp:nil :type
    (common-lisp:or turk-error-code common-lisp:null)))
 (common-lisp:export (common-lisp:list 'service-fault 'make-service-fault))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape service-fault))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message)))
    (aws-sdk/generator/shape::to-query-params "TurkErrorCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'turk-error-code))))))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype string-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-string-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype turk-error-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (update-expiration-for-hitrequest (:copier common-lisp:nil))
   (hitid
    (common-lisp:error #A((18) common-lisp:base-char . ":hitid is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (expire-at common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-expiration-for-hitrequest
                    'make-update-expiration-for-hitrequest))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-expiration-for-hitrequest))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HITId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitid)))
    (aws-sdk/generator/shape::to-query-params "ExpireAt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expire-at))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-expiration-for-hitresponse (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-expiration-for-hitresponse
                    'make-update-expiration-for-hitresponse))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-expiration-for-hitresponse))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-hitreview-status-request (:copier common-lisp:nil))
   (hitid
    (common-lisp:error #A((18) common-lisp:base-char . ":hitid is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (revert common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-hitreview-status-request
                    'make-update-hitreview-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-hitreview-status-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HITId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitid)))
    (aws-sdk/generator/shape::to-query-params "Revert"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'revert))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-hitreview-status-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-hitreview-status-response
                    'make-update-hitreview-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-hitreview-status-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-hittype-of-hitrequest (:copier common-lisp:nil))
   (hitid
    (common-lisp:error #A((18) common-lisp:base-char . ":hitid is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (hittype-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":hittype-id is required"))
    :type (common-lisp:or entity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-hittype-of-hitrequest
                    'make-update-hittype-of-hitrequest))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-hittype-of-hitrequest))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HITId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hitid)))
    (aws-sdk/generator/shape::to-query-params "HITTypeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hittype-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-hittype-of-hitresponse (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-hittype-of-hitresponse
                    'make-update-hittype-of-hitresponse))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-hittype-of-hitresponse))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-notification-settings-request (:copier common-lisp:nil))
   (hittype-id
    (common-lisp:error
     #A((23) common-lisp:base-char . ":hittype-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (notification common-lisp:nil :type
    (common-lisp:or notification-specification common-lisp:null))
   (active common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-notification-settings-request
                    'make-update-notification-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-notification-settings-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HITTypeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'hittype-id)))
    (aws-sdk/generator/shape::to-query-params "Notification"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'notification)))
    (aws-sdk/generator/shape::to-query-params "Active"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'active))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-notification-settings-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'update-notification-settings-response
                    'make-update-notification-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-notification-settings-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (update-qualification-type-request (:copier common-lisp:nil))
   (qualification-type-id
    (common-lisp:error
     #A((34) common-lisp:base-char . ":qualification-type-id is required"))
    :type (common-lisp:or entity-id common-lisp:null))
   (description common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (qualification-type-status common-lisp:nil :type
    (common-lisp:or qualification-type-status common-lisp:null))
   (test common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (answer-key common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (test-duration-in-seconds common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (retry-delay-in-seconds common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (auto-granted common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (auto-granted-value common-lisp:nil :type
    (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-qualification-type-request
                    'make-update-qualification-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-qualification-type-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QualificationTypeId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-type-id)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "QualificationTypeStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-type-status)))
    (aws-sdk/generator/shape::to-query-params "Test"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'test)))
    (aws-sdk/generator/shape::to-query-params "AnswerKey"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'answer-key)))
    (aws-sdk/generator/shape::to-query-params "TestDurationInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'test-duration-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "RetryDelayInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'retry-delay-in-seconds)))
    (aws-sdk/generator/shape::to-query-params "AutoGranted"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-granted)))
    (aws-sdk/generator/shape::to-query-params "AutoGrantedValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'auto-granted-value))))))
(common-lisp:progn
 (common-lisp:defstruct
     (update-qualification-type-response (:copier common-lisp:nil))
   (qualification-type common-lisp:nil :type
    (common-lisp:or qualification-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-qualification-type-response
                    'make-update-qualification-type-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-qualification-type-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "QualificationType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'qualification-type))))))
(common-lisp:progn
 (common-lisp:defstruct (worker-block (:copier common-lisp:nil))
   (worker-id common-lisp:nil :type
    (common-lisp:or customer-id common-lisp:null))
   (reason common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'worker-block 'make-worker-block))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape worker-block))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "WorkerId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'worker-id)))
    (aws-sdk/generator/shape::to-query-params "Reason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason))))))
(common-lisp:progn
 (common-lisp:deftype worker-block-list ()
   '(trivial-types:proper-list worker-block))
 (common-lisp:defun |make-worker-block-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list worker-block))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defun accept-qualification-request
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key qualification-request-id integer-value)
   (common-lisp:declare
    (common-lisp:ignorable qualification-request-id integer-value))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-accept-qualification-request-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AcceptQualificationRequest")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AcceptQualificationRequestResponse" common-lisp:nil)))
 (common-lisp:export 'accept-qualification-request))
(common-lisp:progn
 (common-lisp:defun approve-assignment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assignment-id requester-feedback
                     override-rejection)
   (common-lisp:declare
    (common-lisp:ignorable assignment-id requester-feedback
     override-rejection))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-approve-assignment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ApproveAssignment")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ApproveAssignmentResponse" common-lisp:nil)))
 (common-lisp:export 'approve-assignment))
(common-lisp:progn
 (common-lisp:defun associate-qualification-with-worker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key qualification-type-id worker-id
                     integer-value send-notification)
   (common-lisp:declare
    (common-lisp:ignorable qualification-type-id worker-id integer-value
     send-notification))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-associate-qualification-with-worker-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"AssociateQualificationWithWorker")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AssociateQualificationWithWorkerResponse" common-lisp:nil)))
 (common-lisp:export 'associate-qualification-with-worker))
(common-lisp:progn
 (common-lisp:defun create-additional-assignments-for-hit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hitid number-of-additional-assignments
                     unique-request-token)
   (common-lisp:declare
    (common-lisp:ignorable hitid number-of-additional-assignments
     unique-request-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-additional-assignments-for-hitrequest
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"CreateAdditionalAssignmentsForHIT")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateAdditionalAssignmentsForHITResponse" common-lisp:nil)))
 (common-lisp:export 'create-additional-assignments-for-hit))
(common-lisp:progn
 (common-lisp:defun create-hit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-assignments
                     auto-approval-delay-in-seconds lifetime-in-seconds
                     assignment-duration-in-seconds reward title keywords
                     description question requester-annotation
                     qualification-requirements unique-request-token
                     assignment-review-policy hitreview-policy hitlayout-id
                     hitlayout-parameters)
   (common-lisp:declare
    (common-lisp:ignorable max-assignments auto-approval-delay-in-seconds
     lifetime-in-seconds assignment-duration-in-seconds reward title keywords
     description question requester-annotation qualification-requirements
     unique-request-token assignment-review-policy hitreview-policy
     hitlayout-id hitlayout-parameters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-hitrequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateHIT")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateHITResponse" common-lisp:nil)))
 (common-lisp:export 'create-hit))
(common-lisp:progn
 (common-lisp:defun create-hittype
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-approval-delay-in-seconds
                     assignment-duration-in-seconds reward title keywords
                     description qualification-requirements)
   (common-lisp:declare
    (common-lisp:ignorable auto-approval-delay-in-seconds
     assignment-duration-in-seconds reward title keywords description
     qualification-requirements))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-hittype-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateHITType")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateHITTypeResponse" common-lisp:nil)))
 (common-lisp:export 'create-hittype))
(common-lisp:progn
 (common-lisp:defun create-hitwith-hittype
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hittype-id max-assignments
                     lifetime-in-seconds question requester-annotation
                     unique-request-token assignment-review-policy
                     hitreview-policy hitlayout-id hitlayout-parameters)
   (common-lisp:declare
    (common-lisp:ignorable hittype-id max-assignments lifetime-in-seconds
     question requester-annotation unique-request-token
     assignment-review-policy hitreview-policy hitlayout-id
     hitlayout-parameters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-hitwith-hittype-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateHITWithHITType")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateHITWithHITTypeResponse" common-lisp:nil)))
 (common-lisp:export 'create-hitwith-hittype))
(common-lisp:progn
 (common-lisp:defun create-qualification-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name keywords description
                     qualification-type-status retry-delay-in-seconds test
                     answer-key test-duration-in-seconds auto-granted
                     auto-granted-value)
   (common-lisp:declare
    (common-lisp:ignorable name keywords description qualification-type-status
     retry-delay-in-seconds test answer-key test-duration-in-seconds
     auto-granted auto-granted-value))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-qualification-type-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateQualificationType")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateQualificationTypeResponse" common-lisp:nil)))
 (common-lisp:export 'create-qualification-type))
(common-lisp:progn
 (common-lisp:defun create-worker-block
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key worker-id reason)
   (common-lisp:declare (common-lisp:ignorable worker-id reason))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-worker-block-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateWorkerBlock")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateWorkerBlockResponse" common-lisp:nil)))
 (common-lisp:export 'create-worker-block))
(common-lisp:progn
 (common-lisp:defun delete-hit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hitid)
   (common-lisp:declare (common-lisp:ignorable hitid))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-hitrequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteHIT")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteHITResponse" common-lisp:nil)))
 (common-lisp:export 'delete-hit))
(common-lisp:progn
 (common-lisp:defun delete-qualification-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key qualification-type-id)
   (common-lisp:declare (common-lisp:ignorable qualification-type-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-qualification-type-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteQualificationType")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteQualificationTypeResponse" common-lisp:nil)))
 (common-lisp:export 'delete-qualification-type))
(common-lisp:progn
 (common-lisp:defun delete-worker-block
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key worker-id reason)
   (common-lisp:declare (common-lisp:ignorable worker-id reason))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-worker-block-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteWorkerBlock")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteWorkerBlockResponse" common-lisp:nil)))
 (common-lisp:export 'delete-worker-block))
(common-lisp:progn
 (common-lisp:defun disassociate-qualification-from-worker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key worker-id qualification-type-id reason)
   (common-lisp:declare
    (common-lisp:ignorable worker-id qualification-type-id reason))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-qualification-from-worker-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DisassociateQualificationFromWorker")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DisassociateQualificationFromWorkerResponse" common-lisp:nil)))
 (common-lisp:export 'disassociate-qualification-from-worker))
(common-lisp:progn
 (common-lisp:defun get-account-balance ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request :service
                             #A((15) common-lisp:base-char . "mturk-requester")
                             :method :post :params
                             (common-lisp:cons "Action" "GetAccountBalance"))
    "GetAccountBalanceResponse" common-lisp:nil))
 (common-lisp:export 'get-account-balance))
(common-lisp:progn
 (common-lisp:defun get-assignment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assignment-id)
   (common-lisp:declare (common-lisp:ignorable assignment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-assignment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetAssignment")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetAssignmentResponse" common-lisp:nil)))
 (common-lisp:export 'get-assignment))
(common-lisp:progn
 (common-lisp:defun get-file-upload-url
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assignment-id question-identifier)
   (common-lisp:declare
    (common-lisp:ignorable assignment-id question-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-file-upload-urlrequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetFileUploadURL")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetFileUploadURLResponse" common-lisp:nil)))
 (common-lisp:export 'get-file-upload-url))
(common-lisp:progn
 (common-lisp:defun get-hit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hitid)
   (common-lisp:declare (common-lisp:ignorable hitid))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-hitrequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetHIT")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetHITResponse" common-lisp:nil)))
 (common-lisp:export 'get-hit))
(common-lisp:progn
 (common-lisp:defun get-qualification-score
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key qualification-type-id worker-id)
   (common-lisp:declare
    (common-lisp:ignorable qualification-type-id worker-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-qualification-score-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetQualificationScore")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetQualificationScoreResponse" common-lisp:nil)))
 (common-lisp:export 'get-qualification-score))
(common-lisp:progn
 (common-lisp:defun get-qualification-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key qualification-type-id)
   (common-lisp:declare (common-lisp:ignorable qualification-type-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-qualification-type-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetQualificationType")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetQualificationTypeResponse" common-lisp:nil)))
 (common-lisp:export 'get-qualification-type))
(common-lisp:progn
 (common-lisp:defun list-assignments-for-hit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hitid next-token max-results
                     assignment-statuses)
   (common-lisp:declare
    (common-lisp:ignorable hitid next-token max-results assignment-statuses))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-assignments-for-hitrequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListAssignmentsForHIT")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListAssignmentsForHITResponse" common-lisp:nil)))
 (common-lisp:export 'list-assignments-for-hit))
(common-lisp:progn
 (common-lisp:defun list-bonus-payments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hitid assignment-id next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable hitid assignment-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-bonus-payments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListBonusPayments")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListBonusPaymentsResponse" common-lisp:nil)))
 (common-lisp:export 'list-bonus-payments))
(common-lisp:progn
 (common-lisp:defun list-hits
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-hits-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListHITs")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListHITsResponse" common-lisp:nil)))
 (common-lisp:export 'list-hits))
(common-lisp:progn
 (common-lisp:defun list-hits-for-qualification-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key qualification-type-id next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable qualification-type-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-hits-for-qualification-type-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListHITsForQualificationType")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListHITsForQualificationTypeResponse" common-lisp:nil)))
 (common-lisp:export 'list-hits-for-qualification-type))
(common-lisp:progn
 (common-lisp:defun list-qualification-requests
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key qualification-type-id next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable qualification-type-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-qualification-requests-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListQualificationRequests")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListQualificationRequestsResponse" common-lisp:nil)))
 (common-lisp:export 'list-qualification-requests))
(common-lisp:progn
 (common-lisp:defun list-qualification-types
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key query must-be-requestable
                     must-be-owned-by-caller next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable query must-be-requestable must-be-owned-by-caller
     next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-qualification-types-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListQualificationTypes")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListQualificationTypesResponse" common-lisp:nil)))
 (common-lisp:export 'list-qualification-types))
(common-lisp:progn
 (common-lisp:defun list-review-policy-results-for-hit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hitid policy-levels retrieve-actions
                     retrieve-results next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable hitid policy-levels retrieve-actions
     retrieve-results next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-review-policy-results-for-hitrequest
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListReviewPolicyResultsForHIT")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListReviewPolicyResultsForHITResponse" common-lisp:nil)))
 (common-lisp:export 'list-review-policy-results-for-hit))
(common-lisp:progn
 (common-lisp:defun list-reviewable-hits
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hittype-id status next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable hittype-id status next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-reviewable-hits-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListReviewableHITs")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListReviewableHITsResponse" common-lisp:nil)))
 (common-lisp:export 'list-reviewable-hits))
(common-lisp:progn
 (common-lisp:defun list-worker-blocks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-worker-blocks-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListWorkerBlocks")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListWorkerBlocksResponse" common-lisp:nil)))
 (common-lisp:export 'list-worker-blocks))
(common-lisp:progn
 (common-lisp:defun list-workers-with-qualification-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key qualification-type-id status next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable qualification-type-id status next-token
     max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-workers-with-qualification-type-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"ListWorkersWithQualificationType")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListWorkersWithQualificationTypeResponse" common-lisp:nil)))
 (common-lisp:export 'list-workers-with-qualification-type))
(common-lisp:progn
 (common-lisp:defun notify-workers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subject message-text worker-ids)
   (common-lisp:declare
    (common-lisp:ignorable subject message-text worker-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-notify-workers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"NotifyWorkers")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "NotifyWorkersResponse" common-lisp:nil)))
 (common-lisp:export 'notify-workers))
(common-lisp:progn
 (common-lisp:defun reject-assignment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key assignment-id requester-feedback)
   (common-lisp:declare
    (common-lisp:ignorable assignment-id requester-feedback))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-reject-assignment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RejectAssignment")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RejectAssignmentResponse" common-lisp:nil)))
 (common-lisp:export 'reject-assignment))
(common-lisp:progn
 (common-lisp:defun reject-qualification-request
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key qualification-request-id reason)
   (common-lisp:declare
    (common-lisp:ignorable qualification-request-id reason))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-reject-qualification-request-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RejectQualificationRequest")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RejectQualificationRequestResponse" common-lisp:nil)))
 (common-lisp:export 'reject-qualification-request))
(common-lisp:progn
 (common-lisp:defun send-bonus
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key worker-id bonus-amount assignment-id
                     reason unique-request-token)
   (common-lisp:declare
    (common-lisp:ignorable worker-id bonus-amount assignment-id reason
     unique-request-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-bonus-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SendBonus")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SendBonusResponse" common-lisp:nil)))
 (common-lisp:export 'send-bonus))
(common-lisp:progn
 (common-lisp:defun send-test-event-notification
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key notification test-event-type)
   (common-lisp:declare (common-lisp:ignorable notification test-event-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-send-test-event-notification-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"SendTestEventNotification")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SendTestEventNotificationResponse" common-lisp:nil)))
 (common-lisp:export 'send-test-event-notification))
(common-lisp:progn
 (common-lisp:defun update-expiration-for-hit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hitid expire-at)
   (common-lisp:declare (common-lisp:ignorable hitid expire-at))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-expiration-for-hitrequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateExpirationForHIT")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateExpirationForHITResponse" common-lisp:nil)))
 (common-lisp:export 'update-expiration-for-hit))
(common-lisp:progn
 (common-lisp:defun update-hitreview-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hitid revert)
   (common-lisp:declare (common-lisp:ignorable hitid revert))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-hitreview-status-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateHITReviewStatus")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateHITReviewStatusResponse" common-lisp:nil)))
 (common-lisp:export 'update-hitreview-status))
(common-lisp:progn
 (common-lisp:defun update-hittype-of-hit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hitid hittype-id)
   (common-lisp:declare (common-lisp:ignorable hitid hittype-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-hittype-of-hitrequest
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateHITTypeOfHIT")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateHITTypeOfHITResponse" common-lisp:nil)))
 (common-lisp:export 'update-hittype-of-hit))
(common-lisp:progn
 (common-lisp:defun update-notification-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hittype-id notification active)
   (common-lisp:declare (common-lisp:ignorable hittype-id notification active))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-notification-settings-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateNotificationSettings")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateNotificationSettingsResponse" common-lisp:nil)))
 (common-lisp:export 'update-notification-settings))
(common-lisp:progn
 (common-lisp:defun update-qualification-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key qualification-type-id description
                     qualification-type-status test answer-key
                     test-duration-in-seconds retry-delay-in-seconds
                     auto-granted auto-granted-value)
   (common-lisp:declare
    (common-lisp:ignorable qualification-type-id description
     qualification-type-status test answer-key test-duration-in-seconds
     retry-delay-in-seconds auto-granted auto-granted-value))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-qualification-type-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((15) common-lisp:base-char
                                  . "mturk-requester")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateQualificationType")
                                  ("Version" ,@"2017-01-17"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateQualificationTypeResponse" common-lisp:nil)))
 (common-lisp:export 'update-qualification-type))