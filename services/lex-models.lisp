;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/lex-models
  (:use)
  (:nicknames #:aws/lex-models)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/lex-models)

(common-lisp:deftype alias-name () 'common-lisp:string)
(common-lisp:deftype alias-name-or-list-all () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (bad-request-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'make-bad-request-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          bad-request-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (bot-alias-metadata (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or alias-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (bot-version common-lisp:nil :type
    (common-lisp:or version common-lisp:null))
   (bot-name common-lisp:nil :type (common-lisp:or bot-name common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'bot-alias-metadata 'make-bot-alias-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape bot-alias-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "botVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-version)))
    (aws-sdk/generator/shape::to-query-params "botName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-name)))
    (aws-sdk/generator/shape::to-query-params "lastUpdatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-date)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum))))))
(common-lisp:progn
 (common-lisp:deftype bot-alias-metadata-list ()
   '(trivial-types:proper-list bot-alias-metadata))
 (common-lisp:defun |make-bot-alias-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list bot-alias-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (bot-channel-association (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or bot-channel-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (bot-alias common-lisp:nil :type
    (common-lisp:or alias-name common-lisp:null))
   (bot-name common-lisp:nil :type (common-lisp:or bot-name common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or channel-type common-lisp:null))
   (bot-configuration common-lisp:nil :type
    (common-lisp:or channel-configuration-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'bot-channel-association 'make-bot-channel-association))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          bot-channel-association))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "botAlias"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-alias)))
    (aws-sdk/generator/shape::to-query-params "botName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-name)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "botConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-configuration))))))
(common-lisp:progn
 (common-lisp:deftype bot-channel-association-list ()
   '(trivial-types:proper-list bot-channel-association))
 (common-lisp:defun |make-bot-channel-association-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list bot-channel-association))
   aws-sdk/generator/shape::members))
(common-lisp:deftype bot-channel-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (bot-metadata (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or bot-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null)))
 (common-lisp:export (common-lisp:list 'bot-metadata 'make-bot-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape bot-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "lastUpdatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-date)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:progn
 (common-lisp:deftype bot-metadata-list ()
   '(trivial-types:proper-list bot-metadata))
 (common-lisp:defun |make-bot-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list bot-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:deftype bot-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype bot-versions () '(trivial-types:proper-list version))
 (common-lisp:defun |make-bot-versions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list version))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (builtin-intent-metadata (:copier common-lisp:nil))
   (signature common-lisp:nil :type
    (common-lisp:or builtin-intent-signature common-lisp:null))
   (supported-locales common-lisp:nil :type
    (common-lisp:or locale-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'builtin-intent-metadata 'make-builtin-intent-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          builtin-intent-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "signature"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'signature)))
    (aws-sdk/generator/shape::to-query-params "supportedLocales"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'supported-locales))))))
(common-lisp:progn
 (common-lisp:deftype builtin-intent-metadata-list ()
   '(trivial-types:proper-list builtin-intent-metadata))
 (common-lisp:defun |make-builtin-intent-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list builtin-intent-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:deftype builtin-intent-signature () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (builtin-intent-slot (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'builtin-intent-slot 'make-builtin-intent-slot))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape builtin-intent-slot))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:deftype builtin-intent-slot-list ()
   '(trivial-types:proper-list builtin-intent-slot))
 (common-lisp:defun |make-builtin-intent-slot-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list builtin-intent-slot))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (builtin-slot-type-metadata (:copier common-lisp:nil))
   (signature common-lisp:nil :type
    (common-lisp:or builtin-slot-type-signature common-lisp:null))
   (supported-locales common-lisp:nil :type
    (common-lisp:or locale-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'builtin-slot-type-metadata
                    'make-builtin-slot-type-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          builtin-slot-type-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "signature"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'signature)))
    (aws-sdk/generator/shape::to-query-params "supportedLocales"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'supported-locales))))))
(common-lisp:progn
 (common-lisp:deftype builtin-slot-type-metadata-list ()
   '(trivial-types:proper-list builtin-slot-type-metadata))
 (common-lisp:defun |make-builtin-slot-type-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            builtin-slot-type-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:deftype builtin-slot-type-signature () 'common-lisp:string)
(common-lisp:defstruct
    (channel-configuration-map
     (:constructor |make-channel-configuration-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype channel-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (code-hook (:copier common-lisp:nil))
   (uri (common-lisp:error #A((16) common-lisp:base-char . ":uri is required"))
    :type (common-lisp:or lambda-arn common-lisp:null))
   (message-version
    (common-lisp:error
     #A((27) common-lisp:base-char . ":messageversion is required"))
    :type (common-lisp:or message-version common-lisp:null)))
 (common-lisp:export (common-lisp:list 'code-hook 'make-code-hook))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape code-hook))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "uri"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uri)))
    (aws-sdk/generator/shape::to-query-params "messageVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message-version))))))
(common-lisp:progn
 (common-lisp:defstruct (conflict-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'make-conflict-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape conflict-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype content-string () 'common-lisp:string)
(common-lisp:deftype content-type () 'common-lisp:string)
(common-lisp:deftype count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (create-bot-version-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or bot-name common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-bot-version-request
                    'make-create-bot-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-bot-version-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum))))))
(common-lisp:progn
 (common-lisp:defstruct (create-bot-version-response (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or bot-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (intents common-lisp:nil :type
    (common-lisp:or intent-list common-lisp:null))
   (clarification-prompt common-lisp:nil :type
    (common-lisp:or prompt common-lisp:null))
   (abort-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null))
   (failure-reason common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (idle-session-ttlin-seconds common-lisp:nil :type
    (common-lisp:or session-ttl common-lisp:null))
   (voice-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null))
   (locale common-lisp:nil :type (common-lisp:or locale common-lisp:null))
   (child-directed common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-bot-version-response
                    'make-create-bot-version-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-bot-version-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "intents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'intents)))
    (aws-sdk/generator/shape::to-query-params "clarificationPrompt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'clarification-prompt)))
    (aws-sdk/generator/shape::to-query-params "abortStatement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'abort-statement)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "failureReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failure-reason)))
    (aws-sdk/generator/shape::to-query-params "lastUpdatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-date)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "idleSessionTTLInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'idle-session-ttlin-seconds)))
    (aws-sdk/generator/shape::to-query-params "voiceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'voice-id)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "locale"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'locale)))
    (aws-sdk/generator/shape::to-query-params "childDirected"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'child-directed))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-intent-version-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or intent-name common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-intent-version-request
                    'make-create-intent-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-intent-version-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-intent-version-response (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or intent-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (slots common-lisp:nil :type (common-lisp:or slot-list common-lisp:null))
   (sample-utterances common-lisp:nil :type
    (common-lisp:or intent-utterance-list common-lisp:null))
   (confirmation-prompt common-lisp:nil :type
    (common-lisp:or prompt common-lisp:null))
   (rejection-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (follow-up-prompt common-lisp:nil :type
    (common-lisp:or follow-up-prompt common-lisp:null))
   (conclusion-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (dialog-code-hook common-lisp:nil :type
    (common-lisp:or code-hook common-lisp:null))
   (fulfillment-activity common-lisp:nil :type
    (common-lisp:or fulfillment-activity common-lisp:null))
   (parent-intent-signature common-lisp:nil :type
    (common-lisp:or builtin-intent-signature common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-intent-version-response
                    'make-create-intent-version-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-intent-version-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "slots"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'slots)))
    (aws-sdk/generator/shape::to-query-params "sampleUtterances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sample-utterances)))
    (aws-sdk/generator/shape::to-query-params "confirmationPrompt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'confirmation-prompt)))
    (aws-sdk/generator/shape::to-query-params "rejectionStatement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rejection-statement)))
    (aws-sdk/generator/shape::to-query-params "followUpPrompt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'follow-up-prompt)))
    (aws-sdk/generator/shape::to-query-params "conclusionStatement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'conclusion-statement)))
    (aws-sdk/generator/shape::to-query-params "dialogCodeHook"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dialog-code-hook)))
    (aws-sdk/generator/shape::to-query-params "fulfillmentActivity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fulfillment-activity)))
    (aws-sdk/generator/shape::to-query-params "parentIntentSignature"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-intent-signature)))
    (aws-sdk/generator/shape::to-query-params "lastUpdatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-date)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-slot-type-version-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or slot-type-name common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-slot-type-version-request
                    'make-create-slot-type-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-slot-type-version-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-slot-type-version-response (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or slot-type-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (enumeration-values common-lisp:nil :type
    (common-lisp:or enumeration-values common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-slot-type-version-response
                    'make-create-slot-type-version-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-slot-type-version-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "enumerationValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enumeration-values)))
    (aws-sdk/generator/shape::to-query-params "lastUpdatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-date)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum))))))
(common-lisp:deftype custom-or-builtin-slot-type-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (delete-bot-alias-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or alias-name common-lisp:null))
   (bot-name
    (common-lisp:error #A((20) common-lisp:base-char . ":botname is required"))
    :type (common-lisp:or bot-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-bot-alias-request 'make-delete-bot-alias-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-bot-alias-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "botName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-bot-channel-association-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or bot-channel-name common-lisp:null))
   (bot-name
    (common-lisp:error #A((20) common-lisp:base-char . ":botname is required"))
    :type (common-lisp:or bot-name common-lisp:null))
   (bot-alias
    (common-lisp:error
     #A((21) common-lisp:base-char . ":botalias is required"))
    :type (common-lisp:or alias-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-bot-channel-association-request
                    'make-delete-bot-channel-association-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-bot-channel-association-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "botName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-name)))
    (aws-sdk/generator/shape::to-query-params "botAlias"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-alias))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-bot-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or bot-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-bot-request 'make-delete-bot-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-bot-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-bot-version-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or bot-name common-lisp:null))
   (version
    (common-lisp:error #A((20) common-lisp:base-char . ":version is required"))
    :type (common-lisp:or numerical-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-bot-version-request
                    'make-delete-bot-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-bot-version-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-intent-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or intent-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-intent-request 'make-delete-intent-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-intent-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-intent-version-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or intent-name common-lisp:null))
   (version
    (common-lisp:error #A((20) common-lisp:base-char . ":version is required"))
    :type (common-lisp:or numerical-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-intent-version-request
                    'make-delete-intent-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-intent-version-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-slot-type-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or slot-type-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-slot-type-request 'make-delete-slot-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-slot-type-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-slot-type-version-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or slot-type-name common-lisp:null))
   (version
    (common-lisp:error #A((20) common-lisp:base-char . ":version is required"))
    :type (common-lisp:or numerical-version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-slot-type-version-request
                    'make-delete-slot-type-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-slot-type-version-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-utterances-request (:copier common-lisp:nil))
   (bot-name
    (common-lisp:error #A((20) common-lisp:base-char . ":botname is required"))
    :type (common-lisp:or bot-name common-lisp:null))
   (user-id
    (common-lisp:error #A((19) common-lisp:base-char . ":userid is required"))
    :type (common-lisp:or user-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-utterances-request
                    'make-delete-utterances-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-utterances-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "botName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-name)))
    (aws-sdk/generator/shape::to-query-params "userId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'user-id))))))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (enumeration-value (:copier common-lisp:nil))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'enumeration-value 'make-enumeration-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape enumeration-value))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:deftype enumeration-values ()
   '(trivial-types:proper-list enumeration-value))
 (common-lisp:defun |make-enumeration-values|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list enumeration-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (follow-up-prompt (:copier common-lisp:nil))
   (prompt
    (common-lisp:error #A((19) common-lisp:base-char . ":prompt is required"))
    :type (common-lisp:or prompt common-lisp:null))
   (rejection-statement
    (common-lisp:error
     #A((31) common-lisp:base-char . ":rejectionstatement is required"))
    :type (common-lisp:or statement common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'follow-up-prompt 'make-follow-up-prompt))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape follow-up-prompt))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "prompt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'prompt)))
    (aws-sdk/generator/shape::to-query-params "rejectionStatement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rejection-statement))))))
(common-lisp:progn
 (common-lisp:defstruct (fulfillment-activity (:copier common-lisp:nil))
   (type
    (common-lisp:error #A((17) common-lisp:base-char . ":type is required"))
    :type (common-lisp:or fulfillment-activity-type common-lisp:null))
   (code-hook common-lisp:nil :type
    (common-lisp:or code-hook common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'fulfillment-activity 'make-fulfillment-activity))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape fulfillment-activity))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "codeHook"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code-hook))))))
(common-lisp:deftype fulfillment-activity-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (get-bot-alias-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or alias-name common-lisp:null))
   (bot-name
    (common-lisp:error #A((20) common-lisp:base-char . ":botname is required"))
    :type (common-lisp:or bot-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bot-alias-request 'make-get-bot-alias-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bot-alias-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "botName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-name))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bot-alias-response (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or alias-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (bot-version common-lisp:nil :type
    (common-lisp:or version common-lisp:null))
   (bot-name common-lisp:nil :type (common-lisp:or bot-name common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bot-alias-response 'make-get-bot-alias-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bot-alias-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "botVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-version)))
    (aws-sdk/generator/shape::to-query-params "botName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-name)))
    (aws-sdk/generator/shape::to-query-params "lastUpdatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-date)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bot-aliases-request (:copier common-lisp:nil))
   (bot-name
    (common-lisp:error #A((20) common-lisp:base-char . ":botname is required"))
    :type (common-lisp:or bot-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (name-contains common-lisp:nil :type
    (common-lisp:or alias-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bot-aliases-request 'make-get-bot-aliases-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bot-aliases-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "botName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-name)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "nameContains"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name-contains))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bot-aliases-response (:copier common-lisp:nil))
   (bot-aliases common-lisp:nil :type
    (common-lisp:or bot-alias-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bot-aliases-response 'make-get-bot-aliases-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bot-aliases-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BotAliases"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-aliases)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bot-channel-association-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or bot-channel-name common-lisp:null))
   (bot-name
    (common-lisp:error #A((20) common-lisp:base-char . ":botname is required"))
    :type (common-lisp:or bot-name common-lisp:null))
   (bot-alias
    (common-lisp:error
     #A((21) common-lisp:base-char . ":botalias is required"))
    :type (common-lisp:or alias-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bot-channel-association-request
                    'make-get-bot-channel-association-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bot-channel-association-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "botName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-name)))
    (aws-sdk/generator/shape::to-query-params "botAlias"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-alias))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bot-channel-association-response (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or bot-channel-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (bot-alias common-lisp:nil :type
    (common-lisp:or alias-name common-lisp:null))
   (bot-name common-lisp:nil :type (common-lisp:or bot-name common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (type common-lisp:nil :type (common-lisp:or channel-type common-lisp:null))
   (bot-configuration common-lisp:nil :type
    (common-lisp:or channel-configuration-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bot-channel-association-response
                    'make-get-bot-channel-association-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bot-channel-association-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "botAlias"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-alias)))
    (aws-sdk/generator/shape::to-query-params "botName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-name)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "botConfiguration"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-configuration))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bot-channel-associations-request (:copier common-lisp:nil))
   (bot-name
    (common-lisp:error #A((20) common-lisp:base-char . ":botname is required"))
    :type (common-lisp:or bot-name common-lisp:null))
   (bot-alias
    (common-lisp:error
     #A((21) common-lisp:base-char . ":botalias is required"))
    :type (common-lisp:or alias-name-or-list-all common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (name-contains common-lisp:nil :type
    (common-lisp:or bot-channel-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bot-channel-associations-request
                    'make-get-bot-channel-associations-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bot-channel-associations-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "botName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-name)))
    (aws-sdk/generator/shape::to-query-params "botAlias"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-alias)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "nameContains"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name-contains))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bot-channel-associations-response (:copier common-lisp:nil))
   (bot-channel-associations common-lisp:nil :type
    (common-lisp:or bot-channel-association-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bot-channel-associations-response
                    'make-get-bot-channel-associations-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bot-channel-associations-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "botChannelAssociations"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-channel-associations)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bot-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or bot-name common-lisp:null))
   (version-or-alias
    (common-lisp:error
     #A((27) common-lisp:base-char . ":versionoralias is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'get-bot-request 'make-get-bot-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-bot-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "versionOrAlias"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version-or-alias))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bot-response (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or bot-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (intents common-lisp:nil :type
    (common-lisp:or intent-list common-lisp:null))
   (clarification-prompt common-lisp:nil :type
    (common-lisp:or prompt common-lisp:null))
   (abort-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null))
   (failure-reason common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (idle-session-ttlin-seconds common-lisp:nil :type
    (common-lisp:or session-ttl common-lisp:null))
   (voice-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null))
   (locale common-lisp:nil :type (common-lisp:or locale common-lisp:null))
   (child-directed common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bot-response 'make-get-bot-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-bot-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "intents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'intents)))
    (aws-sdk/generator/shape::to-query-params "clarificationPrompt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'clarification-prompt)))
    (aws-sdk/generator/shape::to-query-params "abortStatement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'abort-statement)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "failureReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failure-reason)))
    (aws-sdk/generator/shape::to-query-params "lastUpdatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-date)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "idleSessionTTLInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'idle-session-ttlin-seconds)))
    (aws-sdk/generator/shape::to-query-params "voiceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'voice-id)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "locale"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'locale)))
    (aws-sdk/generator/shape::to-query-params "childDirected"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'child-directed))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bot-versions-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or bot-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bot-versions-request 'make-get-bot-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bot-versions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bot-versions-response (:copier common-lisp:nil))
   (bots common-lisp:nil :type
    (common-lisp:or bot-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bot-versions-response
                    'make-get-bot-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bot-versions-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "bots"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bots)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bots-request (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (name-contains common-lisp:nil :type
    (common-lisp:or bot-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bots-request 'make-get-bots-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-bots-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "nameContains"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name-contains))))))
(common-lisp:progn
 (common-lisp:defstruct (get-bots-response (:copier common-lisp:nil))
   (bots common-lisp:nil :type
    (common-lisp:or bot-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bots-response 'make-get-bots-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-bots-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "bots"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bots)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-builtin-intent-request (:copier common-lisp:nil))
   (signature
    (common-lisp:error
     #A((22) common-lisp:base-char . ":signature is required"))
    :type (common-lisp:or builtin-intent-signature common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-builtin-intent-request
                    'make-get-builtin-intent-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-builtin-intent-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "signature"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'signature))))))
(common-lisp:progn
 (common-lisp:defstruct (get-builtin-intent-response (:copier common-lisp:nil))
   (signature common-lisp:nil :type
    (common-lisp:or builtin-intent-signature common-lisp:null))
   (supported-locales common-lisp:nil :type
    (common-lisp:or locale-list common-lisp:null))
   (slots common-lisp:nil :type
    (common-lisp:or builtin-intent-slot-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-builtin-intent-response
                    'make-get-builtin-intent-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-builtin-intent-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "signature"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'signature)))
    (aws-sdk/generator/shape::to-query-params "supportedLocales"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'supported-locales)))
    (aws-sdk/generator/shape::to-query-params "slots"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'slots))))))
(common-lisp:progn
 (common-lisp:defstruct (get-builtin-intents-request (:copier common-lisp:nil))
   (locale common-lisp:nil :type (common-lisp:or locale common-lisp:null))
   (signature-contains common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-builtin-intents-request
                    'make-get-builtin-intents-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-builtin-intents-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "locale"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'locale)))
    (aws-sdk/generator/shape::to-query-params "signatureContains"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'signature-contains)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-builtin-intents-response (:copier common-lisp:nil))
   (intents common-lisp:nil :type
    (common-lisp:or builtin-intent-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-builtin-intents-response
                    'make-get-builtin-intents-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-builtin-intents-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "intents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'intents)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-builtin-slot-types-request (:copier common-lisp:nil))
   (locale common-lisp:nil :type (common-lisp:or locale common-lisp:null))
   (signature-contains common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-builtin-slot-types-request
                    'make-get-builtin-slot-types-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-builtin-slot-types-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "locale"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'locale)))
    (aws-sdk/generator/shape::to-query-params "signatureContains"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'signature-contains)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-builtin-slot-types-response (:copier common-lisp:nil))
   (slot-types common-lisp:nil :type
    (common-lisp:or builtin-slot-type-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-builtin-slot-types-response
                    'make-get-builtin-slot-types-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-builtin-slot-types-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "slotTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'slot-types)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-intent-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or intent-name common-lisp:null))
   (version
    (common-lisp:error #A((20) common-lisp:base-char . ":version is required"))
    :type (common-lisp:or version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-intent-request 'make-get-intent-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-intent-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:progn
 (common-lisp:defstruct (get-intent-response (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or intent-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (slots common-lisp:nil :type (common-lisp:or slot-list common-lisp:null))
   (sample-utterances common-lisp:nil :type
    (common-lisp:or intent-utterance-list common-lisp:null))
   (confirmation-prompt common-lisp:nil :type
    (common-lisp:or prompt common-lisp:null))
   (rejection-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (follow-up-prompt common-lisp:nil :type
    (common-lisp:or follow-up-prompt common-lisp:null))
   (conclusion-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (dialog-code-hook common-lisp:nil :type
    (common-lisp:or code-hook common-lisp:null))
   (fulfillment-activity common-lisp:nil :type
    (common-lisp:or fulfillment-activity common-lisp:null))
   (parent-intent-signature common-lisp:nil :type
    (common-lisp:or builtin-intent-signature common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-intent-response 'make-get-intent-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-intent-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "slots"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'slots)))
    (aws-sdk/generator/shape::to-query-params "sampleUtterances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sample-utterances)))
    (aws-sdk/generator/shape::to-query-params "confirmationPrompt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'confirmation-prompt)))
    (aws-sdk/generator/shape::to-query-params "rejectionStatement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rejection-statement)))
    (aws-sdk/generator/shape::to-query-params "followUpPrompt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'follow-up-prompt)))
    (aws-sdk/generator/shape::to-query-params "conclusionStatement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'conclusion-statement)))
    (aws-sdk/generator/shape::to-query-params "dialogCodeHook"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dialog-code-hook)))
    (aws-sdk/generator/shape::to-query-params "fulfillmentActivity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fulfillment-activity)))
    (aws-sdk/generator/shape::to-query-params "parentIntentSignature"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-intent-signature)))
    (aws-sdk/generator/shape::to-query-params "lastUpdatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-date)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum))))))
(common-lisp:progn
 (common-lisp:defstruct (get-intent-versions-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or intent-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-intent-versions-request
                    'make-get-intent-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-intent-versions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-intent-versions-response (:copier common-lisp:nil))
   (intents common-lisp:nil :type
    (common-lisp:or intent-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-intent-versions-response
                    'make-get-intent-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-intent-versions-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "intents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'intents)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-intents-request (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (name-contains common-lisp:nil :type
    (common-lisp:or intent-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-intents-request 'make-get-intents-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-intents-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "nameContains"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name-contains))))))
(common-lisp:progn
 (common-lisp:defstruct (get-intents-response (:copier common-lisp:nil))
   (intents common-lisp:nil :type
    (common-lisp:or intent-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-intents-response 'make-get-intents-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-intents-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "intents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'intents)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-slot-type-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or slot-type-name common-lisp:null))
   (version
    (common-lisp:error #A((20) common-lisp:base-char . ":version is required"))
    :type (common-lisp:or version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-slot-type-request 'make-get-slot-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-slot-type-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:progn
 (common-lisp:defstruct (get-slot-type-response (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or slot-type-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (enumeration-values common-lisp:nil :type
    (common-lisp:or enumeration-values common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-slot-type-response 'make-get-slot-type-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-slot-type-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "enumerationValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enumeration-values)))
    (aws-sdk/generator/shape::to-query-params "lastUpdatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-date)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-slot-type-versions-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or slot-type-name common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-slot-type-versions-request
                    'make-get-slot-type-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-slot-type-versions-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-slot-type-versions-response (:copier common-lisp:nil))
   (slot-types common-lisp:nil :type
    (common-lisp:or slot-type-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-slot-type-versions-response
                    'make-get-slot-type-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-slot-type-versions-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "slotTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'slot-types)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-slot-types-request (:copier common-lisp:nil))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or max-results common-lisp:null))
   (name-contains common-lisp:nil :type
    (common-lisp:or slot-type-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-slot-types-request 'make-get-slot-types-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-slot-types-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "maxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "nameContains"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name-contains))))))
(common-lisp:progn
 (common-lisp:defstruct (get-slot-types-response (:copier common-lisp:nil))
   (slot-types common-lisp:nil :type
    (common-lisp:or slot-type-metadata-list common-lisp:null))
   (next-token common-lisp:nil :type
    (common-lisp:or next-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-slot-types-response 'make-get-slot-types-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-slot-types-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "slotTypes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'slot-types)))
    (aws-sdk/generator/shape::to-query-params "nextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (get-utterances-view-request (:copier common-lisp:nil))
   (bot-name
    (common-lisp:error #A((20) common-lisp:base-char . ":botname is required"))
    :type (common-lisp:or bot-name common-lisp:null))
   (bot-versions
    (common-lisp:error
     #A((24) common-lisp:base-char . ":botversions is required"))
    :type (common-lisp:or bot-versions common-lisp:null))
   (status-type
    (common-lisp:error
     #A((23) common-lisp:base-char . ":statustype is required"))
    :type (common-lisp:or status-type common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-utterances-view-request
                    'make-get-utterances-view-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-utterances-view-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "botName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-name)))
    (aws-sdk/generator/shape::to-query-params "botVersions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-versions)))
    (aws-sdk/generator/shape::to-query-params "statusType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-type))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-utterances-view-response (:copier common-lisp:nil))
   (bot-name common-lisp:nil :type (common-lisp:or bot-name common-lisp:null))
   (utterances common-lisp:nil :type
    (common-lisp:or lists-of-utterances common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-utterances-view-response
                    'make-get-utterances-view-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-utterances-view-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "botName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-name)))
    (aws-sdk/generator/shape::to-query-params "utterances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'utterances))))))
(common-lisp:progn
 (common-lisp:defstruct (intent (:copier common-lisp:nil))
   (intent-name
    (common-lisp:error
     #A((23) common-lisp:base-char . ":intentname is required"))
    :type (common-lisp:or intent-name common-lisp:null))
   (intent-version
    (common-lisp:error
     #A((26) common-lisp:base-char . ":intentversion is required"))
    :type (common-lisp:or version common-lisp:null)))
 (common-lisp:export (common-lisp:list 'intent 'make-intent))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape intent))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "intentName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'intent-name)))
    (aws-sdk/generator/shape::to-query-params "intentVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'intent-version))))))
(common-lisp:progn
 (common-lisp:deftype intent-list () '(trivial-types:proper-list intent))
 (common-lisp:defun |make-intent-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list intent))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (intent-metadata (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or intent-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null)))
 (common-lisp:export (common-lisp:list 'intent-metadata 'make-intent-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape intent-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "lastUpdatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-date)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:progn
 (common-lisp:deftype intent-metadata-list ()
   '(trivial-types:proper-list intent-metadata))
 (common-lisp:defun |make-intent-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list intent-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:deftype intent-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype intent-utterance-list ()
   '(trivial-types:proper-list utterance))
 (common-lisp:defun |make-intent-utterance-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list utterance))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (internal-failure-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'internal-failure-exception
                    'make-internal-failure-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          internal-failure-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype lambda-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil))
   (retry-after-seconds common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "retryAfterSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'retry-after-seconds)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype list-of-utterance ()
   '(trivial-types:proper-list utterance-data))
 (common-lisp:defun |make-list-of-utterance|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list utterance-data))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype lists-of-utterances ()
   '(trivial-types:proper-list utterance-list))
 (common-lisp:defun |make-lists-of-utterances|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list utterance-list))
   aws-sdk/generator/shape::members))
(common-lisp:deftype locale () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype locale-list () '(trivial-types:proper-list locale))
 (common-lisp:defun |make-locale-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list locale))
   aws-sdk/generator/shape::members))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (message (:copier common-lisp:nil))
   (content-type
    (common-lisp:error
     #A((24) common-lisp:base-char . ":contenttype is required"))
    :type (common-lisp:or content-type common-lisp:null))
   (content
    (common-lisp:error #A((20) common-lisp:base-char . ":content is required"))
    :type (common-lisp:or content-string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'message 'make-message))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape message))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "contentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-type)))
    (aws-sdk/generator/shape::to-query-params "content"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content))))))
(common-lisp:progn
 (common-lisp:deftype message-list () '(trivial-types:proper-list message))
 (common-lisp:defun |make-message-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list message))
   aws-sdk/generator/shape::members))
(common-lisp:deftype message-version () 'common-lisp:string)
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (not-found-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'make-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype numerical-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (precondition-failed-exception (:copier common-lisp:nil))
   (message common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'precondition-failed-exception
                    'make-precondition-failed-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          precondition-failed-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype priority () 'common-lisp:integer)
(common-lisp:deftype process-behavior () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (prompt (:copier common-lisp:nil))
   (messages
    (common-lisp:error
     #A((21) common-lisp:base-char . ":messages is required"))
    :type (common-lisp:or message-list common-lisp:null))
   (max-attempts
    (common-lisp:error
     #A((24) common-lisp:base-char . ":maxattempts is required"))
    :type (common-lisp:or prompt-max-attempts common-lisp:null))
   (response-card common-lisp:nil :type
    (common-lisp:or response-card common-lisp:null)))
 (common-lisp:export (common-lisp:list 'prompt 'make-prompt))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape prompt))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "messages"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'messages)))
    (aws-sdk/generator/shape::to-query-params "maxAttempts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-attempts)))
    (aws-sdk/generator/shape::to-query-params "responseCard"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-card))))))
(common-lisp:deftype prompt-max-attempts () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (put-bot-alias-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or alias-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (bot-version
    (common-lisp:error
     #A((23) common-lisp:base-char . ":botversion is required"))
    :type (common-lisp:or version common-lisp:null))
   (bot-name
    (common-lisp:error #A((20) common-lisp:base-char . ":botname is required"))
    :type (common-lisp:or bot-name common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bot-alias-request 'make-put-bot-alias-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-bot-alias-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "botVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-version)))
    (aws-sdk/generator/shape::to-query-params "botName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-name)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum))))))
(common-lisp:progn
 (common-lisp:defstruct (put-bot-alias-response (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or alias-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (bot-version common-lisp:nil :type
    (common-lisp:or version common-lisp:null))
   (bot-name common-lisp:nil :type (common-lisp:or bot-name common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bot-alias-response 'make-put-bot-alias-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-bot-alias-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "botVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-version)))
    (aws-sdk/generator/shape::to-query-params "botName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-name)))
    (aws-sdk/generator/shape::to-query-params "lastUpdatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-date)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum))))))
(common-lisp:progn
 (common-lisp:defstruct (put-bot-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or bot-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (intents common-lisp:nil :type
    (common-lisp:or intent-list common-lisp:null))
   (clarification-prompt common-lisp:nil :type
    (common-lisp:or prompt common-lisp:null))
   (abort-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (idle-session-ttlin-seconds common-lisp:nil :type
    (common-lisp:or session-ttl common-lisp:null))
   (voice-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (process-behavior common-lisp:nil :type
    (common-lisp:or process-behavior common-lisp:null))
   (locale
    (common-lisp:error #A((19) common-lisp:base-char . ":locale is required"))
    :type (common-lisp:or locale common-lisp:null))
   (child-directed
    (common-lisp:error
     #A((26) common-lisp:base-char . ":childdirected is required"))
    :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'put-bot-request 'make-put-bot-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape put-bot-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "intents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'intents)))
    (aws-sdk/generator/shape::to-query-params "clarificationPrompt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'clarification-prompt)))
    (aws-sdk/generator/shape::to-query-params "abortStatement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'abort-statement)))
    (aws-sdk/generator/shape::to-query-params "idleSessionTTLInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'idle-session-ttlin-seconds)))
    (aws-sdk/generator/shape::to-query-params "voiceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'voice-id)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum)))
    (aws-sdk/generator/shape::to-query-params "processBehavior"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'process-behavior)))
    (aws-sdk/generator/shape::to-query-params "locale"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'locale)))
    (aws-sdk/generator/shape::to-query-params "childDirected"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'child-directed))))))
(common-lisp:progn
 (common-lisp:defstruct (put-bot-response (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or bot-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (intents common-lisp:nil :type
    (common-lisp:or intent-list common-lisp:null))
   (clarification-prompt common-lisp:nil :type
    (common-lisp:or prompt common-lisp:null))
   (abort-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (status common-lisp:nil :type (common-lisp:or status common-lisp:null))
   (failure-reason common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (idle-session-ttlin-seconds common-lisp:nil :type
    (common-lisp:or session-ttl common-lisp:null))
   (voice-id common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null))
   (locale common-lisp:nil :type (common-lisp:or locale common-lisp:null))
   (child-directed common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-bot-response 'make-put-bot-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape put-bot-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "intents"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'intents)))
    (aws-sdk/generator/shape::to-query-params "clarificationPrompt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'clarification-prompt)))
    (aws-sdk/generator/shape::to-query-params "abortStatement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'abort-statement)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "failureReason"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failure-reason)))
    (aws-sdk/generator/shape::to-query-params "lastUpdatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-date)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "idleSessionTTLInSeconds"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'idle-session-ttlin-seconds)))
    (aws-sdk/generator/shape::to-query-params "voiceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'voice-id)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "locale"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'locale)))
    (aws-sdk/generator/shape::to-query-params "childDirected"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'child-directed))))))
(common-lisp:progn
 (common-lisp:defstruct (put-intent-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or intent-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (slots common-lisp:nil :type (common-lisp:or slot-list common-lisp:null))
   (sample-utterances common-lisp:nil :type
    (common-lisp:or intent-utterance-list common-lisp:null))
   (confirmation-prompt common-lisp:nil :type
    (common-lisp:or prompt common-lisp:null))
   (rejection-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (follow-up-prompt common-lisp:nil :type
    (common-lisp:or follow-up-prompt common-lisp:null))
   (conclusion-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (dialog-code-hook common-lisp:nil :type
    (common-lisp:or code-hook common-lisp:null))
   (fulfillment-activity common-lisp:nil :type
    (common-lisp:or fulfillment-activity common-lisp:null))
   (parent-intent-signature common-lisp:nil :type
    (common-lisp:or builtin-intent-signature common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-intent-request 'make-put-intent-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape put-intent-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "slots"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'slots)))
    (aws-sdk/generator/shape::to-query-params "sampleUtterances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sample-utterances)))
    (aws-sdk/generator/shape::to-query-params "confirmationPrompt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'confirmation-prompt)))
    (aws-sdk/generator/shape::to-query-params "rejectionStatement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rejection-statement)))
    (aws-sdk/generator/shape::to-query-params "followUpPrompt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'follow-up-prompt)))
    (aws-sdk/generator/shape::to-query-params "conclusionStatement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'conclusion-statement)))
    (aws-sdk/generator/shape::to-query-params "dialogCodeHook"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dialog-code-hook)))
    (aws-sdk/generator/shape::to-query-params "fulfillmentActivity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fulfillment-activity)))
    (aws-sdk/generator/shape::to-query-params "parentIntentSignature"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-intent-signature)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum))))))
(common-lisp:progn
 (common-lisp:defstruct (put-intent-response (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or intent-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (slots common-lisp:nil :type (common-lisp:or slot-list common-lisp:null))
   (sample-utterances common-lisp:nil :type
    (common-lisp:or intent-utterance-list common-lisp:null))
   (confirmation-prompt common-lisp:nil :type
    (common-lisp:or prompt common-lisp:null))
   (rejection-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (follow-up-prompt common-lisp:nil :type
    (common-lisp:or follow-up-prompt common-lisp:null))
   (conclusion-statement common-lisp:nil :type
    (common-lisp:or statement common-lisp:null))
   (dialog-code-hook common-lisp:nil :type
    (common-lisp:or code-hook common-lisp:null))
   (fulfillment-activity common-lisp:nil :type
    (common-lisp:or fulfillment-activity common-lisp:null))
   (parent-intent-signature common-lisp:nil :type
    (common-lisp:or builtin-intent-signature common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-intent-response 'make-put-intent-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape put-intent-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "slots"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'slots)))
    (aws-sdk/generator/shape::to-query-params "sampleUtterances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sample-utterances)))
    (aws-sdk/generator/shape::to-query-params "confirmationPrompt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'confirmation-prompt)))
    (aws-sdk/generator/shape::to-query-params "rejectionStatement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rejection-statement)))
    (aws-sdk/generator/shape::to-query-params "followUpPrompt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'follow-up-prompt)))
    (aws-sdk/generator/shape::to-query-params "conclusionStatement"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'conclusion-statement)))
    (aws-sdk/generator/shape::to-query-params "dialogCodeHook"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dialog-code-hook)))
    (aws-sdk/generator/shape::to-query-params "fulfillmentActivity"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'fulfillment-activity)))
    (aws-sdk/generator/shape::to-query-params "parentIntentSignature"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parent-intent-signature)))
    (aws-sdk/generator/shape::to-query-params "lastUpdatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-date)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum))))))
(common-lisp:progn
 (common-lisp:defstruct (put-slot-type-request (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or slot-type-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (enumeration-values common-lisp:nil :type
    (common-lisp:or enumeration-values common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-slot-type-request 'make-put-slot-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-slot-type-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "enumerationValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enumeration-values)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum))))))
(common-lisp:progn
 (common-lisp:defstruct (put-slot-type-response (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or slot-type-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (enumeration-values common-lisp:nil :type
    (common-lisp:or enumeration-values common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null))
   (checksum common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-slot-type-response 'make-put-slot-type-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-slot-type-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "enumerationValues"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enumeration-values)))
    (aws-sdk/generator/shape::to-query-params "lastUpdatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-date)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum))))))
(common-lisp:deftype reference-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (resource-in-use-exception (:copier common-lisp:nil))
   (reference-type common-lisp:nil :type
    (common-lisp:or reference-type common-lisp:null))
   (example-reference common-lisp:nil :type
    (common-lisp:or resource-reference common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-in-use-exception
                    'make-resource-in-use-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-in-use-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "referenceType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reference-type)))
    (aws-sdk/generator/shape::to-query-params "exampleReference"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'example-reference))))))
(common-lisp:progn
 (common-lisp:defstruct (resource-reference (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-reference 'make-resource-reference))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape resource-reference))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:deftype response-card () 'common-lisp:string)
(common-lisp:deftype session-ttl () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (slot (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or slot-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (slot-constraint
    (common-lisp:error
     #A((27) common-lisp:base-char . ":slotconstraint is required"))
    :type (common-lisp:or slot-constraint common-lisp:null))
   (slot-type common-lisp:nil :type
    (common-lisp:or custom-or-builtin-slot-type-name common-lisp:null))
   (slot-type-version common-lisp:nil :type
    (common-lisp:or version common-lisp:null))
   (value-elicitation-prompt common-lisp:nil :type
    (common-lisp:or prompt common-lisp:null))
   (priority common-lisp:nil :type (common-lisp:or priority common-lisp:null))
   (sample-utterances common-lisp:nil :type
    (common-lisp:or slot-utterance-list common-lisp:null))
   (response-card common-lisp:nil :type
    (common-lisp:or response-card common-lisp:null)))
 (common-lisp:export (common-lisp:list 'slot 'make-slot))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape slot))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "slotConstraint"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'slot-constraint)))
    (aws-sdk/generator/shape::to-query-params "slotType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'slot-type)))
    (aws-sdk/generator/shape::to-query-params "slotTypeVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'slot-type-version)))
    (aws-sdk/generator/shape::to-query-params "valueElicitationPrompt"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value-elicitation-prompt)))
    (aws-sdk/generator/shape::to-query-params "priority"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'priority)))
    (aws-sdk/generator/shape::to-query-params "sampleUtterances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sample-utterances)))
    (aws-sdk/generator/shape::to-query-params "responseCard"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-card))))))
(common-lisp:deftype slot-constraint () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype slot-list () '(trivial-types:proper-list slot))
 (common-lisp:defun |make-slot-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list slot))
   aws-sdk/generator/shape::members))
(common-lisp:deftype slot-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (slot-type-metadata (:copier common-lisp:nil))
   (name common-lisp:nil :type
    (common-lisp:or slot-type-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (last-updated-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (created-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (version common-lisp:nil :type (common-lisp:or version common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'slot-type-metadata 'make-slot-type-metadata))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape slot-type-metadata))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "lastUpdatedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-updated-date)))
    (aws-sdk/generator/shape::to-query-params "createdDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-date)))
    (aws-sdk/generator/shape::to-query-params "version"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'version))))))
(common-lisp:progn
 (common-lisp:deftype slot-type-metadata-list ()
   '(trivial-types:proper-list slot-type-metadata))
 (common-lisp:defun |make-slot-type-metadata-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list slot-type-metadata))
   aws-sdk/generator/shape::members))
(common-lisp:deftype slot-type-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype slot-utterance-list ()
   '(trivial-types:proper-list utterance))
 (common-lisp:defun |make-slot-utterance-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list utterance))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (statement (:copier common-lisp:nil))
   (messages
    (common-lisp:error
     #A((21) common-lisp:base-char . ":messages is required"))
    :type (common-lisp:or message-list common-lisp:null))
   (response-card common-lisp:nil :type
    (common-lisp:or response-card common-lisp:null)))
 (common-lisp:export (common-lisp:list 'statement 'make-statement))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape statement))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "messages"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'messages)))
    (aws-sdk/generator/shape::to-query-params "responseCard"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'response-card))))))
(common-lisp:deftype status () 'common-lisp:string)
(common-lisp:deftype status-type () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype user-id () 'common-lisp:string)
(common-lisp:deftype utterance () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (utterance-data (:copier common-lisp:nil))
   (utterance-string common-lisp:nil :type
    (common-lisp:or utterance-string common-lisp:null))
   (count common-lisp:nil :type (common-lisp:or count common-lisp:null))
   (distinct-users common-lisp:nil :type
    (common-lisp:or count common-lisp:null))
   (first-uttered-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null))
   (last-uttered-date common-lisp:nil :type
    (common-lisp:or timestamp common-lisp:null)))
 (common-lisp:export (common-lisp:list 'utterance-data 'make-utterance-data))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape utterance-data))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "utteranceString"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'utterance-string)))
    (aws-sdk/generator/shape::to-query-params "count"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'count)))
    (aws-sdk/generator/shape::to-query-params "distinctUsers"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'distinct-users)))
    (aws-sdk/generator/shape::to-query-params "firstUtteredDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'first-uttered-date)))
    (aws-sdk/generator/shape::to-query-params "lastUtteredDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-uttered-date))))))
(common-lisp:progn
 (common-lisp:defstruct (utterance-list (:copier common-lisp:nil))
   (bot-version common-lisp:nil :type
    (common-lisp:or version common-lisp:null))
   (utterances common-lisp:nil :type
    (common-lisp:or list-of-utterance common-lisp:null)))
 (common-lisp:export (common-lisp:list 'utterance-list 'make-utterance-list))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape utterance-list))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "botVersion"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bot-version)))
    (aws-sdk/generator/shape::to-query-params "utterances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'utterances))))))
(common-lisp:deftype utterance-string () 'common-lisp:string)
(common-lisp:deftype value () 'common-lisp:string)
(common-lisp:deftype version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-bot-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name checksum)
   (common-lisp:declare (common-lisp:ignorable name checksum))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-bot-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/bots/~a/versions" name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateBotVersion")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateBotVersionResponse" common-lisp:nil)))
 (common-lisp:export 'create-bot-version))
(common-lisp:progn
 (common-lisp:defun create-intent-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name checksum)
   (common-lisp:declare (common-lisp:ignorable name checksum))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-intent-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/intents/~a/versions" name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateIntentVersion")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateIntentVersionResponse" common-lisp:nil)))
 (common-lisp:export 'create-intent-version))
(common-lisp:progn
 (common-lisp:defun create-slot-type-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name checksum)
   (common-lisp:declare (common-lisp:ignorable name checksum))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-slot-type-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/slottypes/~a/versions"
                                                   name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateSlotTypeVersion")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateSlotTypeVersionResponse" common-lisp:nil)))
 (common-lisp:export 'create-slot-type-version))
(common-lisp:progn
 (common-lisp:defun delete-bot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-bot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil "/bots/~a"
                                                   name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteBot")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-bot))
(common-lisp:progn
 (common-lisp:defun delete-bot-alias
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name bot-name)
   (common-lisp:declare (common-lisp:ignorable name bot-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-bot-alias-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/bots/~a/aliases/~a"
                                                   botname name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteBotAlias")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-bot-alias))
(common-lisp:progn
 (common-lisp:defun delete-bot-channel-association
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name bot-name bot-alias)
   (common-lisp:declare (common-lisp:ignorable name bot-name bot-alias))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-bot-channel-association-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/bots/~a/aliases/~a/channels/~a"
                                                   botname aliasname name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteBotChannelAssociation")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-bot-channel-association))
(common-lisp:progn
 (common-lisp:defun delete-bot-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name version)
   (common-lisp:declare (common-lisp:ignorable name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-bot-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/bots/~a/versions/~a" name
                                                   version)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteBotVersion")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-bot-version))
(common-lisp:progn
 (common-lisp:defun delete-intent
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-intent-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/intents/~a" name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteIntent")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-intent))
(common-lisp:progn
 (common-lisp:defun delete-intent-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name version)
   (common-lisp:declare (common-lisp:ignorable name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-intent-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/intents/~a/versions/~a"
                                                   name version)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteIntentVersion")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-intent-version))
(common-lisp:progn
 (common-lisp:defun delete-slot-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-slot-type-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/slottypes/~a" name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteSlotType")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-slot-type))
(common-lisp:progn
 (common-lisp:defun delete-slot-type-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name version)
   (common-lisp:declare (common-lisp:ignorable name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-slot-type-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/slottypes/~a/version/~a"
                                                   name version)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteSlotTypeVersion")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-slot-type-version))
(common-lisp:progn
 (common-lisp:defun delete-utterances
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bot-name user-id)
   (common-lisp:declare (common-lisp:ignorable bot-name user-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-utterances-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/bots/~a/utterances/~a"
                                                   botname userid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteUtterances")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-utterances))
(common-lisp:progn
 (common-lisp:defun get-bot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name version-or-alias)
   (common-lisp:declare (common-lisp:ignorable name version-or-alias))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/bots/~a/versions/~a" name
                                                   versionoralias)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBot")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBotResponse" common-lisp:nil)))
 (common-lisp:export 'get-bot))
(common-lisp:progn
 (common-lisp:defun get-bot-alias
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name bot-name)
   (common-lisp:declare (common-lisp:ignorable name bot-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bot-alias-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/bots/~a/aliases/~a"
                                                   botname name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBotAlias")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBotAliasResponse" common-lisp:nil)))
 (common-lisp:export 'get-bot-alias))
(common-lisp:progn
 (common-lisp:defun get-bot-aliases
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bot-name next-token max-results
                     name-contains)
   (common-lisp:declare
    (common-lisp:ignorable bot-name next-token max-results name-contains))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bot-aliases-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/bots/~a/aliases/" botname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBotAliases")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBotAliasesResponse" common-lisp:nil)))
 (common-lisp:export 'get-bot-aliases))
(common-lisp:progn
 (common-lisp:defun get-bot-channel-association
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name bot-name bot-alias)
   (common-lisp:declare (common-lisp:ignorable name bot-name bot-alias))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-bot-channel-association-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/bots/~a/aliases/~a/channels/~a"
                                                   botname aliasname name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBotChannelAssociation")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBotChannelAssociationResponse" common-lisp:nil)))
 (common-lisp:export 'get-bot-channel-association))
(common-lisp:progn
 (common-lisp:defun get-bot-channel-associations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bot-name bot-alias next-token max-results
                     name-contains)
   (common-lisp:declare
    (common-lisp:ignorable bot-name bot-alias next-token max-results
     name-contains))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-bot-channel-associations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/bots/~a/aliases/~a/channels/"
                                                   botname aliasname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBotChannelAssociations")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBotChannelAssociationsResponse" common-lisp:nil)))
 (common-lisp:export 'get-bot-channel-associations))
(common-lisp:progn
 (common-lisp:defun get-bot-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name next-token max-results)
   (common-lisp:declare (common-lisp:ignorable name next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bot-versions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/bots/~a/versions/" name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBotVersions")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBotVersionsResponse" common-lisp:nil)))
 (common-lisp:export 'get-bot-versions))
(common-lisp:progn
 (common-lisp:defun get-bots
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results name-contains)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results name-contains))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bots-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"GetBots")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBotsResponse" common-lisp:nil)))
 (common-lisp:export 'get-bots))
(common-lisp:progn
 (common-lisp:defun get-builtin-intent
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key signature)
   (common-lisp:declare (common-lisp:ignorable signature))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-builtin-intent-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/builtins/intents/~a"
                                                   signature)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBuiltinIntent")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBuiltinIntentResponse" common-lisp:nil)))
 (common-lisp:export 'get-builtin-intent))
(common-lisp:progn
 (common-lisp:defun get-builtin-intents
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key locale signature-contains next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable locale signature-contains next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-builtin-intents-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"GetBuiltinIntents")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBuiltinIntentsResponse" common-lisp:nil)))
 (common-lisp:export 'get-builtin-intents))
(common-lisp:progn
 (common-lisp:defun get-builtin-slot-types
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key locale signature-contains next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable locale signature-contains next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-builtin-slot-types-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"GetBuiltinSlotTypes")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBuiltinSlotTypesResponse" common-lisp:nil)))
 (common-lisp:export 'get-builtin-slot-types))
(common-lisp:progn
 (common-lisp:defun get-intent
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name version)
   (common-lisp:declare (common-lisp:ignorable name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-intent-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/intents/~a/versions/~a"
                                                   name version)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetIntent")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetIntentResponse" common-lisp:nil)))
 (common-lisp:export 'get-intent))
(common-lisp:progn
 (common-lisp:defun get-intent-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name next-token max-results)
   (common-lisp:declare (common-lisp:ignorable name next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-intent-versions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/intents/~a/versions/"
                                                   name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetIntentVersions")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetIntentVersionsResponse" common-lisp:nil)))
 (common-lisp:export 'get-intent-versions))
(common-lisp:progn
 (common-lisp:defun get-intents
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results name-contains)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results name-contains))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-intents-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"GetIntents")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetIntentsResponse" common-lisp:nil)))
 (common-lisp:export 'get-intents))
(common-lisp:progn
 (common-lisp:defun get-slot-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name version)
   (common-lisp:declare (common-lisp:ignorable name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-slot-type-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/slottypes/~a/versions/~a"
                                                   name version)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetSlotType")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetSlotTypeResponse" common-lisp:nil)))
 (common-lisp:export 'get-slot-type))
(common-lisp:progn
 (common-lisp:defun get-slot-type-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name next-token max-results)
   (common-lisp:declare (common-lisp:ignorable name next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-slot-type-versions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/slottypes/~a/versions/"
                                                   name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetSlotTypeVersions")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetSlotTypeVersionsResponse" common-lisp:nil)))
 (common-lisp:export 'get-slot-type-versions))
(common-lisp:progn
 (common-lisp:defun get-slot-types
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results name-contains)
   (common-lisp:declare
    (common-lisp:ignorable next-token max-results name-contains))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-slot-types-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"GetSlotTypes")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetSlotTypesResponse" common-lisp:nil)))
 (common-lisp:export 'get-slot-types))
(common-lisp:progn
 (common-lisp:defun get-utterances-view
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key bot-name bot-versions status-type)
   (common-lisp:declare
    (common-lisp:ignorable bot-name bot-versions status-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-utterances-view-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/bots/~a/utterances?view=aggregation"
                                                   botname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetUtterancesView")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetUtterancesViewResponse" common-lisp:nil)))
 (common-lisp:export 'get-utterances-view))
(common-lisp:progn
 (common-lisp:defun put-bot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description intents
                     clarification-prompt abort-statement
                     idle-session-ttlin-seconds voice-id checksum
                     process-behavior locale child-directed)
   (common-lisp:declare
    (common-lisp:ignorable name description intents clarification-prompt
     abort-statement idle-session-ttlin-seconds voice-id checksum
     process-behavior locale child-directed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-bot-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/bots/~a/versions/$LATEST"
                                                   name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutBot")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutBotResponse" common-lisp:nil)))
 (common-lisp:export 'put-bot))
(common-lisp:progn
 (common-lisp:defun put-bot-alias
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description bot-version bot-name
                     checksum)
   (common-lisp:declare
    (common-lisp:ignorable name description bot-version bot-name checksum))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-bot-alias-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/bots/~a/aliases/~a"
                                                   botname name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutBotAlias")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutBotAliasResponse" common-lisp:nil)))
 (common-lisp:export 'put-bot-alias))
(common-lisp:progn
 (common-lisp:defun put-intent
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description slots sample-utterances
                     confirmation-prompt rejection-statement follow-up-prompt
                     conclusion-statement dialog-code-hook fulfillment-activity
                     parent-intent-signature checksum)
   (common-lisp:declare
    (common-lisp:ignorable name description slots sample-utterances
     confirmation-prompt rejection-statement follow-up-prompt
     conclusion-statement dialog-code-hook fulfillment-activity
     parent-intent-signature checksum))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-intent-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/intents/~a/versions/$LATEST"
                                                   name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutIntent")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutIntentResponse" common-lisp:nil)))
 (common-lisp:export 'put-intent))
(common-lisp:progn
 (common-lisp:defun put-slot-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description enumeration-values
                     checksum)
   (common-lisp:declare
    (common-lisp:ignorable name description enumeration-values checksum))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-slot-type-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((10) common-lisp:base-char . "lex-models")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/slottypes/~a/versions/$LATEST"
                                                   name)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PutSlotType")
                                  ("Version" ,@"2017-04-19"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PutSlotTypeResponse" common-lisp:nil)))
 (common-lisp:export 'put-slot-type))