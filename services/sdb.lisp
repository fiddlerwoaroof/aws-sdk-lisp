;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/sdb
  (:use)
  (:nicknames #:aws/sdb)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/sdb)

(common-lisp:progn
 (common-lisp:defstruct (attribute (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (alternate-name-encoding common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or string common-lisp:null))
   (alternate-value-encoding common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'attribute 'make-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape attribute))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "AlternateNameEncoding"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alternate-name-encoding)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "AlternateValueEncoding"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alternate-value-encoding))))))
(common-lisp:progn
 (common-lisp:defstruct (attribute-does-not-exist (:copier common-lisp:nil))
   (box-usage common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attribute-does-not-exist 'make-attribute-does-not-exist))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attribute-does-not-exist))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BoxUsage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'box-usage))))))
(common-lisp:progn
 (common-lisp:deftype attribute-list () '(trivial-types:proper-list attribute))
 (common-lisp:defun |make-attribute-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype attribute-name-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-attribute-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-delete-attributes-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (items
    (common-lisp:error #A((18) common-lisp:base-char . ":items is required"))
    :type (common-lisp:or deletable-item-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-delete-attributes-request
                    'make-batch-delete-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-delete-attributes-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:progn
 (common-lisp:defstruct
     (batch-put-attributes-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (items
    (common-lisp:error #A((18) common-lisp:base-char . ":items is required"))
    :type (common-lisp:or replaceable-item-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'batch-put-attributes-request
                    'make-batch-put-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          batch-put-attributes-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items))))))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (create-domain-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-domain-request 'make-create-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-domain-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name))))))
(common-lisp:progn
 (common-lisp:defstruct (deletable-attribute (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deletable-attribute 'make-deletable-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape deletable-attribute))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:deftype deletable-attribute-list ()
   '(trivial-types:proper-list deletable-attribute))
 (common-lisp:defun |make-deletable-attribute-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deletable-attribute))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (deletable-item (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or deletable-attribute-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'deletable-item 'make-deletable-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape deletable-item))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes))))))
(common-lisp:progn
 (common-lisp:deftype deletable-item-list ()
   '(trivial-types:proper-list deletable-item))
 (common-lisp:defun |make-deletable-item-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deletable-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (delete-attributes-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (item-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":item-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (attributes common-lisp:nil :type
    (common-lisp:or deletable-attribute-list common-lisp:null))
   (expected common-lisp:nil :type
    (common-lisp:or update-condition common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-attributes-request
                    'make-delete-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-attributes-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "ItemName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item-name)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "Expected"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expected))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-domain-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-domain-request 'make-delete-domain-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-domain-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name))))))
(common-lisp:progn
 (common-lisp:defstruct (domain-metadata-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'domain-metadata-request 'make-domain-metadata-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          domain-metadata-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name))))))
(common-lisp:progn
 (common-lisp:defstruct (domain-metadata-result (:copier common-lisp:nil))
   (item-count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (item-names-size-bytes common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (attribute-name-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (attribute-names-size-bytes common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (attribute-value-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (attribute-values-size-bytes common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (timestamp common-lisp:nil :type (common-lisp:or integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'domain-metadata-result 'make-domain-metadata-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          domain-metadata-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ItemCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item-count)))
    (aws-sdk/generator/shape::to-query-params "ItemNamesSizeBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item-names-size-bytes)))
    (aws-sdk/generator/shape::to-query-params "AttributeNameCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-name-count)))
    (aws-sdk/generator/shape::to-query-params "AttributeNamesSizeBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-names-size-bytes)))
    (aws-sdk/generator/shape::to-query-params "AttributeValueCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-value-count)))
    (aws-sdk/generator/shape::to-query-params "AttributeValuesSizeBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-values-size-bytes)))
    (aws-sdk/generator/shape::to-query-params "Timestamp"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timestamp))))))
(common-lisp:progn
 (common-lisp:deftype domain-name-list () '(trivial-types:proper-list string))
 (common-lisp:defun |make-domain-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (duplicate-item-name (:copier common-lisp:nil))
   (box-usage common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'duplicate-item-name 'make-duplicate-item-name))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape duplicate-item-name))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BoxUsage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'box-usage))))))
(common-lisp:deftype float () 'common-lisp:single-float)
(common-lisp:progn
 (common-lisp:defstruct (get-attributes-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (item-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":item-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (attribute-names common-lisp:nil :type
    (common-lisp:or attribute-name-list common-lisp:null))
   (consistent-read common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-attributes-request 'make-get-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-attributes-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "ItemName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item-name)))
    (aws-sdk/generator/shape::to-query-params "AttributeNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-names)))
    (aws-sdk/generator/shape::to-query-params "ConsistentRead"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consistent-read))))))
(common-lisp:progn
 (common-lisp:defstruct (get-attributes-result (:copier common-lisp:nil))
   (attributes common-lisp:nil :type
    (common-lisp:or attribute-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-attributes-result 'make-get-attributes-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-attributes-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes))))))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (invalid-next-token (:copier common-lisp:nil))
   (box-usage common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-next-token 'make-invalid-next-token))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape invalid-next-token))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BoxUsage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'box-usage))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-number-predicates (:copier common-lisp:nil))
   (box-usage common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-number-predicates
                    'make-invalid-number-predicates))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-number-predicates))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BoxUsage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'box-usage))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-number-value-tests (:copier common-lisp:nil))
   (box-usage common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-number-value-tests
                    'make-invalid-number-value-tests))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-number-value-tests))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BoxUsage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'box-usage))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-parameter-value (:copier common-lisp:nil))
   (box-usage common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-value 'make-invalid-parameter-value))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-parameter-value))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BoxUsage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'box-usage))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-query-expression (:copier common-lisp:nil))
   (box-usage common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-query-expression 'make-invalid-query-expression))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-query-expression))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BoxUsage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'box-usage))))))
(common-lisp:progn
 (common-lisp:defstruct (item (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (alternate-name-encoding common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (attributes
    (common-lisp:error
     #A((23) common-lisp:base-char . ":attributes is required"))
    :type (common-lisp:or attribute-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'item 'make-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape item))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "AlternateNameEncoding"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'alternate-name-encoding)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes))))))
(common-lisp:progn
 (common-lisp:deftype item-list () '(trivial-types:proper-list item))
 (common-lisp:defun |make-item-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (list-domains-request (:copier common-lisp:nil))
   (max-number-of-domains common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-domains-request 'make-list-domains-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-domains-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MaxNumberOfDomains"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-number-of-domains)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-domains-result (:copier common-lisp:nil))
   (domain-names common-lisp:nil :type
    (common-lisp:or domain-name-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-domains-result 'make-list-domains-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-domains-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-names)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (missing-parameter (:copier common-lisp:nil))
   (box-usage common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'missing-parameter 'make-missing-parameter))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape missing-parameter))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BoxUsage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'box-usage))))))
(common-lisp:progn
 (common-lisp:defstruct (no-such-domain (:copier common-lisp:nil))
   (box-usage common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export (common-lisp:list 'no-such-domain 'make-no-such-domain))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape no-such-domain))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BoxUsage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'box-usage))))))
(common-lisp:progn
 (common-lisp:defstruct
     (number-domain-attributes-exceeded (:copier common-lisp:nil))
   (box-usage common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'number-domain-attributes-exceeded
                    'make-number-domain-attributes-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          number-domain-attributes-exceeded))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BoxUsage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'box-usage))))))
(common-lisp:progn
 (common-lisp:defstruct
     (number-domain-bytes-exceeded (:copier common-lisp:nil))
   (box-usage common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'number-domain-bytes-exceeded
                    'make-number-domain-bytes-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          number-domain-bytes-exceeded))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BoxUsage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'box-usage))))))
(common-lisp:progn
 (common-lisp:defstruct (number-domains-exceeded (:copier common-lisp:nil))
   (box-usage common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'number-domains-exceeded 'make-number-domains-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          number-domains-exceeded))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BoxUsage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'box-usage))))))
(common-lisp:progn
 (common-lisp:defstruct
     (number-item-attributes-exceeded (:copier common-lisp:nil))
   (box-usage common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'number-item-attributes-exceeded
                    'make-number-item-attributes-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          number-item-attributes-exceeded))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BoxUsage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'box-usage))))))
(common-lisp:progn
 (common-lisp:defstruct
     (number-submitted-attributes-exceeded (:copier common-lisp:nil))
   (box-usage common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'number-submitted-attributes-exceeded
                    'make-number-submitted-attributes-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          number-submitted-attributes-exceeded))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BoxUsage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'box-usage))))))
(common-lisp:progn
 (common-lisp:defstruct
     (number-submitted-items-exceeded (:copier common-lisp:nil))
   (box-usage common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'number-submitted-items-exceeded
                    'make-number-submitted-items-exceeded))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          number-submitted-items-exceeded))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BoxUsage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'box-usage))))))
(common-lisp:progn
 (common-lisp:defstruct (put-attributes-request (:copier common-lisp:nil))
   (domain-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":domain-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (item-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":item-name is required"))
    :type (common-lisp:or string common-lisp:null))
   (attributes
    (common-lisp:error
     #A((23) common-lisp:base-char . ":attributes is required"))
    :type (common-lisp:or replaceable-attribute-list common-lisp:null))
   (expected common-lisp:nil :type
    (common-lisp:or update-condition common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'put-attributes-request 'make-put-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          put-attributes-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DomainName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'domain-name)))
    (aws-sdk/generator/shape::to-query-params "ItemName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'item-name)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes)))
    (aws-sdk/generator/shape::to-query-params "Expected"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expected))))))
(common-lisp:progn
 (common-lisp:defstruct (replaceable-attribute (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (value
    (common-lisp:error #A((18) common-lisp:base-char . ":value is required"))
    :type (common-lisp:or string common-lisp:null))
   (replace common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'replaceable-attribute 'make-replaceable-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          replaceable-attribute))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "Replace"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'replace))))))
(common-lisp:progn
 (common-lisp:deftype replaceable-attribute-list ()
   '(trivial-types:proper-list replaceable-attribute))
 (common-lisp:defun |make-replaceable-attribute-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list replaceable-attribute))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (replaceable-item (:copier common-lisp:nil))
   (name
    (common-lisp:error #A((17) common-lisp:base-char . ":name is required"))
    :type (common-lisp:or string common-lisp:null))
   (attributes
    (common-lisp:error
     #A((23) common-lisp:base-char . ":attributes is required"))
    :type (common-lisp:or replaceable-attribute-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'replaceable-item 'make-replaceable-item))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape replaceable-item))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Attributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attributes))))))
(common-lisp:progn
 (common-lisp:deftype replaceable-item-list ()
   '(trivial-types:proper-list replaceable-item))
 (common-lisp:defun |make-replaceable-item-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list replaceable-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (request-timeout (:copier common-lisp:nil))
   (box-usage common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export (common-lisp:list 'request-timeout 'make-request-timeout))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape request-timeout))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BoxUsage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'box-usage))))))
(common-lisp:progn
 (common-lisp:defstruct (select-request (:copier common-lisp:nil))
   (select-expression
    (common-lisp:error
     #A((30) common-lisp:base-char . ":select-expression is required"))
    :type (common-lisp:or string common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (consistent-read common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export (common-lisp:list 'select-request 'make-select-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape select-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SelectExpression"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'select-expression)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "ConsistentRead"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'consistent-read))))))
(common-lisp:progn
 (common-lisp:defstruct (select-result (:copier common-lisp:nil))
   (items common-lisp:nil :type (common-lisp:or item-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'select-result 'make-select-result))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape select-result))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Items"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'items)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-requested-attributes (:copier common-lisp:nil))
   (box-usage common-lisp:nil :type (common-lisp:or float common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-requested-attributes
                    'make-too-many-requested-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-requested-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "BoxUsage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'box-usage))))))
(common-lisp:progn
 (common-lisp:defstruct (update-condition (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (exists common-lisp:nil :type (common-lisp:or boolean common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-condition 'make-update-condition))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape update-condition))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "Exists"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'exists))))))
(common-lisp:progn
 (common-lisp:defun batch-delete-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name items)
   (common-lisp:declare (common-lisp:ignorable domain-name items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-delete-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "sdb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"BatchDeleteAttributes")
                                  ("Version" ,@"2009-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'batch-delete-attributes))
(common-lisp:progn
 (common-lisp:defun batch-put-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name items)
   (common-lisp:declare (common-lisp:ignorable domain-name items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-batch-put-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "sdb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"BatchPutAttributes")
                                  ("Version" ,@"2009-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'batch-put-attributes))
(common-lisp:progn
 (common-lisp:defun create-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "sdb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateDomain")
                                  ("Version" ,@"2009-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'create-domain))
(common-lisp:progn
 (common-lisp:defun delete-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name item-name attributes
                     expected)
   (common-lisp:declare
    (common-lisp:ignorable domain-name item-name attributes expected))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "sdb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteAttributes")
                                  ("Version" ,@"2009-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-attributes))
(common-lisp:progn
 (common-lisp:defun delete-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-domain-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "sdb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteDomain")
                                  ("Version" ,@"2009-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-domain))
(common-lisp:progn
 (common-lisp:defun domain-metadata
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-domain-metadata-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "sdb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DomainMetadata")
                                  ("Version" ,@"2009-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DomainMetadataResult" "DomainMetadataResult")))
 (common-lisp:export 'domain-metadata))
(common-lisp:progn
 (common-lisp:defun get-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name item-name attribute-names
                     consistent-read)
   (common-lisp:declare
    (common-lisp:ignorable domain-name item-name attribute-names
     consistent-read))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "sdb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"GetAttributes")
                                  ("Version" ,@"2009-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetAttributesResult" "GetAttributesResult")))
 (common-lisp:export 'get-attributes))
(common-lisp:progn
 (common-lisp:defun list-domains
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-number-of-domains next-token)
   (common-lisp:declare
    (common-lisp:ignorable max-number-of-domains next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-domains-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "sdb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ListDomains")
                                  ("Version" ,@"2009-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListDomainsResult" "ListDomainsResult")))
 (common-lisp:export 'list-domains))
(common-lisp:progn
 (common-lisp:defun put-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name item-name attributes
                     expected)
   (common-lisp:declare
    (common-lisp:ignorable domain-name item-name attributes expected))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "sdb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"PutAttributes")
                                  ("Version" ,@"2009-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'put-attributes))
(common-lisp:progn
 (common-lisp:defun select
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key select-expression next-token
                     consistent-read)
   (common-lisp:declare
    (common-lisp:ignorable select-expression next-token consistent-read))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-select-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service #A((3) common-lisp:base-char . "sdb")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"Select")
                                  ("Version" ,@"2009-04-15"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SelectResult" "SelectResult")))
 (common-lisp:export 'select))