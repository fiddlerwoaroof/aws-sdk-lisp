;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/cognito-sync
  (:use)
  (:nicknames #:aws/cognito-sync)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/cognito-sync)

(common-lisp:progn
 (common-lisp:defstruct (already-streamed-exception (:copier common-lisp:nil))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'already-streamed-exception
                    'make-already-streamed-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          already-streamed-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype application-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype application-arn-list ()
   '(trivial-types:proper-list application-arn))
 (common-lisp:defun |make-application-arn-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list application-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype assume-role-arn () 'common-lisp:string)
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defstruct (bulk-publish-request (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'bulk-publish-request 'make-bulk-publish-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape bulk-publish-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id))))))
(common-lisp:progn
 (common-lisp:defstruct (bulk-publish-response (:copier common-lisp:nil))
   (identity-pool-id common-lisp:nil :type
    (common-lisp:or identity-pool-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'bulk-publish-response 'make-bulk-publish-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          bulk-publish-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id))))))
(common-lisp:deftype bulk-publish-status () 'common-lisp:string)
(common-lisp:deftype client-context () 'common-lisp:string)
(common-lisp:deftype cognito-event-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (cognito-streams (:copier common-lisp:nil))
   (stream-name common-lisp:nil :type
    (common-lisp:or stream-name common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or assume-role-arn common-lisp:null))
   (streaming-status common-lisp:nil :type
    (common-lisp:or streaming-status common-lisp:null)))
 (common-lisp:export (common-lisp:list 'cognito-streams 'make-cognito-streams))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape cognito-streams))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StreamName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'stream-name)))
    (aws-sdk/generator/shape::to-query-params "RoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn)))
    (aws-sdk/generator/shape::to-query-params "StreamingStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'streaming-status))))))
(common-lisp:progn
 (common-lisp:defstruct
     (concurrent-modification-exception (:copier common-lisp:nil))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'concurrent-modification-exception
                    'make-concurrent-modification-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          concurrent-modification-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (dataset (:copier common-lisp:nil))
   (identity-id common-lisp:nil :type
    (common-lisp:or identity-id common-lisp:null))
   (dataset-name common-lisp:nil :type
    (common-lisp:or dataset-name common-lisp:null))
   (creation-date common-lisp:nil :type (common-lisp:or date common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (last-modified-by common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (data-storage common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (num-records common-lisp:nil :type (common-lisp:or long common-lisp:null)))
 (common-lisp:export (common-lisp:list 'dataset 'make-dataset))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape dataset))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id)))
    (aws-sdk/generator/shape::to-query-params "DatasetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dataset-name)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedBy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-by)))
    (aws-sdk/generator/shape::to-query-params "DataStorage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-storage)))
    (aws-sdk/generator/shape::to-query-params "NumRecords"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'num-records))))))
(common-lisp:progn
 (common-lisp:deftype dataset-list () '(trivial-types:proper-list dataset))
 (common-lisp:defun |make-dataset-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dataset))
   aws-sdk/generator/shape::members))
(common-lisp:deftype dataset-name () 'common-lisp:string)
(common-lisp:deftype date () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (delete-dataset-request (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null))
   (identity-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":identity-id is required"))
    :type (common-lisp:or identity-id common-lisp:null))
   (dataset-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":dataset-name is required"))
    :type (common-lisp:or dataset-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-dataset-request 'make-delete-dataset-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-dataset-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id)))
    (aws-sdk/generator/shape::to-query-params "DatasetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dataset-name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-dataset-response (:copier common-lisp:nil))
   (dataset common-lisp:nil :type (common-lisp:or dataset common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-dataset-response 'make-delete-dataset-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-dataset-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Dataset"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dataset))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-dataset-request (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null))
   (identity-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":identity-id is required"))
    :type (common-lisp:or identity-id common-lisp:null))
   (dataset-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":dataset-name is required"))
    :type (common-lisp:or dataset-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-dataset-request 'make-describe-dataset-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-dataset-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id)))
    (aws-sdk/generator/shape::to-query-params "DatasetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dataset-name))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-dataset-response (:copier common-lisp:nil))
   (dataset common-lisp:nil :type (common-lisp:or dataset common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-dataset-response
                    'make-describe-dataset-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-dataset-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Dataset"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dataset))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-identity-pool-usage-request (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-identity-pool-usage-request
                    'make-describe-identity-pool-usage-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-identity-pool-usage-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-identity-pool-usage-response (:copier common-lisp:nil))
   (identity-pool-usage common-lisp:nil :type
    (common-lisp:or identity-pool-usage common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-identity-pool-usage-response
                    'make-describe-identity-pool-usage-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-identity-pool-usage-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolUsage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-usage))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-identity-usage-request (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null))
   (identity-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":identity-id is required"))
    :type (common-lisp:or identity-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-identity-usage-request
                    'make-describe-identity-usage-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-identity-usage-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-identity-usage-response (:copier common-lisp:nil))
   (identity-usage common-lisp:nil :type
    (common-lisp:or identity-usage common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-identity-usage-response
                    'make-describe-identity-usage-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-identity-usage-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityUsage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-usage))))))
(common-lisp:deftype device-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (duplicate-request-exception (:copier common-lisp:nil))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'duplicate-request-exception
                    'make-duplicate-request-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          duplicate-request-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:defstruct
    (events
     (:constructor |make-events|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype exception-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (get-bulk-publish-details-request (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bulk-publish-details-request
                    'make-get-bulk-publish-details-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bulk-publish-details-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-bulk-publish-details-response (:copier common-lisp:nil))
   (identity-pool-id common-lisp:nil :type
    (common-lisp:or identity-pool-id common-lisp:null))
   (bulk-publish-start-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (bulk-publish-complete-time common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (bulk-publish-status common-lisp:nil :type
    (common-lisp:or bulk-publish-status common-lisp:null))
   (failure-message common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-bulk-publish-details-response
                    'make-get-bulk-publish-details-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-bulk-publish-details-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "BulkPublishStartTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bulk-publish-start-time)))
    (aws-sdk/generator/shape::to-query-params "BulkPublishCompleteTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bulk-publish-complete-time)))
    (aws-sdk/generator/shape::to-query-params "BulkPublishStatus"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bulk-publish-status)))
    (aws-sdk/generator/shape::to-query-params "FailureMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'failure-message))))))
(common-lisp:progn
 (common-lisp:defstruct (get-cognito-events-request (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-cognito-events-request
                    'make-get-cognito-events-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-cognito-events-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id))))))
(common-lisp:progn
 (common-lisp:defstruct (get-cognito-events-response (:copier common-lisp:nil))
   (events common-lisp:nil :type (common-lisp:or events common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-cognito-events-response
                    'make-get-cognito-events-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-cognito-events-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Events"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'events))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-identity-pool-configuration-request (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-identity-pool-configuration-request
                    'make-get-identity-pool-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-identity-pool-configuration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-identity-pool-configuration-response (:copier common-lisp:nil))
   (identity-pool-id common-lisp:nil :type
    (common-lisp:or identity-pool-id common-lisp:null))
   (push-sync common-lisp:nil :type
    (common-lisp:or push-sync common-lisp:null))
   (cognito-streams common-lisp:nil :type
    (common-lisp:or cognito-streams common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-identity-pool-configuration-response
                    'make-get-identity-pool-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-identity-pool-configuration-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "PushSync"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'push-sync)))
    (aws-sdk/generator/shape::to-query-params "CognitoStreams"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cognito-streams))))))
(common-lisp:deftype identity-id () 'common-lisp:string)
(common-lisp:deftype identity-pool-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (identity-pool-usage (:copier common-lisp:nil))
   (identity-pool-id common-lisp:nil :type
    (common-lisp:or identity-pool-id common-lisp:null))
   (sync-sessions-count common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (data-storage common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or date common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'identity-pool-usage 'make-identity-pool-usage))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape identity-pool-usage))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "SyncSessionsCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sync-sessions-count)))
    (aws-sdk/generator/shape::to-query-params "DataStorage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-storage)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date))))))
(common-lisp:progn
 (common-lisp:deftype identity-pool-usage-list ()
   '(trivial-types:proper-list identity-pool-usage))
 (common-lisp:defun |make-identity-pool-usage-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list identity-pool-usage))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (identity-usage (:copier common-lisp:nil))
   (identity-id common-lisp:nil :type
    (common-lisp:or identity-id common-lisp:null))
   (identity-pool-id common-lisp:nil :type
    (common-lisp:or identity-pool-id common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (dataset-count common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (data-storage common-lisp:nil :type (common-lisp:or long common-lisp:null)))
 (common-lisp:export (common-lisp:list 'identity-usage 'make-identity-usage))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape identity-usage))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id)))
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "DatasetCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dataset-count)))
    (aws-sdk/generator/shape::to-query-params "DataStorage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'data-storage))))))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:deftype integer-string () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (internal-error-exception (:copier common-lisp:nil))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'internal-error-exception 'make-internal-error-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          internal-error-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-configuration-exception (:copier common-lisp:nil))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-configuration-exception
                    'make-invalid-configuration-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-configuration-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-lambda-function-output-exception (:copier common-lisp:nil))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-lambda-function-output-exception
                    'make-invalid-lambda-function-output-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-lambda-function-output-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (invalid-parameter-exception (:copier common-lisp:nil))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-exception
                    'make-invalid-parameter-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-parameter-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype lambda-function-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (lambda-throttled-exception (:copier common-lisp:nil))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lambda-throttled-exception
                    'make-lambda-throttled-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lambda-throttled-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (list-datasets-request (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null))
   (identity-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":identity-id is required"))
    :type (common-lisp:or identity-id common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or integer-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-datasets-request 'make-list-datasets-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-datasets-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct (list-datasets-response (:copier common-lisp:nil))
   (datasets common-lisp:nil :type
    (common-lisp:or dataset-list common-lisp:null))
   (count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-datasets-response 'make-list-datasets-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-datasets-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Datasets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'datasets)))
    (aws-sdk/generator/shape::to-query-params "Count"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'count)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-identity-pool-usage-request (:copier common-lisp:nil))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or integer-string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-identity-pool-usage-request
                    'make-list-identity-pool-usage-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-identity-pool-usage-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-identity-pool-usage-response (:copier common-lisp:nil))
   (identity-pool-usages common-lisp:nil :type
    (common-lisp:or identity-pool-usage-list common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or integer common-lisp:null))
   (count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-identity-pool-usage-response
                    'make-list-identity-pool-usage-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-identity-pool-usage-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolUsages"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-usages)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "Count"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'count)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-records-request (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null))
   (identity-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":identity-id is required"))
    :type (common-lisp:or identity-id common-lisp:null))
   (dataset-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":dataset-name is required"))
    :type (common-lisp:or dataset-name common-lisp:null))
   (last-sync-count common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (max-results common-lisp:nil :type
    (common-lisp:or integer-string common-lisp:null))
   (sync-session-token common-lisp:nil :type
    (common-lisp:or sync-session-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-records-request 'make-list-records-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-records-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id)))
    (aws-sdk/generator/shape::to-query-params "DatasetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dataset-name)))
    (aws-sdk/generator/shape::to-query-params "LastSyncCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-sync-count)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "MaxResults"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max-results)))
    (aws-sdk/generator/shape::to-query-params "SyncSessionToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sync-session-token))))))
(common-lisp:progn
 (common-lisp:defstruct (list-records-response (:copier common-lisp:nil))
   (records common-lisp:nil :type
    (common-lisp:or record-list common-lisp:null))
   (next-token common-lisp:nil :type (common-lisp:or string common-lisp:null))
   (count common-lisp:nil :type (common-lisp:or integer common-lisp:null))
   (dataset-sync-count common-lisp:nil :type
    (common-lisp:or long common-lisp:null))
   (last-modified-by common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (merged-dataset-names common-lisp:nil :type
    (common-lisp:or merged-dataset-name-list common-lisp:null))
   (dataset-exists common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (dataset-deleted-after-requested-sync-count common-lisp:nil :type
    (common-lisp:or boolean common-lisp:null))
   (sync-session-token common-lisp:nil :type
    (common-lisp:or string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-records-response 'make-list-records-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-records-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Records"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'records)))
    (aws-sdk/generator/shape::to-query-params "NextToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-token)))
    (aws-sdk/generator/shape::to-query-params "Count"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'count)))
    (aws-sdk/generator/shape::to-query-params "DatasetSyncCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dataset-sync-count)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedBy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-by)))
    (aws-sdk/generator/shape::to-query-params "MergedDatasetNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'merged-dataset-names)))
    (aws-sdk/generator/shape::to-query-params "DatasetExists"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dataset-exists)))
    (aws-sdk/generator/shape::to-query-params
     "DatasetDeletedAfterRequestedSyncCount"
     (aws-sdk/generator/shape:shape-to-params
      (common-lisp:slot-value aws-sdk/generator/shape::shape
                              'dataset-deleted-after-requested-sync-count)))
    (aws-sdk/generator/shape::to-query-params "SyncSessionToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sync-session-token))))))
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype merged-dataset-name-list ()
   '(trivial-types:proper-list string))
 (common-lisp:defun |make-merged-dataset-name-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (not-authorized-exception (:copier common-lisp:nil))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'not-authorized-exception 'make-not-authorized-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          not-authorized-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:deftype operation () 'common-lisp:string)
(common-lisp:deftype platform () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (push-sync (:copier common-lisp:nil))
   (application-arns common-lisp:nil :type
    (common-lisp:or application-arn-list common-lisp:null))
   (role-arn common-lisp:nil :type
    (common-lisp:or assume-role-arn common-lisp:null)))
 (common-lisp:export (common-lisp:list 'push-sync 'make-push-sync))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape push-sync))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ApplicationArns"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'application-arns)))
    (aws-sdk/generator/shape::to-query-params "RoleArn"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'role-arn))))))
(common-lisp:deftype push-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (record (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or record-key common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or record-value common-lisp:null))
   (sync-count common-lisp:nil :type (common-lisp:or long common-lisp:null))
   (last-modified-date common-lisp:nil :type
    (common-lisp:or date common-lisp:null))
   (last-modified-by common-lisp:nil :type
    (common-lisp:or string common-lisp:null))
   (device-last-modified-date common-lisp:nil :type
    (common-lisp:or date common-lisp:null)))
 (common-lisp:export (common-lisp:list 'record 'make-record))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape record))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "SyncCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sync-count)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-date)))
    (aws-sdk/generator/shape::to-query-params "LastModifiedBy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-modified-by)))
    (aws-sdk/generator/shape::to-query-params "DeviceLastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-last-modified-date))))))
(common-lisp:deftype record-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype record-list () '(trivial-types:proper-list record))
 (common-lisp:defun |make-record-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list record))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (record-patch (:copier common-lisp:nil))
   (op (common-lisp:error #A((15) common-lisp:base-char . ":op is required"))
    :type (common-lisp:or operation common-lisp:null))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or record-key common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or record-value common-lisp:null))
   (sync-count
    (common-lisp:error
     #A((23) common-lisp:base-char . ":sync-count is required"))
    :type (common-lisp:or long common-lisp:null))
   (device-last-modified-date common-lisp:nil :type
    (common-lisp:or date common-lisp:null)))
 (common-lisp:export (common-lisp:list 'record-patch 'make-record-patch))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape record-patch))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Op"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'op)))
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value)))
    (aws-sdk/generator/shape::to-query-params "SyncCount"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sync-count)))
    (aws-sdk/generator/shape::to-query-params "DeviceLastModifiedDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-last-modified-date))))))
(common-lisp:progn
 (common-lisp:deftype record-patch-list ()
   '(trivial-types:proper-list record-patch))
 (common-lisp:defun |make-record-patch-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list record-patch))
   aws-sdk/generator/shape::members))
(common-lisp:deftype record-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (register-device-request (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null))
   (identity-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":identity-id is required"))
    :type (common-lisp:or identity-id common-lisp:null))
   (platform
    (common-lisp:error
     #A((21) common-lisp:base-char . ":platform is required"))
    :type (common-lisp:or platform common-lisp:null))
   (token
    (common-lisp:error #A((18) common-lisp:base-char . ":token is required"))
    :type (common-lisp:or push-token common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-device-request 'make-register-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-device-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id)))
    (aws-sdk/generator/shape::to-query-params "Platform"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'platform)))
    (aws-sdk/generator/shape::to-query-params "Token"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'token))))))
(common-lisp:progn
 (common-lisp:defstruct (register-device-response (:copier common-lisp:nil))
   (device-id common-lisp:nil :type
    (common-lisp:or device-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-device-response 'make-register-device-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-device-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DeviceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-id))))))
(common-lisp:progn
 (common-lisp:defstruct (resource-conflict-exception (:copier common-lisp:nil))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-conflict-exception
                    'make-resource-conflict-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-conflict-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-not-found-exception (:copier common-lisp:nil))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'make-resource-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (set-cognito-events-request (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null))
   (events
    (common-lisp:error #A((19) common-lisp:base-char . ":events is required"))
    :type (common-lisp:or events common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-cognito-events-request
                    'make-set-cognito-events-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-cognito-events-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "Events"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'events))))))
(common-lisp:progn
 (common-lisp:defstruct
     (set-identity-pool-configuration-request (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null))
   (push-sync common-lisp:nil :type
    (common-lisp:or push-sync common-lisp:null))
   (cognito-streams common-lisp:nil :type
    (common-lisp:or cognito-streams common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-identity-pool-configuration-request
                    'make-set-identity-pool-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-identity-pool-configuration-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "PushSync"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'push-sync)))
    (aws-sdk/generator/shape::to-query-params "CognitoStreams"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cognito-streams))))))
(common-lisp:progn
 (common-lisp:defstruct
     (set-identity-pool-configuration-response (:copier common-lisp:nil))
   (identity-pool-id common-lisp:nil :type
    (common-lisp:or identity-pool-id common-lisp:null))
   (push-sync common-lisp:nil :type
    (common-lisp:or push-sync common-lisp:null))
   (cognito-streams common-lisp:nil :type
    (common-lisp:or cognito-streams common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-identity-pool-configuration-response
                    'make-set-identity-pool-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-identity-pool-configuration-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "PushSync"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'push-sync)))
    (aws-sdk/generator/shape::to-query-params "CognitoStreams"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cognito-streams))))))
(common-lisp:deftype stream-name () 'common-lisp:string)
(common-lisp:deftype streaming-status () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (subscribe-to-dataset-request (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null))
   (identity-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":identity-id is required"))
    :type (common-lisp:or identity-id common-lisp:null))
   (dataset-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":dataset-name is required"))
    :type (common-lisp:or dataset-name common-lisp:null))
   (device-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":device-id is required"))
    :type (common-lisp:or device-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'subscribe-to-dataset-request
                    'make-subscribe-to-dataset-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          subscribe-to-dataset-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id)))
    (aws-sdk/generator/shape::to-query-params "DatasetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dataset-name)))
    (aws-sdk/generator/shape::to-query-params "DeviceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (subscribe-to-dataset-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'subscribe-to-dataset-response
                    'make-subscribe-to-dataset-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          subscribe-to-dataset-response))
   (common-lisp:append)))
(common-lisp:deftype sync-session-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (too-many-requests-exception (:copier common-lisp:nil))
   (message
    (common-lisp:error #A((20) common-lisp:base-char . ":message is required"))
    :type (common-lisp:or exception-message common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'make-too-many-requests-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-requests-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (unsubscribe-from-dataset-request (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null))
   (identity-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":identity-id is required"))
    :type (common-lisp:or identity-id common-lisp:null))
   (dataset-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":dataset-name is required"))
    :type (common-lisp:or dataset-name common-lisp:null))
   (device-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":device-id is required"))
    :type (common-lisp:or device-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'unsubscribe-from-dataset-request
                    'make-unsubscribe-from-dataset-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unsubscribe-from-dataset-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id)))
    (aws-sdk/generator/shape::to-query-params "DatasetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dataset-name)))
    (aws-sdk/generator/shape::to-query-params "DeviceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (unsubscribe-from-dataset-response (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'unsubscribe-from-dataset-response
                    'make-unsubscribe-from-dataset-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unsubscribe-from-dataset-response))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (update-records-request (:copier common-lisp:nil))
   (identity-pool-id
    (common-lisp:error
     #A((29) common-lisp:base-char . ":identity-pool-id is required"))
    :type (common-lisp:or identity-pool-id common-lisp:null))
   (identity-id
    (common-lisp:error
     #A((24) common-lisp:base-char . ":identity-id is required"))
    :type (common-lisp:or identity-id common-lisp:null))
   (dataset-name
    (common-lisp:error
     #A((25) common-lisp:base-char . ":dataset-name is required"))
    :type (common-lisp:or dataset-name common-lisp:null))
   (device-id common-lisp:nil :type
    (common-lisp:or device-id common-lisp:null))
   (record-patches common-lisp:nil :type
    (common-lisp:or record-patch-list common-lisp:null))
   (sync-session-token
    (common-lisp:error
     #A((31) common-lisp:base-char . ":sync-session-token is required"))
    :type (common-lisp:or sync-session-token common-lisp:null))
   (client-context common-lisp:nil :type
    (common-lisp:or client-context common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-records-request 'make-update-records-request))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-records-request))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdentityPoolId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-pool-id)))
    (aws-sdk/generator/shape::to-query-params "IdentityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'identity-id)))
    (aws-sdk/generator/shape::to-query-params "DatasetName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dataset-name)))
    (aws-sdk/generator/shape::to-query-params "DeviceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'device-id)))
    (aws-sdk/generator/shape::to-query-params "RecordPatches"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'record-patches)))
    (aws-sdk/generator/shape::to-query-params "SyncSessionToken"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sync-session-token)))
    (aws-sdk/generator/shape::to-query-params "ClientContext"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'client-context))))))
(common-lisp:progn
 (common-lisp:defstruct (update-records-response (:copier common-lisp:nil))
   (records common-lisp:nil :type
    (common-lisp:or record-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'update-records-response 'make-update-records-response))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          update-records-response))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Records"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'records))))))
(common-lisp:progn
 (common-lisp:defun bulk-publish
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id)
   (common-lisp:declare (common-lisp:ignorable identity-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-bulk-publish-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((12) common-lisp:base-char . "cognito-sync")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/identitypools/~a/bulkpublish"
                                                   identitypoolid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"BulkPublish")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "BulkPublishResponse" common-lisp:nil)))
 (common-lisp:export 'bulk-publish))
(common-lisp:progn
 (common-lisp:defun delete-dataset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id identity-id
                     dataset-name)
   (common-lisp:declare
    (common-lisp:ignorable identity-pool-id identity-id dataset-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-dataset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((12) common-lisp:base-char . "cognito-sync")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/identitypools/~a/identities/~a/datasets/~a"
                                                   identitypoolid identityid
                                                   datasetname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteDataset")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteDatasetResponse" common-lisp:nil)))
 (common-lisp:export 'delete-dataset))
(common-lisp:progn
 (common-lisp:defun describe-dataset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id identity-id
                     dataset-name)
   (common-lisp:declare
    (common-lisp:ignorable identity-pool-id identity-id dataset-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-dataset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((12) common-lisp:base-char . "cognito-sync")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/identitypools/~a/identities/~a/datasets/~a"
                                                   identitypoolid identityid
                                                   datasetname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeDataset")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeDatasetResponse" common-lisp:nil)))
 (common-lisp:export 'describe-dataset))
(common-lisp:progn
 (common-lisp:defun describe-identity-pool-usage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id)
   (common-lisp:declare (common-lisp:ignorable identity-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-identity-pool-usage-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((12) common-lisp:base-char . "cognito-sync")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/identitypools/~a"
                                                   identitypoolid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeIdentityPoolUsage")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeIdentityPoolUsageResponse" common-lisp:nil)))
 (common-lisp:export 'describe-identity-pool-usage))
(common-lisp:progn
 (common-lisp:defun describe-identity-usage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id identity-id)
   (common-lisp:declare (common-lisp:ignorable identity-pool-id identity-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-identity-usage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((12) common-lisp:base-char . "cognito-sync")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/identitypools/~a/identities/~a"
                                                   identitypoolid identityid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeIdentityUsage")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeIdentityUsageResponse" common-lisp:nil)))
 (common-lisp:export 'describe-identity-usage))
(common-lisp:progn
 (common-lisp:defun get-bulk-publish-details
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id)
   (common-lisp:declare (common-lisp:ignorable identity-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-bulk-publish-details-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((12) common-lisp:base-char . "cognito-sync")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/identitypools/~a/getBulkPublishDetails"
                                                   identitypoolid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetBulkPublishDetails")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetBulkPublishDetailsResponse" common-lisp:nil)))
 (common-lisp:export 'get-bulk-publish-details))
(common-lisp:progn
 (common-lisp:defun get-cognito-events
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id)
   (common-lisp:declare (common-lisp:ignorable identity-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-cognito-events-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((12) common-lisp:base-char . "cognito-sync")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/identitypools/~a/events"
                                                   identitypoolid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetCognitoEvents")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetCognitoEventsResponse" common-lisp:nil)))
 (common-lisp:export 'get-cognito-events))
(common-lisp:progn
 (common-lisp:defun get-identity-pool-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id)
   (common-lisp:declare (common-lisp:ignorable identity-pool-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-identity-pool-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((12) common-lisp:base-char . "cognito-sync")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/identitypools/~a/configuration"
                                                   identitypoolid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetIdentityPoolConfiguration")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetIdentityPoolConfigurationResponse" common-lisp:nil)))
 (common-lisp:export 'get-identity-pool-configuration))
(common-lisp:progn
 (common-lisp:defun list-datasets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id identity-id next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable identity-pool-id identity-id next-token
     max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-datasets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((12) common-lisp:base-char . "cognito-sync")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/identitypools/~a/identities/~a/datasets"
                                                   identitypoolid identityid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ListDatasets")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListDatasetsResponse" common-lisp:nil)))
 (common-lisp:export 'list-datasets))
(common-lisp:progn
 (common-lisp:defun list-identity-pool-usage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-identity-pool-usage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((12) common-lisp:base-char . "cognito-sync")
                               :method :get :params
                               (common-lisp:append
                                `(("Action" ,@"ListIdentityPoolUsage")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListIdentityPoolUsageResponse" common-lisp:nil)))
 (common-lisp:export 'list-identity-pool-usage))
(common-lisp:progn
 (common-lisp:defun list-records
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id identity-id dataset-name
                     last-sync-count next-token max-results sync-session-token)
   (common-lisp:declare
    (common-lisp:ignorable identity-pool-id identity-id dataset-name
     last-sync-count next-token max-results sync-session-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-records-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((12) common-lisp:base-char . "cognito-sync")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/identitypools/~a/identities/~a/datasets/~a/records"
                                                   identitypoolid identityid
                                                   datasetname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ListRecords")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListRecordsResponse" common-lisp:nil)))
 (common-lisp:export 'list-records))
(common-lisp:progn
 (common-lisp:defun register-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id identity-id platform
                     token)
   (common-lisp:declare
    (common-lisp:ignorable identity-pool-id identity-id platform token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-register-device-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((12) common-lisp:base-char . "cognito-sync")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/identitypools/~a/identity/~a/device"
                                                   identitypoolid identityid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"RegisterDevice")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RegisterDeviceResponse" common-lisp:nil)))
 (common-lisp:export 'register-device))
(common-lisp:progn
 (common-lisp:defun set-cognito-events
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id events)
   (common-lisp:declare (common-lisp:ignorable identity-pool-id events))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-cognito-events-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((12) common-lisp:base-char . "cognito-sync")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/identitypools/~a/events"
                                                   identitypoolid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"SetCognitoEvents")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'set-cognito-events))
(common-lisp:progn
 (common-lisp:defun set-identity-pool-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id push-sync
                     cognito-streams)
   (common-lisp:declare
    (common-lisp:ignorable identity-pool-id push-sync cognito-streams))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-set-identity-pool-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((12) common-lisp:base-char . "cognito-sync")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/identitypools/~a/configuration"
                                                   identitypoolid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"SetIdentityPoolConfiguration")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SetIdentityPoolConfigurationResponse" common-lisp:nil)))
 (common-lisp:export 'set-identity-pool-configuration))
(common-lisp:progn
 (common-lisp:defun subscribe-to-dataset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id identity-id dataset-name
                     device-id)
   (common-lisp:declare
    (common-lisp:ignorable identity-pool-id identity-id dataset-name
     device-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-subscribe-to-dataset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((12) common-lisp:base-char . "cognito-sync")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/identitypools/~a/identities/~a/datasets/~a/subscriptions/~a"
                                                   identitypoolid identityid
                                                   datasetname deviceid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"SubscribeToDataset")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SubscribeToDatasetResponse" common-lisp:nil)))
 (common-lisp:export 'subscribe-to-dataset))
(common-lisp:progn
 (common-lisp:defun unsubscribe-from-dataset
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id identity-id dataset-name
                     device-id)
   (common-lisp:declare
    (common-lisp:ignorable identity-pool-id identity-id dataset-name
     device-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-unsubscribe-from-dataset-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((12) common-lisp:base-char . "cognito-sync")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/identitypools/~a/identities/~a/datasets/~a/subscriptions/~a"
                                                   identitypoolid identityid
                                                   datasetname deviceid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UnsubscribeFromDataset")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UnsubscribeFromDatasetResponse" common-lisp:nil)))
 (common-lisp:export 'unsubscribe-from-dataset))
(common-lisp:progn
 (common-lisp:defun update-records
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identity-pool-id identity-id dataset-name
                     device-id record-patches sync-session-token
                     client-context)
   (common-lisp:declare
    (common-lisp:ignorable identity-pool-id identity-id dataset-name device-id
     record-patches sync-session-token client-context))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-records-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((12) common-lisp:base-char . "cognito-sync")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/identitypools/~a/identities/~a/datasets/~a"
                                                   identitypoolid identityid
                                                   datasetname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UpdateRecords")
                                  ("Version" ,@"2014-06-30"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UpdateRecordsResponse" common-lisp:nil)))
 (common-lisp:export 'update-records))