;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/glacier
  (:use)
  (:nicknames #:aws/glacier)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/glacier)

(common-lisp:progn
 (common-lisp:defstruct
     (abort-multipart-upload-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (upload-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":uploadid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'abort-multipart-upload-input
                    'make-abort-multipart-upload-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          abort-multipart-upload-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name)))
    (aws-sdk/generator/shape::to-query-params "uploadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-id))))))
(common-lisp:progn
 (common-lisp:defstruct (abort-vault-lock-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'abort-vault-lock-input 'make-abort-vault-lock-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          abort-vault-lock-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name))))))
(common-lisp:deftype action-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (add-tags-to-vault-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-tags-to-vault-input 'make-add-tags-to-vault-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-tags-to-vault-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (archive-creation-output (:copier common-lisp:nil))
   (location common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (checksum common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (archive-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'archive-creation-output 'make-archive-creation-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          archive-creation-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum)))
    (aws-sdk/generator/shape::to-query-params "archiveId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'archive-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (complete-multipart-upload-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (upload-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":uploadid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (archive-size common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (checksum common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'complete-multipart-upload-input
                    'make-complete-multipart-upload-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          complete-multipart-upload-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name)))
    (aws-sdk/generator/shape::to-query-params "uploadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-id)))
    (aws-sdk/generator/shape::to-query-params "archiveSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'archive-size)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum))))))
(common-lisp:progn
 (common-lisp:defstruct (complete-vault-lock-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (lock-id
    (common-lisp:error #A((19) common-lisp:base-char . ":lockid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'complete-vault-lock-input
                    'make-complete-vault-lock-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          complete-vault-lock-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name)))
    (aws-sdk/generator/shape::to-query-params "lockId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lock-id))))))
(common-lisp:progn
 (common-lisp:defstruct (create-vault-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-vault-input 'make-create-vault-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-vault-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name))))))
(common-lisp:progn
 (common-lisp:defstruct (create-vault-output (:copier common-lisp:nil))
   (location common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-vault-output 'make-create-vault-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape create-vault-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location))))))
(common-lisp:progn
 (common-lisp:defstruct (data-retrieval-policy (:copier common-lisp:nil))
   (rules common-lisp:nil :type
    (common-lisp:or data-retrieval-rules-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'data-retrieval-policy 'make-data-retrieval-policy))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          data-retrieval-policy))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Rules"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'rules))))))
(common-lisp:progn
 (common-lisp:defstruct (data-retrieval-rule (:copier common-lisp:nil))
   (strategy common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (bytes-per-hour common-lisp:nil :type
    (common-lisp:or nullable-long common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'data-retrieval-rule 'make-data-retrieval-rule))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape data-retrieval-rule))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Strategy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'strategy)))
    (aws-sdk/generator/shape::to-query-params "BytesPerHour"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'bytes-per-hour))))))
(common-lisp:progn
 (common-lisp:deftype data-retrieval-rules-list ()
   '(trivial-types:proper-list data-retrieval-rule))
 (common-lisp:defun |make-data-retrieval-rules-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list data-retrieval-rule))
   aws-sdk/generator/shape::members))
(common-lisp:deftype date-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (delete-archive-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (archive-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":archiveid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-archive-input 'make-delete-archive-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-archive-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name)))
    (aws-sdk/generator/shape::to-query-params "archiveId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'archive-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-vault-access-policy-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-vault-access-policy-input
                    'make-delete-vault-access-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-vault-access-policy-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-vault-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-vault-input 'make-delete-vault-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape delete-vault-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-vault-notifications-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-vault-notifications-input
                    'make-delete-vault-notifications-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-vault-notifications-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-job-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (job-id
    (common-lisp:error #A((18) common-lisp:base-char . ":jobid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-job-input 'make-describe-job-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape describe-job-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name)))
    (aws-sdk/generator/shape::to-query-params "jobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vault-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-vault-input 'make-describe-vault-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape describe-vault-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-vault-output (:copier common-lisp:nil))
   (vault-arn common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (last-inventory-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (number-of-archives common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (size-in-bytes common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-vault-output 'make-describe-vault-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-vault-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "VaultARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-arn)))
    (aws-sdk/generator/shape::to-query-params "VaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "LastInventoryDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'last-inventory-date)))
    (aws-sdk/generator/shape::to-query-params "NumberOfArchives"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'number-of-archives)))
    (aws-sdk/generator/shape::to-query-params "SizeInBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'size-in-bytes))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-data-retrieval-policy-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-data-retrieval-policy-input
                    'make-get-data-retrieval-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-data-retrieval-policy-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-data-retrieval-policy-output (:copier common-lisp:nil))
   (policy common-lisp:nil :type
    (common-lisp:or data-retrieval-policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-data-retrieval-policy-output
                    'make-get-data-retrieval-policy-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-data-retrieval-policy-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy))))))
(common-lisp:progn
 (common-lisp:defstruct (get-job-output-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (job-id
    (common-lisp:error #A((18) common-lisp:base-char . ":jobid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (range common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-job-output-input 'make-get-job-output-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-job-output-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name)))
    (aws-sdk/generator/shape::to-query-params "jobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id)))
    (aws-sdk/generator/shape::to-query-params "range"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'range))))))
(common-lisp:progn
 (common-lisp:defstruct (get-job-output-output (:copier common-lisp:nil))
   (body common-lisp:nil :type (common-lisp:or stream common-lisp:null))
   (checksum common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (status common-lisp:nil :type
    (common-lisp:or |httpstatus| common-lisp:null))
   (content-range common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (accept-ranges common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (content-type common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (archive-description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-job-output-output 'make-get-job-output-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-job-output-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum)))
    (aws-sdk/generator/shape::to-query-params "status"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status)))
    (aws-sdk/generator/shape::to-query-params "contentRange"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-range)))
    (aws-sdk/generator/shape::to-query-params "acceptRanges"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'accept-ranges)))
    (aws-sdk/generator/shape::to-query-params "contentType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'content-type)))
    (aws-sdk/generator/shape::to-query-params "archiveDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'archive-description))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-vault-access-policy-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-vault-access-policy-input
                    'make-get-vault-access-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-vault-access-policy-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-vault-access-policy-output (:copier common-lisp:nil))
   (policy common-lisp:nil :type
    (common-lisp:or vault-access-policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-vault-access-policy-output
                    'make-get-vault-access-policy-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-vault-access-policy-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy))))))
(common-lisp:progn
 (common-lisp:defstruct (get-vault-lock-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-vault-lock-input 'make-get-vault-lock-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape get-vault-lock-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name))))))
(common-lisp:progn
 (common-lisp:defstruct (get-vault-lock-output (:copier common-lisp:nil))
   (policy common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (state common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (expiration-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-vault-lock-output 'make-get-vault-lock-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-vault-lock-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "ExpirationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expiration-date)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-vault-notifications-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-vault-notifications-input
                    'make-get-vault-notifications-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-vault-notifications-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (get-vault-notifications-output (:copier common-lisp:nil))
   (vault-notification-config common-lisp:nil :type
    (common-lisp:or vault-notification-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'get-vault-notifications-output
                    'make-get-vault-notifications-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          get-vault-notifications-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "vaultNotificationConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-notification-config))))))
(common-lisp:progn
 (common-lisp:defstruct (glacier-job-description (:copier common-lisp:nil))
   (job-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (job-description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (action common-lisp:nil :type (common-lisp:or action-code common-lisp:null))
   (archive-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-arn common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (completed common-lisp:nil :type
    (common-lisp:or common-lisp:boolean common-lisp:null))
   (status-code common-lisp:nil :type
    (common-lisp:or status-code common-lisp:null))
   (status-message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (archive-size-in-bytes common-lisp:nil :type
    (common-lisp:or size common-lisp:null))
   (inventory-size-in-bytes common-lisp:nil :type
    (common-lisp:or size common-lisp:null))
   (snstopic common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (completion-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (sha256tree-hash common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (archive-sha256tree-hash common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (retrieval-byte-range common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (tier common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (inventory-retrieval-parameters common-lisp:nil :type
    (common-lisp:or inventory-retrieval-job-description common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'glacier-job-description 'make-glacier-job-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          glacier-job-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id)))
    (aws-sdk/generator/shape::to-query-params "JobDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-description)))
    (aws-sdk/generator/shape::to-query-params "Action"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'action)))
    (aws-sdk/generator/shape::to-query-params "ArchiveId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'archive-id)))
    (aws-sdk/generator/shape::to-query-params "VaultARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-arn)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "Completed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'completed)))
    (aws-sdk/generator/shape::to-query-params "StatusCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-code)))
    (aws-sdk/generator/shape::to-query-params "StatusMessage"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'status-message)))
    (aws-sdk/generator/shape::to-query-params "ArchiveSizeInBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'archive-size-in-bytes)))
    (aws-sdk/generator/shape::to-query-params "InventorySizeInBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'inventory-size-in-bytes)))
    (aws-sdk/generator/shape::to-query-params "SNSTopic"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snstopic)))
    (aws-sdk/generator/shape::to-query-params "CompletionDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'completion-date)))
    (aws-sdk/generator/shape::to-query-params "SHA256TreeHash"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sha256tree-hash)))
    (aws-sdk/generator/shape::to-query-params "ArchiveSHA256TreeHash"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'archive-sha256tree-hash)))
    (aws-sdk/generator/shape::to-query-params "RetrievalByteRange"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'retrieval-byte-range)))
    (aws-sdk/generator/shape::to-query-params "Tier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tier)))
    (aws-sdk/generator/shape::to-query-params "InventoryRetrievalParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'inventory-retrieval-parameters))))))
(common-lisp:progn
 (common-lisp:defstruct (initiate-job-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (job-parameters common-lisp:nil :type
    (common-lisp:or job-parameters common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'initiate-job-input 'make-initiate-job-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape initiate-job-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name)))
    (aws-sdk/generator/shape::to-query-params "jobParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-parameters))))))
(common-lisp:progn
 (common-lisp:defstruct (initiate-job-output (:copier common-lisp:nil))
   (location common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (job-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'initiate-job-output 'make-initiate-job-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape initiate-job-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "jobId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (initiate-multipart-upload-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (archive-description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (part-size common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'initiate-multipart-upload-input
                    'make-initiate-multipart-upload-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          initiate-multipart-upload-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name)))
    (aws-sdk/generator/shape::to-query-params "archiveDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'archive-description)))
    (aws-sdk/generator/shape::to-query-params "partSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'part-size))))))
(common-lisp:progn
 (common-lisp:defstruct
     (initiate-multipart-upload-output (:copier common-lisp:nil))
   (location common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (upload-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'initiate-multipart-upload-output
                    'make-initiate-multipart-upload-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          initiate-multipart-upload-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "location"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'location)))
    (aws-sdk/generator/shape::to-query-params "uploadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-id))))))
(common-lisp:progn
 (common-lisp:defstruct (initiate-vault-lock-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (policy common-lisp:nil :type
    (common-lisp:or vault-lock-policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'initiate-vault-lock-input
                    'make-initiate-vault-lock-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          initiate-vault-lock-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name)))
    (aws-sdk/generator/shape::to-query-params "policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy))))))
(common-lisp:progn
 (common-lisp:defstruct (initiate-vault-lock-output (:copier common-lisp:nil))
   (lock-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'initiate-vault-lock-output
                    'make-initiate-vault-lock-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          initiate-vault-lock-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "lockId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lock-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (insufficient-capacity-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'insufficient-capacity-exception
                    'make-insufficient-capacity-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          insufficient-capacity-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-parameter-value-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-value-exception
                    'make-invalid-parameter-value-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-parameter-value-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (inventory-retrieval-job-description (:copier common-lisp:nil))
   (format common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (start-date common-lisp:nil :type
    (common-lisp:or date-time common-lisp:null))
   (end-date common-lisp:nil :type (common-lisp:or date-time common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'inventory-retrieval-job-description
                    'make-inventory-retrieval-job-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          inventory-retrieval-job-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Format"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'format)))
    (aws-sdk/generator/shape::to-query-params "StartDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-date)))
    (aws-sdk/generator/shape::to-query-params "EndDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-date)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct
     (inventory-retrieval-job-input (:copier common-lisp:nil))
   (start-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (end-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'inventory-retrieval-job-input
                    'make-inventory-retrieval-job-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          inventory-retrieval-job-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "StartDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-date)))
    (aws-sdk/generator/shape::to-query-params "EndDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'end-date)))
    (aws-sdk/generator/shape::to-query-params "Limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:deftype job-list ()
   '(trivial-types:proper-list glacier-job-description))
 (common-lisp:defun |make-job-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list glacier-job-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (job-parameters (:copier common-lisp:nil))
   (format common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (type common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (archive-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (snstopic common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (retrieval-byte-range common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (tier common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (inventory-retrieval-parameters common-lisp:nil :type
    (common-lisp:or inventory-retrieval-job-input common-lisp:null)))
 (common-lisp:export (common-lisp:list 'job-parameters 'make-job-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape job-parameters))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Format"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'format)))
    (aws-sdk/generator/shape::to-query-params "Type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "ArchiveId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'archive-id)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "SNSTopic"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snstopic)))
    (aws-sdk/generator/shape::to-query-params "RetrievalByteRange"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'retrieval-byte-range)))
    (aws-sdk/generator/shape::to-query-params "Tier"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tier)))
    (aws-sdk/generator/shape::to-query-params "InventoryRetrievalParameters"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'inventory-retrieval-parameters))))))
(common-lisp:progn
 (common-lisp:defstruct (limit-exceeded-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception 'make-limit-exceeded-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          limit-exceeded-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct (list-jobs-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (statuscode common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (completed common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export (common-lisp:list 'list-jobs-input 'make-list-jobs-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-jobs-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit)))
    (aws-sdk/generator/shape::to-query-params "marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "statuscode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'statuscode)))
    (aws-sdk/generator/shape::to-query-params "completed"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'completed))))))
(common-lisp:progn
 (common-lisp:defstruct (list-jobs-output (:copier common-lisp:nil))
   (job-list common-lisp:nil :type (common-lisp:or job-list common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-jobs-output 'make-list-jobs-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-jobs-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "JobList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'job-list)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-multipart-uploads-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-multipart-uploads-input
                    'make-list-multipart-uploads-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-multipart-uploads-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name)))
    (aws-sdk/generator/shape::to-query-params "marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-multipart-uploads-output (:copier common-lisp:nil))
   (uploads-list common-lisp:nil :type
    (common-lisp:or uploads-list common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-multipart-uploads-output
                    'make-list-multipart-uploads-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-multipart-uploads-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "UploadsList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'uploads-list)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct (list-parts-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (upload-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":uploadid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-parts-input 'make-list-parts-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-parts-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name)))
    (aws-sdk/generator/shape::to-query-params "uploadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-id)))
    (aws-sdk/generator/shape::to-query-params "marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct (list-parts-output (:copier common-lisp:nil))
   (multipart-upload-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-arn common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (archive-description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (part-size-in-bytes common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (parts common-lisp:nil :type (common-lisp:or part-list common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-parts-output 'make-list-parts-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-parts-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MultipartUploadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'multipart-upload-id)))
    (aws-sdk/generator/shape::to-query-params "VaultARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-arn)))
    (aws-sdk/generator/shape::to-query-params "ArchiveDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'archive-description)))
    (aws-sdk/generator/shape::to-query-params "PartSizeInBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'part-size-in-bytes)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date)))
    (aws-sdk/generator/shape::to-query-params "Parts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'parts)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-provisioned-capacity-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-provisioned-capacity-input
                    'make-list-provisioned-capacity-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-provisioned-capacity-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (list-provisioned-capacity-output (:copier common-lisp:nil))
   (provisioned-capacity-list common-lisp:nil :type
    (common-lisp:or provisioned-capacity-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-provisioned-capacity-output
                    'make-list-provisioned-capacity-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-provisioned-capacity-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "ProvisionedCapacityList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'provisioned-capacity-list))))))
(common-lisp:progn
 (common-lisp:defstruct (list-tags-for-vault-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-vault-input
                    'make-list-tags-for-vault-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-tags-for-vault-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name))))))
(common-lisp:progn
 (common-lisp:defstruct (list-tags-for-vault-output (:copier common-lisp:nil))
   (tags common-lisp:nil :type (common-lisp:or tag-map common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-vault-output
                    'make-list-tags-for-vault-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          list-tags-for-vault-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (list-vaults-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (limit common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-vaults-input 'make-list-vaults-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-vaults-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "limit"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limit))))))
(common-lisp:progn
 (common-lisp:defstruct (list-vaults-output (:copier common-lisp:nil))
   (vault-list common-lisp:nil :type
    (common-lisp:or vault-list common-lisp:null))
   (marker common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'list-vaults-output 'make-list-vaults-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape list-vaults-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "VaultList"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-list)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker))))))
(common-lisp:progn
 (common-lisp:defstruct
     (missing-parameter-value-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'missing-parameter-value-exception
                    'make-missing-parameter-value-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          missing-parameter-value-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:deftype notification-event-list ()
   '(trivial-types:proper-list common-lisp:string))
 (common-lisp:defun |make-notification-event-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list common-lisp:string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype nullable-long () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype part-list ()
   '(trivial-types:proper-list part-list-element))
 (common-lisp:defun |make-part-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list part-list-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (part-list-element (:copier common-lisp:nil))
   (range-in-bytes common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (sha256tree-hash common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'part-list-element 'make-part-list-element))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape part-list-element))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "RangeInBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'range-in-bytes)))
    (aws-sdk/generator/shape::to-query-params "SHA256TreeHash"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sha256tree-hash))))))
(common-lisp:progn
 (common-lisp:defstruct (policy-enforced-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'policy-enforced-exception
                    'make-policy-enforced-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          policy-enforced-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (provisioned-capacity-description (:copier common-lisp:nil))
   (capacity-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (start-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (expiration-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'provisioned-capacity-description
                    'make-provisioned-capacity-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          provisioned-capacity-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CapacityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'capacity-id)))
    (aws-sdk/generator/shape::to-query-params "StartDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'start-date)))
    (aws-sdk/generator/shape::to-query-params "ExpirationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'expiration-date))))))
(common-lisp:progn
 (common-lisp:deftype provisioned-capacity-list ()
   '(trivial-types:proper-list provisioned-capacity-description))
 (common-lisp:defun |make-provisioned-capacity-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            provisioned-capacity-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (purchase-provisioned-capacity-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'purchase-provisioned-capacity-input
                    'make-purchase-provisioned-capacity-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          purchase-provisioned-capacity-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (purchase-provisioned-capacity-output (:copier common-lisp:nil))
   (capacity-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'purchase-provisioned-capacity-output
                    'make-purchase-provisioned-capacity-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          purchase-provisioned-capacity-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "capacityId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'capacity-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-tags-from-vault-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (tag-keys common-lisp:nil :type
    (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-tags-from-vault-input
                    'make-remove-tags-from-vault-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          remove-tags-from-vault-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name)))
    (aws-sdk/generator/shape::to-query-params "TagKeys"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-keys))))))
(common-lisp:progn
 (common-lisp:defstruct (request-timeout-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'request-timeout-exception
                    'make-request-timeout-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          request-timeout-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (resource-not-found-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'make-resource-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          resource-not-found-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (service-unavailable-exception (:copier common-lisp:nil))
   (type common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (code common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (message common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'make-service-unavailable-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          service-unavailable-exception))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "type"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'type)))
    (aws-sdk/generator/shape::to-query-params "code"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'code)))
    (aws-sdk/generator/shape::to-query-params "message"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'message))))))
(common-lisp:progn
 (common-lisp:defstruct
     (set-data-retrieval-policy-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (policy common-lisp:nil :type
    (common-lisp:or data-retrieval-policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-data-retrieval-policy-input
                    'make-set-data-retrieval-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-data-retrieval-policy-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "Policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy))))))
(common-lisp:progn
 (common-lisp:defstruct
     (set-vault-access-policy-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (policy common-lisp:nil :type
    (common-lisp:or vault-access-policy common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-vault-access-policy-input
                    'make-set-vault-access-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-vault-access-policy-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name)))
    (aws-sdk/generator/shape::to-query-params "policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy))))))
(common-lisp:progn
 (common-lisp:defstruct
     (set-vault-notifications-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-notification-config common-lisp:nil :type
    (common-lisp:or vault-notification-config common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-vault-notifications-input
                    'make-set-vault-notifications-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-vault-notifications-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name)))
    (aws-sdk/generator/shape::to-query-params "vaultNotificationConfig"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-notification-config))))))
(common-lisp:deftype size () 'common-lisp:integer)
(common-lisp:deftype status-code () 'common-lisp:string)
(common-lisp:deftype stream ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list ()
   '(trivial-types:proper-list common-lisp:string))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list common-lisp:string))
   aws-sdk/generator/shape::members))
(common-lisp:defstruct
    (tag-map
     (:constructor |make-tag-map|
      (aws-sdk/generator/shape::key aws-sdk/generator/shape::value)))
  aws-sdk/generator/shape::key
  aws-sdk/generator/shape::value)
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (upload-archive-input (:copier common-lisp:nil))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (archive-description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (checksum common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or stream common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'upload-archive-input 'make-upload-archive-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape upload-archive-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name)))
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "archiveDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'archive-description)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum)))
    (aws-sdk/generator/shape::to-query-params "body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body))))))
(common-lisp:progn
 (common-lisp:defstruct (upload-list-element (:copier common-lisp:nil))
   (multipart-upload-id common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (vault-arn common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (archive-description common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (part-size-in-bytes common-lisp:nil :type
    (common-lisp:or common-lisp:integer common-lisp:null))
   (creation-date common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'upload-list-element 'make-upload-list-element))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape upload-list-element))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "MultipartUploadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'multipart-upload-id)))
    (aws-sdk/generator/shape::to-query-params "VaultARN"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-arn)))
    (aws-sdk/generator/shape::to-query-params "ArchiveDescription"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'archive-description)))
    (aws-sdk/generator/shape::to-query-params "PartSizeInBytes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'part-size-in-bytes)))
    (aws-sdk/generator/shape::to-query-params "CreationDate"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'creation-date))))))
(common-lisp:progn
 (common-lisp:defstruct (upload-multipart-part-input (:copier common-lisp:nil))
   (account-id
    (common-lisp:error
     #A((22) common-lisp:base-char . ":accountid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (vault-name
    (common-lisp:error
     #A((22) common-lisp:base-char . ":vaultname is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (upload-id
    (common-lisp:error
     #A((21) common-lisp:base-char . ":uploadid is required"))
    :type (common-lisp:or common-lisp:string common-lisp:null))
   (checksum common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (range common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (body common-lisp:nil :type (common-lisp:or stream common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'upload-multipart-part-input
                    'make-upload-multipart-part-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          upload-multipart-part-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "accountId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'account-id)))
    (aws-sdk/generator/shape::to-query-params "vaultName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vault-name)))
    (aws-sdk/generator/shape::to-query-params "uploadId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'upload-id)))
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum)))
    (aws-sdk/generator/shape::to-query-params "range"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'range)))
    (aws-sdk/generator/shape::to-query-params "body"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'body))))))
(common-lisp:progn
 (common-lisp:defstruct
     (upload-multipart-part-output (:copier common-lisp:nil))
   (checksum common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'upload-multipart-part-output
                    'make-upload-multipart-part-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          upload-multipart-part-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "checksum"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'checksum))))))
(common-lisp:progn
 (common-lisp:deftype uploads-list ()
   '(trivial-types:proper-list upload-list-element))
 (common-lisp:defun |make-uploads-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list upload-list-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (vault-access-policy (:copier common-lisp:nil))
   (policy common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'vault-access-policy 'make-vault-access-policy))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape vault-access-policy))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy))))))
(common-lisp:progn
 (common-lisp:deftype vault-list ()
   '(trivial-types:proper-list describe-vault-output))
 (common-lisp:defun |make-vault-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list describe-vault-output))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (vault-lock-policy (:copier common-lisp:nil))
   (policy common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'vault-lock-policy 'make-vault-lock-policy))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape vault-lock-policy))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Policy"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy))))))
(common-lisp:progn
 (common-lisp:defstruct (vault-notification-config (:copier common-lisp:nil))
   (snstopic common-lisp:nil :type
    (common-lisp:or common-lisp:string common-lisp:null))
   (events common-lisp:nil :type
    (common-lisp:or notification-event-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'vault-notification-config
                    'make-vault-notification-config))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          vault-notification-config))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SNSTopic"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'snstopic)))
    (aws-sdk/generator/shape::to-query-params "Events"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'events))))))
common-lisp:nil
(common-lisp:deftype |httpstatus| () 'common-lisp:integer)
common-lisp:nil
common-lisp:nil
(common-lisp:progn
 (common-lisp:defun abort-multipart-upload
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name upload-id)
   (common-lisp:declare
    (common-lisp:ignorable account-id vault-name upload-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-abort-multipart-upload-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/multipart-uploads/~a"
                                                   accountid vaultname
                                                   uploadid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"AbortMultipartUpload")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'abort-multipart-upload))
(common-lisp:progn
 (common-lisp:defun abort-vault-lock
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-abort-vault-lock-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/lock-policy"
                                                   accountid vaultname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"AbortVaultLock")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'abort-vault-lock))
(common-lisp:progn
 (common-lisp:defun add-tags-to-vault
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name tags)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-tags-to-vault-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/tags?operation=add"
                                                   accountid vaultname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"AddTagsToVault")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'add-tags-to-vault))
(common-lisp:progn
 (common-lisp:defun complete-multipart-upload
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name upload-id
                     archive-size checksum)
   (common-lisp:declare
    (common-lisp:ignorable account-id vault-name upload-id archive-size
     checksum))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-complete-multipart-upload-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/multipart-uploads/~a"
                                                   accountid vaultname
                                                   uploadid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CompleteMultipartUpload")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ArchiveCreationOutput" common-lisp:nil)))
 (common-lisp:export 'complete-multipart-upload))
(common-lisp:progn
 (common-lisp:defun complete-vault-lock
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name lock-id)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name lock-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-complete-vault-lock-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/lock-policy/~a"
                                                   accountid vaultname lockid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CompleteVaultLock")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'complete-vault-lock))
(common-lisp:progn
 (common-lisp:defun create-vault
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-vault-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a" accountid
                                                   vaultname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"CreateVault")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateVaultOutput" common-lisp:nil)))
 (common-lisp:export 'create-vault))
(common-lisp:progn
 (common-lisp:defun delete-archive
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name archive-id)
   (common-lisp:declare
    (common-lisp:ignorable account-id vault-name archive-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-archive-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/archives/~a"
                                                   accountid vaultname
                                                   archiveid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteArchive")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-archive))
(common-lisp:progn
 (common-lisp:defun delete-vault
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-vault-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a" accountid
                                                   vaultname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteVault")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-vault))
(common-lisp:progn
 (common-lisp:defun delete-vault-access-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-vault-access-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/access-policy"
                                                   accountid vaultname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteVaultAccessPolicy")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-vault-access-policy))
(common-lisp:progn
 (common-lisp:defun delete-vault-notifications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-vault-notifications-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :delete :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/notification-configuration"
                                                   accountid vaultname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteVaultNotifications")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'delete-vault-notifications))
(common-lisp:progn
 (common-lisp:defun describe-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name job-id)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-job-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/jobs/~a"
                                                   accountid vaultname jobid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeJob")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GlacierJobDescription" common-lisp:nil)))
 (common-lisp:export 'describe-job))
(common-lisp:progn
 (common-lisp:defun describe-vault
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-vault-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a" accountid
                                                   vaultname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeVault")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeVaultOutput" common-lisp:nil)))
 (common-lisp:export 'describe-vault))
(common-lisp:progn
 (common-lisp:defun get-data-retrieval-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id)
   (common-lisp:declare (common-lisp:ignorable account-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-data-retrieval-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/policies/data-retrieval"
                                                   accountid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetDataRetrievalPolicy")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetDataRetrievalPolicyOutput" common-lisp:nil)))
 (common-lisp:export 'get-data-retrieval-policy))
(common-lisp:progn
 (common-lisp:defun get-job-output
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name job-id range)
   (common-lisp:declare
    (common-lisp:ignorable account-id vault-name job-id range))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-job-output-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/jobs/~a/output"
                                                   accountid vaultname jobid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetJobOutput")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetJobOutputOutput" common-lisp:nil)))
 (common-lisp:export 'get-job-output))
(common-lisp:progn
 (common-lisp:defun get-vault-access-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-vault-access-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/access-policy"
                                                   accountid vaultname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetVaultAccessPolicy")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetVaultAccessPolicyOutput" common-lisp:nil)))
 (common-lisp:export 'get-vault-access-policy))
(common-lisp:progn
 (common-lisp:defun get-vault-lock
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-vault-lock-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/lock-policy"
                                                   accountid vaultname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetVaultLock")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetVaultLockOutput" common-lisp:nil)))
 (common-lisp:export 'get-vault-lock))
(common-lisp:progn
 (common-lisp:defun get-vault-notifications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-vault-notifications-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/notification-configuration"
                                                   accountid vaultname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"GetVaultNotifications")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "GetVaultNotificationsOutput" common-lisp:nil)))
 (common-lisp:export 'get-vault-notifications))
(common-lisp:progn
 (common-lisp:defun initiate-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name job-parameters)
   (common-lisp:declare
    (common-lisp:ignorable account-id vault-name job-parameters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-initiate-job-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/jobs"
                                                   accountid vaultname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"InitiateJob")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "InitiateJobOutput" common-lisp:nil)))
 (common-lisp:export 'initiate-job))
(common-lisp:progn
 (common-lisp:defun initiate-multipart-upload
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name archive-description
                     part-size)
   (common-lisp:declare
    (common-lisp:ignorable account-id vault-name archive-description
     part-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-initiate-multipart-upload-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/multipart-uploads"
                                                   accountid vaultname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"InitiateMultipartUpload")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "InitiateMultipartUploadOutput" common-lisp:nil)))
 (common-lisp:export 'initiate-multipart-upload))
(common-lisp:progn
 (common-lisp:defun initiate-vault-lock
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name policy)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-initiate-vault-lock-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/lock-policy"
                                                   accountid vaultname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"InitiateVaultLock")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "InitiateVaultLockOutput" common-lisp:nil)))
 (common-lisp:export 'initiate-vault-lock))
(common-lisp:progn
 (common-lisp:defun list-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name limit marker
                     statuscode completed)
   (common-lisp:declare
    (common-lisp:ignorable account-id vault-name limit marker statuscode
     completed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-jobs-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/jobs"
                                                   accountid vaultname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ListJobs")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListJobsOutput" common-lisp:nil)))
 (common-lisp:export 'list-jobs))
(common-lisp:progn
 (common-lisp:defun list-multipart-uploads
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name marker limit)
   (common-lisp:declare
    (common-lisp:ignorable account-id vault-name marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-multipart-uploads-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/multipart-uploads"
                                                   accountid vaultname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ListMultipartUploads")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListMultipartUploadsOutput" common-lisp:nil)))
 (common-lisp:export 'list-multipart-uploads))
(common-lisp:progn
 (common-lisp:defun list-parts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name upload-id marker
                     limit)
   (common-lisp:declare
    (common-lisp:ignorable account-id vault-name upload-id marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-parts-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/multipart-uploads/~a"
                                                   accountid vaultname
                                                   uploadid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ListParts")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListPartsOutput" common-lisp:nil)))
 (common-lisp:export 'list-parts))
(common-lisp:progn
 (common-lisp:defun list-provisioned-capacity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id)
   (common-lisp:declare (common-lisp:ignorable account-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-provisioned-capacity-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/provisioned-capacity"
                                                   accountid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ListProvisionedCapacity")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListProvisionedCapacityOutput" common-lisp:nil)))
 (common-lisp:export 'list-provisioned-capacity))
(common-lisp:progn
 (common-lisp:defun list-tags-for-vault
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-vault-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :get :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/tags"
                                                   accountid vaultname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ListTagsForVault")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListTagsForVaultOutput" common-lisp:nil)))
 (common-lisp:export 'list-tags-for-vault))
(common-lisp:progn
 (common-lisp:defun list-vaults
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id marker limit)
   (common-lisp:declare (common-lisp:ignorable account-id marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-vaults-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :get :path
                               (common-lisp:format common-lisp:nil "/~a/vaults"
                                                   accountid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"ListVaults")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ListVaultsOutput" common-lisp:nil)))
 (common-lisp:export 'list-vaults))
(common-lisp:progn
 (common-lisp:defun purchase-provisioned-capacity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id)
   (common-lisp:declare (common-lisp:ignorable account-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-purchase-provisioned-capacity-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/provisioned-capacity"
                                                   accountid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"PurchaseProvisionedCapacity")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "PurchaseProvisionedCapacityOutput" common-lisp:nil)))
 (common-lisp:export 'purchase-provisioned-capacity))
(common-lisp:progn
 (common-lisp:defun remove-tags-from-vault
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name tag-keys)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-tags-from-vault-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/tags?operation=remove"
                                                   accountid vaultname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"RemoveTagsFromVault")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'remove-tags-from-vault))
(common-lisp:progn
 (common-lisp:defun set-data-retrieval-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id policy)
   (common-lisp:declare (common-lisp:ignorable account-id policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-data-retrieval-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/policies/data-retrieval"
                                                   accountid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"SetDataRetrievalPolicy")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'set-data-retrieval-policy))
(common-lisp:progn
 (common-lisp:defun set-vault-access-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name policy)
   (common-lisp:declare (common-lisp:ignorable account-id vault-name policy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-vault-access-policy-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/access-policy"
                                                   accountid vaultname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"SetVaultAccessPolicy")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'set-vault-access-policy))
(common-lisp:progn
 (common-lisp:defun set-vault-notifications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name
                     vault-notification-config)
   (common-lisp:declare
    (common-lisp:ignorable account-id vault-name vault-notification-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-vault-notifications-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/notification-configuration"
                                                   accountid vaultname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"SetVaultNotifications")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      common-lisp:nil common-lisp:nil)))
 (common-lisp:export 'set-vault-notifications))
(common-lisp:progn
 (common-lisp:defun upload-archive
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key vault-name account-id archive-description
                     checksum body)
   (common-lisp:declare
    (common-lisp:ignorable vault-name account-id archive-description checksum
     body))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-upload-archive-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :post :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/archives"
                                                   accountid vaultname)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UploadArchive")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ArchiveCreationOutput" common-lisp:nil)))
 (common-lisp:export 'upload-archive))
(common-lisp:progn
 (common-lisp:defun upload-multipart-part
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-id vault-name upload-id checksum
                     range body)
   (common-lisp:declare
    (common-lisp:ignorable account-id vault-name upload-id checksum range
     body))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-upload-multipart-part-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((7) common-lisp:base-char . "glacier")
                               :method :put :path
                               (common-lisp:format common-lisp:nil
                                                   "/~a/vaults/~a/multipart-uploads/~a"
                                                   accountid vaultname
                                                   uploadid)
                               :params
                               (common-lisp:append
                                `(("Action" ,@"UploadMultipartPart")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "UploadMultipartPartOutput" common-lisp:nil)))
 (common-lisp:export 'upload-multipart-part))