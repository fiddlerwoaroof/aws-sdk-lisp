;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/elasticloadbalancing
  (:use)
  (:nicknames #:aws/elasticloadbalancing)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api))
(common-lisp:in-package #:aws-sdk/services/elasticloadbalancing)

(common-lisp:progn
 (common-lisp:defstruct (access-log (:copier common-lisp:nil))
   (enabled
    (common-lisp:error #A((20) common-lisp:base-char . ":enabled is required"))
    :type (common-lisp:or access-log-enabled common-lisp:null))
   (s3bucket-name common-lisp:nil :type
    (common-lisp:or s3bucket-name common-lisp:null))
   (emit-interval common-lisp:nil :type
    (common-lisp:or access-log-interval common-lisp:null))
   (s3bucket-prefix common-lisp:nil :type
    (common-lisp:or access-log-prefix common-lisp:null)))
 (common-lisp:export (common-lisp:list 'access-log 'make-access-log))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape access-log))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "S3BucketName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3bucket-name)))
    (aws-sdk/generator/shape::to-query-params "EmitInterval"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'emit-interval)))
    (aws-sdk/generator/shape::to-query-params "S3BucketPrefix"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                's3bucket-prefix))))))
(common-lisp:deftype access-log-enabled () 'common-lisp:boolean)
(common-lisp:deftype access-log-interval () 'common-lisp:integer)
(common-lisp:deftype access-log-prefix () 'common-lisp:string)
(common-lisp:deftype access-point-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (access-point-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'access-point-not-found-exception
                    'make-access-point-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          access-point-not-found-exception))
   (common-lisp:append)))
(common-lisp:deftype access-point-port () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (add-availability-zones-input (:copier common-lisp:nil))
   (load-balancer-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-name is required"))
    :type (common-lisp:or access-point-name common-lisp:null))
   (availability-zones
    (common-lisp:error
     #A((31) common-lisp:base-char . ":availability-zones is required"))
    :type (common-lisp:or availability-zones common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-availability-zones-input
                    'make-add-availability-zones-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-availability-zones-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "AvailabilityZones"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zones))))))
(common-lisp:progn
 (common-lisp:defstruct
     (add-availability-zones-output (:copier common-lisp:nil))
   (availability-zones common-lisp:nil :type
    (common-lisp:or availability-zones common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'add-availability-zones-output
                    'make-add-availability-zones-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          add-availability-zones-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AvailabilityZones"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zones))))))
(common-lisp:progn
 (common-lisp:defstruct (add-tags-input (:copier common-lisp:nil))
   (load-balancer-names
    (common-lisp:error
     #A((32) common-lisp:base-char . ":load-balancer-names is required"))
    :type (common-lisp:or load-balancer-names common-lisp:null))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'add-tags-input 'make-add-tags-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape add-tags-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-names)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (add-tags-output (:copier common-lisp:nil)))
 (common-lisp:export (common-lisp:list 'add-tags-output 'make-add-tags-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape add-tags-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (additional-attribute (:copier common-lisp:nil))
   (key common-lisp:nil :type
    (common-lisp:or additional-attribute-key common-lisp:null))
   (value common-lisp:nil :type
    (common-lisp:or additional-attribute-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'additional-attribute 'make-additional-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape additional-attribute))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:deftype additional-attribute-key () 'common-lisp:string)
(common-lisp:deftype additional-attribute-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype additional-attributes ()
   '(trivial-types:proper-list additional-attribute))
 (common-lisp:defun |make-additional-attributes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list additional-attribute))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype app-cookie-stickiness-policies ()
   '(trivial-types:proper-list app-cookie-stickiness-policy))
 (common-lisp:defun |make-app-cookie-stickiness-policies|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            app-cookie-stickiness-policy))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (app-cookie-stickiness-policy (:copier common-lisp:nil))
   (policy-name common-lisp:nil :type
    (common-lisp:or policy-name common-lisp:null))
   (cookie-name common-lisp:nil :type
    (common-lisp:or cookie-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'app-cookie-stickiness-policy
                    'make-app-cookie-stickiness-policy))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          app-cookie-stickiness-policy))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-name)))
    (aws-sdk/generator/shape::to-query-params "CookieName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cookie-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (apply-security-groups-to-load-balancer-input (:copier common-lisp:nil))
   (load-balancer-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-name is required"))
    :type (common-lisp:or access-point-name common-lisp:null))
   (security-groups
    (common-lisp:error
     #A((28) common-lisp:base-char . ":security-groups is required"))
    :type (common-lisp:or security-groups common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'apply-security-groups-to-load-balancer-input
                    'make-apply-security-groups-to-load-balancer-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          apply-security-groups-to-load-balancer-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "SecurityGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-groups))))))
(common-lisp:progn
 (common-lisp:defstruct
     (apply-security-groups-to-load-balancer-output (:copier common-lisp:nil))
   (security-groups common-lisp:nil :type
    (common-lisp:or security-groups common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'apply-security-groups-to-load-balancer-output
                    'make-apply-security-groups-to-load-balancer-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          apply-security-groups-to-load-balancer-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "SecurityGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-groups))))))
(common-lisp:progn
 (common-lisp:defstruct
     (attach-load-balancer-to-subnets-input (:copier common-lisp:nil))
   (load-balancer-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-name is required"))
    :type (common-lisp:or access-point-name common-lisp:null))
   (subnets
    (common-lisp:error #A((20) common-lisp:base-char . ":subnets is required"))
    :type (common-lisp:or subnets common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attach-load-balancer-to-subnets-input
                    'make-attach-load-balancer-to-subnets-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attach-load-balancer-to-subnets-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "Subnets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnets))))))
(common-lisp:progn
 (common-lisp:defstruct
     (attach-load-balancer-to-subnets-output (:copier common-lisp:nil))
   (subnets common-lisp:nil :type (common-lisp:or subnets common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'attach-load-balancer-to-subnets-output
                    'make-attach-load-balancer-to-subnets-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          attach-load-balancer-to-subnets-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Subnets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnets))))))
(common-lisp:deftype attribute-name () 'common-lisp:string)
(common-lisp:deftype attribute-type () 'common-lisp:string)
(common-lisp:deftype attribute-value () 'common-lisp:string)
(common-lisp:deftype availability-zone () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype availability-zones ()
   '(trivial-types:proper-list availability-zone))
 (common-lisp:defun |make-availability-zones|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list availability-zone))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (backend-server-description (:copier common-lisp:nil))
   (instance-port common-lisp:nil :type
    (common-lisp:or instance-port common-lisp:null))
   (policy-names common-lisp:nil :type
    (common-lisp:or policy-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'backend-server-description
                    'make-backend-server-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          backend-server-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstancePort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-port)))
    (aws-sdk/generator/shape::to-query-params "PolicyNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-names))))))
(common-lisp:progn
 (common-lisp:deftype backend-server-descriptions ()
   '(trivial-types:proper-list backend-server-description))
 (common-lisp:defun |make-backend-server-descriptions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            backend-server-description))
   aws-sdk/generator/shape::members))
(common-lisp:deftype cardinality () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (certificate-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'certificate-not-found-exception
                    'make-certificate-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          certificate-not-found-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (configure-health-check-input (:copier common-lisp:nil))
   (load-balancer-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-name is required"))
    :type (common-lisp:or access-point-name common-lisp:null))
   (health-check
    (common-lisp:error
     #A((25) common-lisp:base-char . ":health-check is required"))
    :type (common-lisp:or health-check common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'configure-health-check-input
                    'make-configure-health-check-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          configure-health-check-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "HealthCheck"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check))))))
(common-lisp:progn
 (common-lisp:defstruct
     (configure-health-check-output (:copier common-lisp:nil))
   (health-check common-lisp:nil :type
    (common-lisp:or health-check common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'configure-health-check-output
                    'make-configure-health-check-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          configure-health-check-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "HealthCheck"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check))))))
(common-lisp:progn
 (common-lisp:defstruct (connection-draining (:copier common-lisp:nil))
   (enabled
    (common-lisp:error #A((20) common-lisp:base-char . ":enabled is required"))
    :type (common-lisp:or connection-draining-enabled common-lisp:null))
   (timeout common-lisp:nil :type
    (common-lisp:or connection-draining-timeout common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'connection-draining 'make-connection-draining))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape connection-draining))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled)))
    (aws-sdk/generator/shape::to-query-params "Timeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout))))))
(common-lisp:deftype connection-draining-enabled () 'common-lisp:boolean)
(common-lisp:deftype connection-draining-timeout () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (connection-settings (:copier common-lisp:nil))
   (idle-timeout
    (common-lisp:error
     #A((25) common-lisp:base-char . ":idle-timeout is required"))
    :type (common-lisp:or idle-timeout common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'connection-settings 'make-connection-settings))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape connection-settings))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "IdleTimeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'idle-timeout))))))
(common-lisp:deftype cookie-expiration-period () 'common-lisp:integer)
(common-lisp:deftype cookie-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (create-access-point-input (:copier common-lisp:nil))
   (load-balancer-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-name is required"))
    :type (common-lisp:or access-point-name common-lisp:null))
   (listeners
    (common-lisp:error
     #A((22) common-lisp:base-char . ":listeners is required"))
    :type (common-lisp:or listeners common-lisp:null))
   (availability-zones common-lisp:nil :type
    (common-lisp:or availability-zones common-lisp:null))
   (subnets common-lisp:nil :type (common-lisp:or subnets common-lisp:null))
   (security-groups common-lisp:nil :type
    (common-lisp:or security-groups common-lisp:null))
   (scheme common-lisp:nil :type
    (common-lisp:or load-balancer-scheme common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-access-point-input
                    'make-create-access-point-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-access-point-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "Listeners"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'listeners)))
    (aws-sdk/generator/shape::to-query-params "AvailabilityZones"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zones)))
    (aws-sdk/generator/shape::to-query-params "Subnets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnets)))
    (aws-sdk/generator/shape::to-query-params "SecurityGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-groups)))
    (aws-sdk/generator/shape::to-query-params "Scheme"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheme)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (create-access-point-output (:copier common-lisp:nil))
   (dnsname common-lisp:nil :type (common-lisp:or dnsname common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-access-point-output
                    'make-create-access-point-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-access-point-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "DNSName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dnsname))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-app-cookie-stickiness-policy-input (:copier common-lisp:nil))
   (load-balancer-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-name is required"))
    :type (common-lisp:or access-point-name common-lisp:null))
   (policy-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":policy-name is required"))
    :type (common-lisp:or policy-name common-lisp:null))
   (cookie-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":cookie-name is required"))
    :type (common-lisp:or cookie-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-app-cookie-stickiness-policy-input
                    'make-create-app-cookie-stickiness-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-app-cookie-stickiness-policy-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "PolicyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-name)))
    (aws-sdk/generator/shape::to-query-params "CookieName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cookie-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-app-cookie-stickiness-policy-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-app-cookie-stickiness-policy-output
                    'make-create-app-cookie-stickiness-policy-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-app-cookie-stickiness-policy-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-lbcookie-stickiness-policy-input (:copier common-lisp:nil))
   (load-balancer-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-name is required"))
    :type (common-lisp:or access-point-name common-lisp:null))
   (policy-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":policy-name is required"))
    :type (common-lisp:or policy-name common-lisp:null))
   (cookie-expiration-period common-lisp:nil :type
    (common-lisp:or cookie-expiration-period common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-lbcookie-stickiness-policy-input
                    'make-create-lbcookie-stickiness-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-lbcookie-stickiness-policy-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "PolicyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-name)))
    (aws-sdk/generator/shape::to-query-params "CookieExpirationPeriod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cookie-expiration-period))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-lbcookie-stickiness-policy-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-lbcookie-stickiness-policy-output
                    'make-create-lbcookie-stickiness-policy-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-lbcookie-stickiness-policy-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-load-balancer-listener-input (:copier common-lisp:nil))
   (load-balancer-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-name is required"))
    :type (common-lisp:or access-point-name common-lisp:null))
   (listeners
    (common-lisp:error
     #A((22) common-lisp:base-char . ":listeners is required"))
    :type (common-lisp:or listeners common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-load-balancer-listener-input
                    'make-create-load-balancer-listener-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-load-balancer-listener-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "Listeners"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'listeners))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-load-balancer-listener-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-load-balancer-listener-output
                    'make-create-load-balancer-listener-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-load-balancer-listener-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (create-load-balancer-policy-input (:copier common-lisp:nil))
   (load-balancer-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-name is required"))
    :type (common-lisp:or access-point-name common-lisp:null))
   (policy-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":policy-name is required"))
    :type (common-lisp:or policy-name common-lisp:null))
   (policy-type-name
    (common-lisp:error
     #A((29) common-lisp:base-char . ":policy-type-name is required"))
    :type (common-lisp:or policy-type-name common-lisp:null))
   (policy-attributes common-lisp:nil :type
    (common-lisp:or policy-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'create-load-balancer-policy-input
                    'make-create-load-balancer-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-load-balancer-policy-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "PolicyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-name)))
    (aws-sdk/generator/shape::to-query-params "PolicyTypeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-type-name)))
    (aws-sdk/generator/shape::to-query-params "PolicyAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-attributes))))))
(common-lisp:progn
 (common-lisp:defstruct
     (create-load-balancer-policy-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'create-load-balancer-policy-output
                    'make-create-load-balancer-policy-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          create-load-balancer-policy-output))
   (common-lisp:append)))
(common-lisp:deftype created-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (cross-zone-load-balancing (:copier common-lisp:nil))
   (enabled
    (common-lisp:error #A((20) common-lisp:base-char . ":enabled is required"))
    :type (common-lisp:or cross-zone-load-balancing-enabled common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'cross-zone-load-balancing
                    'make-cross-zone-load-balancing))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          cross-zone-load-balancing))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Enabled"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'enabled))))))
(common-lisp:deftype cross-zone-load-balancing-enabled () 'common-lisp:boolean)
(common-lisp:deftype dnsname () 'common-lisp:string)
(common-lisp:deftype default-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (delete-access-point-input (:copier common-lisp:nil))
   (load-balancer-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-name is required"))
    :type (common-lisp:or access-point-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-access-point-input
                    'make-delete-access-point-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-access-point-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name))))))
(common-lisp:progn
 (common-lisp:defstruct (delete-access-point-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-access-point-output
                    'make-delete-access-point-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-access-point-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-load-balancer-listener-input (:copier common-lisp:nil))
   (load-balancer-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-name is required"))
    :type (common-lisp:or access-point-name common-lisp:null))
   (load-balancer-ports
    (common-lisp:error
     #A((32) common-lisp:base-char . ":load-balancer-ports is required"))
    :type (common-lisp:or ports common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-load-balancer-listener-input
                    'make-delete-load-balancer-listener-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-load-balancer-listener-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "LoadBalancerPorts"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-ports))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-load-balancer-listener-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-load-balancer-listener-output
                    'make-delete-load-balancer-listener-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-load-balancer-listener-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-load-balancer-policy-input (:copier common-lisp:nil))
   (load-balancer-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-name is required"))
    :type (common-lisp:or access-point-name common-lisp:null))
   (policy-name
    (common-lisp:error
     #A((24) common-lisp:base-char . ":policy-name is required"))
    :type (common-lisp:or policy-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'delete-load-balancer-policy-input
                    'make-delete-load-balancer-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-load-balancer-policy-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "PolicyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (delete-load-balancer-policy-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'delete-load-balancer-policy-output
                    'make-delete-load-balancer-policy-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          delete-load-balancer-policy-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (dependency-throttle-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'dependency-throttle-exception
                    'make-dependency-throttle-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          dependency-throttle-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (deregister-end-points-input (:copier common-lisp:nil))
   (load-balancer-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-name is required"))
    :type (common-lisp:or access-point-name common-lisp:null))
   (instances
    (common-lisp:error
     #A((22) common-lisp:base-char . ":instances is required"))
    :type (common-lisp:or instances common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-end-points-input
                    'make-deregister-end-points-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deregister-end-points-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "Instances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances))))))
(common-lisp:progn
 (common-lisp:defstruct
     (deregister-end-points-output (:copier common-lisp:nil))
   (instances common-lisp:nil :type
    (common-lisp:or instances common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'deregister-end-points-output
                    'make-deregister-end-points-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          deregister-end-points-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Instances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-access-points-input (:copier common-lisp:nil))
   (load-balancer-names common-lisp:nil :type
    (common-lisp:or load-balancer-names common-lisp:null))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-access-points-input
                    'make-describe-access-points-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-access-points-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-names)))
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-access-points-output (:copier common-lisp:nil))
   (load-balancer-descriptions common-lisp:nil :type
    (common-lisp:or load-balancer-descriptions common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-access-points-output
                    'make-describe-access-points-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-access-points-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerDescriptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-descriptions)))
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-account-limits-input (:copier common-lisp:nil))
   (marker common-lisp:nil :type (common-lisp:or marker common-lisp:null))
   (page-size common-lisp:nil :type
    (common-lisp:or page-size common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-account-limits-input
                    'make-describe-account-limits-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-account-limits-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Marker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'marker)))
    (aws-sdk/generator/shape::to-query-params "PageSize"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'page-size))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-account-limits-output (:copier common-lisp:nil))
   (limits common-lisp:nil :type (common-lisp:or limits common-lisp:null))
   (next-marker common-lisp:nil :type
    (common-lisp:or marker common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-account-limits-output
                    'make-describe-account-limits-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-account-limits-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Limits"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'limits)))
    (aws-sdk/generator/shape::to-query-params "NextMarker"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'next-marker))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-end-point-state-input (:copier common-lisp:nil))
   (load-balancer-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-name is required"))
    :type (common-lisp:or access-point-name common-lisp:null))
   (instances common-lisp:nil :type
    (common-lisp:or instances common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-end-point-state-input
                    'make-describe-end-point-state-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-end-point-state-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "Instances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-end-point-state-output (:copier common-lisp:nil))
   (instance-states common-lisp:nil :type
    (common-lisp:or instance-states common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-end-point-state-output
                    'make-describe-end-point-state-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-end-point-state-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceStates"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-states))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-load-balancer-attributes-input (:copier common-lisp:nil))
   (load-balancer-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-name is required"))
    :type (common-lisp:or access-point-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-load-balancer-attributes-input
                    'make-describe-load-balancer-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-load-balancer-attributes-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-load-balancer-attributes-output (:copier common-lisp:nil))
   (load-balancer-attributes common-lisp:nil :type
    (common-lisp:or load-balancer-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-load-balancer-attributes-output
                    'make-describe-load-balancer-attributes-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-load-balancer-attributes-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-attributes))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-load-balancer-policies-input (:copier common-lisp:nil))
   (load-balancer-name common-lisp:nil :type
    (common-lisp:or access-point-name common-lisp:null))
   (policy-names common-lisp:nil :type
    (common-lisp:or policy-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-load-balancer-policies-input
                    'make-describe-load-balancer-policies-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-load-balancer-policies-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "PolicyNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-names))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-load-balancer-policies-output (:copier common-lisp:nil))
   (policy-descriptions common-lisp:nil :type
    (common-lisp:or policy-descriptions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-load-balancer-policies-output
                    'make-describe-load-balancer-policies-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-load-balancer-policies-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyDescriptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-descriptions))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-load-balancer-policy-types-input (:copier common-lisp:nil))
   (policy-type-names common-lisp:nil :type
    (common-lisp:or policy-type-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-load-balancer-policy-types-input
                    'make-describe-load-balancer-policy-types-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-load-balancer-policy-types-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyTypeNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-type-names))))))
(common-lisp:progn
 (common-lisp:defstruct
     (describe-load-balancer-policy-types-output (:copier common-lisp:nil))
   (policy-type-descriptions common-lisp:nil :type
    (common-lisp:or policy-type-descriptions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-load-balancer-policy-types-output
                    'make-describe-load-balancer-policy-types-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          describe-load-balancer-policy-types-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyTypeDescriptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-type-descriptions))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-tags-input (:copier common-lisp:nil))
   (load-balancer-names
    (common-lisp:error
     #A((32) common-lisp:base-char . ":load-balancer-names is required"))
    :type (common-lisp:or load-balancer-names-max20 common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tags-input 'make-describe-tags-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape describe-tags-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-names))))))
(common-lisp:progn
 (common-lisp:defstruct (describe-tags-output (:copier common-lisp:nil))
   (tag-descriptions common-lisp:nil :type
    (common-lisp:or tag-descriptions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'describe-tags-output 'make-describe-tags-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape describe-tags-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "TagDescriptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tag-descriptions))))))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (detach-load-balancer-from-subnets-input (:copier common-lisp:nil))
   (load-balancer-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-name is required"))
    :type (common-lisp:or access-point-name common-lisp:null))
   (subnets
    (common-lisp:error #A((20) common-lisp:base-char . ":subnets is required"))
    :type (common-lisp:or subnets common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detach-load-balancer-from-subnets-input
                    'make-detach-load-balancer-from-subnets-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          detach-load-balancer-from-subnets-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "Subnets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnets))))))
(common-lisp:progn
 (common-lisp:defstruct
     (detach-load-balancer-from-subnets-output (:copier common-lisp:nil))
   (subnets common-lisp:nil :type (common-lisp:or subnets common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'detach-load-balancer-from-subnets-output
                    'make-detach-load-balancer-from-subnets-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          detach-load-balancer-from-subnets-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Subnets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnets))))))
(common-lisp:progn
 (common-lisp:defstruct
     (duplicate-access-point-name-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'duplicate-access-point-name-exception
                    'make-duplicate-access-point-name-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          duplicate-access-point-name-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (duplicate-listener-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'duplicate-listener-exception
                    'make-duplicate-listener-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          duplicate-listener-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (duplicate-policy-name-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'duplicate-policy-name-exception
                    'make-duplicate-policy-name-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          duplicate-policy-name-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (duplicate-tag-keys-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'duplicate-tag-keys-exception
                    'make-duplicate-tag-keys-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          duplicate-tag-keys-exception))
   (common-lisp:append)))
(common-lisp:deftype end-point-port () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (health-check (:copier common-lisp:nil))
   (target
    (common-lisp:error #A((19) common-lisp:base-char . ":target is required"))
    :type (common-lisp:or health-check-target common-lisp:null))
   (interval
    (common-lisp:error
     #A((21) common-lisp:base-char . ":interval is required"))
    :type (common-lisp:or health-check-interval common-lisp:null))
   (timeout
    (common-lisp:error #A((20) common-lisp:base-char . ":timeout is required"))
    :type (common-lisp:or health-check-timeout common-lisp:null))
   (unhealthy-threshold
    (common-lisp:error
     #A((32) common-lisp:base-char . ":unhealthy-threshold is required"))
    :type (common-lisp:or unhealthy-threshold common-lisp:null))
   (healthy-threshold
    (common-lisp:error
     #A((30) common-lisp:base-char . ":healthy-threshold is required"))
    :type (common-lisp:or healthy-threshold common-lisp:null)))
 (common-lisp:export (common-lisp:list 'health-check 'make-health-check))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape health-check))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Target"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'target)))
    (aws-sdk/generator/shape::to-query-params "Interval"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'interval)))
    (aws-sdk/generator/shape::to-query-params "Timeout"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'timeout)))
    (aws-sdk/generator/shape::to-query-params "UnhealthyThreshold"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'unhealthy-threshold)))
    (aws-sdk/generator/shape::to-query-params "HealthyThreshold"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'healthy-threshold))))))
(common-lisp:deftype health-check-interval () 'common-lisp:integer)
(common-lisp:deftype health-check-target () 'common-lisp:string)
(common-lisp:deftype health-check-timeout () 'common-lisp:integer)
(common-lisp:deftype healthy-threshold () 'common-lisp:integer)
(common-lisp:deftype idle-timeout () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (instance (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance 'make-instance))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id))))))
(common-lisp:deftype instance-id () 'common-lisp:string)
(common-lisp:deftype instance-port () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (instance-state (:copier common-lisp:nil))
   (instance-id common-lisp:nil :type
    (common-lisp:or instance-id common-lisp:null))
   (state common-lisp:nil :type (common-lisp:or state common-lisp:null))
   (reason-code common-lisp:nil :type
    (common-lisp:or reason-code common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null)))
 (common-lisp:export (common-lisp:list 'instance-state 'make-instance-state))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape instance-state))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "InstanceId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-id)))
    (aws-sdk/generator/shape::to-query-params "State"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'state)))
    (aws-sdk/generator/shape::to-query-params "ReasonCode"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'reason-code)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description))))))
(common-lisp:progn
 (common-lisp:deftype instance-states ()
   '(trivial-types:proper-list instance-state))
 (common-lisp:defun |make-instance-states|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-state))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype instances () '(trivial-types:proper-list instance))
 (common-lisp:defun |make-instances|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-configuration-request-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-configuration-request-exception
                    'make-invalid-configuration-request-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-configuration-request-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-end-point-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-end-point-exception
                    'make-invalid-end-point-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-end-point-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-scheme-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-scheme-exception 'make-invalid-scheme-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-scheme-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (invalid-security-group-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-security-group-exception
                    'make-invalid-security-group-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-security-group-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (invalid-subnet-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'invalid-subnet-exception 'make-invalid-subnet-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          invalid-subnet-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:deftype lbcookie-stickiness-policies ()
   '(trivial-types:proper-list lbcookie-stickiness-policy))
 (common-lisp:defun |make-lbcookie-stickiness-policies|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lbcookie-stickiness-policy))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (lbcookie-stickiness-policy (:copier common-lisp:nil))
   (policy-name common-lisp:nil :type
    (common-lisp:or policy-name common-lisp:null))
   (cookie-expiration-period common-lisp:nil :type
    (common-lisp:or cookie-expiration-period common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'lbcookie-stickiness-policy
                    'make-lbcookie-stickiness-policy))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          lbcookie-stickiness-policy))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-name)))
    (aws-sdk/generator/shape::to-query-params "CookieExpirationPeriod"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cookie-expiration-period))))))
(common-lisp:progn
 (common-lisp:defstruct (limit (:copier common-lisp:nil))
   (name common-lisp:nil :type (common-lisp:or name common-lisp:null))
   (max common-lisp:nil :type (common-lisp:or max common-lisp:null)))
 (common-lisp:export (common-lisp:list 'limit 'make-limit))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape limit))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Name"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'name)))
    (aws-sdk/generator/shape::to-query-params "Max"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'max))))))
(common-lisp:progn
 (common-lisp:deftype limits () '(trivial-types:proper-list limit))
 (common-lisp:defun |make-limits|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list limit))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (listener (:copier common-lisp:nil))
   (protocol
    (common-lisp:error
     #A((21) common-lisp:base-char . ":protocol is required"))
    :type (common-lisp:or protocol common-lisp:null))
   (load-balancer-port
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-port is required"))
    :type (common-lisp:or access-point-port common-lisp:null))
   (instance-protocol common-lisp:nil :type
    (common-lisp:or protocol common-lisp:null))
   (instance-port
    (common-lisp:error
     #A((26) common-lisp:base-char . ":instance-port is required"))
    :type (common-lisp:or instance-port common-lisp:null))
   (sslcertificate-id common-lisp:nil :type
    (common-lisp:or sslcertificate-id common-lisp:null)))
 (common-lisp:export (common-lisp:list 'listener 'make-listener))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape listener))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Protocol"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'protocol)))
    (aws-sdk/generator/shape::to-query-params "LoadBalancerPort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-port)))
    (aws-sdk/generator/shape::to-query-params "InstanceProtocol"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-protocol)))
    (aws-sdk/generator/shape::to-query-params "InstancePort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-port)))
    (aws-sdk/generator/shape::to-query-params "SSLCertificateId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sslcertificate-id))))))
(common-lisp:progn
 (common-lisp:defstruct (listener-description (:copier common-lisp:nil))
   (listener common-lisp:nil :type (common-lisp:or listener common-lisp:null))
   (policy-names common-lisp:nil :type
    (common-lisp:or policy-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'listener-description 'make-listener-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape listener-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Listener"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'listener)))
    (aws-sdk/generator/shape::to-query-params "PolicyNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-names))))))
(common-lisp:progn
 (common-lisp:deftype listener-descriptions ()
   '(trivial-types:proper-list listener-description))
 (common-lisp:defun |make-listener-descriptions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list listener-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (listener-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'listener-not-found-exception
                    'make-listener-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          listener-not-found-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:deftype listeners () '(trivial-types:proper-list listener))
 (common-lisp:defun |make-listeners|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list listener))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (load-balancer-attribute-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'load-balancer-attribute-not-found-exception
                    'make-load-balancer-attribute-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          load-balancer-attribute-not-found-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (load-balancer-attributes (:copier common-lisp:nil))
   (cross-zone-load-balancing common-lisp:nil :type
    (common-lisp:or cross-zone-load-balancing common-lisp:null))
   (access-log common-lisp:nil :type
    (common-lisp:or access-log common-lisp:null))
   (connection-draining common-lisp:nil :type
    (common-lisp:or connection-draining common-lisp:null))
   (connection-settings common-lisp:nil :type
    (common-lisp:or connection-settings common-lisp:null))
   (additional-attributes common-lisp:nil :type
    (common-lisp:or additional-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'load-balancer-attributes 'make-load-balancer-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          load-balancer-attributes))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "CrossZoneLoadBalancing"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cross-zone-load-balancing)))
    (aws-sdk/generator/shape::to-query-params "AccessLog"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'access-log)))
    (aws-sdk/generator/shape::to-query-params "ConnectionDraining"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'connection-draining)))
    (aws-sdk/generator/shape::to-query-params "ConnectionSettings"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'connection-settings)))
    (aws-sdk/generator/shape::to-query-params "AdditionalAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'additional-attributes))))))
(common-lisp:progn
 (common-lisp:defstruct (load-balancer-description (:copier common-lisp:nil))
   (load-balancer-name common-lisp:nil :type
    (common-lisp:or access-point-name common-lisp:null))
   (dnsname common-lisp:nil :type (common-lisp:or dnsname common-lisp:null))
   (canonical-hosted-zone-name common-lisp:nil :type
    (common-lisp:or dnsname common-lisp:null))
   (canonical-hosted-zone-name-id common-lisp:nil :type
    (common-lisp:or dnsname common-lisp:null))
   (listener-descriptions common-lisp:nil :type
    (common-lisp:or listener-descriptions common-lisp:null))
   (policies common-lisp:nil :type (common-lisp:or policies common-lisp:null))
   (backend-server-descriptions common-lisp:nil :type
    (common-lisp:or backend-server-descriptions common-lisp:null))
   (availability-zones common-lisp:nil :type
    (common-lisp:or availability-zones common-lisp:null))
   (subnets common-lisp:nil :type (common-lisp:or subnets common-lisp:null))
   (vpcid common-lisp:nil :type (common-lisp:or vpcid common-lisp:null))
   (instances common-lisp:nil :type
    (common-lisp:or instances common-lisp:null))
   (health-check common-lisp:nil :type
    (common-lisp:or health-check common-lisp:null))
   (source-security-group common-lisp:nil :type
    (common-lisp:or source-security-group common-lisp:null))
   (security-groups common-lisp:nil :type
    (common-lisp:or security-groups common-lisp:null))
   (created-time common-lisp:nil :type
    (common-lisp:or created-time common-lisp:null))
   (scheme common-lisp:nil :type
    (common-lisp:or load-balancer-scheme common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'load-balancer-description
                    'make-load-balancer-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          load-balancer-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "DNSName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'dnsname)))
    (aws-sdk/generator/shape::to-query-params "CanonicalHostedZoneName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'canonical-hosted-zone-name)))
    (aws-sdk/generator/shape::to-query-params "CanonicalHostedZoneNameID"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'canonical-hosted-zone-name-id)))
    (aws-sdk/generator/shape::to-query-params "ListenerDescriptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'listener-descriptions)))
    (aws-sdk/generator/shape::to-query-params "Policies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policies)))
    (aws-sdk/generator/shape::to-query-params "BackendServerDescriptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'backend-server-descriptions)))
    (aws-sdk/generator/shape::to-query-params "AvailabilityZones"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zones)))
    (aws-sdk/generator/shape::to-query-params "Subnets"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'subnets)))
    (aws-sdk/generator/shape::to-query-params "VPCId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'vpcid)))
    (aws-sdk/generator/shape::to-query-params "Instances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances)))
    (aws-sdk/generator/shape::to-query-params "HealthCheck"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'health-check)))
    (aws-sdk/generator/shape::to-query-params "SourceSecurityGroup"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'source-security-group)))
    (aws-sdk/generator/shape::to-query-params "SecurityGroups"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'security-groups)))
    (aws-sdk/generator/shape::to-query-params "CreatedTime"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'created-time)))
    (aws-sdk/generator/shape::to-query-params "Scheme"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'scheme))))))
(common-lisp:progn
 (common-lisp:deftype load-balancer-descriptions ()
   '(trivial-types:proper-list load-balancer-description))
 (common-lisp:defun |make-load-balancer-descriptions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            load-balancer-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype load-balancer-names ()
   '(trivial-types:proper-list access-point-name))
 (common-lisp:defun |make-load-balancer-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list access-point-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype load-balancer-names-max20 ()
   '(trivial-types:proper-list access-point-name))
 (common-lisp:defun |make-load-balancer-names-max20|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list access-point-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype load-balancer-scheme () 'common-lisp:string)
(common-lisp:deftype marker () 'common-lisp:string)
(common-lisp:deftype max () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (modify-load-balancer-attributes-input (:copier common-lisp:nil))
   (load-balancer-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-name is required"))
    :type (common-lisp:or access-point-name common-lisp:null))
   (load-balancer-attributes
    (common-lisp:error
     #A((37) common-lisp:base-char . ":load-balancer-attributes is required"))
    :type (common-lisp:or load-balancer-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-load-balancer-attributes-input
                    'make-modify-load-balancer-attributes-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          modify-load-balancer-attributes-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "LoadBalancerAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-attributes))))))
(common-lisp:progn
 (common-lisp:defstruct
     (modify-load-balancer-attributes-output (:copier common-lisp:nil))
   (load-balancer-name common-lisp:nil :type
    (common-lisp:or access-point-name common-lisp:null))
   (load-balancer-attributes common-lisp:nil :type
    (common-lisp:or load-balancer-attributes common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'modify-load-balancer-attributes-output
                    'make-modify-load-balancer-attributes-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          modify-load-balancer-attributes-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "LoadBalancerAttributes"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-attributes))))))
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:deftype page-size () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct (policies (:copier common-lisp:nil))
   (app-cookie-stickiness-policies common-lisp:nil :type
    (common-lisp:or app-cookie-stickiness-policies common-lisp:null))
   (lbcookie-stickiness-policies common-lisp:nil :type
    (common-lisp:or lbcookie-stickiness-policies common-lisp:null))
   (other-policies common-lisp:nil :type
    (common-lisp:or policy-names common-lisp:null)))
 (common-lisp:export (common-lisp:list 'policies 'make-policies))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape policies))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AppCookieStickinessPolicies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'app-cookie-stickiness-policies)))
    (aws-sdk/generator/shape::to-query-params "LBCookieStickinessPolicies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'lbcookie-stickiness-policies)))
    (aws-sdk/generator/shape::to-query-params "OtherPolicies"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'other-policies))))))
(common-lisp:progn
 (common-lisp:defstruct (policy-attribute (:copier common-lisp:nil))
   (attribute-name common-lisp:nil :type
    (common-lisp:or attribute-name common-lisp:null))
   (attribute-value common-lisp:nil :type
    (common-lisp:or attribute-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'policy-attribute 'make-policy-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape policy-attribute))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AttributeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-name)))
    (aws-sdk/generator/shape::to-query-params "AttributeValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-value))))))
(common-lisp:progn
 (common-lisp:defstruct
     (policy-attribute-description (:copier common-lisp:nil))
   (attribute-name common-lisp:nil :type
    (common-lisp:or attribute-name common-lisp:null))
   (attribute-value common-lisp:nil :type
    (common-lisp:or attribute-value common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'policy-attribute-description
                    'make-policy-attribute-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          policy-attribute-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AttributeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-name)))
    (aws-sdk/generator/shape::to-query-params "AttributeValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-value))))))
(common-lisp:progn
 (common-lisp:deftype policy-attribute-descriptions ()
   '(trivial-types:proper-list policy-attribute-description))
 (common-lisp:defun |make-policy-attribute-descriptions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            policy-attribute-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (policy-attribute-type-description (:copier common-lisp:nil))
   (attribute-name common-lisp:nil :type
    (common-lisp:or attribute-name common-lisp:null))
   (attribute-type common-lisp:nil :type
    (common-lisp:or attribute-type common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (default-value common-lisp:nil :type
    (common-lisp:or default-value common-lisp:null))
   (cardinality common-lisp:nil :type
    (common-lisp:or cardinality common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'policy-attribute-type-description
                    'make-policy-attribute-type-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          policy-attribute-type-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AttributeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-name)))
    (aws-sdk/generator/shape::to-query-params "AttributeType"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'attribute-type)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "DefaultValue"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'default-value)))
    (aws-sdk/generator/shape::to-query-params "Cardinality"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'cardinality))))))
(common-lisp:progn
 (common-lisp:deftype policy-attribute-type-descriptions ()
   '(trivial-types:proper-list policy-attribute-type-description))
 (common-lisp:defun |make-policy-attribute-type-descriptions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            policy-attribute-type-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype policy-attributes ()
   '(trivial-types:proper-list policy-attribute))
 (common-lisp:defun |make-policy-attributes|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list policy-attribute))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (policy-description (:copier common-lisp:nil))
   (policy-name common-lisp:nil :type
    (common-lisp:or policy-name common-lisp:null))
   (policy-type-name common-lisp:nil :type
    (common-lisp:or policy-type-name common-lisp:null))
   (policy-attribute-descriptions common-lisp:nil :type
    (common-lisp:or policy-attribute-descriptions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'policy-description 'make-policy-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape policy-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-name)))
    (aws-sdk/generator/shape::to-query-params "PolicyTypeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-type-name)))
    (aws-sdk/generator/shape::to-query-params "PolicyAttributeDescriptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-attribute-descriptions))))))
(common-lisp:progn
 (common-lisp:deftype policy-descriptions ()
   '(trivial-types:proper-list policy-description))
 (common-lisp:defun |make-policy-descriptions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list policy-description))
   aws-sdk/generator/shape::members))
(common-lisp:deftype policy-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype policy-names () '(trivial-types:proper-list policy-name))
 (common-lisp:defun |make-policy-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list policy-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (policy-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'policy-not-found-exception
                    'make-policy-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          policy-not-found-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (policy-type-description (:copier common-lisp:nil))
   (policy-type-name common-lisp:nil :type
    (common-lisp:or policy-type-name common-lisp:null))
   (description common-lisp:nil :type
    (common-lisp:or description common-lisp:null))
   (policy-attribute-type-descriptions common-lisp:nil :type
    (common-lisp:or policy-attribute-type-descriptions common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'policy-type-description 'make-policy-type-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          policy-type-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "PolicyTypeName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-type-name)))
    (aws-sdk/generator/shape::to-query-params "Description"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'description)))
    (aws-sdk/generator/shape::to-query-params "PolicyAttributeTypeDescriptions"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-attribute-type-descriptions))))))
(common-lisp:progn
 (common-lisp:deftype policy-type-descriptions ()
   '(trivial-types:proper-list policy-type-description))
 (common-lisp:defun |make-policy-type-descriptions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list policy-type-description))
   aws-sdk/generator/shape::members))
(common-lisp:deftype policy-type-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype policy-type-names ()
   '(trivial-types:proper-list policy-type-name))
 (common-lisp:defun |make-policy-type-names|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list policy-type-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (policy-type-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'policy-type-not-found-exception
                    'make-policy-type-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          policy-type-not-found-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:deftype ports () '(trivial-types:proper-list access-point-port))
 (common-lisp:defun |make-ports|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list access-point-port))
   aws-sdk/generator/shape::members))
(common-lisp:deftype protocol () 'common-lisp:string)
(common-lisp:deftype reason-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (register-end-points-input (:copier common-lisp:nil))
   (load-balancer-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-name is required"))
    :type (common-lisp:or access-point-name common-lisp:null))
   (instances
    (common-lisp:error
     #A((22) common-lisp:base-char . ":instances is required"))
    :type (common-lisp:or instances common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-end-points-input
                    'make-register-end-points-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-end-points-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "Instances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances))))))
(common-lisp:progn
 (common-lisp:defstruct (register-end-points-output (:copier common-lisp:nil))
   (instances common-lisp:nil :type
    (common-lisp:or instances common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'register-end-points-output
                    'make-register-end-points-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          register-end-points-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Instances"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instances))))))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-availability-zones-input (:copier common-lisp:nil))
   (load-balancer-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-name is required"))
    :type (common-lisp:or access-point-name common-lisp:null))
   (availability-zones
    (common-lisp:error
     #A((31) common-lisp:base-char . ":availability-zones is required"))
    :type (common-lisp:or availability-zones common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-availability-zones-input
                    'make-remove-availability-zones-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          remove-availability-zones-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "AvailabilityZones"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zones))))))
(common-lisp:progn
 (common-lisp:defstruct
     (remove-availability-zones-output (:copier common-lisp:nil))
   (availability-zones common-lisp:nil :type
    (common-lisp:or availability-zones common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-availability-zones-output
                    'make-remove-availability-zones-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          remove-availability-zones-output))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "AvailabilityZones"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'availability-zones))))))
(common-lisp:progn
 (common-lisp:defstruct (remove-tags-input (:copier common-lisp:nil))
   (load-balancer-names
    (common-lisp:error
     #A((32) common-lisp:base-char . ":load-balancer-names is required"))
    :type (common-lisp:or load-balancer-names common-lisp:null))
   (tags
    (common-lisp:error #A((17) common-lisp:base-char . ":tags is required"))
    :type (common-lisp:or tag-key-list common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'remove-tags-input 'make-remove-tags-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape remove-tags-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-names)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:defstruct (remove-tags-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'remove-tags-output 'make-remove-tags-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape remove-tags-output))
   (common-lisp:append)))
(common-lisp:deftype s3bucket-name () 'common-lisp:string)
(common-lisp:deftype sslcertificate-id () 'common-lisp:string)
(common-lisp:deftype security-group-id () 'common-lisp:string)
(common-lisp:deftype security-group-name () 'common-lisp:string)
(common-lisp:deftype security-group-owner-alias () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype security-groups ()
   '(trivial-types:proper-list security-group-id))
 (common-lisp:defun |make-security-groups|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list security-group-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct
     (set-load-balancer-listener-sslcertificate-input
      (:copier common-lisp:nil))
   (load-balancer-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-name is required"))
    :type (common-lisp:or access-point-name common-lisp:null))
   (load-balancer-port
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-port is required"))
    :type (common-lisp:or access-point-port common-lisp:null))
   (sslcertificate-id
    (common-lisp:error
     #A((30) common-lisp:base-char . ":sslcertificate-id is required"))
    :type (common-lisp:or sslcertificate-id common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-load-balancer-listener-sslcertificate-input
                    'make-set-load-balancer-listener-sslcertificate-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-load-balancer-listener-sslcertificate-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "LoadBalancerPort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-port)))
    (aws-sdk/generator/shape::to-query-params "SSLCertificateId"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'sslcertificate-id))))))
(common-lisp:progn
 (common-lisp:defstruct
     (set-load-balancer-listener-sslcertificate-output
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'set-load-balancer-listener-sslcertificate-output
                    'make-set-load-balancer-listener-sslcertificate-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-load-balancer-listener-sslcertificate-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (set-load-balancer-policies-for-backend-server-input
      (:copier common-lisp:nil))
   (load-balancer-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-name is required"))
    :type (common-lisp:or access-point-name common-lisp:null))
   (instance-port
    (common-lisp:error
     #A((26) common-lisp:base-char . ":instance-port is required"))
    :type (common-lisp:or end-point-port common-lisp:null))
   (policy-names
    (common-lisp:error
     #A((25) common-lisp:base-char . ":policy-names is required"))
    :type (common-lisp:or policy-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-load-balancer-policies-for-backend-server-input
                    'make-set-load-balancer-policies-for-backend-server-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-load-balancer-policies-for-backend-server-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "InstancePort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'instance-port)))
    (aws-sdk/generator/shape::to-query-params "PolicyNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-names))))))
(common-lisp:progn
 (common-lisp:defstruct
     (set-load-balancer-policies-for-backend-server-output
      (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'set-load-balancer-policies-for-backend-server-output
                    'make-set-load-balancer-policies-for-backend-server-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-load-balancer-policies-for-backend-server-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (set-load-balancer-policies-of-listener-input (:copier common-lisp:nil))
   (load-balancer-name
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-name is required"))
    :type (common-lisp:or access-point-name common-lisp:null))
   (load-balancer-port
    (common-lisp:error
     #A((31) common-lisp:base-char . ":load-balancer-port is required"))
    :type (common-lisp:or access-point-port common-lisp:null))
   (policy-names
    (common-lisp:error
     #A((25) common-lisp:base-char . ":policy-names is required"))
    :type (common-lisp:or policy-names common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'set-load-balancer-policies-of-listener-input
                    'make-set-load-balancer-policies-of-listener-input))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-load-balancer-policies-of-listener-input))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "LoadBalancerPort"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-port)))
    (aws-sdk/generator/shape::to-query-params "PolicyNames"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'policy-names))))))
(common-lisp:progn
 (common-lisp:defstruct
     (set-load-balancer-policies-of-listener-output (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'set-load-balancer-policies-of-listener-output
                    'make-set-load-balancer-policies-of-listener-output))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          set-load-balancer-policies-of-listener-output))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (source-security-group (:copier common-lisp:nil))
   (owner-alias common-lisp:nil :type
    (common-lisp:or security-group-owner-alias common-lisp:null))
   (group-name common-lisp:nil :type
    (common-lisp:or security-group-name common-lisp:null)))
 (common-lisp:export
  (common-lisp:list 'source-security-group 'make-source-security-group))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          source-security-group))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "OwnerAlias"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'owner-alias)))
    (aws-sdk/generator/shape::to-query-params "GroupName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'group-name))))))
(common-lisp:deftype state () 'common-lisp:string)
(common-lisp:deftype subnet-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct (subnet-not-found-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'subnet-not-found-exception
                    'make-subnet-not-found-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          subnet-not-found-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:deftype subnets () '(trivial-types:proper-list subnet-id))
 (common-lisp:defun |make-subnets|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subnet-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (tag (:copier common-lisp:nil))
   (key (common-lisp:error #A((16) common-lisp:base-char . ":key is required"))
    :type (common-lisp:or tag-key common-lisp:null))
   (value common-lisp:nil :type (common-lisp:or tag-value common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key)))
    (aws-sdk/generator/shape::to-query-params "Value"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'value))))))
(common-lisp:progn
 (common-lisp:defstruct (tag-description (:copier common-lisp:nil))
   (load-balancer-name common-lisp:nil :type
    (common-lisp:or access-point-name common-lisp:null))
   (tags common-lisp:nil :type (common-lisp:or tag-list common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag-description 'make-tag-description))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag-description))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "LoadBalancerName"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'load-balancer-name)))
    (aws-sdk/generator/shape::to-query-params "Tags"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'tags))))))
(common-lisp:progn
 (common-lisp:deftype tag-descriptions ()
   '(trivial-types:proper-list tag-description))
 (common-lisp:defun |make-tag-descriptions|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-description))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list ()
   '(trivial-types:proper-list tag-key-only))
 (common-lisp:defun |make-tag-key-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key-only))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defstruct (tag-key-only (:copier common-lisp:nil))
   (key common-lisp:nil :type (common-lisp:or tag-key common-lisp:null)))
 (common-lisp:export (common-lisp:list 'tag-key-only 'make-tag-key-only))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        ((aws-sdk/generator/shape::shape tag-key-only))
   (common-lisp:append
    (aws-sdk/generator/shape::to-query-params "Key"
                                              (aws-sdk/generator/shape:shape-to-params
                                               (common-lisp:slot-value
                                                aws-sdk/generator/shape::shape
                                                'key))))))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun |make-tag-list|
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-access-points-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'too-many-access-points-exception
                    'make-too-many-access-points-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-access-points-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct
     (too-many-policies-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'too-many-policies-exception
                    'make-too-many-policies-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-policies-exception))
   (common-lisp:append)))
(common-lisp:progn
 (common-lisp:defstruct (too-many-tags-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'too-many-tags-exception 'make-too-many-tags-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          too-many-tags-exception))
   (common-lisp:append)))
(common-lisp:deftype unhealthy-threshold () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defstruct
     (unsupported-protocol-exception (:copier common-lisp:nil)))
 (common-lisp:export
  (common-lisp:list 'unsupported-protocol-exception
                    'make-unsupported-protocol-exception))
 (common-lisp:defmethod aws-sdk/generator/shape:shape-to-params
                        (
                         (aws-sdk/generator/shape::shape
                          unsupported-protocol-exception))
   (common-lisp:append)))
(common-lisp:deftype vpcid () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun add-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-names tags)
   (common-lisp:declare (common-lisp:ignorable load-balancer-names tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-tags-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AddTags")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AddTagsOutput" "AddTagsResult")))
 (common-lisp:export 'add-tags))
(common-lisp:progn
 (common-lisp:defun apply-security-groups-to-load-balancer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name security-groups)
   (common-lisp:declare
    (common-lisp:ignorable load-balancer-name security-groups))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-apply-security-groups-to-load-balancer-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"ApplySecurityGroupsToLoadBalancer")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ApplySecurityGroupsToLoadBalancerOutput"
      "ApplySecurityGroupsToLoadBalancerResult")))
 (common-lisp:export 'apply-security-groups-to-load-balancer))
(common-lisp:progn
 (common-lisp:defun attach-load-balancer-to-subnets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name subnets)
   (common-lisp:declare (common-lisp:ignorable load-balancer-name subnets))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-attach-load-balancer-to-subnets-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"AttachLoadBalancerToSubnets")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AttachLoadBalancerToSubnetsOutput"
      "AttachLoadBalancerToSubnetsResult")))
 (common-lisp:export 'attach-load-balancer-to-subnets))
(common-lisp:progn
 (common-lisp:defun configure-health-check
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name health-check)
   (common-lisp:declare
    (common-lisp:ignorable load-balancer-name health-check))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-configure-health-check-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ConfigureHealthCheck")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ConfigureHealthCheckOutput" "ConfigureHealthCheckResult")))
 (common-lisp:export 'configure-health-check))
(common-lisp:progn
 (common-lisp:defun create-app-cookie-stickiness-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name policy-name
                     cookie-name)
   (common-lisp:declare
    (common-lisp:ignorable load-balancer-name policy-name cookie-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-app-cookie-stickiness-policy-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"CreateAppCookieStickinessPolicy")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateAppCookieStickinessPolicyOutput"
      "CreateAppCookieStickinessPolicyResult")))
 (common-lisp:export 'create-app-cookie-stickiness-policy))
(common-lisp:progn
 (common-lisp:defun create-lbcookie-stickiness-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name policy-name
                     cookie-expiration-period)
   (common-lisp:declare
    (common-lisp:ignorable load-balancer-name policy-name
     cookie-expiration-period))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-lbcookie-stickiness-policy-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateLBCookieStickinessPolicy")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateLBCookieStickinessPolicyOutput"
      "CreateLBCookieStickinessPolicyResult")))
 (common-lisp:export 'create-lbcookie-stickiness-policy))
(common-lisp:progn
 (common-lisp:defun create-load-balancer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name listeners
                     availability-zones subnets security-groups scheme tags)
   (common-lisp:declare
    (common-lisp:ignorable load-balancer-name listeners availability-zones
     subnets security-groups scheme tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-access-point-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateLoadBalancer")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateAccessPointOutput" "CreateLoadBalancerResult")))
 (common-lisp:export 'create-load-balancer))
(common-lisp:progn
 (common-lisp:defun create-load-balancer-listeners
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name listeners)
   (common-lisp:declare (common-lisp:ignorable load-balancer-name listeners))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-load-balancer-listener-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateLoadBalancerListeners")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateLoadBalancerListenerOutput" "CreateLoadBalancerListenersResult")))
 (common-lisp:export 'create-load-balancer-listeners))
(common-lisp:progn
 (common-lisp:defun create-load-balancer-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name policy-name
                     policy-type-name policy-attributes)
   (common-lisp:declare
    (common-lisp:ignorable load-balancer-name policy-name policy-type-name
     policy-attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-load-balancer-policy-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"CreateLoadBalancerPolicy")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "CreateLoadBalancerPolicyOutput" "CreateLoadBalancerPolicyResult")))
 (common-lisp:export 'create-load-balancer-policy))
(common-lisp:progn
 (common-lisp:defun delete-load-balancer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name)
   (common-lisp:declare (common-lisp:ignorable load-balancer-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-access-point-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteLoadBalancer")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteAccessPointOutput" "DeleteLoadBalancerResult")))
 (common-lisp:export 'delete-load-balancer))
(common-lisp:progn
 (common-lisp:defun delete-load-balancer-listeners
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name load-balancer-ports)
   (common-lisp:declare
    (common-lisp:ignorable load-balancer-name load-balancer-ports))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-load-balancer-listener-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteLoadBalancerListeners")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteLoadBalancerListenerOutput" "DeleteLoadBalancerListenersResult")))
 (common-lisp:export 'delete-load-balancer-listeners))
(common-lisp:progn
 (common-lisp:defun delete-load-balancer-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name policy-name)
   (common-lisp:declare (common-lisp:ignorable load-balancer-name policy-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-load-balancer-policy-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DeleteLoadBalancerPolicy")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeleteLoadBalancerPolicyOutput" "DeleteLoadBalancerPolicyResult")))
 (common-lisp:export 'delete-load-balancer-policy))
(common-lisp:progn
 (common-lisp:defun deregister-instances-from-load-balancer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name instances)
   (common-lisp:declare (common-lisp:ignorable load-balancer-name instances))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-deregister-end-points-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DeregisterInstancesFromLoadBalancer")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DeregisterEndPointsOutput"
      "DeregisterInstancesFromLoadBalancerResult")))
 (common-lisp:export 'deregister-instances-from-load-balancer))
(common-lisp:progn
 (common-lisp:defun describe-account-limits
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key marker page-size)
   (common-lisp:declare (common-lisp:ignorable marker page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-account-limits-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeAccountLimits")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeAccountLimitsOutput" "DescribeAccountLimitsResult")))
 (common-lisp:export 'describe-account-limits))
(common-lisp:progn
 (common-lisp:defun describe-instance-health
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name instances)
   (common-lisp:declare (common-lisp:ignorable load-balancer-name instances))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-end-point-state-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeInstanceHealth")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeEndPointStateOutput" "DescribeInstanceHealthResult")))
 (common-lisp:export 'describe-instance-health))
(common-lisp:progn
 (common-lisp:defun describe-load-balancer-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name)
   (common-lisp:declare (common-lisp:ignorable load-balancer-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-load-balancer-attributes-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeLoadBalancerAttributes")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeLoadBalancerAttributesOutput"
      "DescribeLoadBalancerAttributesResult")))
 (common-lisp:export 'describe-load-balancer-attributes))
(common-lisp:progn
 (common-lisp:defun describe-load-balancer-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name policy-names)
   (common-lisp:declare
    (common-lisp:ignorable load-balancer-name policy-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-load-balancer-policies-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeLoadBalancerPolicies")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeLoadBalancerPoliciesOutput"
      "DescribeLoadBalancerPoliciesResult")))
 (common-lisp:export 'describe-load-balancer-policies))
(common-lisp:progn
 (common-lisp:defun describe-load-balancer-policy-types
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key policy-type-names)
   (common-lisp:declare (common-lisp:ignorable policy-type-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-load-balancer-policy-types-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DescribeLoadBalancerPolicyTypes")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeLoadBalancerPolicyTypesOutput"
      "DescribeLoadBalancerPolicyTypesResult")))
 (common-lisp:export 'describe-load-balancer-policy-types))
(common-lisp:progn
 (common-lisp:defun describe-load-balancers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-names marker page-size)
   (common-lisp:declare
    (common-lisp:ignorable load-balancer-names marker page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-access-points-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeLoadBalancers")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeAccessPointsOutput" "DescribeLoadBalancersResult")))
 (common-lisp:export 'describe-load-balancers))
(common-lisp:progn
 (common-lisp:defun describe-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-names)
   (common-lisp:declare (common-lisp:ignorable load-balancer-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-tags-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DescribeTags")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DescribeTagsOutput" "DescribeTagsResult")))
 (common-lisp:export 'describe-tags))
(common-lisp:progn
 (common-lisp:defun detach-load-balancer-from-subnets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name subnets)
   (common-lisp:declare (common-lisp:ignorable load-balancer-name subnets))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-detach-load-balancer-from-subnets-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"DetachLoadBalancerFromSubnets")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "DetachLoadBalancerFromSubnetsOutput"
      "DetachLoadBalancerFromSubnetsResult")))
 (common-lisp:export 'detach-load-balancer-from-subnets))
(common-lisp:progn
 (common-lisp:defun disable-availability-zones-for-load-balancer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name availability-zones)
   (common-lisp:declare
    (common-lisp:ignorable load-balancer-name availability-zones))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-availability-zones-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"DisableAvailabilityZonesForLoadBalancer")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RemoveAvailabilityZonesOutput"
      "DisableAvailabilityZonesForLoadBalancerResult")))
 (common-lisp:export 'disable-availability-zones-for-load-balancer))
(common-lisp:progn
 (common-lisp:defun enable-availability-zones-for-load-balancer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name availability-zones)
   (common-lisp:declare
    (common-lisp:ignorable load-balancer-name availability-zones))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-availability-zones-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"EnableAvailabilityZonesForLoadBalancer")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "AddAvailabilityZonesOutput"
      "EnableAvailabilityZonesForLoadBalancerResult")))
 (common-lisp:export 'enable-availability-zones-for-load-balancer))
(common-lisp:progn
 (common-lisp:defun modify-load-balancer-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name
                     load-balancer-attributes)
   (common-lisp:declare
    (common-lisp:ignorable load-balancer-name load-balancer-attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-modify-load-balancer-attributes-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"ModifyLoadBalancerAttributes")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "ModifyLoadBalancerAttributesOutput"
      "ModifyLoadBalancerAttributesResult")))
 (common-lisp:export 'modify-load-balancer-attributes))
(common-lisp:progn
 (common-lisp:defun register-instances-with-load-balancer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name instances)
   (common-lisp:declare (common-lisp:ignorable load-balancer-name instances))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-register-end-points-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"RegisterInstancesWithLoadBalancer")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RegisterEndPointsOutput" "RegisterInstancesWithLoadBalancerResult")))
 (common-lisp:export 'register-instances-with-load-balancer))
(common-lisp:progn
 (common-lisp:defun remove-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-names tags)
   (common-lisp:declare (common-lisp:ignorable load-balancer-names tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-tags-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action" ,@"RemoveTags")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "RemoveTagsOutput" "RemoveTagsResult")))
 (common-lisp:export 'remove-tags))
(common-lisp:progn
 (common-lisp:defun set-load-balancer-listener-sslcertificate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name load-balancer-port
                     sslcertificate-id)
   (common-lisp:declare
    (common-lisp:ignorable load-balancer-name load-balancer-port
     sslcertificate-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-set-load-balancer-listener-sslcertificate-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"SetLoadBalancerListenerSSLCertificate")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SetLoadBalancerListenerSSLCertificateOutput"
      "SetLoadBalancerListenerSSLCertificateResult")))
 (common-lisp:export 'set-load-balancer-listener-sslcertificate))
(common-lisp:progn
 (common-lisp:defun set-load-balancer-policies-for-backend-server
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name instance-port
                     policy-names)
   (common-lisp:declare
    (common-lisp:ignorable load-balancer-name instance-port policy-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-set-load-balancer-policies-for-backend-server-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"SetLoadBalancerPoliciesForBackendServer")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SetLoadBalancerPoliciesForBackendServerOutput"
      "SetLoadBalancerPoliciesForBackendServerResult")))
 (common-lisp:export 'set-load-balancer-policies-for-backend-server))
(common-lisp:progn
 (common-lisp:defun set-load-balancer-policies-of-listener
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key load-balancer-name load-balancer-port
                     policy-names)
   (common-lisp:declare
    (common-lisp:ignorable load-balancer-name load-balancer-port policy-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-set-load-balancer-policies-of-listener-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request :service
                               #A((20) common-lisp:base-char
                                  . "elasticloadbalancing")
                               :method :post :params
                               (common-lisp:append
                                `(("Action"
                                   ,@"SetLoadBalancerPoliciesOfListener")
                                  ("Version" ,@"2012-06-01"))
                                (aws-sdk/generator/shape:shape-to-params
                                 aws-sdk/generator/operation::input)))
      "SetLoadBalancerPoliciesOfListenerOutput"
      "SetLoadBalancerPoliciesOfListenerResult")))
 (common-lisp:export 'set-load-balancer-policies-of-listener))